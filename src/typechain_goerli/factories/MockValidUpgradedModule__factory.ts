/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockValidUpgradedModule, MockValidUpgradedModuleInterface } from "../MockValidUpgradedModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "kernel_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    name: "KernelAdapter_OnlyKernel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "policy_",
        type: "address",
      },
    ],
    name: "Module_PolicyNotPermitted",
    type: "error",
  },
  {
    inputs: [],
    name: "INIT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "KEYCODE",
    outputs: [
      {
        internalType: "Keycode",
        name: "",
        type: "bytes5",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "major",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "newKernel_",
        type: "address",
      },
    ],
    name: "changeKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract Kernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionedCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104fd3803806104fd83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61046a806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a7167caf1161005b578063a7167caf146100e1578063d4aae0c4146100e9578063ea6439141461012e578063ffa1ad741461013657600080fd5b80631ae7ec2e146100825780634657b36c146100b557806361bc221a146100ca575b600080fd5b6040517f4d4f434b5900000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b6100c86100c3366004610376565b61014a565b005b6100d360015481565b6040519081526020016100ac565b6100c86101e9565b6000546101099073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ac565b6100c8610321565b6040805160018082526020820152016100ac565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101a2576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d4f434b590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d491906103b3565b61030c576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610199565b60016000815461031b906103d5565b90915550565b60005473ffffffffffffffffffffffffffffffffffffffff163314610374576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610199565b565b60006020828403121561038857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103ac57600080fd5b9392505050565b6000602082840312156103c557600080fd5b815180151581146103ac57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361042d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212205b4fafe4c60655a0e2f23c47fa82f58ecebffb0fade3bc9df90598b3f017ca4f64736f6c634300080f0033";

type MockValidUpgradedModuleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockValidUpgradedModuleConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockValidUpgradedModule__factory extends ContractFactory {
  constructor(...args: MockValidUpgradedModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kernel_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MockValidUpgradedModule> {
    return super.deploy(kernel_, overrides || {}) as Promise<MockValidUpgradedModule>;
  }
  override getDeployTransaction(
    kernel_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(kernel_, overrides || {});
  }
  override attach(address: string): MockValidUpgradedModule {
    return super.attach(address) as MockValidUpgradedModule;
  }
  override connect(signer: Signer): MockValidUpgradedModule__factory {
    return super.connect(signer) as MockValidUpgradedModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockValidUpgradedModuleInterface {
    return new utils.Interface(_abi) as MockValidUpgradedModuleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockValidUpgradedModule {
    return new Contract(address, _abi, signerOrProvider) as MockValidUpgradedModule;
  }
}
