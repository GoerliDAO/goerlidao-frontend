/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DevFaucet, DevFaucetInterface } from "../../DevFaucet.sol/DevFaucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dai_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gdaoV2_",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingV2_",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CanOnlyMintOnceADay",
    type: "error",
  },
  {
    inputs: [],
    name: "MintTooLarge",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IOlympusAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
    ],
    name: "addGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
    ],
    name: "addStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
    ],
    name: "approveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IOlympusAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "futureStaking",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintDAI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mintETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gdaoIndex_",
        type: "uint256",
      },
    ],
    name: "mintGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintGGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gdaoIndex_",
        type: "uint256",
      },
    ],
    name: "mintSGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintable",
    outputs: [
      {
        internalType: "contract IFaucet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOlympusAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dai_",
        type: "address",
      },
    ],
    name: "setDAI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gdaoIndex_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
    ],
    name: "setGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingV2_",
        type: "address",
      },
    ],
    name: "setStakingV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingV2",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052600c60809081526b15539055551213d49256915160a21b60a0526000906200002d908262000263565b503480156200003b57600080fd5b5060405162001e3538038062001e358339810160408190526200005e916200034c565b600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250600280546001600160a01b038087166001600160a01b031992831617909255600380546001818101835560008390527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9091018054888616908516179055600480549487169490931693909317909155805490919081106200012f576200012f620003a9565b60009182526020909120015460405163095ea7b360e01b81526001600160a01b03848116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156200018d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b39190620003bf565b5050505050620003ea565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001e957607f821691505b6020821081036200020a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025e57600081815260208120601f850160051c81016020861015620002395750805b601f850160051c820191505b818110156200025a5782815560010162000245565b5050505b505050565b81516001600160401b038111156200027f576200027f620001be565b6200029781620002908454620001d4565b8462000210565b602080601f831160018114620002cf5760008415620002b65750858301515b600019600386901b1c1916600185901b1785556200025a565b600085815260208120601f198616915b828110156200030057888601518255948401946001909101908401620002df565b50858210156200031f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200034757600080fd5b919050565b600080600080608085870312156200036357600080fd5b6200036e856200032f565b93506200037e602086016200032f565b92506200038e604086016200032f565b91506200039e606086016200032f565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b600060208284031215620003d257600080fd5b81518015158114620003e357600080fd5b9392505050565b611a3b80620003fa6000396000f3fe60806040526004361061012d5760003560e01c8063a8aada53116100a5578063bf7e214f11610074578063e0bab4c411610059578063e0bab4c414610364578063e99e1e4914610391578063edf6220b146103b157600080fd5b8063bf7e214f14610317578063d88f406f1461034457600080fd5b8063a8aada5314610287578063adc20b1c146102a7578063b62d2d0e146102e2578063b97dbf59146102f757600080fd5b806373188c26116100fc578063807ccaef116100e1578063807ccaef146102255780638187665c1461023a578063886117361461025a57600080fd5b806373188c26146101e55780637a9e5e4b1461020557600080fd5b806309ebef21146101395780630f7849431461015b57806317a289f9146101a557806372108de1146101c557600080fd5b3661013457005b600080fd5b34801561014557600080fd5b506101596101543660046117a0565b6103d1565b005b34801561016757600080fd5b5061017b6101763660046117a0565b6104a2565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101b157600080fd5b506101596101c03660046117a0565b6104d9565b3480156101d157600080fd5b506101596101e03660046117db565b61081c565b3480156101f157600080fd5b5061017b6102003660046117a0565b610996565b34801561021157600080fd5b506101596102203660046117db565b6109a6565b34801561023157600080fd5b50610159610b0f565b34801561024657600080fd5b506101596102553660046117db565b610c18565b34801561026657600080fd5b5060045461017b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561029357600080fd5b506101596102a23660046117ff565b610d59565b3480156102b357600080fd5b506102d46102c23660046117db565b60066020526000908152604090205481565b60405190815260200161019c565b3480156102ee57600080fd5b50610159610eb3565b34801561030357600080fd5b506101596103123660046117db565b611122565b34801561032357600080fd5b5060015461017b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561035057600080fd5b5061015961035f3660046117a0565b611263565b34801561037057600080fd5b5060025461017b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561039d57600080fd5b506101596103ac36600461182f565b6114a3565b3480156103bd57600080fd5b506101596103cc3660046117db565b611617565b336000908152600660205260409020546103eb9042611788565b610421576040517f7820d3f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b670214e8348c4f0000811115610463576040517f8b01e07b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600660205260408082204290555183156108fc0291849190818181858888f1935050505015801561049e573d6000803e3d6000fd5b5050565b600381815481106104b257600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b336000908152600660205260409020546104f39042611788565b610529576040517f7820d3f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600660205260408120429055600380548390811061054f5761054f61185d565b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff90911691506402540be4009082906370a0823190602401602060405180830381865afa1580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f4919061188c565b101561067a576040517ffc8d44b700000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff82169063fc8d44b790602401600060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b505050505b600182111561076157600060056106926002856118a5565b815481106106a2576106a261185d565b6000918252602090912001546040517fd866c9d80000000000000000000000000000000000000000000000000000000081523360048201526402540be4006024820152600160448201819052606482015273ffffffffffffffffffffffffffffffffffffffff9091169150819063d866c9d8906084016020604051808303816000875af1158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b919061188c565b50505050565b8160010361049e57600480546040517fd866c9d800000000000000000000000000000000000000000000000000000000815233928101929092526402540be4006024830152600160448301819052606483015273ffffffffffffffffffffffffffffffffffffffff169063d866c9d8906084016020604051808303816000875af11580156107f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610817919061188c565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610889573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ad91906118e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460009061091e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109159190611900565b60405180910390fd5b50600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600581815481106104b257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3791906118e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600090610a9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109159190611900565b50600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b33600090815260066020526040902054610b299042611788565b610b5f576040517f7820d3f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600660205260409081902042905560025490517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019290925268056bc75e2d63100000602483015273ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af1158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1591906119e3565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca991906118e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600090610d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109159190611900565b50600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906118e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600090610e52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109159190611900565b508060038381548110610e6757610e6761185d565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b33600090815260066020526040902054610ecd9042611788565b610f03576040517f7820d3f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600660205260409020429055600380546402540be40091906001908110610f3257610f3261185d565b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcd919061188c565b1015611074576003600181548110610fe757610fe761185d565b6000918252602090912001546040517ffc8d44b700000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063fc8d44b790602401600060405180830381600087803b15801561105b57600080fd5b505af115801561106f573d6000803e3d6000fd5b505050505b600480546040517fd866c9d800000000000000000000000000000000000000000000000000000000815233928101929092526402540be4006024830152600060448301526001606483015273ffffffffffffffffffffffffffffffffffffffff169063d866c9d8906084016020604051808303816000875af11580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c15919061188c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561118f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b391906118e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460009061121b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109159190611900565b50600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3360009081526006602052604090205461127d9042611788565b6112b3576040517f7820d3f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260066020526040812042905560038054839081106112d9576112d961185d565b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff90911691506402540be4009082906370a0823190602401602060405180830381865afa15801561135a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137e919061188c565b1015611407576040517ffc8d44b700000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff82169063fc8d44b790602401600060405180830381600087803b1580156113eb57600080fd5b505af11580156113ff573d6000803e3d6000fd5b505050505050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526402540be400602482015273ffffffffffffffffffffffffffffffffffffffff82169063a9059cbb906044015b6020604051808303816000875af115801561147f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906119e3565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153491906118e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460009061159c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109159190611900565b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602483015283169063095ea7b390604401611460565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a891906118e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600090611710576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109159190611900565b50600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006201518061179884846118a5565b119392505050565b6000602082840312156117b257600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c1557600080fd5b6000602082840312156117ed57600080fd5b81356117f8816117b9565b9392505050565b6000806040838503121561181257600080fd5b823591506020830135611824816117b9565b809150509250929050565b6000806040838503121561184257600080fd5b823561184d816117b9565b91506020830135611824816117b9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561189e57600080fd5b5051919050565b6000828210156118de577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b6000602082840312156118f557600080fd5b81516117f8816117b9565b600060208083526000845481600182811c91508083168061192257607f831692505b8583108103611958577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b87860183815260200181801561197557600181146119a9576119d4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616825284151560051b820196506119d4565b60008b81526020902060005b868110156119ce578154848201529085019089016119b5565b83019750505b50949998505050505050505050565b6000602082840312156119f557600080fd5b815180151581146117f857600080fdfea2646970667358221220b893b2f63434cc7ec109f02816af88ee51655080db12e4376cd26a22bf77af5d64736f6c634300080f0033";

type DevFaucetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DevFaucetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DevFaucet__factory extends ContractFactory {
  constructor(...args: DevFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dai_: PromiseOrValue<string>,
    gdaoV2_: PromiseOrValue<string>,
    stakingV2_: PromiseOrValue<string>,
    authority_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<DevFaucet> {
    return super.deploy(dai_, gdaoV2_, stakingV2_, authority_, overrides || {}) as Promise<DevFaucet>;
  }
  override getDeployTransaction(
    dai_: PromiseOrValue<string>,
    gdaoV2_: PromiseOrValue<string>,
    stakingV2_: PromiseOrValue<string>,
    authority_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(dai_, gdaoV2_, stakingV2_, authority_, overrides || {});
  }
  override attach(address: string): DevFaucet {
    return super.attach(address) as DevFaucet;
  }
  override connect(signer: Signer): DevFaucet__factory {
    return super.connect(signer) as DevFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DevFaucetInterface {
    return new utils.Interface(_abi) as DevFaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DevFaucet {
    return new Contract(address, _abi, signerOrProvider) as DevFaucet;
  }
}
