/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockModuleWriter, MockModuleWriterInterface, PermissionsStruct } from "../MockModuleWriter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "kernel_",
        type: "address",
      },
      {
        internalType: "contract Module",
        name: "module_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "requests_",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    name: "KernelAdapter_OnlyKernel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "Keycode",
        name: "keycode_",
        type: "bytes5",
      },
    ],
    name: "Policy_ModuleDoesNotExist",
    type: "error",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "newKernel_",
        type: "address",
      },
    ],
    name: "changeKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "configureDependencies",
    outputs: [
      {
        internalType: "Keycode[]",
        name: "dependencies",
        type: "bytes5[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract Kernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000949380380620009498339810160408190526100319161016e565b600080546001600160a01b038086166001600160a01b031992831617835560018054918616919092161790558151905b818110156100de57600283828151811061007d5761007d610292565b6020908102919091018101518254600181018455600093845292829020815193018054919092015160e01c65010000000000026001600160481b031990911660d89390931c92909217919091179055806100d6816102a8565b915050610061565b50505050506102cf565b6001600160a01b03811681146100fd57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561013857610138610100565b60405290565b604051601f8201601f191681016001600160401b038111828210171561016657610166610100565b604052919050565b60008060006060848603121561018357600080fd5b835161018e816100e8565b809350506020808501516101a1816100e8565b604086810151919450906001600160401b03808211156101c057600080fd5b818801915088601f8301126101d457600080fd5b8151818111156101e6576101e6610100565b6101f4858260051b0161013e565b818152858101925060069190911b83018501908a82111561021457600080fd5b928501925b818410156102825784848c0312156102315760008081fd5b610239610116565b84516001600160d81b0319811681146102525760008081fd5b8152848701516001600160e01b03198116811461026f5760008081fd5b8188015283529284019291850191610219565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016102c857634e487b7160e01b600052601160045260246000fd5b5060010190565b61066a80620002df6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80635924be70116100505780635924be701461013e5780639459b87514610153578063d4aae0c41461016257610067565b806322f3e2d41461010c5780634657b36c14610129575b60015460405160009136916060918491829173ffffffffffffffffffffffffffffffffffffffff169061009d908390879061040f565b6000604051808303816000865af19150503d80600081146100da576040519150601f19603f3d011682016040523d82523d6000602084013e6100df565b606091505b5091509150816100ff5780516000036100f757600080fd5b805181602001fd5b8051945060200192505050f35b6101146101a7565b60405190151581526020015b60405180910390f35b61013c61013736600461041f565b61023f565b005b6101466102dd565b604051610120919061045c565b606060405161012091906104ef565b6000546101829073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610120565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a9190610555565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610296576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6002546060908067ffffffffffffffff8111156102fc576102fc610577565b60405190808252806020026020018201604052801561034157816020015b604080518082019091526000808252602082015281526020019060019003908161031a5790505b50915060005b8181101561040a5760028181548110610362576103626105a6565b60009182526020918290206040805180820190915291015460d881901b7fffffffffff00000000000000000000000000000000000000000000000000000016825265010000000000900460e01b7fffffffff00000000000000000000000000000000000000000000000000000000169181019190915283518490839081106103ec576103ec6105a6565b60200260200101819052508080610402906105d5565b915050610347565b505090565b8183823760009101908152919050565b60006020828403121561043157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461045557600080fd5b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156104e257815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101610479565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105495783517fffffffffff000000000000000000000000000000000000000000000000000000168352928401929184019160010161050b565b50909695505050505050565b60006020828403121561056757600080fd5b8151801515811461045557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361062d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122000da55fad47009056d9e6741ea2320e16a8a0915097e818b1d1932bcf17942ab64736f6c634300080f0033";

type MockModuleWriterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MockModuleWriterConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MockModuleWriter__factory extends ContractFactory {
  constructor(...args: MockModuleWriterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kernel_: PromiseOrValue<string>,
    module_: PromiseOrValue<string>,
    requests_: PermissionsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MockModuleWriter> {
    return super.deploy(kernel_, module_, requests_, overrides || {}) as Promise<MockModuleWriter>;
  }
  override getDeployTransaction(
    kernel_: PromiseOrValue<string>,
    module_: PromiseOrValue<string>,
    requests_: PermissionsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(kernel_, module_, requests_, overrides || {});
  }
  override attach(address: string): MockModuleWriter {
    return super.attach(address) as MockModuleWriter;
  }
  override connect(signer: Signer): MockModuleWriter__factory {
    return super.connect(signer) as MockModuleWriter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockModuleWriterInterface {
    return new utils.Interface(_abi) as MockModuleWriterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockModuleWriter {
    return new Contract(address, _abi, signerOrProvider) as MockModuleWriter;
  }
}
