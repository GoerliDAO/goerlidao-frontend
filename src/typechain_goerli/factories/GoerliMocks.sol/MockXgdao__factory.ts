/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MockXgdao, MockXgdaoInterface } from "../../GoerliMocks.sol/MockXgdao";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "balanceFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "balanceTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620010ea380380620010ea83398101604081905262000034916200014d565b604080518082018252600580825264784744414f60d81b602080840182905284518086019095529184529083015290601282828260006200007684826200020c565b5060016200008583826200020c565b5060ff81166080524660a0526200009b620000b1565b60c0525050506005939093555062000356915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000e59190620002d8565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000602082840312156200016057600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019257607f821691505b602082108103620001b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020757600081815260208120601f850160051c81016020861015620001e25750805b601f850160051c820191505b818110156200020357828155600101620001ee565b5050505b505050565b81516001600160401b0381111562000228576200022862000167565b62000240816200023984546200017d565b84620001b9565b602080601f8311600181146200027857600084156200025f5750858301515b600019600386901b1c1916600185901b17855562000203565b600085815260208120601f198616915b82811015620002a95788860151825594840194600190910190840162000288565b5085821015620002c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620002e8816200017d565b6001828116801562000303576001811462000319576200034a565b60ff19841687528215158302870194506200034a565b8760005260208060002060005b85811015620003415781548a82015290840190820162000326565b50505082870194505b50929695505050505050565b60805160a05160c051610d5662000394600039600061043f0152600061040a01526000818161013a0152818161047a01526104d20152610d566000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca578063095ea7b3146100e857806318160ddd1461010b57806323b872dd14610122578063313ce567146101355780633644e5151461016e57806340c10f191461017657806366a5236c1461018b57806370a082311461019e57806395d89b41146101be5780639dc29fac146101c6578063a8248768146101d9578063a9059cbb146101ec578063d505accf146101ff578063dd62ed3e14610212575b600080fd5b6100d261023d565b6040516100df91906108d6565b60405180910390f35b6100fb6100f6366004610947565b6102cb565b60405190151581526020016100df565b61011460025481565b6040519081526020016100df565b6100fb610130366004610971565b610326565b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100df565b610114610406565b610189610184366004610947565b610461565b005b6101146101993660046109ad565b61046f565b6101146101ac3660046109c6565b60036020526000908152604090205481565b6100d26104b4565b6101896101d4366004610947565b6104c1565b6101146101e73660046109ad565b6104cb565b6100fb6101fa366004610947565b610505565b61018961020d3660046109e8565b61056b565b610114610220366004610a5b565b600460209081526000928352604080842090915290825290205481565b6000805461024a90610a8e565b80601f016020809104026020016040519081016040528092919081815260200182805461027690610a8e565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020610d01833981519152906103149086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103825761035d8382610ade565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103aa908490610ade565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610ce1833981519152906103f39087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461043c57610437610780565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61046b828261081a565b5050565b6005546000906104a07f0000000000000000000000000000000000000000000000000000000000000000600a610bd9565b6104aa9084610be8565b6103209190610c07565b6001805461024a90610a8e565b61046b8282610874565b60006104f87f0000000000000000000000000000000000000000000000000000000000000000600a610bd9565b6005546104aa9084610be8565b33600090815260036020526040812080548391908390610526908490610ade565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610ce1833981519152906103149086815260200190565b428410156105ba5760405162461bcd60e51b815260206004820152601760248201527614115493525517d11150511312539157d1561412549151604a1b60448201526064015b60405180910390fd5b600060016105c6610406565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808d1692820192909252908a1660608201526080810189905260a0810188905260c0016040516020818303038152906040528051906020012060405160200161065892919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156106b6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106ec5750876001600160a01b0316816001600160a01b0316145b6107295760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016105b1565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a1691600080516020610d01833981519152910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107b29190610c29565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b806002600082825461082c9190610cc8565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610ce183398151915291015b60405180910390a35050565b6001600160a01b0382166000908152600360205260408120805483929061089c908490610ade565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610ce183398151915290602001610868565b600060208083528351808285015260005b81811015610903578581018301518582016040015282016108e7565b81811115610915576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461094257600080fd5b919050565b6000806040838503121561095a57600080fd5b6109638361092b565b946020939093013593505050565b60008060006060848603121561098657600080fd5b61098f8461092b565b925061099d6020850161092b565b9150604084013590509250925092565b6000602082840312156109bf57600080fd5b5035919050565b6000602082840312156109d857600080fd5b6109e18261092b565b9392505050565b600080600080600080600060e0888a031215610a0357600080fd5b610a0c8861092b565b9650610a1a6020890161092b565b95506040880135945060608801359350608088013560ff81168114610a3e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a6e57600080fd5b610a778361092b565b9150610a856020840161092b565b90509250929050565b600181811c90821680610aa257607f821691505b602082108103610ac257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610af057610af0610ac8565b500390565b600181815b80851115610b30578160001904821115610b1657610b16610ac8565b80851615610b2357918102915b93841c9390800290610afa565b509250929050565b600082610b4757506001610320565b81610b5457506000610320565b8160018114610b6a5760028114610b7457610b90565b6001915050610320565b60ff841115610b8557610b85610ac8565b50506001821b610320565b5060208310610133831016604e8410600b8410161715610bb3575081810a610320565b610bbd8383610af5565b8060001904821115610bd157610bd1610ac8565b029392505050565b60006109e160ff841683610b38565b6000816000190483118215151615610c0257610c02610ac8565b500290565b600082610c2457634e487b7160e01b600052601260045260246000fd5b500490565b600080835481600182811c915080831680610c4557607f831692505b60208084108203610c6457634e487b7160e01b86526022600452602486fd5b818015610c785760018114610c8d57610cba565b60ff1986168952841515850289019650610cba565b60008a81526020902060005b86811015610cb25781548b820152908501908301610c99565b505084890196505b509498975050505050505050565b60008219821115610cdb57610cdb610ac8565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212202a1943ce76d8605177cd973d7b6f29b2d7010d78ca6c5a4d36b8d7bccc29867864736f6c634300080f0033";

type MockXgdaoConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MockXgdaoConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MockXgdao__factory extends ContractFactory {
  constructor(...args: MockXgdaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    index_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MockXgdao> {
    return super.deploy(index_, overrides || {}) as Promise<MockXgdao>;
  }
  override getDeployTransaction(
    index_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(index_, overrides || {});
  }
  override attach(address: string): MockXgdao {
    return super.attach(address) as MockXgdao;
  }
  override connect(signer: Signer): MockXgdao__factory {
    return super.connect(signer) as MockXgdao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockXgdaoInterface {
    return new utils.Interface(_abi) as MockXgdaoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockXgdao {
    return new Contract(address, _abi, signerOrProvider) as MockXgdao;
  }
}
