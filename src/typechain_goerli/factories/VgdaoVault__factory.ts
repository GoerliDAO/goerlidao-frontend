/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { VgdaoVault, VgdaoVaultInterface } from "../VgdaoVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "kernel_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    name: "KernelAdapter_OnlyKernel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "Keycode",
        name: "keycode_",
        type: "bytes5",
      },
    ],
    name: "Policy_ModuleDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "VgdaoVault_NotVested",
    type: "error",
  },
  {
    inputs: [],
    name: "VESTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTES",
    outputs: [
      {
        internalType: "contract VOTESv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "newKernel_",
        type: "address",
      },
    ],
    name: "changeKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "configureDependencies",
    outputs: [
      {
        internalType: "Keycode[]",
        name: "dependencies",
        type: "bytes5[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets_",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract Kernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets_",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xGDAO",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112b83803806112b883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611225806100936000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063a0712d6811610081578063db006a751161005b578063db006a75146101ca578063e03481e1146101dd578063e4b4a727146101fd57600080fd5b8063a0712d681461015f578063b6b55f2514610172578063d4aae0c41461018557600080fd5b80634657b36c116100b25780634657b36c146101225780635924be70146101355780639459b8751461014a57600080fd5b80630197d972146100d957806322f3e2d4146100f55780632e1a7d4d1461010d575b600080fd5b6100e2610e1081565b6040519081526020015b60405180910390f35b6100fd61021d565b60405190151581526020016100ec565b61012061011b366004610fce565b6102b5565b005b61012061013036600461100c565b610433565b61013d6104d2565b6040516100ec9190611030565b610152610825565b6040516100ec91906110c3565b61012061016d366004610fce565b610a8f565b610120610180366004610fce565b610c66565b6000546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ec565b6101206101d8366004610fce565b610d65565b6001546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b6002546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561028c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b09190611129565b905090565b6002546040517f148ea1a4000000000000000000000000000000000000000000000000000000008152336004820152610e109173ffffffffffffffffffffffffffffffffffffffff169063148ea1a490602401602060405180830381865afa158015610325573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610349919061114b565b6103539190611164565b42101561038c576040517f12f8a87e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546040517fb460af94000000000000000000000000000000000000000000000000000000008152600481018390523360248201819052604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b460af94906064015b6020604051808303816000875af115801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f919061114b565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461048b576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051600580825260c08201909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816104ea57905050905060405180604001604052806105457f564f54455300000000000000000000000000000000000000000000000000000090565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f6e553f6500000000000000000000000000000000000000000000000000000000602090910152815182906000906105a3576105a36111a3565b602002602001018190525060405180604001604052806105e07f564f54455300000000000000000000000000000000000000000000000000000090565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f94bf804d00000000000000000000000000000000000000000000000000000000602090910152815182906001908110610640576106406111a3565b6020026020010181905250604051806040016040528061067d7f564f54455300000000000000000000000000000000000000000000000000000090565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527fb460af94000000000000000000000000000000000000000000000000000000006020909101528151829060029081106106dd576106dd6111a3565b6020026020010181905250604051806040016040528061071a7f564f54455300000000000000000000000000000000000000000000000000000090565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527fba0876520000000000000000000000000000000000000000000000000000000060209091015281518290600390811061077a5761077a6111a3565b602002602001018190525060405180604001604052806107b77f564f54455300000000000000000000000000000000000000000000000000000090565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f23b872dd00000000000000000000000000000000000000000000000000000000602090910152815182906004908110610817576108176111a3565b602002602001018190525090565b604080516001808252818301909252606091602080830190803683370190505090507f564f5445530000000000000000000000000000000000000000000000000000008160008151811061087b5761087b6111a3565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506108e8816000815181106108db576108db6111a3565b6020026020010151610ea0565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169182179055604080517fe03481e1000000000000000000000000000000000000000000000000000000008152905163e03481e1916004808201926020929091908290030181865afa158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a491906111d2565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283169081179091556002546040517f095ea7b3000000000000000000000000000000000000000000000000000000008152921660048301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248301529063095ea7b3906044016020604051808303816000875af1158015610a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8b9190611129565b5090565b6002546040517fb3d7f6b90000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063b3d7f6b990602401602060405180830381865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b23919061114b565b6001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905291925073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af1158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc59190611129565b506002546040517f94bf804d0000000000000000000000000000000000000000000000000000000081526004810184905233602482015273ffffffffffffffffffffffffffffffffffffffff909116906394bf804d906044016020604051808303816000875af1158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c61919061114b565b505050565b6001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af1158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190611129565b506002546040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810183905233602482015273ffffffffffffffffffffffffffffffffffffffff90911690636e553f65906044016103ec565b6002546040517f148ea1a4000000000000000000000000000000000000000000000000000000008152336004820152610e109173ffffffffffffffffffffffffffffffffffffffff169063148ea1a490602401602060405180830381865afa158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df9919061114b565b610e039190611164565b421015610e3c576040517f12f8a87e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546040517fba087652000000000000000000000000000000000000000000000000000000008152600481018390523360248201819052604482015273ffffffffffffffffffffffffffffffffffffffff9091169063ba087652906064016103ec565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa158015610f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5591906111d2565b905073ffffffffffffffffffffffffffffffffffffffff8116610fc8576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152602401610482565b92915050565b600060208284031215610fe057600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461100957600080fd5b50565b60006020828403121561101e57600080fd5b813561102981610fe7565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156110b657815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff000000000000000000000000000000000000000000000000000000001686850152928401929085019060010161104d565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561111d5783517fffffffffff00000000000000000000000000000000000000000000000000000016835292840192918401916001016110df565b50909695505050505050565b60006020828403121561113b57600080fd5b8151801515811461102957600080fd5b60006020828403121561115d57600080fd5b5051919050565b6000821982111561119e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156111e457600080fd5b815161102981610fe756fea26469706673582212208f3c76d0dfebbfe1457147846ac5aa677728e9beef3daa271431e149fcf9dd5564736f6c634300080f0033";

type VgdaoVaultConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VgdaoVaultConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class VgdaoVault__factory extends ContractFactory {
  constructor(...args: VgdaoVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kernel_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<VgdaoVault> {
    return super.deploy(kernel_, overrides || {}) as Promise<VgdaoVault>;
  }
  override getDeployTransaction(
    kernel_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(kernel_, overrides || {});
  }
  override attach(address: string): VgdaoVault {
    return super.attach(address) as VgdaoVault;
  }
  override connect(signer: Signer): VgdaoVault__factory {
    return super.connect(signer) as VgdaoVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VgdaoVaultInterface {
    return new utils.Interface(_abi) as VgdaoVaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VgdaoVault {
    return new Contract(address, _abi, signerOrProvider) as VgdaoVault;
  }
}
