/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Distributor, DistributorInterface } from "../../Distributor.sol/Distributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "kernel_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialRate_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Distributor_AdjustmentLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_AdjustmentUnderflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_InvalidConstruction",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_NoRebaseOccurred",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_NotPermissioned",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_NotUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_OnlyStaking",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_SanityCheck",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    name: "KernelAdapter_OnlyKernel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "Keycode",
        name: "keycode_",
        type: "bytes5",
      },
    ],
    name: "Policy_ModuleDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "MINTR",
    outputs: [
      {
        internalType: "contract MINTRv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLES",
    outputs: [
      {
        internalType: "contract ROLESv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRSRY",
    outputs: [
      {
        internalType: "contract TRSRYv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "newKernel_",
        type: "address",
      },
    ],
    name: "changeKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "configureDependencies",
    outputs: [
      {
        internalType: "Keycode[]",
        name: "dependencies",
        type: "bytes5[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract Kernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who_",
        type: "address",
      },
    ],
    name: "nextRewardFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "removePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveBounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bounty_",
        type: "uint256",
      },
    ],
    name: "setBounty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools_",
        type: "address[]",
      },
    ],
    name: "setPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRewardRate_",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerRebase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001e3b38038062001e3b8339810160408190526200003491620000d8565b600080546001600160a01b0319166001600160a01b03861690811790915515806200006657506001600160a01b038316155b806200007957506001600160a01b038216155b8062000083575080155b15620000a25760405163c748cbd560e01b815260040160405180910390fd5b6001600160a01b03928316608052911660a0526005555062000132565b6001600160a01b0381168114620000d557600080fd5b50565b60008060008060808587031215620000ef57600080fd5b8451620000fc81620000bf565b60208601519094506200010f81620000bf565b60408601519093506200012281620000bf565b6060959095015193969295505050565b60805160a051611cc762000174600039600081816103b6015281816111e2015281816113400152818161164e01526116f0015260006107220152611cc76000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638544c53b116100cd5780639e447fc611610081578063d4aae0c411610066578063d4aae0c4146102ff578063e4fc6b6d1461031f578063e7187e8a1461032757600080fd5b80639e447fc6146102d9578063ac4afa38146102ec57600080fd5b8063943dfef1116100b2578063943dfef1146102a85780639459b875146102b15780639b429108146102c657600080fd5b80638544c53b14610275578063923cb9521461028857600080fd5b8063577de7d0116101245780635d87d363116101095780635d87d363146102395780637b0a47ee1461024c57806380cee4ab1461025557600080fd5b8063577de7d0146101df5780635924be701461022457600080fd5b806333ba88821161015557806333ba88821461019857806336d33f44146101ab5780634657b36c146101cc57600080fd5b80630c7d39311461017157806322f3e2d41461017b575b600080fd5b61017961032f565b005b610183610463565b60405190151581526020015b60405180910390f35b6101796101a636600461194e565b6104fb565b6101be6101b936600461197e565b6106cf565b60405190815260200161018f565b6101796101da36600461197e565b6107a7565b6003546101ff9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018f565b61022c610846565b60405161018f91906119a2565b610179610247366004611a35565b610b9a565b6101be60055481565b6002546101ff9073ffffffffffffffffffffffffffffffffffffffff1681565b610179610283366004611a4e565b610c4d565b6001546101ff9073ffffffffffffffffffffffffffffffffffffffff1681565b6101be60065481565b6102b9610d0c565b60405161018f9190611ac3565b6101796102d436600461194e565b610f9e565b6101796102e7366004611a35565b6110e0565b6101ff6102fa366004611a35565b611193565b6000546101ff9073ffffffffffffffffffffffffffffffffffffffff1681565b6101796111ca565b6101be611634565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556040517f990966d50000000000000000000000000000000000000000000000000000000081523360048201526000602482015260448101829052606481019190915273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063990966d5906084016020604051808303816000875af11580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190611b29565b5060075460ff1615610461576040517f85dea74f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190611b42565b905090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6469737472696275746f725f61646d696e000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561058d57600080fd5b505af11580156105a1573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff16600484815481106105d0576105d0611b64565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff160361065857816004848154811061060b5761060b611b64565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805473ffffffffffffffffffffffffffffffffffffffff84167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b6005546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152600092633b9aca009290917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d9190611b29565b6107979190611b93565b6107a19190611bf7565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107ff576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051600380825260808201909252606091816020015b604080518082019091526000808252602082015281526020019060019003908161085e575050604080518082018083526003547f1ae7ec2e00000000000000000000000000000000000000000000000000000000909152915192935091829173ffffffffffffffffffffffffffffffffffffffff1690631ae7ec2e906044808501916020918187030181865afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611c32565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527fbbaed5cb000000000000000000000000000000000000000000000000000000006020909101528151829060009061097e5761097e611b64565b60200260200101819052506040518060400160405280600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a259190611c32565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f359fe78000000000000000000000000000000000000000000000000000000000602090910152815182906001908110610a8557610a85611b64565b60200260200101819052506040518060400160405280600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190611c32565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f1b0a68f200000000000000000000000000000000000000000000000000000000602090910152815182906002908110610b8c57610b8c611b64565b602002602001018190525090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6469737472696275746f725f61646d696e000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610c2c57600080fd5b505af1158015610c40573d6000803e3d6000fd5b5050506006929092555050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6469737472696275746f725f61646d696e000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610cdf57600080fd5b505af1158015610cf3573d6000803e3d6000fd5b50610d069250600491508590508461188c565b50505050565b604080516003808252608082019092526060916020820183803683370190505090507f4d494e545200000000000000000000000000000000000000000000000000000081600081518110610d6257610d62611b64565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610dba7f545253525900000000000000000000000000000000000000000000000000000090565b81600181518110610dcd57610dcd611b64565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610e257f524f4c455300000000000000000000000000000000000000000000000000000090565b81600281518110610e3857610e38611b64565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610ea581600081518110610e9857610e98611b64565b6020026020010151611764565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610efb81600181518110610e9857610e98611b64565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911781558151610f569183918110610e9857610e98611b64565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6469737472696275746f725f61646d696e000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561103057600080fd5b505af1158015611044573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166004848154811061107257611072611b64565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16146110cb576040517f069d723000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006004848154811061060b5761060b611b64565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6469737472696275746f725f61646d696e000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561117257600080fd5b505af1158015611186573d6000803e3d6000fd5b5050506005929092555050565b600481815481106111a357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611239576040517f4bed2c2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075460ff16611275576040517fc3940a9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517f359fe7800000000000000000000000000000000000000000000000000000000081523060048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602482015273ffffffffffffffffffffffffffffffffffffffff9091169063359fe78090604401600060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b505060035473ffffffffffffffffffffffffffffffffffffffff16915063bbaed5cb90507f0000000000000000000000000000000000000000000000000000000000000000611368816106cf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b1580156113d357600080fd5b505af11580156113e7573d6000803e3d6000fd5b50506004549150600090505b8181101561155f5760006004828154811061141057611410611b64565b600091825260208220015473ffffffffffffffffffffffffffffffffffffffff16915061143c826106cf565b905073ffffffffffffffffffffffffffffffffffffffff8216158015906114635750600081115b15611555576003546040517fbbaed5cb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063bbaed5cb90604401600060405180830381600087803b1580156114dc57600080fd5b505af11580156114f0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561153c57600080fd5b505af1158015611550573d6000803e3d6000fd5b505050505b50506001016113f3565b506003546040517f1b0a68f20000000000000000000000000000000000000000000000000000000081523060048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602482015273ffffffffffffffffffffffffffffffffffffffff90911690631b0a68f290604401600060405180830381600087803b1580156115f157600080fd5b505af1158015611605573d6000803e3d6000fd5b5050600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146116a5576040517f4bed2c2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006541561175d576003546006546040517fbbaed5cb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482019290925291169063bbaed5cb90604401600060405180830381600087803b15801561174457600080fd5b505af1158015611758573d6000803e3d6000fd5b505050505b5060065490565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa1580156117f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118199190611c74565b905073ffffffffffffffffffffffffffffffffffffffff81166107a1576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016107f6565b828054828255906000526020600020908101928215611904579160200282015b828111156119045781547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8435161782556020909201916001909101906118ac565b50611910929150611914565b5090565b5b808211156119105760008155600101611915565b73ffffffffffffffffffffffffffffffffffffffff8116811461194b57600080fd5b50565b6000806040838503121561196157600080fd5b82359150602083013561197381611929565b809150509250929050565b60006020828403121561199057600080fd5b813561199b81611929565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015611a2857815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff00000000000000000000000000000000000000000000000000000000168685015292840192908501906001016119bf565b5091979650505050505050565b600060208284031215611a4757600080fd5b5035919050565b60008060208385031215611a6157600080fd5b823567ffffffffffffffff80821115611a7957600080fd5b818501915085601f830112611a8d57600080fd5b813581811115611a9c57600080fd5b8660208260051b8501011115611ab157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015611b1d5783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101611adf565b50909695505050505050565b600060208284031215611b3b57600080fd5b5051919050565b600060208284031215611b5457600080fd5b8151801515811461199b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611bf2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082611c2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611c4457600080fd5b81517fffffffffff0000000000000000000000000000000000000000000000000000008116811461199b57600080fd5b600060208284031215611c8657600080fd5b815161199b8161192956fea264697066735822122021629a73b9e3b58f3fafdf750bf785c60d17fcb11004e182236ff9e6185da6cd64736f6c634300080f0033";

type DistributorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DistributorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Distributor__factory extends ContractFactory {
  constructor(...args: DistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kernel_: PromiseOrValue<string>,
    gdao_: PromiseOrValue<string>,
    staking_: PromiseOrValue<string>,
    initialRate_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Distributor> {
    return super.deploy(kernel_, gdao_, staking_, initialRate_, overrides || {}) as Promise<Distributor>;
  }
  override getDeployTransaction(
    kernel_: PromiseOrValue<string>,
    gdao_: PromiseOrValue<string>,
    staking_: PromiseOrValue<string>,
    initialRate_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(kernel_, gdao_, staking_, initialRate_, overrides || {});
  }
  override attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  override connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
