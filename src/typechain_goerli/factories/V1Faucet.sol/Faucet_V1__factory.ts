/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Faucet_V1, Faucet_V1Interface } from "../../V1Faucet.sol/Faucet_V1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dai_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gdao",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingV2_",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CanOnlyMintOnceADay",
    type: "error",
  },
  {
    inputs: [],
    name: "MintTooLarge",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IOlympusAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
    ],
    name: "addGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
    ],
    name: "addStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
    ],
    name: "approveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IOlympusAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "futureStaking",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintDAI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mintETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gdaoIndex_",
        type: "uint256",
      },
    ],
    name: "mintGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gdaoIndex_",
        type: "uint256",
      },
    ],
    name: "mintSGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintXGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintable",
    outputs: [
      {
        internalType: "contract IFaucet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOlympusAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dai_",
        type: "address",
      },
    ],
    name: "setDAI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gdaoIndex_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
    ],
    name: "setGDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingV2_",
        type: "address",
      },
    ],
    name: "setStakingV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingV2",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052600c60809081526b15539055551213d49256915160a21b60a0526000906200002d908262000260565b503480156200003b57600080fd5b5060405162001807380380620018078339810160408190526200005e9162000349565b600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250600280546001600160a01b038087166001600160a01b0319928316179092556003805460018101825560008281527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909101805488861690851617905560048054948716949093169390931790915580549091906200012c576200012c620003a6565b60009182526020909120015460405163095ea7b360e01b81526001600160a01b03848116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156200018a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b09190620003bc565b5050505050620003e7565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001e657607f821691505b6020821081036200020757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025b57600081815260208120601f850160051c81016020861015620002365750805b601f850160051c820191505b81811015620002575782815560010162000242565b5050505b505050565b81516001600160401b038111156200027c576200027c620001bb565b62000294816200028d8454620001d1565b846200020d565b602080601f831160018114620002cc5760008415620002b35750858301515b600019600386901b1c1916600185901b17855562000257565b600085815260208120601f198616915b82811015620002fd57888601518255948401946001909101908401620002dc565b50858210156200031c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200034457600080fd5b919050565b600080600080608085870312156200036057600080fd5b6200036b856200032c565b93506200037b602086016200032c565b92506200038b604086016200032c565b91506200039b606086016200032c565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b600060208284031215620003cf57600080fd5b81518015158114620003e057600080fd5b9392505050565b61141080620003f76000396000f3fe6080604052600436106100dd5760003560e01c806309ebef21146100e95780630f7849431461010b57806317a289f91461014157806372108de11461016157806373188c26146101815780637a9e5e4b146101a1578063807ccaef146101c15780638187665c146101d657806388611736146101f6578063a8aada5314610216578063adc20b1c14610236578063b97dbf5914610271578063bf7e214f14610291578063d88f406f146102b1578063e0bab4c4146102d1578063e99e1e49146102f1578063edf6220b14610311578063f37e49401461033157600080fd5b366100e457005b600080fd5b3480156100f557600080fd5b50610109610104366004611194565b610346565b005b34801561011757600080fd5b5061012b610126366004611194565b6103e5565b60405161013891906111ad565b60405180910390f35b34801561014d57600080fd5b5061010961015c366004611194565b61040f565b34801561016d57600080fd5b5061010961017c3660046111d6565b610699565b34801561018d57600080fd5b5061012b61019c366004611194565b6107a0565b3480156101ad57600080fd5b506101096101bc3660046111d6565b6107b0565b3480156101cd57600080fd5b506101096108a6565b3480156101e257600080fd5b506101096101f13660046111d6565b610970565b34801561020257600080fd5b5060045461012b906001600160a01b031681565b34801561022257600080fd5b506101096102313660046111fa565b610a3e565b34801561024257600080fd5b506102636102513660046111d6565b60066020526000908152604090205481565b604051908152602001610138565b34801561027d57600080fd5b5061010961028c3660046111d6565b610b30565b34801561029d57600080fd5b5060015461012b906001600160a01b031681565b3480156102bd57600080fd5b506101096102cc366004611194565b610bfe565b3480156102dd57600080fd5b5060025461012b906001600160a01b031681565b3480156102fd57600080fd5b5061010961030c36600461122a565b610dbd565b34801561031d57600080fd5b5061010961032c3660046111d6565b610e99565b34801561033d57600080fd5b50610109610f97565b33600090815260066020526040902054610360904261117c565b61037d57604051637820d3f960e01b815260040160405180910390fd5b670214e8348c4f00008111156103a657604051638b01e07b60e01b815260040160405180910390fd5b336000818152600660205260408082204290555183156108fc0291849190818181858888f193505050501580156103e1573d6000803e3d6000fd5b5050565b600381815481106103f557600080fd5b6000918252602090912001546001600160a01b0316905081565b33600090815260066020526040902054610429904261117c565b61044657604051637820d3f960e01b815260040160405180910390fd5b336000908152600660205260408120429055600380548390811061046c5761046c611258565b6000918252602090912001546040516370a0823160e01b81526001600160a01b0390911691506402540be4009082906370a08231906104af9030906004016111ad565b602060405180830381865afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f0919061126e565b10156105555760405163fc8d44b760e01b81526001600160a01b0382169063fc8d44b7906105229030906004016111ad565b600060405180830381600087803b15801561053c57600080fd5b505af1158015610550573d6000803e3d6000fd5b505050505b600182111561060e576000600561056d600285611287565b8154811061057d5761057d611258565b600091825260209091200154604051631b0cd93b60e31b81526001600160a01b039091169150819063d866c9d8906105c59033906402540be4009060019081906004016112ac565b6020604051808303816000875af11580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610608919061126e565b50505050565b816001036103e15760048054604051631b0cd93b60e31b81526001600160a01b039091169163d866c9d8916106519133916402540be400916001918291016112ac565b6020604051808303816000875af1158015610670573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610694919061126e565b505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071091906112d6565b6001600160a01b0316336001600160a01b03161460009061074d5760405162461bcd60e51b815260040161074491906112f3565b60405180910390fd5b50600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0392909216919091179055565b600581815481106103f557600080fd5b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610803573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082791906112d6565b6001600160a01b0316336001600160a01b03161460009061085b5760405162461bcd60e51b815260040161074491906112f3565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b336000908152600660205260409020546108c0904261117c565b6108dd57604051637820d3f960e01b815260040160405180910390fd5b3360008181526006602052604090819020429055600254905163a9059cbb60e01b81526001600160a01b039091169163a9059cbb9161092a919068056bc75e2d631000009060040161139f565b6020604051808303816000875af1158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d91906113b8565b50565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e791906112d6565b6001600160a01b0316336001600160a01b031614600090610a1b5760405162461bcd60e51b815260040161074491906112f3565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab591906112d6565b6001600160a01b0316336001600160a01b031614600090610ae95760405162461bcd60e51b815260040161074491906112f3565b508060038381548110610afe57610afe611258565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba791906112d6565b6001600160a01b0316336001600160a01b031614600090610bdb5760405162461bcd60e51b815260040161074491906112f3565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260066020526040902054610c18904261117c565b610c3557604051637820d3f960e01b815260040160405180910390fd5b3360009081526006602052604081204290556003805483908110610c5b57610c5b611258565b6000918252602090912001546040516370a0823160e01b81526001600160a01b0390911691506402540be4009082906370a0823190610c9e9030906004016111ad565b602060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf919061126e565b1015610d475760405163fc8d44b760e01b81526001600160a01b0382169063fc8d44b790610d119033906004016111ad565b600060405180830381600087803b158015610d2b57600080fd5b505af1158015610d3f573d6000803e3d6000fd5b505050505050565b60405163a9059cbb60e01b81526001600160a01b0382169063a9059cbb90610d7a9033906402540be4009060040161139f565b6020604051808303816000875af1158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069491906113b8565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3491906112d6565b6001600160a01b0316336001600160a01b031614600090610e685760405162461bcd60e51b815260040161074491906112f3565b5060405163095ea7b360e01b81526001600160a01b0383169063095ea7b390610d7a9084906000199060040161139f565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1091906112d6565b6001600160a01b0316336001600160a01b031614600090610f445760405162461bcd60e51b815260040161074491906112f3565b50600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260066020526040902054610fb1904261117c565b610fce57604051637820d3f960e01b815260040160405180910390fd5b336000908152600660205260409020429055600380546402540be40091906001908110610ffd57610ffd611258565b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116906370a08231906110369030906004016111ad565b602060405180830381865afa158015611053573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611077919061126e565b10156110fd57600360018154811061109157611091611258565b60009182526020909120015460405163fc8d44b760e01b81526001600160a01b039091169063fc8d44b7906110ca9030906004016111ad565b600060405180830381600087803b1580156110e457600080fd5b505af11580156110f8573d6000803e3d6000fd5b505050505b60048054604051631b0cd93b60e31b81526001600160a01b039091169163d866c9d8916111399133916402540be40091600091600191016112ac565b6020604051808303816000875af1158015611158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d919061126e565b60006201518061118c8484611287565b119392505050565b6000602082840312156111a657600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461096d57600080fd5b6000602082840312156111e857600080fd5b81356111f3816111c1565b9392505050565b6000806040838503121561120d57600080fd5b82359150602083013561121f816111c1565b809150509250929050565b6000806040838503121561123d57600080fd5b8235611248816111c1565b9150602083013561121f816111c1565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561128057600080fd5b5051919050565b6000828210156112a757634e487b7160e01b600052601160045260246000fd5b500390565b6001600160a01b039490941684526020840192909252151560408301521515606082015260800190565b6000602082840312156112e857600080fd5b81516111f3816111c1565b600060208083526000845481600182811c91508083168061131557607f831692505b858310810361133257634e487b7160e01b85526022600452602485fd5b87860183815260200181801561134f576001811461136557611390565b60ff198616825284151560051b82019650611390565b60008b81526020902060005b8681101561138a57815484820152908501908901611371565b83019750505b50949998505050505050505050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156113ca57600080fd5b815180151581146111f357600080fdfea2646970667358221220880cebac4d0b49a19c5f6c14157d9d05bcb821281b85b12b0aef19a2ea6c17b564736f6c634300080f0033";

type Faucet_V1ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: Faucet_V1ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Faucet_V1__factory extends ContractFactory {
  constructor(...args: Faucet_V1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dai_: PromiseOrValue<string>,
    gdao: PromiseOrValue<string>,
    stakingV2_: PromiseOrValue<string>,
    authority_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Faucet_V1> {
    return super.deploy(dai_, gdao, stakingV2_, authority_, overrides || {}) as Promise<Faucet_V1>;
  }
  override getDeployTransaction(
    dai_: PromiseOrValue<string>,
    gdao: PromiseOrValue<string>,
    stakingV2_: PromiseOrValue<string>,
    authority_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(dai_, gdao, stakingV2_, authority_, overrides || {});
  }
  override attach(address: string): Faucet_V1 {
    return super.attach(address) as Faucet_V1;
  }
  override connect(signer: Signer): Faucet_V1__factory {
    return super.connect(signer) as Faucet_V1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Faucet_V1Interface {
    return new utils.Interface(_abi) as Faucet_V1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet_V1 {
    return new Contract(address, _abi, signerOrProvider) as Faucet_V1;
  }
}
