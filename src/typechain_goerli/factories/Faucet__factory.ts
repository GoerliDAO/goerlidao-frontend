/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Faucet, FaucetInterface } from "../Faucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "gdao_",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "reserve_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethDrip_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gdaoDrip_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveDrip_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dripInterval_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum Faucet.Asset",
        name: "asset",
        type: "uint8",
      },
    ],
    name: "Faucet_DripFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum Faucet.Asset",
        name: "asset",
        type: "uint8",
      },
    ],
    name: "Faucet_DripOnCooldown",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum Faucet.Asset",
        name: "asset",
        type: "uint8",
      },
    ],
    name: "Faucet_InsufficientFunds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Faucet.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Drip",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Faucet.Asset",
        name: "asset_",
        type: "uint8",
      },
    ],
    name: "drip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Faucet.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "dripAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dripInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dripTestAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum Faucet.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "lastDrip",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Faucet.Asset",
        name: "asset_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "setDripAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interval_",
        type: "uint256",
      },
    ],
    name: "setDripInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Faucet.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "enum Faucet.Asset",
        name: "asset_",
        type: "uint8",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type FaucetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: FaucetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    admin_: PromiseOrValue<string>,
    gdao_: PromiseOrValue<string>,
    reserve_: PromiseOrValue<string>,
    ethDrip_: PromiseOrValue<BigNumberish>,
    gdaoDrip_: PromiseOrValue<BigNumberish>,
    reserveDrip_: PromiseOrValue<BigNumberish>,
    dripInterval_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Faucet> {
    return super.deploy(
      admin_,
      gdao_,
      reserve_,
      ethDrip_,
      gdaoDrip_,
      reserveDrip_,
      dripInterval_,
      overrides || {},
    ) as Promise<Faucet>;
  }
  override getDeployTransaction(
    admin_: PromiseOrValue<string>,
    gdao_: PromiseOrValue<string>,
    reserve_: PromiseOrValue<string>,
    ethDrip_: PromiseOrValue<BigNumberish>,
    gdaoDrip_: PromiseOrValue<BigNumberish>,
    reserveDrip_: PromiseOrValue<BigNumberish>,
    dripInterval_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      admin_,
      gdao_,
      reserve_,
      ethDrip_,
      gdaoDrip_,
      reserveDrip_,
      dripInterval_,
      overrides || {},
    );
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
