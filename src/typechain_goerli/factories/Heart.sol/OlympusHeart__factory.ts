/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { OlympusHeart, OlympusHeartInterface } from "../../Heart.sol/OlympusHeart";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "kernel_",
        type: "address",
      },
      {
        internalType: "contract IOperator",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "rewardToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Heart_BeatAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "Heart_BeatStopped",
    type: "error",
  },
  {
    inputs: [],
    name: "Heart_InvalidParams",
    type: "error",
  },
  {
    inputs: [],
    name: "Heart_OutOfCycle",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    name: "KernelAdapter_OnlyKernel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "Keycode",
        name: "keycode_",
        type: "bytes5",
      },
    ],
    name: "Policy_ModuleDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp_",
        type: "uint256",
      },
    ],
    name: "Beat",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount_",
        type: "uint256",
      },
    ],
    name: "RewardIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ERC20",
        name: "token_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount_",
        type: "uint256",
      },
    ],
    name: "RewardUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "ROLES",
    outputs: [
      {
        internalType: "contract ROLESv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "newKernel_",
        type: "address",
      },
    ],
    name: "changeKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "configureDependencies",
    outputs: [
      {
        internalType: "Keycode[]",
        name: "dependencies",
        type: "bytes5[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "frequency",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract Kernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBeat",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "contract IOperator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetBeat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward_",
        type: "uint256",
      },
    ],
    name: "setRewardTokenAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "withdrawUnspentRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001997380380620019978339810160408190526200003991620000a9565b600080546001600160a01b03199081166001600160a01b0396871617909155600880548216948616949094179093556003805460ff1916600117905542600455600680549093169190931617905560055562000103565b6001600160a01b0381168114620000a657600080fd5b50565b60008060008060808587031215620000c057600080fd5b8451620000cd8162000090565b6020860151909450620000e08162000090565b6040860151909350620000f38162000090565b6060959095015193969295505050565b61188480620001136000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80637a259dba116100cd578063d3a7b7d311610081578063ead50da311610066578063ead50da3146102b5578063ef68b87d146102bd578063f7c618c1146102c557600080fd5b8063d3a7b7d31461028c578063d4aae0c41461029557600080fd5b80639459b875116100b25780639459b875146102515780639ab7d7e714610266578063b3ab15fb1461027957600080fd5b80637a259dba14610229578063923cb9521461023157600080fd5b80634657b36c11610124578063570ca73511610109578063570ca735146101bc5780635924be7014610201578063633929901461021657600080fd5b80634657b36c146101a157806351b42b00146101b457600080fd5b806302fb0c5e146101565780630f15f4c014610178578063228cb7331461018257806322f3e2d414610199575b600080fd5b6003546101639060ff1681565b60405190151581526020015b60405180910390f35b6101806102e5565b005b61018b60055481565b60405190815260200161016f565b6101636103c6565b6101806101af366004611540565b61045e565b6101806104fd565b6008546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016f565b6102096105d2565b60405161016f9190611564565b6101806102243660046115f7565b610717565b610180610894565b6001546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b610259610b01565b60405161016f9190611623565b610180610274366004611540565b610ccb565b610180610287366004611540565b610e78565b61018b60045481565b6000546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b61018b610f6b565b61018061100c565b6006546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561037757600080fd5b505af115801561038b573d6000803e3d6000fd5b5050600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055506103c390506110ba565b50565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190611689565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104b6576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b5050600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055505050565b604080516001808252818301909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816105e9575050604080518082018083526007547f1ae7ec2e00000000000000000000000000000000000000000000000000000000909152915192935091829173ffffffffffffffffffffffffffffffffffffffff1690631ae7ec2e906044808501916020918187030181865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab91906116ab565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f86db7df00000000000000000000000000000000000000000000000000000000060209091015281518290600090610709576107096116ed565b602002602001018190525090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050506107c9610f6b565b6004546107d6919061174b565b421061080e576040517f2f36f8a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155600583905560408051918252602082018490527f401ccfec4c6c7ac3f3b71182750d0f8d73c0d29cc476732b0b21ab0d359da47f910160405180910390a1505050565b600254600114610900576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ad565b6002805560035460ff16610940576040517f9bf7f18000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610948610f6b565b600454610955919061174b565b42101561098e576040517f8c37770600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166386db7df06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109f857600080fd5b505af1158015610a0c573d6000803e3d6000fd5b50505050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637159a6186040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b50505050610a9a610f6b565b600454610aa79042611763565b610ab1919061177a565b610abb9042611763565b600455610ac7336110d1565b6040514281527fd5215e0661831421a9ebc79f9d2848dbfc61213cf6ae3c92b45e17ea50be19109060200160405180910390a16001600255565b60408051600280825260608083018452926020830190803683370190505090507f505249434500000000000000000000000000000000000000000000000000000081600081518110610b5557610b556116ed565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610bad7f524f4c455300000000000000000000000000000000000000000000000000000090565b81600181518110610bc057610bc06116ed565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610c2d81600081518110610c2057610c206116ed565b6020026020010151611280565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c8381600181518110610c2057610c206116ed565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b50505050610d7d610f6b565b600454610d8a919061174b565b4210610dc2576040517f2f36f8a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610e7490339073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5691906117b5565b73ffffffffffffffffffffffffffffffffffffffff851691906113ae565b5050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b5050600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9590951694909417909355505050565b600754604080517f7321f100000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691637321f1009160048083019260209291908290030181865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff91906117ce565b65ffffffffffff16905090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561109e57600080fd5b505af11580156110b2573d6000803e3d6000fd5b505050506103c35b6110c2610f6b565b6110cc9042611763565b600455565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116491906117b5565b6005541161117457600554611206565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120691906117b5565b60065490915061122d9073ffffffffffffffffffffffffffffffffffffffff1683836113ae565b6040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527ff9b6ec770c96c3a6f9225bf3a8463a8ad03e884448af07b4ecd4d19d628946ee910160405180910390a15050565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133591906117f6565b905073ffffffffffffffffffffffffffffffffffffffff81166113a8576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016104ad565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916114459190611813565b6000604051808303816000865af19150503d8060008114611482576040519150601f19603f3d011682016040523d82523d6000602084013e611487565b606091505b50915091508180156114b15750805115806114b15750808060200190518101906114b19190611689565b611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104ad565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103c357600080fd5b60006020828403121561155257600080fd5b813561155d8161151e565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156115ea57815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101611581565b5091979650505050505050565b6000806040838503121561160a57600080fd5b82356116158161151e565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561167d5783517fffffffffff000000000000000000000000000000000000000000000000000000168352928401929184019160010161163f565b50909695505050505050565b60006020828403121561169b57600080fd5b8151801515811461155d57600080fd5b6000602082840312156116bd57600080fd5b81517fffffffffff0000000000000000000000000000000000000000000000000000008116811461155d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561175e5761175e61171c565b500190565b6000828210156117755761177561171c565b500390565b6000826117b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b6000602082840312156117c757600080fd5b5051919050565b6000602082840312156117e057600080fd5b815165ffffffffffff8116811461155d57600080fd5b60006020828403121561180857600080fd5b815161155d8161151e565b6000825160005b81811015611834576020818601810151858301520161181a565b81811115611843576000828501525b50919091019291505056fea2646970667358221220bc759f00fdc336f3344153224afcbaba697c42cd6e1b07f11479d9146ede012e64736f6c634300080f0033";

type OlympusHeartConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: OlympusHeartConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class OlympusHeart__factory extends ContractFactory {
  constructor(...args: OlympusHeartConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kernel_: PromiseOrValue<string>,
    operator_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    reward_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<OlympusHeart> {
    return super.deploy(kernel_, operator_, rewardToken_, reward_, overrides || {}) as Promise<OlympusHeart>;
  }
  override getDeployTransaction(
    kernel_: PromiseOrValue<string>,
    operator_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    reward_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(kernel_, operator_, rewardToken_, reward_, overrides || {});
  }
  override attach(address: string): OlympusHeart {
    return super.attach(address) as OlympusHeart;
  }
  override connect(signer: Signer): OlympusHeart__factory {
    return super.connect(signer) as OlympusHeart__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OlympusHeartInterface {
    return new utils.Interface(_abi) as OlympusHeartInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OlympusHeart {
    return new Contract(address, _abi, signerOrProvider) as OlympusHeart;
  }
}
