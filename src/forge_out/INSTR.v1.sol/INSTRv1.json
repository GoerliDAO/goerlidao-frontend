{
  "abi": [
    {
      "inputs": [],
      "name": "INSTR_InstructionsCannotBeEmpty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INSTR_InvalidAction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "policy_",
          "type": "address"
        }
      ],
      "name": "Module_PolicyNotPermitted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "instructionsId",
          "type": "uint256"
        }
      ],
      "name": "InstructionsStored",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "KEYCODE",
      "outputs": [
        {
          "internalType": "Keycode",
          "name": "",
          "type": "bytes5"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "major",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "minor",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "instructionsId_",
          "type": "uint256"
        }
      ],
      "name": "getInstructions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Actions",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "internalType": "struct Instruction[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum Actions",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "internalType": "struct Instruction[]",
          "name": "instructions_",
          "type": "tuple[]"
        }
      ],
      "name": "store",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storedInstructions",
      "outputs": [
        {
          "internalType": "enum Actions",
          "name": "action",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalInstructions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "KEYCODE()": "1ae7ec2e",
    "VERSION()": "ffa1ad74",
    "changeKernel(address)": "4657b36c",
    "getInstructions(uint256)": "f19928c0",
    "kernel()": "d4aae0c4",
    "store((uint8,address)[])": "b1d85eec",
    "storedInstructions(uint256,uint256)": "8ba639a4",
    "totalInstructions()": "6eaadfc7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"INSTR_InstructionsCannotBeEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INSTR_InvalidAction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy_\",\"type\":\"address\"}],\"name\":\"Module_PolicyNotPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"instructionsId\",\"type\":\"uint256\"}],\"name\":\"InstructionsStored\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KEYCODE\",\"outputs\":[{\"internalType\":\"Keycode\",\"name\":\"\",\"type\":\"bytes5\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"major\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"minor\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"instructionsId_\",\"type\":\"uint256\"}],\"name\":\"getInstructions\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Actions\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"internalType\":\"struct Instruction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum Actions\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"internalType\":\"struct Instruction[]\",\"name\":\"instructions_\",\"type\":\"tuple[]\"}],\"name\":\"store\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"storedInstructions\",\"outputs\":[{\"internalType\":\"enum Actions\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInstructions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic.\"},\"VERSION()\":{\"returns\":{\"major\":\"- Major version upgrade indicates breaking change to the interface.\",\"minor\":\"- Minor version change retains backward-compatible interface.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"KEYCODE()\":{\"notice\":\"5 byte identifier for a module.\"},\"VERSION()\":{\"notice\":\"Returns which semantic version of a module is being implemented.\"},\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"},\"getInstructions(uint256)\":{\"notice\":\"View function for retrieving a list of Instructions in an outside contract.\"},\"store((uint8,address)[])\":{\"notice\":\"Store a list of Instructions to be executed in the future.\"},\"storedInstructions(uint256,uint256)\":{\"notice\":\"All stored instructions per count in totalInstructions\"},\"totalInstructions()\":{\"notice\":\"Counter of total instructions\"}},\"notice\":\"Caches and executes batched instructions for protocol upgrades in the Kernel.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/INSTR/INSTR.v1.sol\":\"INSTRv1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/modules/INSTR/INSTR.v1.sol\":{\"keccak256\":\"0xc929ce0db190ec074c64890d4e16b055c2a388599eee521f3ca0233dea5666d3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://56e080c61b2bd742cf64354c35149fdc4eed9286e072175e2290d77a9a2021ec\",\"dweb:/ipfs/QmbJ15oSJczHvciyPazaVFtYCjACWtGsDdRMf2v8YUcSiT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "INSTR_InstructionsCannotBeEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INSTR_InvalidAction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "policy_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module_PolicyNotPermitted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "instructionsId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InstructionsStored",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "KEYCODE",
          "outputs": [
            {
              "internalType": "Keycode",
              "name": "",
              "type": "bytes5"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "major",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "minor",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "instructionsId_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getInstructions",
          "outputs": [
            {
              "internalType": "struct Instruction[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum Actions",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Instruction[]",
              "name": "instructions_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum Actions",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "store",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "storedInstructions",
          "outputs": [
            {
              "internalType": "enum Actions",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalInstructions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic."
          },
          "VERSION()": {
            "returns": {
              "major": "- Major version upgrade indicates breaking change to the interface.",
              "minor": "- Minor version change retains backward-compatible interface."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": {
            "notice": "Initialization function for the module"
          },
          "KEYCODE()": {
            "notice": "5 byte identifier for a module."
          },
          "VERSION()": {
            "notice": "Returns which semantic version of a module is being implemented."
          },
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          },
          "getInstructions(uint256)": {
            "notice": "View function for retrieving a list of Instructions in an outside contract."
          },
          "store((uint8,address)[])": {
            "notice": "Store a list of Instructions to be executed in the future."
          },
          "storedInstructions(uint256,uint256)": {
            "notice": "All stored instructions per count in totalInstructions"
          },
          "totalInstructions()": {
            "notice": "Counter of total instructions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/INSTR/INSTR.v1.sol": "INSTRv1"
      },
      "libraries": {}
    },
    "sources": {
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/INSTR/INSTR.v1.sol": {
        "keccak256": "0xc929ce0db190ec074c64890d4e16b055c2a388599eee521f3ca0233dea5666d3",
        "urls": [
          "bzz-raw://56e080c61b2bd742cf64354c35149fdc4eed9286e072175e2290d77a9a2021ec",
          "dweb:/ipfs/QmbJ15oSJczHvciyPazaVFtYCjACWtGsDdRMf2v8YUcSiT"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/INSTR/INSTR.v1.sol",
    "id": 45990,
    "exportedSymbols": {
      "Actions": [
        30446
      ],
      "INSTRv1": [
        45989
      ],
      "Instruction": [
        30452
      ],
      "InvalidKeycode": [
        30469
      ],
      "Kernel": [
        31595
      ],
      "KernelAdapter": [
        30610
      ],
      "Keycode": [
        30460
      ],
      "Module": [
        30675
      ],
      "Permissions": [
        30458
      ],
      "Policy": [
        30757
      ],
      "TargetNotAContract": [
        30464
      ],
      "ensureContract": [
        30513
      ],
      "ensureValidKeycode": [
        30558
      ],
      "fromKeycode": [
        30497
      ],
      "toKeycode": [
        30483
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1083:80",
    "nodes": [
      {
        "id": 45946,
        "nodeType": "PragmaDirective",
        "src": "42:23:80",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 45947,
        "nodeType": "ImportDirective",
        "src": "67:24:80",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45990,
        "sourceUnit": 31596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45989,
        "nodeType": "ContractDefinition",
        "src": "183:941:80",
        "nodes": [
          {
            "id": 45954,
            "nodeType": "EventDefinition",
            "src": "264:49:80",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "786456549a8048fc360b44d675c164244436ef1e5048c3aecea4d160400fd001",
            "name": "InstructionsStored",
            "nameLocation": "270:18:80",
            "parameters": {
              "id": 45953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45952,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "instructionsId",
                  "nameLocation": "297:14:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45954,
                  "src": "289:22:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "288:24:80"
            }
          },
          {
            "id": 45956,
            "nodeType": "ErrorDefinition",
            "src": "358:40:80",
            "nodes": [],
            "errorSelector": "3f6c6e99",
            "name": "INSTR_InstructionsCannotBeEmpty",
            "nameLocation": "364:31:80",
            "parameters": {
              "id": 45955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:2:80"
            }
          },
          {
            "id": 45958,
            "nodeType": "ErrorDefinition",
            "src": "403:28:80",
            "nodes": [],
            "errorSelector": "515b07cd",
            "name": "INSTR_InvalidAction",
            "nameLocation": "409:19:80",
            "parameters": {
              "id": 45957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:2:80"
            }
          },
          {
            "id": 45961,
            "nodeType": "VariableDeclaration",
            "src": "521:32:80",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45959,
              "nodeType": "StructuredDocumentation",
              "src": "475:41:80",
              "text": "@notice Counter of total instructions"
            },
            "functionSelector": "6eaadfc7",
            "mutability": "mutable",
            "name": "totalInstructions",
            "nameLocation": "536:17:80",
            "scope": 45989,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45960,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "521:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45968,
            "nodeType": "VariableDeclaration",
            "src": "631:59:80",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45962,
              "nodeType": "StructuredDocumentation",
              "src": "560:66:80",
              "text": "@notice All stored instructions per count in totalInstructions"
            },
            "functionSelector": "8ba639a4",
            "mutability": "mutable",
            "name": "storedInstructions",
            "nameLocation": "672:18:80",
            "scope": 45989,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Instruction_$30452_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct Instruction[])"
            },
            "typeName": {
              "id": 45967,
              "keyType": {
                "id": 45963,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "639:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "631:33:80",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Instruction_$30452_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct Instruction[])"
              },
              "valueType": {
                "baseType": {
                  "id": 45965,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45964,
                    "name": "Instruction",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 30452,
                    "src": "650:11:80"
                  },
                  "referencedDeclaration": 30452,
                  "src": "650:11:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Instruction_$30452_storage_ptr",
                    "typeString": "struct Instruction"
                  }
                },
                "id": 45966,
                "nodeType": "ArrayTypeName",
                "src": "650:13:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Instruction_$30452_storage_$dyn_storage_ptr",
                  "typeString": "struct Instruction[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 45978,
            "nodeType": "FunctionDefinition",
            "src": "831:122:80",
            "nodes": [],
            "documentation": {
              "id": 45969,
              "nodeType": "StructuredDocumentation",
              "src": "739:87:80",
              "text": "@notice View function for retrieving a list of Instructions in an outside contract."
            },
            "functionSelector": "f19928c0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInstructions",
            "nameLocation": "840:15:80",
            "parameters": {
              "id": 45972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45971,
                  "mutability": "mutable",
                  "name": "instructionsId_",
                  "nameLocation": "864:15:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45978,
                  "src": "856:23:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "855:25:80"
            },
            "returnParameters": {
              "id": 45977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45978,
                  "src": "931:20:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Instruction_$30452_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Instruction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45974,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 45973,
                        "name": "Instruction",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 30452,
                        "src": "931:11:80"
                      },
                      "referencedDeclaration": 30452,
                      "src": "931:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Instruction_$30452_storage_ptr",
                        "typeString": "struct Instruction"
                      }
                    },
                    "id": 45975,
                    "nodeType": "ArrayTypeName",
                    "src": "931:13:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Instruction_$30452_storage_$dyn_storage_ptr",
                      "typeString": "struct Instruction[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "930:22:80"
            },
            "scope": 45989,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 45988,
            "nodeType": "FunctionDefinition",
            "src": "1034:88:80",
            "nodes": [],
            "documentation": {
              "id": 45979,
              "nodeType": "StructuredDocumentation",
              "src": "959:70:80",
              "text": "@notice Store a list of Instructions to be executed in the future."
            },
            "functionSelector": "b1d85eec",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "store",
            "nameLocation": "1043:5:80",
            "parameters": {
              "id": 45984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45983,
                  "mutability": "mutable",
                  "name": "instructions_",
                  "nameLocation": "1072:13:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45988,
                  "src": "1049:36:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Instruction_$30452_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Instruction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45981,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 45980,
                        "name": "Instruction",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 30452,
                        "src": "1049:11:80"
                      },
                      "referencedDeclaration": 30452,
                      "src": "1049:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Instruction_$30452_storage_ptr",
                        "typeString": "struct Instruction"
                      }
                    },
                    "id": 45982,
                    "nodeType": "ArrayTypeName",
                    "src": "1049:13:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Instruction_$30452_storage_$dyn_storage_ptr",
                      "typeString": "struct Instruction[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1048:38:80"
            },
            "returnParameters": {
              "id": 45987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45988,
                  "src": "1113:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1112:9:80"
            },
            "scope": 45989,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 45949,
              "name": "Module",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30675,
              "src": "212:6:80"
            },
            "id": 45950,
            "nodeType": "InheritanceSpecifier",
            "src": "212:6:80"
          }
        ],
        "canonicalName": "INSTRv1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 45948,
          "nodeType": "StructuredDocumentation",
          "src": "93:90:80",
          "text": "@notice Caches and executes batched instructions for protocol upgrades in the Kernel."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          45989,
          30675,
          30610
        ],
        "name": "INSTRv1",
        "nameLocation": "201:7:80",
        "scope": 45990,
        "usedErrors": [
          30563,
          30617,
          45956,
          45958
        ]
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 80
}