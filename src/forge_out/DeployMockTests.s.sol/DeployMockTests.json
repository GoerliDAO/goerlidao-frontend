{
  "abi": [
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "run",
      "outputs": [
        {
          "internalType": "contract MockPolicy",
          "name": "test_mocks",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b50610c788061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633a76846314610046578063c040622614610077578063f8ccbf471461007f575b600080fd5b610061737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b60405161006e9190610378565b60405180910390f35b61006161009c565b60005461008c9060ff1681565b604051901515815260200161006e565b6040516360f9bb1160e01b81526020600482015260076024820152660b9cd958dc995d60ca1b60448201526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb11906064016000604051808303816000875af115801561010a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261013291908101906103d2565b604051636229498b60e01b8152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636229498b90610171908590859060040161047e565b6020604051808303816000875af1158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b491906104bf565b60405163ce817d4760e01b815260048101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ce817d4790602401600060405180830381600087803b15801561020457600080fd5b505af1158015610218573d6000803e3d6000fd5b505060405163350d56bf60e01b815260206004820152600660248201526512d15493915360d21b604482015260009250737109709ecfa91a80626ff3989d68f67f5b1dd12d915063350d56bf906064016020604051808303816000875af1158015610287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ab91906104d8565b90506000819050806040516102bf9061036b565b6102c99190610378565b604051809103906000f0801580156102e5573d6000803e3d6000fd5b5094507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b505050505050505090565b61073a8061050983390190565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103bd5781810151838201526020016103a5565b838111156103cc576000848401525b50505050565b6000602082840312156103e457600080fd5b81516001600160401b03808211156103fb57600080fd5b818401915084601f83011261040f57600080fd5b8151818111156104215761042161038c565b604051601f8201601f19908116603f011681019083821181831017156104495761044961038c565b8160405282815287602084870101111561046257600080fd5b6104738360208301602088016103a2565b979650505050505050565b604081526000835180604084015261049d8160608501602088016103a2565b63ffffffff93909316602083015250601f91909101601f191601606001919050565b6000602082840312156104d157600080fd5b5051919050565b6000602082840312156104ea57600080fd5b81516001600160a01b038116811461050157600080fd5b939250505056fe608060405234801561001057600080fd5b5060405161073a38038061073a83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106a7806100936000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c8063098da0731461007d57806322f3e2d414610087578063340bd7fd146100a45780634657b36c146100ac5780635924be70146100bf5780639459b875146100d4578063d4aae0c4146100e9578063fd37d96314610109575b600080fd5b61008561011c565b005b61008f610186565b60405190151581526020015b60405180910390f35b6100856101fd565b6100856100ba3660046104f4565b61024d565b6100c76102a5565b60405161009b9190610518565b6100dc610393565b60405161009b919061057b565b6000546100fc906001600160a01b031681565b60405161009b91906105c9565b6001546100fc906001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b031663a7167caf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b50505050565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb906101b79030906004016105c9565b602060405180830381865afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f891906105dd565b905090565b600160009054906101000a90046001600160a01b03166001600160a01b031663382b325f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561016c57600080fd5b6000546001600160a01b03163314610283573360405163053e900f60e21b815260040161027a91906105c9565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001808252818301909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816102bc57505060408051808201808352600154630d73f61760e11b90915291519293509182916001600160a01b031690631ae7ec2e906044808501916020918187030181865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035891906105ff565b6001600160d81b031916815263a7167caf60e01b6020909101528151829060009061038557610385610629565b602002602001018190525090565b60408051600180825281830190925260609160208083019080368337019050509050644d4f434b5960d81b816000815181106103d1576103d1610629565b60200260200101906001600160d81b03191690816001600160d81b031916815250506104168160008151811061040957610409610629565b6020026020010151610439565b600180546001600160a01b0319166001600160a01b039290921691909117905590565b60008054604051632d37002d60e21b815282916001600160a01b03169063b4dc00b49061046a90869060040161063f565b602060405180830381865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab9190610654565b90506001600160a01b0381166104d65782604051635c3fa9cd60e01b815260040161027a919061063f565b92915050565b6001600160a01b03811681146104f157600080fd5b50565b60006020828403121561050657600080fd5b8135610511816104dc565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561056e57815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101610535565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105bd5783516001600160d81b03191683529284019291840191600101610597565b50909695505050505050565b6001600160a01b0391909116815260200190565b6000602082840312156105ef57600080fd5b8151801515811461051157600080fd5b60006020828403121561061157600080fd5b81516001600160d81b03198116811461051157600080fd5b634e487b7160e01b600052603260045260246000fd5b6001600160d81b031991909116815260200190565b60006020828403121561066657600080fd5b8151610511816104dc56fea26469706673582212202a2f7aaf66685c6ac5d822fca9979b6cb11dcb308e21d36a7d3f302614e2879664736f6c634300080f0033a264697066735822122040cd0b06a723e081bcb3e5a1fa2750712592e228e92487b1ad27a85a10d7386464736f6c634300080f0033",
    "sourceMap": "258:535:31:-:0;;;170:28:0;;;-1:-1:-1;;170:28:0;194:4;170:28;;;258:535:31;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633a76846314610046578063c040622614610077578063f8ccbf471461007f575b600080fd5b610061737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b60405161006e9190610378565b60405180910390f35b61006161009c565b60005461008c9060ff1681565b604051901515815260200161006e565b6040516360f9bb1160e01b81526020600482015260076024820152660b9cd958dc995d60ca1b60448201526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb11906064016000604051808303816000875af115801561010a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261013291908101906103d2565b604051636229498b60e01b8152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636229498b90610171908590859060040161047e565b6020604051808303816000875af1158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b491906104bf565b60405163ce817d4760e01b815260048101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ce817d4790602401600060405180830381600087803b15801561020457600080fd5b505af1158015610218573d6000803e3d6000fd5b505060405163350d56bf60e01b815260206004820152600660248201526512d15493915360d21b604482015260009250737109709ecfa91a80626ff3989d68f67f5b1dd12d915063350d56bf906064016020604051808303816000875af1158015610287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ab91906104d8565b90506000819050806040516102bf9061036b565b6102c99190610378565b604051809103906000f0801580156102e5573d6000803e3d6000fd5b5094507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b505050505050505090565b61073a8061050983390190565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103bd5781810151838201526020016103a5565b838111156103cc576000848401525b50505050565b6000602082840312156103e457600080fd5b81516001600160401b03808211156103fb57600080fd5b818401915084601f83011261040f57600080fd5b8151818111156104215761042161038c565b604051601f8201601f19908116603f011681019083821181831017156104495761044961038c565b8160405282815287602084870101111561046257600080fd5b6104738360208301602088016103a2565b979650505050505050565b604081526000835180604084015261049d8160608501602088016103a2565b63ffffffff93909316602083015250601f91909101601f191601606001919050565b6000602082840312156104d157600080fd5b5051919050565b6000602082840312156104ea57600080fd5b81516001600160a01b038116811461050157600080fd5b939250505056fe608060405234801561001057600080fd5b5060405161073a38038061073a83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106a7806100936000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c8063098da0731461007d57806322f3e2d414610087578063340bd7fd146100a45780634657b36c146100ac5780635924be70146100bf5780639459b875146100d4578063d4aae0c4146100e9578063fd37d96314610109575b600080fd5b61008561011c565b005b61008f610186565b60405190151581526020015b60405180910390f35b6100856101fd565b6100856100ba3660046104f4565b61024d565b6100c76102a5565b60405161009b9190610518565b6100dc610393565b60405161009b919061057b565b6000546100fc906001600160a01b031681565b60405161009b91906105c9565b6001546100fc906001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b031663a7167caf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b50505050565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb906101b79030906004016105c9565b602060405180830381865afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f891906105dd565b905090565b600160009054906101000a90046001600160a01b03166001600160a01b031663382b325f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561016c57600080fd5b6000546001600160a01b03163314610283573360405163053e900f60e21b815260040161027a91906105c9565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001808252818301909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816102bc57505060408051808201808352600154630d73f61760e11b90915291519293509182916001600160a01b031690631ae7ec2e906044808501916020918187030181865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035891906105ff565b6001600160d81b031916815263a7167caf60e01b6020909101528151829060009061038557610385610629565b602002602001018190525090565b60408051600180825281830190925260609160208083019080368337019050509050644d4f434b5960d81b816000815181106103d1576103d1610629565b60200260200101906001600160d81b03191690816001600160d81b031916815250506104168160008151811061040957610409610629565b6020026020010151610439565b600180546001600160a01b0319166001600160a01b039290921691909117905590565b60008054604051632d37002d60e21b815282916001600160a01b03169063b4dc00b49061046a90869060040161063f565b602060405180830381865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab9190610654565b90506001600160a01b0381166104d65782604051635c3fa9cd60e01b815260040161027a919061063f565b92915050565b6001600160a01b03811681146104f157600080fd5b50565b60006020828403121561050657600080fd5b8135610511816104dc565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561056e57815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101610535565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105bd5783516001600160d81b03191683529284019291840191600101610597565b50909695505050505050565b6001600160a01b0391909116815260200190565b6000602082840312156105ef57600080fd5b8151801515811461051157600080fd5b60006020828403121561061157600080fd5b81516001600160d81b03198116811461051157600080fd5b634e487b7160e01b600052603260045260246000fd5b6001600160d81b031991909116815260200190565b60006020828403121561066657600080fd5b8151610511816104dc56fea26469706673582212202a2f7aaf66685c6ac5d822fca9979b6cb11dcb308e21d36a7d3f302614e2879664736f6c634300080f0033a264697066735822122040cd0b06a723e081bcb3e5a1fa2750712592e228e92487b1ad27a85a10d7386464736f6c634300080f0033",
    "sourceMap": "258:535:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:38:0;;250:64;321:38;;;;;;;;;:::i;:::-;;;;;;;;390:400:31;;;:::i;170:28:0:-;;;;;;;;;;;;626:14:92;;619:22;601:41;;589:2;574:18;170:28:0;461:187:92;390:400:31;480:22;;-1:-1:-1;;;480:22:31;;855:2:92;480:22:31;;;837:21:92;894:1;874:18;;;867:29;-1:-1:-1;;;912:18:92;;;905:37;423:21:31;;;;250:64:0;;480:11:31;;959:18:92;;480:22:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:22:31;;;;;;;;;;;;:::i;:::-;530:27;;-1:-1:-1;;;530:27:31;;453:49;;-1:-1:-1;509:18:31;;250:64:0;;530:12:31;;:27;;453:49;;509:18;;530:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;564:29;;-1:-1:-1;;;564:29:31;;;;;3094:25:92;;;509:48:31;;-1:-1:-1;250:64:0;;564:17:31;;3067:18:92;;564:29:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;622:23:31;;-1:-1:-1;;;622:23:31;;3332:2:92;622:23:31;;;3314:21:92;3371:1;3351:18;;;3344:29;-1:-1:-1;;;3389:18:92;;;3382:36;600:19:31;;-1:-1:-1;250:64:0;;-1:-1:-1;622:13:31;;3435:18:92;;622:23:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;600:45;;654:13;677:11;654:35;;726:6;711:22;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;698:35;;282:28:0;274:37;;258:55;;250:64;;-1:-1:-1;;;;;742:16:31;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:17;;;;390:400;:::o;-1:-1:-1:-;;;;;;;;:::o;14:214:92:-;-1:-1:-1;;;;;189:32:92;;;;171:51;;159:2;144:18;;14:214::o;988:127::-;1049:10;1044:3;1040:20;1037:1;1030:31;1080:4;1077:1;1070:15;1104:4;1101:1;1094:15;1120:258;1192:1;1202:113;1216:6;1213:1;1210:13;1202:113;;;1292:11;;;1286:18;1273:11;;;1266:39;1238:2;1231:10;1202:113;;;1333:6;1330:1;1327:13;1324:48;;;1368:1;1359:6;1354:3;1350:16;1343:27;1324:48;;1120:258;;;:::o;1383:884::-;1463:6;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;1559:16;;-1:-1:-1;;;;;1624:14:92;;;1621:34;;;1651:1;1648;1641:12;1621:34;1689:6;1678:9;1674:22;1664:32;;1734:7;1727:4;1723:2;1719:13;1715:27;1705:55;;1756:1;1753;1746:12;1705:55;1785:2;1779:9;1807:2;1803;1800:10;1797:36;;;1813:18;;:::i;:::-;1888:2;1882:9;1856:2;1942:13;;-1:-1:-1;;1938:22:92;;;1962:2;1934:31;1930:40;1918:53;;;1986:18;;;2006:22;;;1983:46;1980:72;;;2032:18;;:::i;:::-;2072:10;2068:2;2061:22;2107:2;2099:6;2092:18;2147:7;2142:2;2137;2133;2129:11;2125:20;2122:33;2119:53;;;2168:1;2165;2158:12;2119:53;2181:55;2233:2;2228;2220:6;2216:15;2211:2;2207;2203:11;2181:55;:::i;:::-;2255:6;1383:884;-1:-1:-1;;;;;;;1383:884:92:o;2272:482::-;2456:2;2445:9;2438:21;2419:4;2488:6;2482:13;2531:6;2526:2;2515:9;2511:18;2504:34;2547:68;2608:6;2603:2;2592:9;2588:18;2581:4;2573:6;2569:17;2547:68;:::i;:::-;2736:10;2724:23;;;;2717:4;2702:20;;2695:53;-1:-1:-1;2676:2:92;2655:15;;;;-1:-1:-1;;2651:29:92;2636:45;2683:2;2632:54;;2272:482;-1:-1:-1;2272:482:92:o;2759:184::-;2829:6;2882:2;2870:9;2861:7;2857:23;2853:32;2850:52;;;2898:1;2895;2888:12;2850:52;-1:-1:-1;2921:16:92;;2759:184;-1:-1:-1;2759:184:92:o;3464:290::-;3534:6;3587:2;3575:9;3566:7;3562:23;3558:32;3555:52;;;3603:1;3600;3593:12;3555:52;3629:16;;-1:-1:-1;;;;;3674:31:92;;3664:42;;3654:70;;3720:1;3717;3710:12;3654:70;3743:5;3464:290;-1:-1:-1;;;3464:290:92:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "run()": "c0406226",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[{\"internalType\":\"contract MockPolicy\",\"name\":\"test_mocks\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"run()\":{\"returns\":{\"test_mocks\":\"The deployed contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"run()\":{\"notice\":\"The main script entrypoint\"}},\"notice\":\"A very simple deployment script\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/mocks/DeployMockTests.s.sol\":\"DeployMockTests\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"script/mocks/DeployMockTests.s.sol\":{\"keccak256\":\"0xfae90eabf6dcaa359124c5e8b90054b96feceec2fcc4f84bcf051320dcd21c66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5980a6ce2cf36dc7693cc5ee64d4a5fb7ac375811a4fecdafac6f1163f93488f\",\"dweb:/ipfs/QmZqQebhT7i6J2vPLDi4eE2uqSxFSpUdxfcsYrrK238uu6\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/test/mocks/KernelTestMocks.sol\":{\"keccak256\":\"0xf159a82dbc28b7222c1e91c833b2568a299aad573b1bcf6d2fc9eabfe96628bb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e499fe04f91d5a297fc671d635853482994873ea31b240879305f8577d0b3e9f\",\"dweb:/ipfs/QmPNgqF98iVHsv1gGBLAXL9TCnvC1gRb7BTytkfaNNmgrP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "run",
          "outputs": [
            {
              "internalType": "contract MockPolicy",
              "name": "test_mocks",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "run()": {
            "returns": {
              "test_mocks": "The deployed contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "run()": {
            "notice": "The main script entrypoint"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "script/mocks/DeployMockTests.s.sol": "DeployMockTests"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "script/mocks/DeployMockTests.s.sol": {
        "keccak256": "0xfae90eabf6dcaa359124c5e8b90054b96feceec2fcc4f84bcf051320dcd21c66",
        "urls": [
          "bzz-raw://5980a6ce2cf36dc7693cc5ee64d4a5fb7ac375811a4fecdafac6f1163f93488f",
          "dweb:/ipfs/QmZqQebhT7i6J2vPLDi4eE2uqSxFSpUdxfcsYrrK238uu6"
        ],
        "license": "MIT"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/mocks/KernelTestMocks.sol": {
        "keccak256": "0xf159a82dbc28b7222c1e91c833b2568a299aad573b1bcf6d2fc9eabfe96628bb",
        "urls": [
          "bzz-raw://e499fe04f91d5a297fc671d635853482994873ea31b240879305f8577d0b3e9f",
          "dweb:/ipfs/QmPNgqF98iVHsv1gGBLAXL9TCnvC1gRb7BTytkfaNNmgrP"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "script/mocks/DeployMockTests.s.sol",
    "id": 21954,
    "exportedSymbols": {
      "DeployMockTests": [
        21953
      ],
      "Kernel": [
        24053
      ],
      "MockPolicy": [
        39041
      ],
      "Script": [
        262
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:821:31",
    "nodes": [
      {
        "id": 21885,
        "nodeType": "PragmaDirective",
        "src": "33:24:31",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 21887,
        "nodeType": "ImportDirective",
        "src": "61:44:31",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Script.sol",
        "file": "forge-std/Script.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21954,
        "sourceUnit": 263,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21886,
              "name": "Script",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 262,
              "src": "69:6:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21889,
        "nodeType": "ImportDirective",
        "src": "107:38:31",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21954,
        "sourceUnit": 24054,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21888,
              "name": "Kernel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24053,
              "src": "115:6:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21891,
        "nodeType": "ImportDirective",
        "src": "147:62:31",
        "nodes": [],
        "absolutePath": "src/test/mocks/KernelTestMocks.sol",
        "file": "src/test/mocks/KernelTestMocks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21954,
        "sourceUnit": 39208,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21890,
              "name": "MockPolicy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39041,
              "src": "155:10:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21953,
        "nodeType": "ContractDefinition",
        "src": "258:535:31",
        "nodes": [
          {
            "id": 21952,
            "nodeType": "FunctionDefinition",
            "src": "390:400:31",
            "nodes": [],
            "body": {
              "id": 21951,
              "nodeType": "Block",
              "src": "446:344:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    21902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21902,
                      "mutability": "mutable",
                      "name": "seedPhrase",
                      "nameLocation": "467:10:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 21951,
                      "src": "453:24:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 21901,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "453:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21907,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "2e736563726574",
                        "id": 21905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "492:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60652ec886bd21cd7f60cd8555622756bb259d42cc61f4b9675315bcf645aa31",
                          "typeString": "literal_string \".secret\""
                        },
                        "value": ".secret"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_60652ec886bd21cd7f60cd8555622756bb259d42cc61f4b9675315bcf645aa31",
                          "typeString": "literal_string \".secret\""
                        }
                      ],
                      "expression": {
                        "id": 21903,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "480:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1334",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "readFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1033,
                      "src": "480:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) external returns (string memory)"
                      }
                    },
                    "id": 21906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "453:49:31"
                },
                {
                  "assignments": [
                    21909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21909,
                      "mutability": "mutable",
                      "name": "privateKey",
                      "nameLocation": "517:10:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 21951,
                      "src": "509:18:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21908,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "509:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21915,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 21912,
                        "name": "seedPhrase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21902,
                        "src": "543:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 21913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "555:1:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 21910,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "530:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1334",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deriveKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1299,
                      "src": "530:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint32) external returns (uint256)"
                      }
                    },
                    "id": 21914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:27:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "509:48:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21919,
                        "name": "privateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21909,
                        "src": "582:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21916,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "564:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1334",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startBroadcast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1023,
                      "src": "564:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 21920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:29:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21921,
                  "nodeType": "ExpressionStatement",
                  "src": "564:29:31"
                },
                {
                  "assignments": [
                    21923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21923,
                      "mutability": "mutable",
                      "name": "kernel_addr",
                      "nameLocation": "608:11:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 21951,
                      "src": "600:19:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21922,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "600:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21928,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4b45524e454c",
                        "id": 21926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "636:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f83c34b78334a63f14aa80e8651208006bc21cf46f8d179770fb7fba66f130e3",
                          "typeString": "literal_string \"KERNEL\""
                        },
                        "value": "KERNEL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f83c34b78334a63f14aa80e8651208006bc21cf46f8d179770fb7fba66f130e3",
                          "typeString": "literal_string \"KERNEL\""
                        }
                      ],
                      "expression": {
                        "id": 21924,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "622:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1334",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "envAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 751,
                      "src": "622:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) external returns (address)"
                      }
                    },
                    "id": 21927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "600:45:31"
                },
                {
                  "assignments": [
                    21931
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21931,
                      "mutability": "mutable",
                      "name": "kernel",
                      "nameLocation": "661:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 21951,
                      "src": "654:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Kernel_$24053",
                        "typeString": "contract Kernel"
                      },
                      "typeName": {
                        "id": 21930,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 21929,
                          "name": "Kernel",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24053,
                          "src": "654:6:31"
                        },
                        "referencedDeclaration": 24053,
                        "src": "654:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$24053",
                          "typeString": "contract Kernel"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21935,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 21933,
                        "name": "kernel_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21923,
                        "src": "677:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21932,
                      "name": "Kernel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24053,
                      "src": "670:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Kernel_$24053_$",
                        "typeString": "type(contract Kernel)"
                      }
                    },
                    "id": 21934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:19:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$24053",
                      "typeString": "contract Kernel"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "654:35:31"
                },
                {
                  "expression": {
                    "id": 21942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21936,
                      "name": "test_mocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21899,
                      "src": "698:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockPolicy_$39041",
                        "typeString": "contract MockPolicy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21940,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21931,
                          "src": "726:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$24053",
                            "typeString": "contract Kernel"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Kernel_$24053",
                            "typeString": "contract Kernel"
                          }
                        ],
                        "id": 21939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "711:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$24053_$returns$_t_contract$_MockPolicy_$39041_$",
                          "typeString": "function (contract Kernel) returns (contract MockPolicy)"
                        },
                        "typeName": {
                          "id": 21938,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21937,
                            "name": "MockPolicy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39041,
                            "src": "715:10:31"
                          },
                          "referencedDeclaration": 39041,
                          "src": "715:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPolicy_$39041",
                            "typeString": "contract MockPolicy"
                          }
                        }
                      },
                      "id": 21941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "711:22:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockPolicy_$39041",
                        "typeString": "contract MockPolicy"
                      }
                    },
                    "src": "698:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockPolicy_$39041",
                      "typeString": "contract MockPolicy"
                    }
                  },
                  "id": 21943,
                  "nodeType": "ExpressionStatement",
                  "src": "698:35:31"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21944,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "742:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1334",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopBroadcast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1026,
                      "src": "742:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:18:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21948,
                  "nodeType": "ExpressionStatement",
                  "src": "742:18:31"
                },
                {
                  "expression": {
                    "id": 21949,
                    "name": "test_mocks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21899,
                    "src": "774:10:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockPolicy_$39041",
                      "typeString": "contract MockPolicy"
                    }
                  },
                  "functionReturnParameters": 21900,
                  "id": 21950,
                  "nodeType": "Return",
                  "src": "767:17:31"
                }
              ]
            },
            "documentation": {
              "id": 21895,
              "nodeType": "StructuredDocumentation",
              "src": "300:86:31",
              "text": "@notice The main script entrypoint\n @return test_mocks The deployed contract"
            },
            "functionSelector": "c0406226",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "run",
            "nameLocation": "399:3:31",
            "parameters": {
              "id": 21896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:2:31"
            },
            "returnParameters": {
              "id": 21900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21899,
                  "mutability": "mutable",
                  "name": "test_mocks",
                  "nameLocation": "434:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 21952,
                  "src": "423:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockPolicy_$39041",
                    "typeString": "contract MockPolicy"
                  },
                  "typeName": {
                    "id": 21898,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 21897,
                      "name": "MockPolicy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39041,
                      "src": "423:10:31"
                    },
                    "referencedDeclaration": 39041,
                    "src": "423:10:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockPolicy_$39041",
                      "typeString": "contract MockPolicy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "422:23:31"
            },
            "scope": 21953,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21893,
              "name": "Script",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 262,
              "src": "286:6:31"
            },
            "id": 21894,
            "nodeType": "InheritanceSpecifier",
            "src": "286:6:31"
          }
        ],
        "canonicalName": "DeployMockTests",
        "contractDependencies": [
          39041
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 21892,
          "nodeType": "StructuredDocumentation",
          "src": "213:45:31",
          "text": "@notice A very simple deployment script"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21953,
          262
        ],
        "name": "DeployMockTests",
        "nameLocation": "267:15:31",
        "scope": 21954,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 31
}