{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "testCorrectnes_setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_activate_deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_beat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfInactive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfTooEarly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_resetBeat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setRewardTokenAndAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_viewFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_withdrawUnspentRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfOperateReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfPriceReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1395:11870:156:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;1395:11870:156;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1395:11870:156:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136;;;:::i;:::-;;6704:388;;;:::i;12595:668::-;;;:::i;9600:1809::-;;;:::i;321:38:1:-;;-1:-1:-1;;;;;;;;;;;321:38:1;;;;;;;;;:::i;:::-;;;;;;;;9289:305:156;;;;;;:::i;:::-;;:::i;8531:752::-;;;:::i;5578:731::-;;;:::i;4914:334::-;;;:::i;7167:246::-;;;:::i;5254:318::-;;;:::i;4286:622::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;786:14:168;;779:22;761:41;;749:2;734:18;1819:584:0;621:187:168;1461:30:156;;;;;-1:-1:-1;;;;;1461:30:156;;;6315:383;;;:::i;7693:832::-;;;:::i;11415:1174::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;1818:2136:156;1852:32;;-1:-1:-1;;;1852:32:156;;1860:23;1852:32;;;1205:25:168;-1:-1:-1;;;;;;;;;;;250:64:1;1852:7:156;;1178:18:168;;1852:32:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1962:11:156;:31;;-1:-1:-1;;;;;;1962:31:156;-1:-1:-1;;;;;1962:31:156;;;;;;;;;2042:21;;-1:-1:-1;;;2042:21:156;;2061:1;2042:21;;;1205:25:168;-1:-1:-1;;1962:31:156;2042:18;;1178::168;;2042:21:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2042:21:156;;;;;;;;;;;;:::i;:::-;2017:46;;2085:5;2091:1;2085:8;;;;;;;;:::i;:::-;;;;;;;2077:5;;:16;;;;;-1:-1:-1;;;;;2077:16:156;;;;;-1:-1:-1;;;;;2077:16:156;;;;;;2113:5;2119:1;2113:8;;;;;;;;:::i;:::-;;;;;;;2107:3;;:14;;;;;-1:-1:-1;;;;;2107:14:156;;;;;-1:-1:-1;;;;;2107:14:156;;;;;;2144:5;2150:1;2144:8;;;;;;;;:::i;:::-;;;;;;;2135:6;;:17;;;;;-1:-1:-1;;;;;2135:17:156;;;;;-1:-1:-1;;;;;2135:17:156;;;;;;2003:160;2272:2;2235:40;;;;;:::i;:::-;3310:2:168;3292:21;;;3349:2;3329:18;;;3322:30;-1:-1:-1;;;3383:3:168;3368:19;;3361:43;3442:3;3435:4;3420:20;;3413:33;;;3483:1;3462:19;;;3455:30;-1:-1:-1;;;3516:3:168;3501:19;;3494:34;3612:4;3600:17;;;-1:-1:-1;3580:18:168;;3573:45;3560:3;3545:19;2235:40:156;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2221:11:156;:54;;-1:-1:-1;;;;;;2221:54:156;-1:-1:-1;;;;;2221:54:156;;;;;;;;;;2349:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2340:6:156;:21;;-1:-1:-1;;;;;;2340:21:156;-1:-1:-1;;;;;2340:21:156;;;;;;;;;2466:49;;2495:7;;2505:9;;2466:49;;;:::i;:::-;-1:-1:-1;;;;;3890:32:168;;;3872:51;;3971:14;3959:27;;;3954:2;3939:18;;3932:55;4018:2;4003:18;;3996:34;3860:2;3845:18;2466:49:156;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2458:5:156;:57;;-1:-1:-1;;;;;;2458:57:156;-1:-1:-1;;;;;2458:57:156;;;;;;2556:6;;2537:26;;2556:6;;;2537:26;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2529:5:156;:34;;-1:-1:-1;;;;;;2529:34:156;-1:-1:-1;;;;;2529:34:156;;;;;;2610:5;;:34;;-1:-1:-1;;;2610:34:156;;2633:10;2610:34;;;1205:25:168;2610:5:156;;;:22;;1178:18:168;;2610:34:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2658:5:156;;:30;;-1:-1:-1;;;2658:30:156;;2677:10;2658:30;;;1205:25:168;-1:-1:-1;;;;;2658:5:156;;;;-1:-1:-1;2658:18:156;;-1:-1:-1;1178:18:168;;2658:30:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2702:5:156;;:33;;-1:-1:-1;;;2702:33:156;;2724:10;2702:33;;;1205:25:168;-1:-1:-1;;;;;2702:5:156;;;;-1:-1:-1;2702:21:156;;-1:-1:-1;1178:18:168;;2702:33:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2749:5:156;;:21;;-1:-1:-1;;;2749:21:156;;2767:2;2749:21;;;4628:36:168;-1:-1:-1;;;;;2749:5:156;;;;-1:-1:-1;2749:17:156;;-1:-1:-1;4601:18:168;;2749:21:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2870:6:156;;2853:24;;-1:-1:-1;;;;;2870:6:156;;;;-1:-1:-1;2853:24:156;;-1:-1:-1;2853:24:156;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2842:8:156;:35;;-1:-1:-1;;;;;;2842:35:156;-1:-1:-1;;;;;2842:35:156;;;;;;;;;2963:6;;3033:11;;2929:179;;2963:6;;;;3033:11;;3070:4;;2929:179;;;:::i;:::-;-1:-1:-1;;;;;5016:15:168;;;4998:34;;5068:15;;;5063:2;5048:18;;5041:43;5120:15;;5115:2;5100:18;;5093:43;5167:2;5152:18;;5145:34;;;;4947:3;4932:19;2929:179:156;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2921:5:156;:187;;-1:-1:-1;;;;;;2921:187:156;-1:-1:-1;;;;;2921:187:156;;;;;;3151:6;;3136:22;;3151:6;;;3136:22;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3123:10:156;:35;;-1:-1:-1;;;;;;3123:35:156;-1:-1:-1;;;;;3123:35:156;;;;;;3271:6;;3323:5;;3271:59;;-1:-1:-1;;;3271:59:156;;:6;;;;:20;;:59;;-1:-1:-1;;3323:5:156;;3271:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3344:6:156;;3396:5;;3344:59;;-1:-1:-1;;;3344:59:156;;-1:-1:-1;;;;;3344:6:156;;;;-1:-1:-1;3344:20:156;;-1:-1:-1;3344:59:156;;:6;;3396:5;;3344:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3451:6:156;;3504:8;;3451:63;;-1:-1:-1;;;3451:63:156;;-1:-1:-1;;;;;3451:6:156;;;;-1:-1:-1;3451:20:156;;-1:-1:-1;3451:63:156;;3472:22;;3504:8;;3451:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3528:6:156;;3581:5;;3528:60;;-1:-1:-1;;;3528:60:156;;-1:-1:-1;;;;;3528:6:156;;;;-1:-1:-1;3528:20:156;;-1:-1:-1;3528:60:156;;3549:22;;3581:5;;3528:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3602:6:156;;3655:10;;3602:65;;-1:-1:-1;;;3602:65:156;;-1:-1:-1;;;;;3602:6:156;;;;-1:-1:-1;3602:20:156;;-1:-1:-1;3602:65:156;;3623:22;;3655:10;;3602:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3752:10:156;;3788:6;;3752:43;;-1:-1:-1;;;3752:43:156;;-1:-1:-1;;;3752:43:156;;;5870:32:168;-1:-1:-1;;;;;3788:6:156;;;5918:18:168;;;5911:60;3752:10:156;;;-1:-1:-1;3752:20:156;;-1:-1:-1;5843:18:168;;3752:43:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3883:11:156;;3908:5;;3883:54;;-1:-1:-1;;;3883:54:156;;-1:-1:-1;;;;;3883:11:156;;;;-1:-1:-1;3883:16:156;;-1:-1:-1;3883:54:156;;3908:5;;;;3924:11;;3883:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136::o;6704:388::-;6864:5;;:17;;;-1:-1:-1;;;6864:17:156;;;;6844;;-1:-1:-1;;;;;6864:5:156;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6844:37;-1:-1:-1;;;;;;;;;;;;6891:7:156;6899:27;6844:37;6899:15;:27;:::i;:::-;6891:36;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;6891:36:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6985:8:156;;:25;;-1:-1:-1;;;6985:25:156;;:8;:25;;;761:41:168;-1:-1:-1;;;;;6985:8:156;;;;-1:-1:-1;6985:18:156;;-1:-1:-1;734:18:168;;6985:25:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7073:5;;;;;;;;;-1:-1:-1;;;;;7073:5:156;-1:-1:-1;;;;;7073:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6757:335;6704:388::o;12595:668::-;12786:116;;;-1:-1:-1;;;12786:116:156;;;;1205:25:168;;;;12786:116:156;;;;;;;;;;1178:18:168;;;;12786:116:156;;;;;;;-1:-1:-1;;;;;12786:116:156;-1:-1:-1;;;12786:116:156;;;12913:20;;-1:-1:-1;;;12913:20:156;;-1:-1:-1;;;;;;;;;;;250:64:1;12913:15:156;;:20;;12786:116;;12913:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12943:5;;;;;;;;;-1:-1:-1;;;;;12943:5:156;-1:-1:-1;;;;;12943:15:156;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12971:20:156;;-1:-1:-1;;;12971:20:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;12971:15:156;;-1:-1:-1;12971:20:156;;12987:3;;12971:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13001:5;;;;;;;;;-1:-1:-1;;;;;13001:5:156;-1:-1:-1;;;;;13001:16:156;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13030:20:156;;-1:-1:-1;;;13030:20:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13030:15:156;;-1:-1:-1;13030:20:156;;13046:3;;13030:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13060:5;;;;;;;;;-1:-1:-1;;;;;13060:5:156;-1:-1:-1;;;;;13060:14:156;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13087:20:156;;-1:-1:-1;;;13087:20:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13087:15:156;;-1:-1:-1;13087:20:156;;13103:3;;13087:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13117:5:156;;13147:11;;13117:57;;-1:-1:-1;;;13117:57:156;;-1:-1:-1;;;;;13117:5:156;;;;-1:-1:-1;13117:29:156;;-1:-1:-1;13117:57:156;;13147:11;;;;13168:4;;13117:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13185:20:156;;-1:-1:-1;;;13185:20:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13185:15:156;;-1:-1:-1;13185:20:156;;13201:3;;13185:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13215:5:156;;13244:11;;13215:41;;-1:-1:-1;;;13215:41:156;;-1:-1:-1;;;;;13215:5:156;;;;-1:-1:-1;13215:28:156;;-1:-1:-1;13215:41:156;;13244:11;;;;13215:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;9600:1809;9754:5;;:17;;;-1:-1:-1;;;9754:17:156;;;;-1:-1:-1;;;;;;;;;;;250:64:1;9728:7:156;;-1:-1:-1;;;;;9754:5:156;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9736:35;;:15;:35;:::i;:::-;9728:44;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;9728:44:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9819:18;9873:2;9840:36;;;;;:::i;:::-;8591:2:168;8573:21;;;8630:1;8610:18;;;8603:29;-1:-1:-1;;;8663:3:168;8648:19;;8641:40;8719:3;8712:4;8697:20;;8690:33;;;8760:1;8739:19;;;8732:30;-1:-1:-1;;;8793:3:168;8778:19;;8771:33;8888:4;8876:17;;;-1:-1:-1;8856:18:168;;8849:45;8836:3;8821:19;9840:36:156;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10042:48:156;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10042:48:156;-1:-1:-1;;;10042:48:156;;;10100:20;;-1:-1:-1;;;10100:20:156;;9819:57;;-1:-1:-1;9914:4:156;;10042:48;;-1:-1:-1;;;;;;;;;;;250:64:1;10100:15:156;;:20;;10042:48;;10100:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10139:6:156;;10130:16;;-1:-1:-1;;;10130:16:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;10130:8:156;;-1:-1:-1;10130:16:156;;-1:-1:-1;;;;;10139:6:156;;10130:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10156:5:156;;:50;;-1:-1:-1;;;10156:50:156;;-1:-1:-1;;;;;10156:5:156;;;;-1:-1:-1;10156:29:156;;-1:-1:-1;10156:50:156;;10186:8;;10196:9;;10156:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10244:5;;;;;;;;;-1:-1:-1;;;;;10244:5:156;-1:-1:-1;;;;;10244:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10338:6:156;;10329:16;;-1:-1:-1;;;10329:16:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;10329:8:156;;-1:-1:-1;10329:16:156;;-1:-1:-1;;;;;10338:6:156;;10329:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10355:5:156;;:50;;-1:-1:-1;;;10355:50:156;;-1:-1:-1;;;;;10355:5:156;;;;-1:-1:-1;10355:29:156;;-1:-1:-1;10355:50:156;;10385:8;;10395:9;;10355:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10485:57;10502:5;;;;;;;;;-1:-1:-1;;;;;10502:5:156;-1:-1:-1;;;;;10502:17:156;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10532:8;10485;:57::i;:::-;10561:5;;:14;;;-1:-1:-1;;;10561:14:156;;;;10552:35;;-1:-1:-1;;;;;10561:5:156;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10577:9;10552:8;:35::i;:::-;10681:5;;10659:48;;-1:-1:-1;;;10659:48:156;;-1:-1:-1;;;;;10659:13:156;;;;;;:48;;10681:5;;;;10697:8;;10659:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10815:33:156;;-1:-1:-1;;;10815:33:156;;10792:20;;-1:-1:-1;;;;;;10815:18:156;;;-1:-1:-1;10815:18:156;;:33;;10842:4;;10815:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10792:56;;10858:17;10878:5;;;;;;;;;-1:-1:-1;;;;;10878:5:156;-1:-1:-1;;;;;10878:15:156;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10858:37;-1:-1:-1;;;;;;;;;;;;10905:7:156;10913:27;10858:37;10913:15;:27;:::i;:::-;10905:36;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;10905:36:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:5;;;;;;;;;-1:-1:-1;;;;;10951:5:156;-1:-1:-1;;;;;10951:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10995:33:156;;-1:-1:-1;;;10995:33:156;;10974:18;;-1:-1:-1;;;;;;10995:18:156;;;-1:-1:-1;10995:18:156;;:33;;11022:4;;10995:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10974:54;;11038:51;11047:10;11074:5;;;;;;;;;-1:-1:-1;;;;;11074:5:156;-1:-1:-1;;;;;11074:12:156;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11059:29;;:12;:29;:::i;:::-;11038:8;:51::i;:::-;11193:33;;-1:-1:-1;;;11193:33:156;;-1:-1:-1;;;;;11193:18:156;;;;;:33;;11220:4;;11193:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11178:48;-1:-1:-1;;;;;;;;;;;;11236:7:156;11244:27;11262:9;11244:15;:27;:::i;:::-;11236:36;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;11236:36:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11282:5;;;;;;;;;-1:-1:-1;;;;;11282:5:156;-1:-1:-1;;;;;11282:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11318:33:156;;-1:-1:-1;;;11318:33:156;;-1:-1:-1;;;;;11318:18:156;;;-1:-1:-1;11318:18:156;;-1:-1:-1;11318:33:156;;11345:4;;11318:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11305:46;-1:-1:-1;11361:41:156;11305:46;11382:19;:12;11397:4;11382:19;:::i;11361:41::-;9658:1751;;;;;;9600:1809::o;9289:305::-;9428:6;;9419:16;;-1:-1:-1;;;9419:16:156;;-1:-1:-1;;;;;;;;;;;250:64:1;9419:8:156;;:16;;-1:-1:-1;;;;;9428:6:156;;9419:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9445:5:156;;:30;;-1:-1:-1;;;9445:30:156;;-1:-1:-1;;;;;9445:5:156;;;;-1:-1:-1;9445:17:156;;-1:-1:-1;9445:30:156;;9463:11;;9445:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9539:48;9556:5;;;;;;;;;-1:-1:-1;;;;;9556:5:156;-1:-1:-1;;;;;9556:14:156;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9575:11;9539:8;:48::i;:::-;9289:305;:::o;8531:752::-;8662:5;;:14;;;-1:-1:-1;;;8662:14:156;;;;8651:26;;-1:-1:-1;;;;;8662:5:156;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8651:10;:26::i;:::-;8707:5;;:16;;;-1:-1:-1;;;8707:16:156;;;;8688;;-1:-1:-1;;;;;8707:5:156;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8792:6;;8783:16;;-1:-1:-1;;;8783:16:156;;8688:35;;-1:-1:-1;;;;;;;;;;;;250:64:1;8783:8:156;;:16;;-1:-1:-1;;;;;8792:6:156;;;;8783:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8809:5;;;;;;;;;-1:-1:-1;;;;;8809:5:156;-1:-1:-1;;;;;8809:16:156;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8914:27;8926:5;;;;;;;;;-1:-1:-1;;;;;8926:5:156;-1:-1:-1;;;;;8926:12:156;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8925:15;8914:10;:27::i;:::-;8960:5;;:16;;;-1:-1:-1;;;8960:16:156;;;;8951:36;;-1:-1:-1;;;;;8960:5:156;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8978:8;8951;:36::i;:::-;9060:6;;9051:16;;-1:-1:-1;;;9051:16:156;;-1:-1:-1;;;;;;;;;;;250:64:1;9051:8:156;;:16;;-1:-1:-1;;;;;9060:6:156;;9051:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9077:5;;;;;;;;;-1:-1:-1;;;;;9077:5:156;-1:-1:-1;;;;;9077:14:156;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9188:5;;;;;;;;;-1:-1:-1;;;;;9188:5:156;-1:-1:-1;;;;;9188:12:156;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9222:5;;:16;;;-1:-1:-1;;;9222:16:156;;;;9213:63;;-1:-1:-1;;;;;9222:5:156;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9258:5;;;;;;;;;-1:-1:-1;;;;;9258:5:156;-1:-1:-1;;;;;9258:15:156;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9240:35;;:15;:35;:::i;5578:731::-;5716:5;;:17;;;-1:-1:-1;;;5716:17:156;;;;-1:-1:-1;;;;;;;;;;;250:64:1;5690:7:156;;-1:-1:-1;;;;;5716:5:156;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5736:1;5716:21;:::i;:::-;5698:39;;:15;:39;:::i;:::-;5690:48;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;5690:48:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5849:67;5858:5;;;;;;;;;-1:-1:-1;;;;;5858:5:156;-1:-1:-1;;;;;5858:14:156;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5894:5;;;;;;;;;-1:-1:-1;;;;;5894:5:156;-1:-1:-1;;;;;5894:15:156;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5914:1;5894:21;:::i;:::-;5876:39;;:15;:39;:::i;:::-;5849:8;:67::i;:::-;5953:5;;;;;;;;;-1:-1:-1;;;;;5953:5:156;-1:-1:-1;;;;;5953:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6059:63;6068:5;;;;;;;;;-1:-1:-1;;;;;6068:5:156;-1:-1:-1;;;;;6068:14:156;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6104:5;;;;;;;;;-1:-1:-1;;;;;6104:5:156;-1:-1:-1;;;;;6104:15:156;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6086:35;;:15;:35;:::i;:::-;6059:8;:63::i;:::-;6205:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6205:45:156;-1:-1:-1;;;6205:45:156;;;6260:20;;-1:-1:-1;;;6260:20:156;;6205:45;;-1:-1:-1;;;;;;;;;;;250:64:1;6260:15:156;;:20;;6205:45;;6260:20;;:::i;4914:334::-;5026:6;;5017:16;;-1:-1:-1;;;5017:16:156;;-1:-1:-1;;;;;;;;;;;250:64:1;5017:8:156;;:16;;-1:-1:-1;;;;;5026:6:156;;5017:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5043:5;;;;;;;;;-1:-1:-1;;;;;5043:5:156;-1:-1:-1;;;;;5043:16:156;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5143:46:156;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5143:46:156;-1:-1:-1;;;5143:46:156;;;5199:20;;-1:-1:-1;;;5199:20:156;;5143:46;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;5199:15:156;;:20;;5143:46;;5199:20;;:::i;7167:246::-;7293:5;;:17;;;-1:-1:-1;;;7293:17:156;;;;7273;;-1:-1:-1;;;;;7293:5:156;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7273:37;;7369;7378:9;7397:7;7369:8;:37::i;4286:622::-;4432:5;;:17;;;-1:-1:-1;;;4432:17:156;;;;4412;;-1:-1:-1;;;;;4432:5:156;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4412:37;-1:-1:-1;;;;;;;;;;;;4459:7:156;4467:27;4412:37;4467:15;:27;:::i;:::-;4459:36;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;4459:36:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4592:11:156;;:36;;-1:-1:-1;;;4592:36:156;;4569:20;;-1:-1:-1;;;;;;4592:11:156;;;;-1:-1:-1;4592:21:156;;:36;;4622:4;;4592:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:59;;4666:5;;;;;;;;;-1:-1:-1;;;;;4666:5:156;-1:-1:-1;;;;;4666:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4804:11:156;;:36;;-1:-1:-1;;;4804:36:156;;4783:18;;-1:-1:-1;;;;;;4804:11:156;;;;-1:-1:-1;4804:21:156;;:36;;4834:4;;4804:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4783:57;;4850:51;4859:10;4886:5;;;;;;;;;-1:-1:-1;;;;;4886:5:156;-1:-1:-1;;;;;4886:12:156;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4871:29;;:12;:29;:::i;4850:51::-;4325:583;;;4286:622::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;6315:383:156:-;6473:5;;:17;;;-1:-1:-1;;;6473:17:156;;;;6453;;-1:-1:-1;;;;;6473:5:156;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6453:37;-1:-1:-1;;;;;;;;;;;;6500:7:156;6508:27;6453:37;6508:15;:27;:::i;:::-;6500:36;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;6500:36:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6594:5:156;;:22;;-1:-1:-1;;;6594:22:156;;:5;:22;;;761:41:168;-1:-1:-1;;;;;6594:5:156;;;;-1:-1:-1;6594:15:156;;-1:-1:-1;734:18:168;;6594:22:156;621:187:168;7693:832:156;7855:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7855:45:156;-1:-1:-1;;;7855:45:156;;;7910:20;;-1:-1:-1;;;7910:20:156;;7855:45;;-1:-1:-1;;;;;;;;;;;250:64:1;7910:15:156;;:20;;7855:45;;7910:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7940:5;;;;;;;;;-1:-1:-1;;;;;7940:5:156;-1:-1:-1;;;;;7940:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8056:6:156;;8047:16;;-1:-1:-1;;;8047:16:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;8047:8:156;;-1:-1:-1;8047:16:156;;-1:-1:-1;;;;;8056:6:156;;8047:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8073:5;;;;;;;;;-1:-1:-1;;;;;8073:5:156;-1:-1:-1;;;;;8073:15:156;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11415:1174;11568:5;;:17;;;-1:-1:-1;;;11568:17:156;;;;-1:-1:-1;;;;;;;;;;;250:64:1;11542:7:156;;-1:-1:-1;;;;;11568:5:156;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11550:35;;:15;:35;:::i;:::-;11542:44;;;;;;;;;;;;;1205:25:168;;1193:2;1178:18;;1042:194;11542:44:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11682:48:156;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11682:48:156;-1:-1:-1;;;11682:48:156;;;11740:20;;-1:-1:-1;;;11740:20:156;;11682:48;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;11740:15:156;;:20;;11682:48;;11740:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11779:6:156;;11770:16;;-1:-1:-1;;;11770:16:156;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;11770:8:156;;-1:-1:-1;11770:16:156;;-1:-1:-1;;;;;11779:6:156;;11770:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11796:5:156;;11825:11;;11796:41;;-1:-1:-1;;;11796:41:156;;-1:-1:-1;;;;;11796:5:156;;;;-1:-1:-1;11796:28:156;;-1:-1:-1;11796:41:156;;11825:11;;;;11796:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11875:5;;;;;;;;;-1:-1:-1;;;;;11875:5:156;-1:-1:-1;;;;;11875:10:156;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11985:11:156;;12015:6;;11985:38;;-1:-1:-1;;;11985:38:156;;11962:20;;-1:-1:-1;;;;;;11985:11:156;;;;-1:-1:-1;11985:21:156;;:38;;12015:6;;11985:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12056:11;;12086:5;;12056:37;;-1:-1:-1;;;12056:37:156;;11962:61;;-1:-1:-1;12033:20:156;;-1:-1:-1;;;;;12056:11:156;;;;:21;;:37;;12086:5;;;12056:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12162:6;;12153:16;;-1:-1:-1;;;12153:16:156;;12033:60;;-1:-1:-1;;;;;;;;;;;;250:64:1;12153:8:156;;:16;;-1:-1:-1;;;;;12162:6:156;;;;12153:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12179:5:156;;12208:11;;12179:41;;-1:-1:-1;;;12179:41:156;;-1:-1:-1;;;;;12179:5:156;;;;-1:-1:-1;12179:28:156;;-1:-1:-1;12179:41:156;;12208:11;;;;12179:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12251:11:156;;12281:6;;12251:38;;-1:-1:-1;;;12251:38:156;;12230:18;;-1:-1:-1;;;;;;12251:11:156;;;;-1:-1:-1;12251:21:156;;:38;;12281:6;;12251:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12369:11;;12399:5;;12369:37;;-1:-1:-1;;;12369:37:156;;12230:59;;-1:-1:-1;12360:59:156;;-1:-1:-1;;;;;12369:11:156;;;;:21;;:37;;12399:5;;;12369:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12416:1;12360:8;:59::i;:::-;12533:49;12542:10;12554:27;12569:12;12554;:27;:::i;3622:277:0:-;3690:1;-1:-1:-1;;;;;3685:6:0;:1;-1:-1:-1;;;;;3685:6:0;;3681:212;;-1:-1:-1;;;;;;;;;;;3712:44:0;;;;11380:2:168;11362:21;;;11419:2;11399:18;;;11392:30;11458:34;11453:2;11438:18;;11431:62;-1:-1:-1;;;11524:2:168;11509:18;;11502:35;11569:3;11554:19;;11178:401;3712:44:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3807:1:0;3775:34;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;3860:1:0;3828:34;;;;;;:::i;:::-;;;;;;;;3876:6;:4;:6::i;:::-;3622:277;;:::o;5209:262::-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:0;;;;12872:2:168;12854:21;;;12911:2;12891:18;;;12884:30;12950:34;12945:2;12930:18;;12923:62;-1:-1:-1;;;13016:2:168;13001:18;;12994:32;13058:3;13043:19;;12670:398;5293:41:0;;;;;;;;-1:-1:-1;;;;;;;;;;;5382:1:0;5353:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5432:1:0;5403:31;;;;;;:::i;3262:157::-;3322:9;3317:96;;-1:-1:-1;;;;;;;;;;;3352:30:0;;;;13981:2:168;13963:21;;;14020:2;14000:18;;;13993:30;-1:-1:-1;;;14054:2:168;14039:18;;14032:53;14117:2;14102:18;;13779:347;3352:30:0;;;;;;;;3396:6;:4;:6::i;15921:259::-;15982:1;15978;:5;15974:200;;;-1:-1:-1;;;;;;;;;;;16004:41:0;;;;14333:2:168;14315:21;;;14372:2;14352:18;;;14345:30;14411:34;14406:2;14391:18;;14384:62;-1:-1:-1;;;14477:2:168;14462:18;;14455:32;14519:3;14504:19;;14131:398;16004:41:0;;;;;;;;16064:30;;;14746:21:168;;;14803:1;14783:18;;;14776:29;-1:-1:-1;;;14836:2:168;14821:18;;14814:39;14920:4;14905:20;;14898:36;;;16064:30:0;;-1:-1:-1;;;;;;;;;;;16064:30:0;;;;14885:3:168;16064:30:0;;;16113;;;15157:21:168;;;15214:1;15194:18;;;15187:29;;;;-1:-1:-1;;;15247:2:168;15232:18;;15225:39;15331:4;15316:20;;15309:36;;;-1:-1:-1;;;;;;;;;;;16113:30:0;15296:3:168;15281:19;16113:30:0;14945:406:168;9970:259:0;10032:1;10027;:6;10023:200;;-1:-1:-1;;;;;;;;;;;10054:40:0;;;;15558:2:168;15540:21;;;15597:2;15577:18;;;15570:30;15636:34;15631:2;15616:18;;15609:62;-1:-1:-1;;;15702:2:168;15687:18;;15680:31;15743:3;15728:19;;15356:397;2847:242:0;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;;;2847:242::o;2409:432::-;2456:16;:14;:16::i;:::-;2452:359;;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:0;;;15960:51:168;;;-1:-1:-1;;;16027:18:168;;;16020:34;;;;2712:4:0;16070:18:168;;;16063:34;2489:11:0;;1671:64;2586:43;;15933:18:168;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:214:168:-;-1:-1:-1;;;;;189:32:168;;;;171:51;;159:2;144:18;;14:214::o;233:131::-;-1:-1:-1;;;;;308:31:168;;298:42;;288:70;;354:1;351;344:12;369:247;428:6;481:2;469:9;460:7;456:23;452:32;449:52;;;497:1;494;487:12;449:52;536:9;523:23;555:31;580:5;555:31;:::i;:::-;605:5;369:247;-1:-1:-1;;;369:247:168:o;1431:127::-;1492:10;1487:3;1483:20;1480:1;1473:31;1523:4;1520:1;1513:15;1547:4;1544:1;1537:15;1563:138;1642:13;;1664:31;1642:13;1664:31;:::i;1706:1129::-;1801:6;1832:2;1875;1863:9;1854:7;1850:23;1846:32;1843:52;;;1891:1;1888;1881:12;1843:52;1918:16;;-1:-1:-1;;;;;1983:14:168;;;1980:34;;;2010:1;2007;2000:12;1980:34;2048:6;2037:9;2033:22;2023:32;;2093:7;2086:4;2082:2;2078:13;2074:27;2064:55;;2115:1;2112;2105:12;2064:55;2144:2;2138:9;2166:2;2162;2159:10;2156:36;;;2172:18;;:::i;:::-;2218:2;2215:1;2211:10;2250:2;2244:9;2313:2;2309:7;2304:2;2300;2296:11;2292:25;2284:6;2280:38;2368:6;2356:10;2353:22;2348:2;2336:10;2333:18;2330:46;2327:72;;;2379:18;;:::i;:::-;2415:2;2408:22;2465:18;;;2499:15;;;;-1:-1:-1;2541:11:168;;;2537:20;;;2569:19;;;2566:39;;;2601:1;2598;2591:12;2566:39;2625:11;;;;2645:159;2661:6;2656:3;2653:15;2645:159;;;2727:34;2757:3;2727:34;:::i;:::-;2715:47;;2678:12;;;;2782;;;;2645:159;;;2823:6;1706:1129;-1:-1:-1;;;;;;;;1706:1129:168:o;2840:127::-;2901:10;2896:3;2892:20;2889:1;2882:31;2932:4;2929:1;2922:15;2956:4;2953:1;2946:15;5190:438;5363:2;5348:18;;5396:1;5385:13;;5375:144;;5441:10;5436:3;5432:20;5429:1;5422:31;5476:4;5473:1;5466:15;5504:4;5501:1;5494:15;5375:144;5528:25;;;-1:-1:-1;;;;;5589:32:168;;;;5584:2;5569:18;;;5562:60;5190:438;:::o;5982:274::-;-1:-1:-1;;;;;6174:32:168;;;;6156:51;;6238:2;6223:18;;6216:34;6144:2;6129:18;;5982:274::o;6261:184::-;6331:6;6384:2;6372:9;6363:7;6359:23;6355:32;6352:52;;;6400:1;6397;6390:12;6352:52;-1:-1:-1;6423:16:168;;6261:184;-1:-1:-1;6261:184:168:o;6450:127::-;6511:10;6506:3;6502:20;6499:1;6492:31;6542:4;6539:1;6532:15;6566:4;6563:1;6556:15;6582:128;6622:3;6653:1;6649:6;6646:1;6643:13;6640:39;;;6659:18;;:::i;:::-;-1:-1:-1;6695:9:168;;6582:128::o;7079:258::-;7151:1;7161:113;7175:6;7172:1;7169:13;7161:113;;;7251:11;;;7245:18;7232:11;;;7225:39;7197:2;7190:10;7161:113;;;7292:6;7289:1;7286:13;7283:48;;;-1:-1:-1;;7327:1:168;7309:16;;7302:27;7079:258::o;7342:381::-;7489:2;7478:9;7471:21;7452:4;7521:6;7515:13;7564:6;7559:2;7548:9;7544:18;7537:34;7580:66;7639:6;7634:2;7623:9;7619:18;7614:2;7606:6;7602:15;7580:66;:::i;:::-;7707:2;7686:15;-1:-1:-1;;7682:29:168;7667:45;;;;7714:2;7663:54;;7342:381;-1:-1:-1;;7342:381:168:o;9113:266::-;9198:6;9251:2;9239:9;9230:7;9226:23;9222:32;9219:52;;;9267:1;9264;9257:12;9219:52;9299:9;9293:16;9318:31;9343:5;9318:31;:::i;9659:277::-;9726:6;9779:2;9767:9;9758:7;9754:23;9750:32;9747:52;;;9795:1;9792;9785:12;9747:52;9827:9;9821:16;9880:5;9873:13;9866:21;9859:5;9856:32;9846:60;;9902:1;9899;9892:12;9941:125;9981:4;10009:1;10006;10003:8;10000:34;;;10014:18;;:::i;:::-;-1:-1:-1;10051:9:168;;9941:125::o;10071:168::-;10111:7;10177:1;10173;10169:6;10165:14;10162:1;10159:21;10154:1;10147:9;10140:17;10136:45;10133:71;;;10184:18;;:::i;:::-;-1:-1:-1;10224:9:168;;10071:168::o;10523:371::-;-1:-1:-1;;;;;;10708:33:168;;10696:46;;10765:13;;10678:3;;10787:61;10765:13;10837:1;10828:11;;10821:4;10809:17;;10787:61;:::i;:::-;10868:16;;;;10886:1;10864:24;;10523:371;-1:-1:-1;;;10523:371:168:o;10899:274::-;11028:3;11066:6;11060:13;11082:53;11128:6;11123:3;11116:4;11108:6;11104:17;11082:53;:::i;:::-;11151:16;;;;;10899:274;-1:-1:-1;;10899:274:168:o;11584:159::-;11661:2;11649:15;;-1:-1:-1;;;11689:4:168;11680:14;;11673:36;11734:2;11725:12;;11584:159::o;11748:374::-;11978:2;11967:9;11960:21;11941:4;11998:49;12043:2;12032:9;12028:18;11998:49;:::i;:::-;-1:-1:-1;;;;;12083:32:168;;;;12078:2;12063:18;;;;12056:60;;;;-1:-1:-1;11990:57:168;11748:374::o;12127:159::-;12204:2;12192:15;;-1:-1:-1;;;12232:4:168;12223:14;;12216:36;12277:2;12268:12;;12127:159::o;12291:374::-;12521:2;12510:9;12503:21;12484:4;12541:49;12586:2;12575:9;12571:18;12541:49;:::i;13073:348::-;13303:2;13292:9;13285:21;13266:4;13323:49;13368:2;13357:9;13353:18;13323:49;:::i;:::-;13315:57;;13408:6;13403:2;13392:9;13388:18;13381:34;13073:348;;;;:::o;13426:::-;13656:2;13645:9;13638:21;13619:4;13676:49;13721:2;13710:9;13706:18;13676:49;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectnes_setOperator(address)": "56735b57",
    "testCorrectness_activate_deactivate()": "5d948bbd",
    "testCorrectness_beat()": "a00f2709",
    "testCorrectness_cannotBeatIfInactive()": "7e9506de",
    "testCorrectness_cannotBeatIfTooEarly()": "8d0be1ef",
    "testCorrectness_cannotBeatRepeatedlyIfSkipped()": "7b47a7f3",
    "testCorrectness_cannotCallAdminFunctionsWithoutPermissions()": "1fdada07",
    "testCorrectness_resetBeat()": "e853d736",
    "testCorrectness_setRewardTokenAndAmount()": "2c639076",
    "testCorrectness_viewFrequency()": "882d3844",
    "testCorrectness_withdrawUnspentRewards()": "e9aaa0e8",
    "testFail_beatFailsIfOperateReverts()": "0bb8dc03",
    "testFail_beatFailsIfPriceReverts()": "e2627194",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"testCorrectnes_setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_activate_deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_beat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfInactive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfTooEarly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatRepeatedlyIfSkipped\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotCallAdminFunctionsWithoutPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_resetBeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_setRewardTokenAndAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_viewFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_withdrawUnspentRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfOperateReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfPriceReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCreator\",\"outputs\":[{\"internalType\":\"contract UserFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testCorrectness_beat()\":{\"notice\":\"DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert\"},\"testCorrectness_resetBeat()\":{\"notice\":\"DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions\"},\"testCorrectness_viewFrequency()\":{\"notice\":\"[X] frequency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/Heart.t.sol\":\"HeartTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/Heart.sol\":{\"keccak256\":\"0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a\",\"dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/policies/interfaces/IHeart.sol\":{\"keccak256\":\"0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab\",\"dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/mocks/MockPrice.sol\":{\"keccak256\":\"0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495\",\"dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd\"]},\"src/test/policies/Heart.t.sol\":{\"keccak256\":\"0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9\",\"dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectnes_setOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_activate_deactivate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_beat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfInactive"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfTooEarly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_resetBeat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setRewardTokenAndAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_viewFrequency"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_withdrawUnspentRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfOperateReverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfPriceReverts"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userCreator",
          "outputs": [
            {
              "internalType": "contract UserFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testCorrectness_beat()": {
            "notice": "DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert"
          },
          "testCorrectness_resetBeat()": {
            "notice": "DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions"
          },
          "testCorrectness_viewFrequency()": {
            "notice": "[X] frequency"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/Heart.t.sol": "HeartTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049",
        "urls": [
          "bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759",
          "dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Heart.sol": {
        "keccak256": "0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f",
        "urls": [
          "bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a",
          "dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/interfaces/IHeart.sol": {
        "keccak256": "0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a",
        "urls": [
          "bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab",
          "dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/mocks/MockPrice.sol": {
        "keccak256": "0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c",
        "urls": [
          "bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495",
          "dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/policies/Heart.t.sol": {
        "keccak256": "0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1",
        "urls": [
          "bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9",
          "dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/Heart.t.sol",
    "id": 88464,
    "exportedSymbols": {
      "Actions": [
        30446
      ],
      "ERC20": [
        28408
      ],
      "FullMath": [
        45594
      ],
      "GoerliDaoRoles": [
        48441
      ],
      "HeartTest": [
        88463
      ],
      "IOperator": [
        57664
      ],
      "Instruction": [
        30452
      ],
      "InvalidKeycode": [
        30469
      ],
      "Kernel": [
        31595
      ],
      "KernelAdapter": [
        30610
      ],
      "Keycode": [
        30460
      ],
      "MockERC20": [
        27348
      ],
      "MockOperator": [
        87361
      ],
      "MockPrice": [
        70980
      ],
      "Module": [
        30675
      ],
      "OlympusHeart": [
        52614
      ],
      "Permissions": [
        30458
      ],
      "Policy": [
        30757
      ],
      "ROLESv1": [
        48520
      ],
      "RolesAdmin": [
        56616
      ],
      "TargetNotAContract": [
        30464
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        59387
      ],
      "console2": [
        23663
      ],
      "ensureContract": [
        30513
      ],
      "ensureValidKeycode": [
        30558
      ],
      "fromKeycode": [
        30497
      ],
      "toKeycode": [
        30483
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:13228:156",
    "nodes": [
      {
        "id": 87277,
        "nodeType": "PragmaDirective",
        "src": "38:24:156",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 87279,
        "nodeType": "ImportDirective",
        "src": "64:40:156",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87278,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "72:4:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87281,
        "nodeType": "ImportDirective",
        "src": "105:53:156",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 59388,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87280,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59387,
              "src": "113:11:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87283,
        "nodeType": "ImportDirective",
        "src": "159:48:156",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87282,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "167:8:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87286,
        "nodeType": "ImportDirective",
        "src": "209:72:156",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 27349,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87284,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27348,
              "src": "217:9:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 87285,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28408,
              "src": "228:5:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87288,
        "nodeType": "ImportDirective",
        "src": "282:51:156",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockPrice.sol",
        "file": "test/mocks/MockPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 70981,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87287,
              "name": "MockPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70980,
              "src": "290:9:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87290,
        "nodeType": "ImportDirective",
        "src": "334:64:156",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 48442,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87289,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48441,
              "src": "342:14:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87292,
        "nodeType": "ImportDirective",
        "src": "399:51:156",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 48521,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87291,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48520,
              "src": "407:7:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87294,
        "nodeType": "ImportDirective",
        "src": "451:51:156",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 56617,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87293,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56616,
              "src": "459:10:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87296,
        "nodeType": "ImportDirective",
        "src": "504:48:156",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 45595,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87295,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45594,
              "src": "512:8:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87297,
        "nodeType": "ImportDirective",
        "src": "554:24:156",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 31596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87299,
        "nodeType": "ImportDirective",
        "src": "580:48:156",
        "nodes": [],
        "absolutePath": "src/policies/Heart.sol",
        "file": "policies/Heart.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 52615,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87298,
              "name": "OlympusHeart",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52614,
              "src": "588:12:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87301,
        "nodeType": "ImportDirective",
        "src": "630:60:156",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IOperator.sol",
        "file": "policies/interfaces/IOperator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88464,
        "sourceUnit": 57665,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87300,
              "name": "IOperator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57664,
              "src": "638:9:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87361,
        "nodeType": "ContractDefinition",
        "src": "739:654:156",
        "nodes": [
          {
            "id": 87306,
            "nodeType": "VariableDeclaration",
            "src": "777:18:156",
            "nodes": [],
            "constant": false,
            "functionSelector": "65372147",
            "mutability": "mutable",
            "name": "result",
            "nameLocation": "789:6:156",
            "scope": 87361,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 87305,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "777:4:156",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87308,
            "nodeType": "ErrorDefinition",
            "src": "801:29:156",
            "nodes": [],
            "errorSelector": "1117572b",
            "name": "Operator_CustomError",
            "nameLocation": "807:20:156",
            "parameters": {
              "id": 87307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:2:156"
            }
          },
          {
            "id": 87322,
            "nodeType": "FunctionDefinition",
            "src": "836:74:156",
            "nodes": [],
            "body": {
              "id": 87321,
              "nodeType": "Block",
              "src": "880:30:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87317,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87306,
                      "src": "890:6:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 87318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "899:4:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "890:13:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87320,
                  "nodeType": "ExpressionStatement",
                  "src": "890:13:156"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 87314,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87311,
                    "src": "871:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$31595",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 87315,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 87313,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30757,
                  "src": "864:6:156"
                },
                "nodeType": "ModifierInvocation",
                "src": "864:15:156"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 87312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87311,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "855:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 87322,
                  "src": "848:14:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$31595",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 87310,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87309,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31595,
                      "src": "848:6:156"
                    },
                    "referencedDeclaration": 31595,
                    "src": "848:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$31595",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:16:156"
            },
            "returnParameters": {
              "id": 87316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:156"
            },
            "scope": 87361,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87331,
            "nodeType": "FunctionDefinition",
            "src": "971:93:156",
            "nodes": [],
            "body": {
              "id": 87330,
              "nodeType": "Block",
              "src": "1062:2:156",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              30747
            ],
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "980:21:156",
            "overrides": {
              "id": 87324,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1013:8:156"
            },
            "parameters": {
              "id": 87323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:156"
            },
            "returnParameters": {
              "id": 87329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87328,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "1048:12:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 87331,
                  "src": "1031:29:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$30460_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87326,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 87325,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 30460,
                        "src": "1031:7:156"
                      },
                      "referencedDeclaration": 30460,
                      "src": "1031:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$30460",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 87327,
                    "nodeType": "ArrayTypeName",
                    "src": "1031:9:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$30460_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:31:156"
            },
            "scope": 87361,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87340,
            "nodeType": "FunctionDefinition",
            "src": "1070:95:156",
            "nodes": [],
            "body": {
              "id": 87339,
              "nodeType": "Block",
              "src": "1163:2:156",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              30756
            ],
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "1079:18:156",
            "overrides": {
              "id": 87333,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1114:8:156"
            },
            "parameters": {
              "id": 87332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:156"
            },
            "returnParameters": {
              "id": 87338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87337,
                  "mutability": "mutable",
                  "name": "requests",
                  "nameLocation": "1153:8:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 87340,
                  "src": "1132:29:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$30458_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87335,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 87334,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 30458,
                        "src": "1132:11:156"
                      },
                      "referencedDeclaration": 30458,
                      "src": "1132:11:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$30458_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 87336,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:13:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$30458_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:31:156"
            },
            "scope": 87361,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87350,
            "nodeType": "FunctionDefinition",
            "src": "1218:92:156",
            "nodes": [],
            "body": {
              "id": 87349,
              "nodeType": "Block",
              "src": "1251:59:156",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 87344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1265:7:156",
                    "subExpression": {
                      "id": 87343,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87306,
                      "src": "1266:6:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87348,
                  "nodeType": "IfStatement",
                  "src": "1261:42:156",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 87345,
                        "name": "Operator_CustomError",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87308,
                        "src": "1281:20:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 87346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1281:22:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 87347,
                    "nodeType": "RevertStatement",
                    "src": "1274:29:156"
                  }
                }
              ]
            },
            "functionSelector": "7159a618",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operate",
            "nameLocation": "1227:7:156",
            "parameters": {
              "id": 87341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:156"
            },
            "returnParameters": {
              "id": 87342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:156"
            },
            "scope": 87361,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87360,
            "nodeType": "FunctionDefinition",
            "src": "1316:75:156",
            "nodes": [],
            "body": {
              "id": 87359,
              "nodeType": "Block",
              "src": "1358:33:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87355,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87306,
                      "src": "1368:6:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87356,
                      "name": "result_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87352,
                      "src": "1377:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1368:16:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87358,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:16:156"
                }
              ]
            },
            "functionSelector": "f4b4dc2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setResult",
            "nameLocation": "1325:9:156",
            "parameters": {
              "id": 87353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87352,
                  "mutability": "mutable",
                  "name": "result_",
                  "nameLocation": "1340:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 87360,
                  "src": "1335:12:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87351,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:14:156"
            },
            "returnParameters": {
              "id": 87354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:156"
            },
            "scope": 87361,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 87303,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30757,
              "src": "764:6:156"
            },
            "id": 87304,
            "nodeType": "InheritanceSpecifier",
            "src": "764:6:156"
          }
        ],
        "canonicalName": "MockOperator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 87302,
          "nodeType": "StructuredDocumentation",
          "src": "692:46:156",
          "text": " @notice Mock Operator to test Heart"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87361,
          30757,
          30610
        ],
        "name": "MockOperator",
        "nameLocation": "748:12:156",
        "scope": 88464,
        "usedErrors": [
          30563,
          30683,
          87308
        ]
      },
      {
        "id": 88463,
        "nodeType": "ContractDefinition",
        "src": "1395:11870:156",
        "nodes": [
          {
            "id": 87366,
            "nodeType": "UsingForDirective",
            "src": "1428:27:156",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 87364,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45594,
              "src": "1434:8:156"
            },
            "typeName": {
              "id": 87365,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1447:7:156",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 87369,
            "nodeType": "VariableDeclaration",
            "src": "1461:30:156",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1480:11:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$59387",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 87368,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87367,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59387,
                "src": "1461:11:156"
              },
              "referencedDeclaration": 59387,
              "src": "1461:11:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$59387",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87371,
            "nodeType": "VariableDeclaration",
            "src": "1497:22:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1514:5:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 87370,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1497:7:156",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87373,
            "nodeType": "VariableDeclaration",
            "src": "1525:20:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1542:3:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 87372,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1525:7:156",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87375,
            "nodeType": "VariableDeclaration",
            "src": "1551:23:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "1568:6:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 87374,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1551:7:156",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87378,
            "nodeType": "VariableDeclaration",
            "src": "1581:30:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1600:11:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$27348",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 87377,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87376,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27348,
                "src": "1581:9:156"
              },
              "referencedDeclaration": 27348,
              "src": "1581:9:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$27348",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87381,
            "nodeType": "VariableDeclaration",
            "src": "1618:22:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "1634:6:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$31595",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 87380,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87379,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31595,
                "src": "1618:6:156"
              },
              "referencedDeclaration": 31595,
              "src": "1618:6:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$31595",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87384,
            "nodeType": "VariableDeclaration",
            "src": "1646:24:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "1665:5:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockPrice_$70980",
              "typeString": "contract MockPrice"
            },
            "typeName": {
              "id": 87383,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87382,
                "name": "MockPrice",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 70980,
                "src": "1646:9:156"
              },
              "referencedDeclaration": 70980,
              "src": "1646:9:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockPrice_$70980",
                "typeString": "contract MockPrice"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87387,
            "nodeType": "VariableDeclaration",
            "src": "1676:29:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "1700:5:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 87386,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87385,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48441,
                "src": "1676:14:156"
              },
              "referencedDeclaration": 48441,
              "src": "1676:14:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87390,
            "nodeType": "VariableDeclaration",
            "src": "1712:30:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1734:8:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockOperator_$87361",
              "typeString": "contract MockOperator"
            },
            "typeName": {
              "id": 87389,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87388,
                "name": "MockOperator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 87361,
                "src": "1712:12:156"
              },
              "referencedDeclaration": 87361,
              "src": "1712:12:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockOperator_$87361",
                "typeString": "contract MockOperator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87393,
            "nodeType": "VariableDeclaration",
            "src": "1748:27:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "heart",
            "nameLocation": "1770:5:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
              "typeString": "contract OlympusHeart"
            },
            "typeName": {
              "id": 87392,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87391,
                "name": "OlympusHeart",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52614,
                "src": "1748:12:156"
              },
              "referencedDeclaration": 52614,
              "src": "1748:12:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                "typeString": "contract OlympusHeart"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87396,
            "nodeType": "VariableDeclaration",
            "src": "1781:30:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "1801:10:156",
            "scope": 88463,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$56616",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 87395,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87394,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56616,
                "src": "1781:10:156"
              },
              "referencedDeclaration": 56616,
              "src": "1781:10:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87637,
            "nodeType": "FunctionDefinition",
            "src": "1818:2136:156",
            "nodes": [],
            "body": {
              "id": 87636,
              "nodeType": "Block",
              "src": "1842:2112:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 87410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 87408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 87406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 87404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 87402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1860:2:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 87403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1865:3:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "1860:8:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 87405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1871:2:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "1860:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 87407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1876:2:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "1860:18:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 87409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1881:2:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "1860:23:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 87399,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "1852:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "1852:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 87411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:32:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87412,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:32:156"
                },
                {
                  "expression": {
                    "id": 87418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87413,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87369,
                      "src": "1962:11:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$59387",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 87416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1976:15:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$59387_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 87415,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 87414,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 59387,
                            "src": "1980:11:156"
                          },
                          "referencedDeclaration": 59387,
                          "src": "1980:11:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$59387",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 87417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1976:17:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$59387",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "1962:31:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$59387",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 87419,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:31:156"
                },
                {
                  "id": 87448,
                  "nodeType": "Block",
                  "src": "2003:160:156",
                  "statements": [
                    {
                      "assignments": [
                        87424
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 87424,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "2034:5:156",
                          "nodeType": "VariableDeclaration",
                          "scope": 87448,
                          "src": "2017:22:156",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 87422,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2017:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 87423,
                            "nodeType": "ArrayTypeName",
                            "src": "2017:9:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 87429,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 87427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2061:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 87425,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87369,
                            "src": "2042:11:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$59387",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 87426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59386,
                          "src": "2042:18:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 87428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:21:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2017:46:156"
                    },
                    {
                      "expression": {
                        "id": 87434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87430,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87371,
                          "src": "2077:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 87431,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87424,
                            "src": "2085:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 87433,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 87432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2091:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2085:8:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2077:16:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 87435,
                      "nodeType": "ExpressionStatement",
                      "src": "2077:16:156"
                    },
                    {
                      "expression": {
                        "id": 87440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87436,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87373,
                          "src": "2107:3:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 87437,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87424,
                            "src": "2113:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 87439,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 87438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2119:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2113:8:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2107:14:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 87441,
                      "nodeType": "ExpressionStatement",
                      "src": "2107:14:156"
                    },
                    {
                      "expression": {
                        "id": 87446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87442,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87375,
                          "src": "2135:6:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 87443,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87424,
                            "src": "2144:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 87445,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 87444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2150:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2144:8:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2135:17:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 87447,
                      "nodeType": "ExpressionStatement",
                      "src": "2135:17:156"
                    }
                  ]
                },
                {
                  "id": 87459,
                  "nodeType": "Block",
                  "src": "2172:114:156",
                  "statements": [
                    {
                      "documentation": "Deploy token mocks",
                      "expression": {
                        "id": 87457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87449,
                          "name": "rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87378,
                          "src": "2221:11:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$27348",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657761726420546f6b656e",
                              "id": 87453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2249:14:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              "value": "Reward Token"
                            },
                            {
                              "hexValue": "525744",
                              "id": 87454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2265:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              "value": "RWD"
                            },
                            {
                              "hexValue": "3138",
                              "id": 87455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2272:2:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 87452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2235:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$27348_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 87451,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87450,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 27348,
                                "src": "2239:9:156"
                              },
                              "referencedDeclaration": 27348,
                              "src": "2239:9:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$27348",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 87456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2235:40:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$27348",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "2221:54:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 87458,
                      "nodeType": "ExpressionStatement",
                      "src": "2221:54:156"
                    }
                  ]
                },
                {
                  "id": 87520,
                  "nodeType": "Block",
                  "src": "2296:485:156",
                  "statements": [
                    {
                      "documentation": "Deploy kernel",
                      "expression": {
                        "id": 87465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87460,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87381,
                          "src": "2340:6:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$31595",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2349:10:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$31595_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 87462,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87461,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 31595,
                                "src": "2353:6:156"
                              },
                              "referencedDeclaration": 31595,
                              "src": "2353:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 87464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2349:12:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$31595",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "2340:21:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$31595",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 87466,
                      "nodeType": "ExpressionStatement",
                      "src": "2340:21:156"
                    },
                    {
                      "documentation": "Deploy modules (some mocks)",
                      "expression": {
                        "id": 87480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87467,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87384,
                          "src": "2458:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$70980",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 87471,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87381,
                              "src": "2480:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "38",
                                  "id": 87474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2495:7:156",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  },
                                  "value": "8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  }
                                ],
                                "id": 87473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2488:6:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 87472,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2488:6:156",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2488:15:156",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "id": 87478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 87476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2505:2:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 87477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2510:4:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "2505:9:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "id": 87470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2466:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$31595_$_t_uint48_$_t_uint256_$returns$_t_contract$_MockPrice_$70980_$",
                              "typeString": "function (contract Kernel,uint48,uint256) returns (contract MockPrice)"
                            },
                            "typeName": {
                              "id": 87469,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87468,
                                "name": "MockPrice",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 70980,
                                "src": "2470:9:156"
                              },
                              "referencedDeclaration": 70980,
                              "src": "2470:9:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockPrice_$70980",
                                "typeString": "contract MockPrice"
                              }
                            }
                          },
                          "id": 87479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2466:49:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$70980",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "src": "2458:57:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$70980",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 87481,
                      "nodeType": "ExpressionStatement",
                      "src": "2458:57:156"
                    },
                    {
                      "expression": {
                        "id": 87488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87482,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87387,
                          "src": "2529:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 87486,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87381,
                              "src": "2556:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 87485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2537:18:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$31595_$returns$_t_contract$_GoerliDaoRoles_$48441_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 87484,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87483,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 48441,
                                "src": "2541:14:156"
                              },
                              "referencedDeclaration": 48441,
                              "src": "2541:14:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 87487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2537:26:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "2529:34:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 87489,
                      "nodeType": "ExpressionStatement",
                      "src": "2529:34:156"
                    },
                    {
                      "documentation": "Configure mocks",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 87495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 87493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2633:3:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 87494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2639:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2633:10:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 87490,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87384,
                            "src": "2610:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$70980",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 87492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setMovingAverage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70939,
                          "src": "2610:22:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 87496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:34:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87497,
                      "nodeType": "ExpressionStatement",
                      "src": "2610:34:156"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 87503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 87501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2677:3:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 87502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2683:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2677:10:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 87498,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87384,
                            "src": "2658:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$70980",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 87500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70949,
                          "src": "2658:18:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 87504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2658:30:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87505,
                      "nodeType": "ExpressionStatement",
                      "src": "2658:30:156"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 87511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 87509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2724:3:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 87510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2730:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2724:10:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 87506,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87384,
                            "src": "2702:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$70980",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 87508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCurrentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70959,
                          "src": "2702:21:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 87512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:33:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87513,
                      "nodeType": "ExpressionStatement",
                      "src": "2702:33:156"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3138",
                            "id": 87517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2767:2:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "expression": {
                            "id": 87514,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87384,
                            "src": "2749:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$70980",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 87516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDecimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70969,
                          "src": "2749:17:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) external"
                          }
                        },
                        "id": 87518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2749:21:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87519,
                      "nodeType": "ExpressionStatement",
                      "src": "2749:21:156"
                    }
                  ]
                },
                {
                  "id": 87556,
                  "nodeType": "Block",
                  "src": "2791:378:156",
                  "statements": [
                    {
                      "documentation": "Deploy mock operator",
                      "expression": {
                        "id": 87527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87521,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87390,
                          "src": "2842:8:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$87361",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 87525,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87381,
                              "src": "2870:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 87524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2853:16:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$31595_$returns$_t_contract$_MockOperator_$87361_$",
                              "typeString": "function (contract Kernel) returns (contract MockOperator)"
                            },
                            "typeName": {
                              "id": 87523,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87522,
                                "name": "MockOperator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 87361,
                                "src": "2857:12:156"
                              },
                              "referencedDeclaration": 87361,
                              "src": "2857:12:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockOperator_$87361",
                                "typeString": "contract MockOperator"
                              }
                            }
                          },
                          "id": 87526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:24:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$87361",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "src": "2842:35:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$87361",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 87528,
                      "nodeType": "ExpressionStatement",
                      "src": "2842:35:156"
                    },
                    {
                      "documentation": "Deploy heart",
                      "expression": {
                        "id": 87546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87529,
                          "name": "heart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87393,
                          "src": "2921:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 87533,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87381,
                              "src": "2963:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87537,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 87390,
                                      "src": "3005:8:156",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockOperator_$87361",
                                        "typeString": "contract MockOperator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockOperator_$87361",
                                        "typeString": "contract MockOperator"
                                      }
                                    ],
                                    "id": 87536,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2997:7:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87535,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2997:7:156",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2997:17:156",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87534,
                                "name": "IOperator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57664,
                                "src": "2987:9:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOperator_$57664_$",
                                  "typeString": "type(contract IOperator)"
                                }
                              },
                              "id": 87539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2987:28:156",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOperator_$57664",
                                "typeString": "contract IOperator"
                              }
                            },
                            {
                              "id": 87540,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87378,
                              "src": "3033:11:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$27348",
                                "typeString": "contract MockERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32653138",
                                  "id": 87543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3070:4:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  },
                                  "value": "2e18"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  }
                                ],
                                "id": 87542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3062:7:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 87541,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3062:7:156",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3062:13:156",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IOperator_$57664",
                                "typeString": "contract IOperator"
                              },
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$27348",
                                "typeString": "contract MockERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 87532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2929:16:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$31595_$_t_contract$_IOperator_$57664_$_t_contract$_ERC20_$28408_$_t_uint256_$returns$_t_contract$_OlympusHeart_$52614_$",
                              "typeString": "function (contract Kernel,contract IOperator,contract ERC20,uint256) returns (contract OlympusHeart)"
                            },
                            "typeName": {
                              "id": 87531,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87530,
                                "name": "OlympusHeart",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 52614,
                                "src": "2933:12:156"
                              },
                              "referencedDeclaration": 52614,
                              "src": "2933:12:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            }
                          },
                          "id": 87545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:179:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "src": "2921:187:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87547,
                      "nodeType": "ExpressionStatement",
                      "src": "2921:187:156"
                    },
                    {
                      "expression": {
                        "id": 87554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 87548,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87396,
                          "src": "3123:10:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 87552,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87381,
                              "src": "3151:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$31595",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 87551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3136:14:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$31595_$returns$_t_contract$_RolesAdmin_$56616_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 87550,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87549,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 56616,
                                "src": "3140:10:156"
                              },
                              "referencedDeclaration": 56616,
                              "src": "3140:10:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 87553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3136:22:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "3123:35:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 87555,
                      "nodeType": "ExpressionStatement",
                      "src": "3123:35:156"
                    }
                  ]
                },
                {
                  "id": 87619,
                  "nodeType": "Block",
                  "src": "3179:627:156",
                  "statements": [
                    {
                      "documentation": "Install modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87560,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30446,
                              "src": "3292:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$30446_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 87561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30440,
                            "src": "3292:21:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 87564,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87384,
                                "src": "3323:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPrice_$70980",
                                  "typeString": "contract MockPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPrice_$70980",
                                  "typeString": "contract MockPrice"
                                }
                              ],
                              "id": 87563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3315:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87562,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3315:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3315:14:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87557,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87381,
                            "src": "3271:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$31595",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 87559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31029,
                          "src": "3271:20:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$30446_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 87566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3271:59:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87567,
                      "nodeType": "ExpressionStatement",
                      "src": "3271:59:156"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87571,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30446,
                              "src": "3365:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$30446_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 87572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30440,
                            "src": "3365:21:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 87575,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87387,
                                "src": "3396:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$48441",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 87574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3388:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87573,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3388:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3388:14:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87568,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87381,
                            "src": "3344:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$31595",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 87570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31029,
                          "src": "3344:20:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$30446_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 87577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3344:59:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87578,
                      "nodeType": "ExpressionStatement",
                      "src": "3344:59:156"
                    },
                    {
                      "documentation": "Approve policies",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87582,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30446,
                              "src": "3472:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$30446_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 87583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30442,
                            "src": "3472:22:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 87586,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87390,
                                "src": "3504:8:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockOperator_$87361",
                                  "typeString": "contract MockOperator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockOperator_$87361",
                                  "typeString": "contract MockOperator"
                                }
                              ],
                              "id": 87585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3496:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87584,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3496:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3496:17:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87579,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87381,
                            "src": "3451:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$31595",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 87581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31029,
                          "src": "3451:20:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$30446_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 87588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3451:63:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87589,
                      "nodeType": "ExpressionStatement",
                      "src": "3451:63:156"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87593,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30446,
                              "src": "3549:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$30446_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 87594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30442,
                            "src": "3549:22:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 87597,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "3581:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 87596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3573:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3573:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3573:14:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87590,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87381,
                            "src": "3528:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$31595",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 87592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31029,
                          "src": "3528:20:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$30446_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 87599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3528:60:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87600,
                      "nodeType": "ExpressionStatement",
                      "src": "3528:60:156"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87604,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30446,
                              "src": "3623:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$30446_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 87605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30442,
                            "src": "3623:22:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 87608,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87396,
                                "src": "3655:10:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 87607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3647:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87606,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3647:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3647:19:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$30446",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87601,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87381,
                            "src": "3602:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$31595",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 87603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31029,
                          "src": "3602:20:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$30446_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 87610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3602:65:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87611,
                      "nodeType": "ExpressionStatement",
                      "src": "3602:65:156"
                    },
                    {
                      "documentation": "Heart roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 87615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3773:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          },
                          {
                            "id": 87616,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87375,
                            "src": "3788:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87612,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87396,
                            "src": "3752:10:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$56616",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 87614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56555,
                          "src": "3752:20:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 87617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3752:43:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87618,
                      "nodeType": "ExpressionStatement",
                      "src": "3752:43:156"
                    }
                  ]
                },
                {
                  "id": 87635,
                  "nodeType": "Block",
                  "src": "3816:132:156",
                  "statements": [
                    {
                      "documentation": "Mint reward tokens to heart contract",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87625,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "3908:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 87624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3900:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87623,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3900:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3900:14:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "id": 87631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31303030",
                                  "id": 87629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3924:4:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 87630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3931:4:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "3924:11:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 87628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3916:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 87627,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3916:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3916:20:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 87620,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87378,
                            "src": "3883:11:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$27348",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 87622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27334,
                          "src": "3883:16:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 87633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3883:54:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87634,
                      "nodeType": "ExpressionStatement",
                      "src": "3883:54:156"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1827:5:156",
            "parameters": {
              "id": 87397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:2:156"
            },
            "returnParameters": {
              "id": 87398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87694,
            "nodeType": "FunctionDefinition",
            "src": "4286:622:156",
            "nodes": [],
            "body": {
              "id": 87693,
              "nodeType": "Block",
              "src": "4325:583:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87643,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "4420:9:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87693,
                      "src": "4412:17:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87642,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4412:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 87647,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87644,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "4432:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52613,
                      "src": "4432:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 87646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:17:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4412:37:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87651,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4467:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4467:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 87653,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87643,
                          "src": "4485:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4467:27:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87648,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4459:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "4459:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 87655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87656,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:36:156"
                },
                {
                  "assignments": [
                    87659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87659,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "4577:12:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87693,
                      "src": "4569:20:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87658,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4569:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 87667,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87664,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4622:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 87663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4614:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4614:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4614:13:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87660,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "4592:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 87661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "4592:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4592:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4569:59:156"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87668,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "4666:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "4666:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87672,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:12:156"
                },
                {
                  "assignments": [
                    87675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87675,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "4791:10:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87693,
                      "src": "4783:18:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4783:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 87683,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87680,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4834:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 87679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4826:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4826:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4826:13:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87676,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "4804:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 87677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "4804:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4783:57:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87685,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87675,
                        "src": "4859:10:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87686,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87659,
                          "src": "4871:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 87687,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "4886:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 87688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52229,
                            "src": "4886:12:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 87689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:14:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4871:29:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87684,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4850:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4850:51:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87692,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:51:156"
                }
              ]
            },
            "documentation": {
              "id": 87638,
              "nodeType": "StructuredDocumentation",
              "src": "4057:224:156",
              "text": "DONE\n [X] beat\n     [X] active and frequency has passed\n     [X] cannot beat if not active\n     [X] cannot beat if not enough time has passed\n     [X] fails if price or operator revert"
            },
            "functionSelector": "a00f2709",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_beat",
            "nameLocation": "4295:20:156",
            "parameters": {
              "id": 87639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4315:2:156"
            },
            "returnParameters": {
              "id": 87640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87728,
            "nodeType": "FunctionDefinition",
            "src": "4914:334:156",
            "nodes": [],
            "body": {
              "id": 87727,
              "nodeType": "Block",
              "src": "4969:279:156",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the heart to inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 87700,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "5026:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87697,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5017:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5017:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5017:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87702,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:16:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87703,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "5043:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52513,
                      "src": "5043:16:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5043:18:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87707,
                  "nodeType": "ExpressionStatement",
                  "src": "5043:18:156"
                },
                {
                  "assignments": [
                    87710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87710,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5137:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87727,
                      "src": "5124:16:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 87709,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5124:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert",
                  "id": 87715,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4265617453746f707065642829",
                        "id": 87713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5167:21:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        },
                        "value": "Heart_BeatStopped()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        }
                      ],
                      "expression": {
                        "id": 87711,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5143:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 87712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5143:23:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 87714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:46:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5124:65:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87719,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87710,
                        "src": "5215:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87716,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5199:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5199:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5199:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87721,
                  "nodeType": "ExpressionStatement",
                  "src": "5199:20:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87722,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "5229:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "5229:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87726,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:12:156"
                }
              ]
            },
            "functionSelector": "7e9506de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfInactive",
            "nameLocation": "4923:36:156",
            "parameters": {
              "id": 87695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4959:2:156"
            },
            "returnParameters": {
              "id": 87696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4969:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87751,
            "nodeType": "FunctionDefinition",
            "src": "5254:318:156",
            "nodes": [],
            "body": {
              "id": 87750,
              "nodeType": "Block",
              "src": "5309:263:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87733,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5462:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87750,
                      "src": "5449:16:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 87732,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5449:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert since it hasn't been more than the frequency since the last beat (deployment)",
                  "id": 87738,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 87736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5492:20:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 87734,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5468:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 87735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5468:23:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 87737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5468:45:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5449:64:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87742,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87733,
                        "src": "5539:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87739,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5523:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5523:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87744,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:20:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87745,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "5553:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "5553:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87749,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:12:156"
                }
              ]
            },
            "functionSelector": "8d0be1ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfTooEarly",
            "nameLocation": "5263:36:156",
            "parameters": {
              "id": 87729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5299:2:156"
            },
            "returnParameters": {
              "id": 87730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87817,
            "nodeType": "FunctionDefinition",
            "src": "5578:731:156",
            "nodes": [],
            "body": {
              "id": 87816,
              "nodeType": "Block",
              "src": "5642:667:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87757,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5698:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5698:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87759,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "5716:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 87760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52613,
                              "src": "5716:15:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 87761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5716:17:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5736:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5716:21:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5698:39:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87754,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5690:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "5690:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 87765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:48:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87766,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:48:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87768,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "5858:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 87769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52226,
                          "src": "5858:14:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 87770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5858:16:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87771,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5876:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5876:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87773,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "5894:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 87774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52613,
                              "src": "5894:15:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 87775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5894:17:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5914:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5894:21:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5876:39:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87767,
                      "name": "assertLe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1768,
                        1793,
                        1823,
                        1848
                      ],
                      "referencedDeclaration": 1768,
                      "src": "5849:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:67:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87780,
                  "nodeType": "ExpressionStatement",
                  "src": "5849:67:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87781,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "5953:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "5953:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5953:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87785,
                  "nodeType": "ExpressionStatement",
                  "src": "5953:12:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87787,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "6068:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 87788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52226,
                          "src": "6068:14:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 87789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6068:16:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87790,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6086:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6086:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 87792,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "6104:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 87793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52613,
                            "src": "6104:15:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 87794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6104:17:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6086:35:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87786,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "6059:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:63:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87797,
                  "nodeType": "ExpressionStatement",
                  "src": "6059:63:156"
                },
                {
                  "assignments": [
                    87799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87799,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "6199:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87816,
                      "src": "6186:16:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 87798,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6186:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87804,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 87802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6229:20:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 87800,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6205:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 87801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "6205:23:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 87803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6205:45:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6186:64:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87808,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87799,
                        "src": "6276:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87805,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6260:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "6260:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6260:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87810,
                  "nodeType": "ExpressionStatement",
                  "src": "6260:20:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87811,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "6290:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "6290:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87815,
                  "nodeType": "ExpressionStatement",
                  "src": "6290:12:156"
                }
              ]
            },
            "functionSelector": "7b47a7f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
            "nameLocation": "5587:45:156",
            "parameters": {
              "id": 87752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5632:2:156"
            },
            "returnParameters": {
              "id": 87753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5642:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87848,
            "nodeType": "FunctionDefinition",
            "src": "6315:383:156",
            "nodes": [],
            "body": {
              "id": 87847,
              "nodeType": "Block",
              "src": "6366:332:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87822,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6461:9:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87847,
                      "src": "6453:17:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87821,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6453:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 87826,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87823,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "6473:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52613,
                      "src": "6473:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 87825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6473:17:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6453:37:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87830,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6508:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6508:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 87832,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87822,
                          "src": "6526:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6508:27:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87827,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6500:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "6500:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 87834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6500:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87835,
                  "nodeType": "ExpressionStatement",
                  "src": "6500:36:156"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 87839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6610:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87836,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87384,
                        "src": "6594:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$70980",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 87838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70867,
                      "src": "6594:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 87840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6594:22:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87841,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:22:156"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87842,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "6679:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "6679:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87846,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:12:156"
                }
              ]
            },
            "functionSelector": "e2627194",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfPriceReverts",
            "nameLocation": "6324:32:156",
            "parameters": {
              "id": 87818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6356:2:156"
            },
            "returnParameters": {
              "id": 87819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6366:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87879,
            "nodeType": "FunctionDefinition",
            "src": "6704:388:156",
            "nodes": [],
            "body": {
              "id": 87878,
              "nodeType": "Block",
              "src": "6757:335:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87853,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6852:9:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87878,
                      "src": "6844:17:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87852,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6844:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 87857,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87854,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "6864:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52613,
                      "src": "6864:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 87856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6864:17:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6844:37:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87861,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6899:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6899:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 87863,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87853,
                          "src": "6917:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6899:27:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87858,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6891:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "6891:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 87865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6891:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87866,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:36:156"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 87870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7004:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87867,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87390,
                        "src": "6985:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$87361",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 87869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87360,
                      "src": "6985:18:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 87871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6985:25:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87872,
                  "nodeType": "ExpressionStatement",
                  "src": "6985:25:156"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87873,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "7073:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "7073:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87877,
                  "nodeType": "ExpressionStatement",
                  "src": "7073:12:156"
                }
              ]
            },
            "functionSelector": "0bb8dc03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfOperateReverts",
            "nameLocation": "6713:34:156",
            "parameters": {
              "id": 87849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6747:2:156"
            },
            "returnParameters": {
              "id": 87850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6757:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87899,
            "nodeType": "FunctionDefinition",
            "src": "7167:246:156",
            "nodes": [],
            "body": {
              "id": 87898,
              "nodeType": "Block",
              "src": "7215:198:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87885,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "7281:9:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87898,
                      "src": "7273:17:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7273:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart",
                  "id": 87889,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87886,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "7293:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52613,
                      "src": "7293:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 87888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:17:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7273:37:156"
                },
                {
                  "documentation": "Check that the frequency is correct",
                  "expression": {
                    "arguments": [
                      {
                        "id": 87891,
                        "name": "frequency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87885,
                        "src": "7378:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "38",
                            "id": 87894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7397:7:156",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            },
                            "value": "8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            }
                          ],
                          "id": 87893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7389:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 87892,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7389:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7389:16:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87890,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7369:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:37:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87897,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:37:156"
                }
              ]
            },
            "documentation": {
              "id": 87880,
              "nodeType": "StructuredDocumentation",
              "src": "7144:18:156",
              "text": "[X] frequency"
            },
            "functionSelector": "882d3844",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_viewFrequency",
            "nameLocation": "7176:29:156",
            "parameters": {
              "id": 87881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7205:2:156"
            },
            "returnParameters": {
              "id": 87882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7215:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87970,
            "nodeType": "FunctionDefinition",
            "src": "7693:832:156",
            "nodes": [],
            "body": {
              "id": 87969,
              "nodeType": "Block",
              "src": "7737:788:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87905,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7849:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87969,
                      "src": "7836:16:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 87904,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7836:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect the revert since not enough time has passed",
                  "id": 87910,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 87908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7879:20:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 87906,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7855:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 87907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7855:23:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 87909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7855:45:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7836:64:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87914,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87905,
                        "src": "7926:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87911,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7910:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7910:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87916,
                  "nodeType": "ExpressionStatement",
                  "src": "7910:20:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87917,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "7940:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "7940:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7940:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87921,
                  "nodeType": "ExpressionStatement",
                  "src": "7940:12:156"
                },
                {
                  "documentation": "Reset the beat so that it can be called without moving the time forward",
                  "expression": {
                    "arguments": [
                      {
                        "id": 87925,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "8056:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87922,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8047:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8047:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8047:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87927,
                  "nodeType": "ExpressionStatement",
                  "src": "8047:16:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87928,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "8073:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52486,
                      "src": "8073:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8073:17:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87932,
                  "nodeType": "ExpressionStatement",
                  "src": "8073:17:156"
                },
                {
                  "assignments": [
                    87935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87935,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "8172:12:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87969,
                      "src": "8164:20:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8164:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 87943,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87940,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8217:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 87939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8209:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87938,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8209:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8209:13:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87936,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "8187:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 87937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "8187:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8164:59:156"
                },
                {
                  "documentation": "Beat the heart and expect it to work",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87944,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "8283:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "8283:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8283:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87948,
                  "nodeType": "ExpressionStatement",
                  "src": "8283:12:156"
                },
                {
                  "assignments": [
                    87951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87951,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "8408:10:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 87969,
                      "src": "8400:18:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87950,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8400:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 87959,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87956,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8451:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 87955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8443:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87954,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8443:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8443:13:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87952,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "8421:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 87953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "8421:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8421:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8400:57:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87961,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87951,
                        "src": "8476:10:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87962,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87935,
                          "src": "8488:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 87963,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "8503:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 87964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52229,
                            "src": "8503:12:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 87965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8503:14:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8488:29:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87960,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8467:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:51:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87968,
                  "nodeType": "ExpressionStatement",
                  "src": "8467:51:156"
                }
              ]
            },
            "documentation": {
              "id": 87900,
              "nodeType": "StructuredDocumentation",
              "src": "7466:222:156",
              "text": "DONE\n [X] resetBeat\n [X] activate and deactivate\n [X] setOperator\n [X] setRewardTokenAndAmount\n [X] withdrawUnspentRewards\n [X] cannot call admin functions without permissions"
            },
            "functionSelector": "e853d736",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_resetBeat",
            "nameLocation": "7702:25:156",
            "parameters": {
              "id": 87901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7727:2:156"
            },
            "returnParameters": {
              "id": 87902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7737:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88040,
            "nodeType": "FunctionDefinition",
            "src": "8531:752:156",
            "nodes": [],
            "body": {
              "id": 88039,
              "nodeType": "Block",
              "src": "8585:698:156",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Expect the heart to be active to begin with",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87974,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "8662:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 87975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52223,
                          "src": "8662:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 87976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8662:14:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 87973,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8651:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 87977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8651:26:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87978,
                  "nodeType": "ExpressionStatement",
                  "src": "8651:26:156"
                },
                {
                  "assignments": [
                    87980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87980,
                      "mutability": "mutable",
                      "name": "lastBeat",
                      "nameLocation": "8696:8:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88039,
                      "src": "8688:16:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87979,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8688:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87984,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87981,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "8707:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52226,
                      "src": "8707:14:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 87983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8707:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8688:35:156"
                },
                {
                  "documentation": "Toggle the heart to make it inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 87988,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "8792:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87985,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8783:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8783:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8783:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87990,
                  "nodeType": "ExpressionStatement",
                  "src": "8783:16:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87991,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "8809:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 87993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52513,
                      "src": "8809:16:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8809:18:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87995,
                  "nodeType": "ExpressionStatement",
                  "src": "8809:18:156"
                },
                {
                  "documentation": "Expect the heart to be inactive and lastBeat to remain the same",
                  "expression": {
                    "arguments": [
                      {
                        "id": 88000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8925:15:156",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 87997,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "8926:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 87998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52223,
                            "src": "8926:12:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 87999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8926:14:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 87996,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8914:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 88001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8914:27:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88002,
                  "nodeType": "ExpressionStatement",
                  "src": "8914:27:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88004,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "8960:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 88005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52226,
                          "src": "8960:14:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 88006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8960:16:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 88007,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87980,
                        "src": "8978:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88003,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8951:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8951:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88009,
                  "nodeType": "ExpressionStatement",
                  "src": "8951:36:156"
                },
                {
                  "documentation": "Toggle the heart to make it active again",
                  "expression": {
                    "arguments": [
                      {
                        "id": 88013,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "9060:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88010,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9051:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9051:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9051:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88015,
                  "nodeType": "ExpressionStatement",
                  "src": "9051:16:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88016,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "9077:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52501,
                      "src": "9077:14:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9077:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88020,
                  "nodeType": "ExpressionStatement",
                  "src": "9077:16:156"
                },
                {
                  "documentation": "Expect the heart to be active again and lastBeat to be reset",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88022,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "9188:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 88023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52223,
                          "src": "9188:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 88024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9188:14:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 88021,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "9177:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 88025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9177:26:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88026,
                  "nodeType": "ExpressionStatement",
                  "src": "9177:26:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88028,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "9222:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 88029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52226,
                          "src": "9222:14:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 88030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9222:16:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88031,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9240:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9240:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 88033,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "9258:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 88034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52613,
                            "src": "9258:15:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 88035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9258:17:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9240:35:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88027,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "9213:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9213:63:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88038,
                  "nodeType": "ExpressionStatement",
                  "src": "9213:63:156"
                }
              ]
            },
            "functionSelector": "5d948bbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_activate_deactivate",
            "nameLocation": "8540:35:156",
            "parameters": {
              "id": 87971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8575:2:156"
            },
            "returnParameters": {
              "id": 87972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8585:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88068,
            "nodeType": "FunctionDefinition",
            "src": "9289:305:156",
            "nodes": [],
            "body": {
              "id": 88067,
              "nodeType": "Block",
              "src": "9353:241:156",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the operator using the provided address",
                  "expression": {
                    "arguments": [
                      {
                        "id": 88048,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "9428:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88045,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9419:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9419:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9419:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88050,
                  "nodeType": "ExpressionStatement",
                  "src": "9419:16:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88054,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88042,
                        "src": "9463:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88051,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "9445:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52529,
                      "src": "9445:17:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9445:30:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88056,
                  "nodeType": "ExpressionStatement",
                  "src": "9445:30:156"
                },
                {
                  "documentation": "Check that the operator has been updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 88060,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "9556:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 88061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52239,
                              "src": "9556:14:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IOperator_$57664_$",
                                "typeString": "function () view external returns (contract IOperator)"
                              }
                            },
                            "id": 88062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9556:16:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOperator_$57664",
                              "typeString": "contract IOperator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IOperator_$57664",
                              "typeString": "contract IOperator"
                            }
                          ],
                          "id": 88059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9548:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9548:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9548:25:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88064,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88042,
                        "src": "9575:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88057,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "9539:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9539:48:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88066,
                  "nodeType": "ExpressionStatement",
                  "src": "9539:48:156"
                }
              ]
            },
            "functionSelector": "56735b57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectnes_setOperator",
            "nameLocation": "9298:26:156",
            "parameters": {
              "id": 88043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88042,
                  "mutability": "mutable",
                  "name": "newOperator",
                  "nameLocation": "9333:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 88068,
                  "src": "9325:19:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9325:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9324:21:156"
            },
            "returnParameters": {
              "id": 88044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9353:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88273,
            "nodeType": "FunctionDefinition",
            "src": "9600:1809:156",
            "nodes": [],
            "body": {
              "id": 88272,
              "nodeType": "Block",
              "src": "9658:1751:156",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88074,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9736:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9736:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 88076,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "9754:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 88077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52613,
                            "src": "9754:15:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 88078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9754:17:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9736:35:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88071,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9728:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "9728:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 88080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9728:44:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88081,
                  "nodeType": "ExpressionStatement",
                  "src": "9728:44:156"
                },
                {
                  "assignments": [
                    88085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88085,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nameLocation": "9829:8:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88272,
                      "src": "9819:18:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$27348",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 88084,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88083,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27348,
                          "src": "9819:9:156"
                        },
                        "referencedDeclaration": 27348,
                        "src": "9819:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Create new reward token",
                  "id": 88093,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4e657720546f6b656e",
                        "id": 88089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9854:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        "value": "New Token"
                      },
                      {
                        "hexValue": "4e54",
                        "id": 88090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9867:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        "value": "NT"
                      },
                      {
                        "hexValue": "3138",
                        "id": 88091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9873:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 88088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9840:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$27348_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                      },
                      "typeName": {
                        "id": 88087,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88086,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27348,
                          "src": "9844:9:156"
                        },
                        "referencedDeclaration": 27348,
                        "src": "9844:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      }
                    },
                    "id": 88092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9840:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$27348",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9819:57:156"
                },
                {
                  "assignments": [
                    88095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88095,
                      "mutability": "mutable",
                      "name": "newReward",
                      "nameLocation": "9894:9:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88272,
                      "src": "9886:17:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9886:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88100,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32653138",
                        "id": 88098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9914:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 88097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9906:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 88096,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9906:7:156",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 88099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9906:13:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9886:33:156"
                },
                {
                  "assignments": [
                    88103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88103,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "10036:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88272,
                      "src": "10023:16:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 88102,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10023:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to set new reward token and amount while a beat is available, expect to fail",
                  "id": 88108,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 88106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10066:23:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 88104,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10042:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 88105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "10042:23:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 88107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10042:48:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10023:67:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88112,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88103,
                        "src": "10116:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88109,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10100:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "10100:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10100:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88114,
                  "nodeType": "ExpressionStatement",
                  "src": "10100:20:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88118,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "10139:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88115,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10130:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10130:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10130:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88120,
                  "nodeType": "ExpressionStatement",
                  "src": "10130:16:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88124,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88085,
                        "src": "10186:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 88125,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88095,
                        "src": "10196:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88121,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "10156:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52572,
                      "src": "10156:29:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$28408_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 88126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10156:50:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88127,
                  "nodeType": "ExpressionStatement",
                  "src": "10156:50:156"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88128,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "10244:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "10244:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10244:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88132,
                  "nodeType": "ExpressionStatement",
                  "src": "10244:12:156"
                },
                {
                  "documentation": "Set a new reward token and amount from the policy",
                  "expression": {
                    "arguments": [
                      {
                        "id": 88136,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "10338:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88133,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10329:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10329:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88138,
                  "nodeType": "ExpressionStatement",
                  "src": "10329:16:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88142,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88085,
                        "src": "10385:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 88143,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88095,
                        "src": "10395:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88139,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "10355:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52572,
                      "src": "10355:29:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$28408_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 88144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10355:50:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88145,
                  "nodeType": "ExpressionStatement",
                  "src": "10355:50:156"
                },
                {
                  "documentation": "Expect the heart's reward token and reward to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 88149,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "10502:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 88150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52233,
                              "src": "10502:17:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$28408_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 88151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10502:19:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28408",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$28408",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 88148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10494:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88147,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10494:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10494:28:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88155,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88085,
                            "src": "10532:8:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$27348",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$27348",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 88154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10524:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88153,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10524:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10524:17:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88146,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "10485:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10485:57:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88158,
                  "nodeType": "ExpressionStatement",
                  "src": "10485:57:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88160,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "10561:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 88161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52229,
                          "src": "10561:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 88162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10561:14:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 88163,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88095,
                        "src": "10577:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "10552:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10552:35:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88165,
                  "nodeType": "ExpressionStatement",
                  "src": "10552:35:156"
                },
                {
                  "documentation": "Mint some new tokens to the heart to pay rewards",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88171,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "10681:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 88170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10673:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10673:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10673:14:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            },
                            "id": 88177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "33",
                              "id": 88175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10697:1:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 88176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10701:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "10697:8:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          ],
                          "id": 88174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10689:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 88173,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10689:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10689:17:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88166,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88085,
                        "src": "10659:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27334,
                      "src": "10659:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 88179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:48:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88180,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:48:156"
                },
                {
                  "assignments": [
                    88183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88183,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "10800:12:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88272,
                      "src": "10792:20:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88182,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10792:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Expect the heart to reward the new token and amount on a beat",
                  "id": 88191,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88188,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10842:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 88187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10834:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10834:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10834:13:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88184,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88085,
                        "src": "10815:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "10815:18:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10815:33:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10792:56:156"
                },
                {
                  "assignments": [
                    88193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88193,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "10866:9:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88272,
                      "src": "10858:17:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10858:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88197,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88194,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "10878:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52613,
                      "src": "10878:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 88196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10878:17:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10858:37:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88201,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10913:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10913:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 88203,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88193,
                          "src": "10931:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10913:27:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88198,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10905:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "10905:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 88205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10905:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88206,
                  "nodeType": "ExpressionStatement",
                  "src": "10905:36:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88207,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "10951:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "10951:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10951:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88211,
                  "nodeType": "ExpressionStatement",
                  "src": "10951:12:156"
                },
                {
                  "assignments": [
                    88213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88213,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "10982:10:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88272,
                      "src": "10974:18:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10974:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88221,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88218,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11022:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$88463",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 88217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11014:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11014:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11014:13:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88214,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88085,
                        "src": "10995:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "10995:18:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10995:33:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10974:54:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88223,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88213,
                        "src": "11047:10:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88224,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88183,
                          "src": "11059:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 88225,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "11074:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 88226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52229,
                            "src": "11074:12:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 88227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11074:14:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11059:29:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88222,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "11038:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11038:51:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88230,
                  "nodeType": "ExpressionStatement",
                  "src": "11038:51:156"
                },
                {
                  "documentation": "Balance is now less than the reward amount, test the min function",
                  "expression": {
                    "id": 88239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88231,
                      "name": "startBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88183,
                      "src": "11178:12:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 88236,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11220:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$88463",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$88463",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 88235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11212:7:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 88234,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11212:7:156",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 88237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11212:13:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 88232,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88085,
                          "src": "11193:8:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$27348",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 88233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28051,
                        "src": "11193:18:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 88238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11193:33:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11178:48:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88240,
                  "nodeType": "ExpressionStatement",
                  "src": "11178:48:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88244,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11244:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11244:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 88246,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88193,
                          "src": "11262:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11244:27:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88241,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11236:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "11236:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 88248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11236:36:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88249,
                  "nodeType": "ExpressionStatement",
                  "src": "11236:36:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88250,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "11282:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "11282:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11282:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88254,
                  "nodeType": "ExpressionStatement",
                  "src": "11282:12:156"
                },
                {
                  "expression": {
                    "id": 88263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88255,
                      "name": "endBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88213,
                      "src": "11305:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 88260,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11345:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$88463",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$88463",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 88259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11337:7:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 88258,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11337:7:156",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 88261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11337:13:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 88256,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88085,
                          "src": "11318:8:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$27348",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 88257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28051,
                        "src": "11318:18:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 88262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11318:33:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11305:46:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88264,
                  "nodeType": "ExpressionStatement",
                  "src": "11305:46:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88266,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88213,
                        "src": "11370:10:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88267,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88183,
                          "src": "11382:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 88268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11397:4:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11382:19:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88265,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "11361:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11361:41:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88271,
                  "nodeType": "ExpressionStatement",
                  "src": "11361:41:156"
                }
              ]
            },
            "functionSelector": "2c639076",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setRewardTokenAndAmount",
            "nameLocation": "9609:39:156",
            "parameters": {
              "id": 88069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9648:2:156"
            },
            "returnParameters": {
              "id": 88070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9658:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88383,
            "nodeType": "FunctionDefinition",
            "src": "11415:1174:156",
            "nodes": [],
            "body": {
              "id": 88382,
              "nodeType": "Block",
              "src": "11472:1117:156",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88279,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11550:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11550:15:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 88281,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87393,
                              "src": "11568:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 88282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52613,
                            "src": "11568:15:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 88283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11568:17:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11550:35:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88276,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11542:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "11542:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 88285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11542:44:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88286,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:44:156"
                },
                {
                  "assignments": [
                    88289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88289,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "11676:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88382,
                      "src": "11663:16:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 88288,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11663:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call while a beat is available, expect to fail",
                  "id": 88294,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 88292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11706:23:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 88290,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11682:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 88291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "11682:23:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 88293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11682:48:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11663:67:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88298,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88289,
                        "src": "11756:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88295,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11740:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "11740:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11740:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88300,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:20:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88304,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "11779:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88301,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11770:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "11770:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11770:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88306,
                  "nodeType": "ExpressionStatement",
                  "src": "11770:16:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88310,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "11825:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 88307,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "11796:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52599,
                      "src": "11796:28:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$28408_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 88311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11796:41:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88312,
                  "nodeType": "ExpressionStatement",
                  "src": "11796:41:156"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88313,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "11875:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52424,
                      "src": "11875:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11875:12:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88317,
                  "nodeType": "ExpressionStatement",
                  "src": "11875:12:156"
                },
                {
                  "assignments": [
                    88320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88320,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "11970:12:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88382,
                      "src": "11962:20:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11962:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the balance of the reward token on the contract",
                  "id": 88328,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88325,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87375,
                            "src": "12015:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12007:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12007:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12007:15:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88321,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "11985:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "11985:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11985:38:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11962:61:156"
                },
                {
                  "assignments": [
                    88330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88330,
                      "mutability": "mutable",
                      "name": "heartBalance",
                      "nameLocation": "12041:12:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88382,
                      "src": "12033:20:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88329,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12033:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88338,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88335,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87393,
                            "src": "12086:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 88334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12078:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12078:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12078:14:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88331,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "12056:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "12056:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12056:37:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12033:60:156"
                },
                {
                  "documentation": "Withdraw the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 88342,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87375,
                        "src": "12162:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88339,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12153:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12153:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12153:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88344,
                  "nodeType": "ExpressionStatement",
                  "src": "12153:16:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88348,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "12208:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 88345,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "12179:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52599,
                      "src": "12179:28:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$28408_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 88349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12179:41:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88350,
                  "nodeType": "ExpressionStatement",
                  "src": "12179:41:156"
                },
                {
                  "assignments": [
                    88352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88352,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "12238:10:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88382,
                      "src": "12230:18:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12230:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88360,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88357,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87375,
                            "src": "12281:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12273:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88355,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12273:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12273:15:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88353,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "12251:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28051,
                      "src": "12251:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12251:38:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12230:59:156"
                },
                {
                  "documentation": "Expect the heart's reward token balance to be 0",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88366,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "12399:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 88365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12391:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88364,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12391:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12391:14:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88362,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87378,
                            "src": "12369:11:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$27348",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 88363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28051,
                          "src": "12369:21:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12369:37:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12416:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12408:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 88369,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12408:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12408:10:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88361,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12360:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12360:59:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88374,
                  "nodeType": "ExpressionStatement",
                  "src": "12360:59:156"
                },
                {
                  "documentation": "Expect this contract's reward token balance to be increased by the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 88376,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88352,
                        "src": "12542:10:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88377,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88320,
                          "src": "12554:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 88378,
                          "name": "heartBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88330,
                          "src": "12569:12:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12554:27:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12533:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12533:49:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88381,
                  "nodeType": "ExpressionStatement",
                  "src": "12533:49:156"
                }
              ]
            },
            "functionSelector": "e9aaa0e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_withdrawUnspentRewards",
            "nameLocation": "11424:38:156",
            "parameters": {
              "id": 88274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11462:2:156"
            },
            "returnParameters": {
              "id": 88275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11472:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88462,
            "nodeType": "FunctionDefinition",
            "src": "12595:668:156",
            "nodes": [],
            "body": {
              "id": 88461,
              "nodeType": "Block",
              "src": "12672:591:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88388,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "12780:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 88461,
                      "src": "12767:16:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 88387,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12767:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call admin functions on the heart as non-policy and expect revert",
                  "id": 88399,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 88391,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48520,
                            "src": "12822:7:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$48520_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 88392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48466,
                          "src": "12822:25:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 88393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "12822:34:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 88396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12878:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            }
                          ],
                          "id": 88395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12870:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 88394,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12870:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12870:22:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 88389,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12786:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 88390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "12786:22:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 88398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:116:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12767:135:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88403,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88388,
                        "src": "12929:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88400,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12913:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12913:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12913:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88405,
                  "nodeType": "ExpressionStatement",
                  "src": "12913:20:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88406,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "12943:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52486,
                      "src": "12943:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12943:17:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88410,
                  "nodeType": "ExpressionStatement",
                  "src": "12943:17:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88414,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88388,
                        "src": "12987:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88411,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12971:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12971:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12971:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88416,
                  "nodeType": "ExpressionStatement",
                  "src": "12971:20:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88417,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "13001:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52513,
                      "src": "13001:16:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13001:18:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88421,
                  "nodeType": "ExpressionStatement",
                  "src": "13001:18:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88425,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88388,
                        "src": "13046:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88422,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13030:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13030:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13030:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88427,
                  "nodeType": "ExpressionStatement",
                  "src": "13030:20:156"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88428,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "13060:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52501,
                      "src": "13060:14:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13060:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88432,
                  "nodeType": "ExpressionStatement",
                  "src": "13060:16:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88436,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88388,
                        "src": "13103:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88433,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13087:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13087:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13087:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88438,
                  "nodeType": "ExpressionStatement",
                  "src": "13087:20:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88442,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "13147:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "32653138",
                            "id": 88445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13168:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 88444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13160:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 88443,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13160:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13160:13:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88439,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "13117:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52572,
                      "src": "13117:29:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$28408_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 88447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13117:57:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88448,
                  "nodeType": "ExpressionStatement",
                  "src": "13117:57:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88452,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88388,
                        "src": "13201:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88449,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13185:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13185:15:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13185:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88454,
                  "nodeType": "ExpressionStatement",
                  "src": "13185:20:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88458,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "13244:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$27348",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 88455,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "13215:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52614",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52599,
                      "src": "13215:28:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$28408_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 88459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13215:41:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88460,
                  "nodeType": "ExpressionStatement",
                  "src": "13215:41:156"
                }
              ]
            },
            "functionSelector": "1fdada07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
            "nameLocation": "12604:58:156",
            "parameters": {
              "id": 88384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12662:2:156"
            },
            "returnParameters": {
              "id": 88385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12672:0:156"
            },
            "scope": 88463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 87362,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "1417:4:156"
            },
            "id": 87363,
            "nodeType": "InheritanceSpecifier",
            "src": "1417:4:156"
          }
        ],
        "canonicalName": "HeartTest",
        "contractDependencies": [
          27348,
          31595,
          48441,
          52614,
          56616,
          59387,
          70980,
          87361
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88463,
          5484,
          2554,
          2291
        ],
        "name": "HeartTest",
        "nameLocation": "1404:9:156",
        "scope": 88464,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 156
}