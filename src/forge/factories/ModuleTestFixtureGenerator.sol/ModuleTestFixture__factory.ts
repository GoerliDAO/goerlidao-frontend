/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ModuleTestFixture,
  ModuleTestFixtureInterface,
  PermissionsStruct,
} from "../../ModuleTestFixtureGenerator.sol/ModuleTestFixture";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "kernel_",
        type: "address",
      },
      {
        internalType: "contract Module",
        name: "module_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "requests_",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    name: "KernelAdapter_OnlyKernel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "Keycode",
        name: "keycode_",
        type: "bytes5",
      },
    ],
    name: "Policy_ModuleDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "newKernel_",
        type: "address",
      },
    ],
    name: "changeKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "configureDependencies",
    outputs: [
      {
        internalType: "Keycode[]",
        name: "dependencies",
        type: "bytes5[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract Kernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161080a38038061080a83398101604081905261002f9161016c565b600080546001600160a01b038086166001600160a01b031992831617835560018054918616919092161790558151905b818110156100dc57600283828151811061007b5761007b610290565b6020908102919091018101518254600181018455600093845292829020815193018054919092015160e01c65010000000000026001600160481b031990911660d89390931c92909217919091179055806100d4816102a6565b91505061005f565b50505050506102cd565b6001600160a01b03811681146100fb57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610136576101366100fe565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610164576101646100fe565b604052919050565b60008060006060848603121561018157600080fd5b835161018c816100e6565b8093505060208085015161019f816100e6565b604086810151919450906001600160401b03808211156101be57600080fd5b818801915088601f8301126101d257600080fd5b8151818111156101e4576101e46100fe565b6101f2858260051b0161013c565b818152858101925060069190911b83018501908a82111561021257600080fd5b928501925b818410156102805784848c03121561022f5760008081fd5b610237610114565b84516001600160d81b0319811681146102505760008081fd5b8152848701516001600160e01b03198116811461026d5760008081fd5b8188015283529284019291850191610217565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016102c657634e487b7160e01b600052601160045260246000fd5b5060010190565b61052e806102dc6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806322f3e2d41461005c5780634657b36c146100795780635924be701461008e5780639459b875146100a3578063d4aae0c4146100b8575b600080fd5b6100646100d8565b60405190151581526020015b60405180910390f35b61008c610087366004610364565b61014f565b005b6100966101a7565b6040516100709190610394565b6100ab6102a6565b60405161007091906103f7565b6000546100cb906001600160a01b031681565b6040516100709190610445565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb90610109903090600401610445565b602060405180830381865afa158015610126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014a9190610459565b905090565b6000546001600160a01b03163314610185573360405163053e900f60e21b815260040161017c9190610445565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600254606090806001600160401b038111156101c5576101c561047b565b60405190808252806020026020018201604052801561020a57816020015b60408051808201909152600080825260208201528152602001906001900390816101e35790505b50915060005b818110156102a1576002818154811061022b5761022b610491565b60009182526020918290206040805180820190915291015460d881901b6001600160d81b0319168252600160281b900460e01b6001600160e01b03191691810191909152835184908390811061028357610283610491565b60200260200101819052508080610299906104a7565b915050610210565b505090565b60408051600180825281830190925260609160208083019080368337505060015460408051630d73f61760e11b815290519394506001600160a01b0390911692631ae7ec2e925060048083019260209291908290030181865afa158015610311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033591906104ce565b8160008151811061034857610348610491565b6001600160d81b03199092166020928302919091019091015290565b60006020828403121561037657600080fd5b81356001600160a01b038116811461038d57600080fd5b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156103ea57815180516001600160d81b03191685528601516001600160e01b0319168685015292840192908501906001016103b1565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156104395783516001600160d81b03191683529284019291840191600101610413565b50909695505050505050565b6001600160a01b0391909116815260200190565b60006020828403121561046b57600080fd5b8151801515811461038d57600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016104c757634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156104e057600080fd5b81516001600160d81b03198116811461038d57600080fdfea264697066735822122055209b86867a60f227a19519538be547f88398ab1e02555a55f1f4ef54792bc964736f6c634300080f0033";

type ModuleTestFixtureConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ModuleTestFixtureConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class ModuleTestFixture__factory extends ContractFactory {
  constructor(...args: ModuleTestFixtureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kernel_: PromiseOrValue<string>,
    module_: PromiseOrValue<string>,
    requests_: PermissionsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ModuleTestFixture> {
    return super.deploy(kernel_, module_, requests_, overrides || {}) as Promise<ModuleTestFixture>;
  }
  override getDeployTransaction(
    kernel_: PromiseOrValue<string>,
    module_: PromiseOrValue<string>,
    requests_: PermissionsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(kernel_, module_, requests_, overrides || {});
  }
  override attach(address: string): ModuleTestFixture {
    return super.attach(address) as ModuleTestFixture;
  }
  override connect(signer: Signer): ModuleTestFixture__factory {
    return super.connect(signer) as ModuleTestFixture__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleTestFixtureInterface {
    return new utils.Interface(_abi) as ModuleTestFixtureInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ModuleTestFixture {
    return new Contract(address, _abi, signerOrProvider) as ModuleTestFixture;
  }
}
