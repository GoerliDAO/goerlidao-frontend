/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { GDAOAccessControlled, GDAOAccessControlledInterface } from "../GDAOAccessControlled";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IGDAOAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IGDAOAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGDAOAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class GDAOAccessControlled__factory {
  static readonly abi = _abi;
  static createInterface(): GDAOAccessControlledInterface {
    return new utils.Interface(_abi) as GDAOAccessControlledInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GDAOAccessControlled {
    return new Contract(address, _abi, signerOrProvider) as GDAOAccessControlled;
  }
}
