/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MockXgdao, MockXgdaoInterface } from "../../GoerliMocks.sol/MockXgdao";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "balanceFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "balanceTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620011313803806200113183398101604081905262000034916200014d565b604080518082018252600580825264784744414f60d81b602080840182905284518086019095529184529083015290601282828260006200007684826200020c565b5060016200008583826200020c565b5060ff81166080524660a0526200009b620000b1565b60c0525050506006939093555062000356915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000e59190620002d8565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000602082840312156200016057600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019257607f821691505b602082108103620001b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020757600081815260208120601f850160051c81016020861015620001e25750805b601f850160051c820191505b818110156200020357828155600101620001ee565b5050505b505050565b81516001600160401b0381111562000228576200022862000167565b62000240816200023984546200017d565b84620001b9565b602080601f8311600181146200027857600084156200025f5750858301515b600019600386901b1c1916600185901b17855562000203565b600085815260208120601f198616915b82811015620002a95788860151825594840194600190910190840162000288565b5085821015620002c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620002e8816200017d565b6001828116801562000303576001811462000319576200034a565b60ff19841687528215158302870194506200034a565b8760005260208060002060005b85811015620003415781548a82015290840190820162000326565b50505082870194505b50929695505050505050565b60805160a05160c051610d9d62000394600039600061046a01526000610435015260008181610145015281816104a501526104fd0152610d9d6000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c806306fdde03146100d5578063095ea7b3146100f357806318160ddd1461011657806323b872dd1461012d578063313ce567146101405780633644e5151461017957806340c10f191461018157806366a5236c1461019657806370a08231146101a95780637ecebe00146101c957806395d89b41146101e95780639dc29fac146101f1578063a824876814610204578063a9059cbb14610217578063d505accf1461022a578063dd62ed3e1461023d575b600080fd5b6100dd610268565b6040516100ea919061091d565b60405180910390f35b61010661010136600461098e565b6102f6565b60405190151581526020016100ea565b61011f60025481565b6040519081526020016100ea565b61010661013b3660046109b8565b610351565b6101677f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100ea565b61011f610431565b61019461018f36600461098e565b61048c565b005b61011f6101a43660046109f4565b61049a565b61011f6101b7366004610a0d565b60036020526000908152604090205481565b61011f6101d7366004610a0d565b60056020526000908152604090205481565b6100dd6104df565b6101946101ff36600461098e565b6104ec565b61011f6102123660046109f4565b6104f6565b61010661022536600461098e565b610530565b610194610238366004610a2f565b610596565b61011f61024b366004610aa2565b600460209081526000928352604080842090915290825290205481565b6000805461027590610ad5565b80601f01602080910402602001604051908101604052809291908181526020018280546102a190610ad5565b80156102ee5780601f106102c3576101008083540402835291602001916102ee565b820191906000526020600020905b8154815290600101906020018083116102d157829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020610d488339815191529061033f9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103ad576103888382610b25565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103d5908490610b25565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610d288339815191529061041e9087815260200190565b60405180910390a3506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610467576104626107c7565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104968282610861565b5050565b6006546000906104cb7f0000000000000000000000000000000000000000000000000000000000000000600a610c20565b6104d59084610c2f565b61034b9190610c4e565b6001805461027590610ad5565b61049682826108bb565b60006105237f0000000000000000000000000000000000000000000000000000000000000000600a610c20565b6006546104d59084610c2f565b33600090815260036020526040812080548391908390610551908490610b25565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610d288339815191529061033f9086815260200190565b428410156105e55760405162461bcd60e51b815260206004820152601760248201527614115493525517d11150511312539157d1561412549151604a1b60448201526064015b60405180910390fd5b600060016105f1610431565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156106fd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107335750876001600160a01b0316816001600160a01b0316145b6107705760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016105dc565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a1691600080516020610d48833981519152910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107f99190610c70565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546108739190610d0f565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610d2883398151915291015b60405180910390a35050565b6001600160a01b038216600090815260036020526040812080548392906108e3908490610b25565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610d28833981519152906020016108af565b600060208083528351808285015260005b8181101561094a5785810183015185820160400152820161092e565b8181111561095c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461098957600080fd5b919050565b600080604083850312156109a157600080fd5b6109aa83610972565b946020939093013593505050565b6000806000606084860312156109cd57600080fd5b6109d684610972565b92506109e460208501610972565b9150604084013590509250925092565b600060208284031215610a0657600080fd5b5035919050565b600060208284031215610a1f57600080fd5b610a2882610972565b9392505050565b600080600080600080600060e0888a031215610a4a57600080fd5b610a5388610972565b9650610a6160208901610972565b95506040880135945060608801359350608088013560ff81168114610a8557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ab557600080fd5b610abe83610972565b9150610acc60208401610972565b90509250929050565b600181811c90821680610ae957607f821691505b602082108103610b0957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610b3757610b37610b0f565b500390565b600181815b80851115610b77578160001904821115610b5d57610b5d610b0f565b80851615610b6a57918102915b93841c9390800290610b41565b509250929050565b600082610b8e5750600161034b565b81610b9b5750600061034b565b8160018114610bb15760028114610bbb57610bd7565b600191505061034b565b60ff841115610bcc57610bcc610b0f565b50506001821b61034b565b5060208310610133831016604e8410600b8410161715610bfa575081810a61034b565b610c048383610b3c565b8060001904821115610c1857610c18610b0f565b029392505050565b6000610a2860ff841683610b7f565b6000816000190483118215151615610c4957610c49610b0f565b500290565b600082610c6b57634e487b7160e01b600052601260045260246000fd5b500490565b600080835481600182811c915080831680610c8c57607f831692505b60208084108203610cab57634e487b7160e01b86526022600452602486fd5b818015610cbf5760018114610cd457610d01565b60ff1986168952841515850289019650610d01565b60008a81526020902060005b86811015610cf95781548b820152908501908301610ce0565b505084890196505b509498975050505050505050565b60008219821115610d2257610d22610b0f565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a264697066735822122027f3cd58f8617f6f67703eabbac4c32ba457355300fc3a5c6cc07ecff2468f2864736f6c634300080f0033";

type MockXgdaoConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MockXgdaoConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MockXgdao__factory extends ContractFactory {
  constructor(...args: MockXgdaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    index_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MockXgdao> {
    return super.deploy(index_, overrides || {}) as Promise<MockXgdao>;
  }
  override getDeployTransaction(
    index_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(index_, overrides || {});
  }
  override attach(address: string): MockXgdao {
    return super.attach(address) as MockXgdao;
  }
  override connect(signer: Signer): MockXgdao__factory {
    return super.connect(signer) as MockXgdao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockXgdaoInterface {
    return new utils.Interface(_abi) as MockXgdaoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockXgdao {
    return new Contract(address, _abi, signerOrProvider) as MockXgdao;
  }
}
