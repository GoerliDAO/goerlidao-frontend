/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DeployMockPrice, DeployMockPriceInterface } from "../../DeployMockPrice.s.sol/DeployMockPrice";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "contract MockPrice",
        name: "mock_price",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916600117905534801561001d57600080fd5b50610cbb8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633a76846314610046578063c04062261461007e578063f8ccbf4714610086575b600080fd5b610061737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100616100a3565b6000546100939060ff1681565b6040519015158152602001610075565b6040516360f9bb1160e01b81526020600482015260076024820152660b9cd958dc995d60ca1b60448201526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb11906064016000604051808303816000875af1158015610111573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261013991908101906103f2565b604051636229498b60e01b8152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636229498b90610178908590859060040161049e565b6020604051808303816000875af1158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb91906104df565b60405163ce817d4760e01b815260048101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ce817d4790602401600060405180830381600087803b15801561020b57600080fd5b505af115801561021f573d6000803e3d6000fd5b505060405163350d56bf60e01b815260206004820152600660248201526512d15493915360d21b604482015260009250737109709ecfa91a80626ff3989d68f67f5b1dd12d915063350d56bf906064016020604051808303816000875af115801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b291906104f8565b60405190915061708090679077bfd86fd100009083908190849084906102d79061039f565b6001600160a01b03909316835265ffffffffffff90911660208301526040820152606001604051809103906000f080158015610317573d6000803e3d6000fd5b5096507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b5050505050505050505090565b61075d8061052983390190565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103dd5781810151838201526020016103c5565b838111156103ec576000848401525b50505050565b60006020828403121561040457600080fd5b81516001600160401b038082111561041b57600080fd5b818401915084601f83011261042f57600080fd5b815181811115610441576104416103ac565b604051601f8201601f19908116603f01168101908382118183101715610469576104696103ac565b8160405282815287602084870101111561048257600080fd5b6104938360208301602088016103c2565b979650505050505050565b60408152600083518060408401526104bd8160608501602088016103c2565b63ffffffff93909316602083015250601f91909101601f191601606001919050565b6000602082840312156104f157600080fd5b5051919050565b60006020828403121561050a57600080fd5b81516001600160a01b038116811461052157600080fd5b939250505056fe608060405234801561001057600080fd5b5060405161075d38038061075d83398101604081905261002f91610083565b600080546001600160a01b039094166001600160a01b0319909416939093179092556004805465ffffffffffff909216620100000267ffffffffffffff0019909216919091176101001790556005556100dd565b60008060006060848603121561009857600080fd5b83516001600160a01b03811681146100af57600080fd5b602085015190935065ffffffffffff811681146100cb57600080fd5b80925050604084015190509250925092565b610671806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063053f14da1461014e57806318b200711461016a5780631ae7ec2e1461017f5780632c19abb914610195578063313ce567146101a85780633ccec9c4146101c75780634657b36c146101d057806365372147146101e35780636cb56dbc146102055780636d2c2808146102185780637321f100146102215780637a1395aa146102505780637d4dce76146102745780637e20be3b146102aa57806386db7df0146102e25780638a157337146102ea578063902a35b9146102fb5780639d1b464a1461030d578063b5e7130514610316578063bd01bb321461031e578063d266f5d014610326578063d4aae0c41461033f578063d8cf24fd1461035f578063ea64391414610367578063eb91d37e1461036f578063f4b4dc2e14610377578063ffa1ad741461039f575b600080fd5b61015760025481565b6040519081526020015b60405180910390f35b61017d61017836600461047e565b600355565b005b60405164505249434560d81b8152602001610161565b61017d6101a336600461047e565b600255565b6004546101b59060ff1681565b60405160ff9091168152602001610161565b61015760015481565b61017d6101de366004610497565b6103b4565b6004546101f590610100900460ff1681565b6040519015158152602001610161565b61017d61021336600461047e565b600155565b61015760055481565b6004546102399062010000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610161565b61017d61025e3660046104c7565b6004805460ff191660ff92909216919091179055565b61017d610282366004610505565b6004805465ffffffffffff909216620100000267ffffffffffff000019909216919091179055565b61017d6102b8366004610505565b6004805465ffffffffffff909216600160401b0265ffffffffffff60401b19909216919091179055565b61017d61040c565b61017d6102f8366004610505565b50565b61017d610309366004610536565b5050565b61015760035481565b600154610157565b610157610436565b60045461023990600160401b900465ffffffffffff1681565b600054610352906001600160a01b031681565b6040516101619190610605565b600254610157565b61017d610451565b600354610157565b61017d610385366004610619565b600480549115156101000261ff0019909216919091179055565b60408051600181526000602082015201610161565b6000546001600160a01b031633146103ea573360405163053e900f60e21b81526004016103e19190610605565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600454610100900460ff1661043457604051632cd2cbf760e01b815260040160405180910390fd5b565b60006005546001541161044a575060055490565b5060015490565b6000546001600160a01b03163314610434573360405163053e900f60e21b81526004016103e19190610605565b60006020828403121561049057600080fd5b5035919050565b6000602082840312156104a957600080fd5b81356001600160a01b03811681146104c057600080fd5b9392505050565b6000602082840312156104d957600080fd5b813560ff811681146104c057600080fd5b803565ffffffffffff8116811461050057600080fd5b919050565b60006020828403121561051757600080fd5b6104c0826104ea565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561054957600080fd5b82356001600160401b038082111561056057600080fd5b818501915085601f83011261057457600080fd5b813560208282111561058857610588610520565b8160051b604051601f19603f830116810181811086821117156105ad576105ad610520565b6040529283528183019350848101820192898411156105cb57600080fd5b948201945b838610156105e9578535855294820194938201936105d0565b96506105f890508782016104ea565b9450505050509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561062b57600080fd5b813580151581146104c057600080fdfea26469706673582212202bacd95fc73674b52c8922b249a64abaa62da87e38082c7e2c7f9c52393bdd8364736f6c634300080f0033a26469706673582212202bbfd1045786d482f5219435f929323de0bc69a55b4fb828c88d7d790f61f55c64736f6c634300080f0033";

type DeployMockPriceConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DeployMockPriceConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DeployMockPrice__factory extends ContractFactory {
  constructor(...args: DeployMockPriceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<DeployMockPrice> {
    return super.deploy(overrides || {}) as Promise<DeployMockPrice>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeployMockPrice {
    return super.attach(address) as DeployMockPrice;
  }
  override connect(signer: Signer): DeployMockPrice__factory {
    return super.connect(signer) as DeployMockPrice__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployMockPriceInterface {
    return new utils.Interface(_abi) as DeployMockPriceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DeployMockPrice {
    return new Contract(address, _abi, signerOrProvider) as DeployMockPrice;
  }
}
