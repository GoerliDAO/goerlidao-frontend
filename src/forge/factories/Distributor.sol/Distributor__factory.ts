/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Distributor, DistributorInterface } from "../../Distributor.sol/Distributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "kernel_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gdao_",
        type: "address",
      },
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialRate_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Distributor_AdjustmentLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_AdjustmentUnderflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_InvalidConstruction",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_NoRebaseOccurred",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_NotPermissioned",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_NotUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_OnlyStaking",
    type: "error",
  },
  {
    inputs: [],
    name: "Distributor_SanityCheck",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    name: "KernelAdapter_OnlyKernel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "Keycode",
        name: "keycode_",
        type: "bytes5",
      },
    ],
    name: "Policy_ModuleDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "MINTR",
    outputs: [
      {
        internalType: "contract MINTRv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLES",
    outputs: [
      {
        internalType: "contract ROLESv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRSRY",
    outputs: [
      {
        internalType: "contract TRSRYv1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Kernel",
        name: "newKernel_",
        type: "address",
      },
    ],
    name: "changeKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "configureDependencies",
    outputs: [
      {
        internalType: "Keycode[]",
        name: "dependencies",
        type: "bytes5[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract Kernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who_",
        type: "address",
      },
    ],
    name: "nextRewardFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "removePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        components: [
          {
            internalType: "Keycode",
            name: "keycode",
            type: "bytes5",
          },
          {
            internalType: "bytes4",
            name: "funcSelector",
            type: "bytes4",
          },
        ],
        internalType: "struct Permissions[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveBounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bounty_",
        type: "uint256",
      },
    ],
    name: "setBounty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools_",
        type: "address[]",
      },
    ],
    name: "setPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRewardRate_",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerRebase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200161c3803806200161c8339810160408190526200003491620000d8565b600080546001600160a01b0319166001600160a01b03861690811790915515806200006657506001600160a01b038316155b806200007957506001600160a01b038216155b8062000083575080155b15620000a25760405163c748cbd560e01b815260040160405180910390fd5b6001600160a01b03928316608052911660a0526005555062000132565b6001600160a01b0381168114620000d557600080fd5b50565b60008060008060808587031215620000ef57600080fd5b8451620000fc81620000bf565b60208601519094506200010f81620000bf565b60408601519093506200012281620000bf565b6060959095015193969295505050565b60805160a0516114a862000174600039600081816102b601528181610ca701528181610d8201528181610f9f01526110100152600061051601526114a86000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c80630c7d39311461010157806322f3e2d41461010b57806333ba88821461012857806336d33f441461013b5780634657b36c1461015c578063577de7d01461016f5780635924be701461018f5780635d87d363146101a45780637b0a47ee146101b757806380cee4ab146101c05780638544c53b146101d3578063923cb952146101e6578063943dfef1146101f95780639459b875146102025780639b429108146102175780639e447fc61461022a578063ac4afa381461023d578063d4aae0c414610250578063e4fc6b6d14610263578063e7187e8a1461026b575b600080fd5b610109610273565b005b61011361034a565b60405190151581526020015b60405180910390f35b6101096101363660046111a0565b6103c1565b61014e6101493660046111d0565b61050a565b60405190815260200161011f565b61010961016a3660046111d0565b6105bb565b600354610182906001600160a01b031681565b60405161011f91906111f4565b610197610613565b60405161011f9190611208565b6101096101b236600461126b565b610879565b61014e60055481565b600254610182906001600160a01b031681565b6101096101e1366004611284565b6108fa565b600154610182906001600160a01b031681565b61014e60065481565b61020a610987565b60405161011f91906112f8565b6101096102253660046111a0565b610b15565b61010961023836600461126b565b610bf1565b61018261024b36600461126b565b610c72565b600054610182906001600160a01b031681565b610109610c9c565b61014e610f92565b6007805460ff1916600190811790915560405163990966d560e01b8152336004820152600060248201526044810182905260648101919091526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063990966d5906084016020604051808303816000875af11580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190611346565b5060075460ff1615610348576040516385dea74f60e01b815260040160405180910390fd5b565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb9061037b9030906004016111f4565b602060405180830381865afa158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc919061135f565b905090565b60015460405163d09a20c560e01b8152703234b9ba3934b13aba37b92fb0b236b4b760791b916001600160a01b03169063d09a20c5906104079084903390600401611381565b600060405180830381600087803b15801561042157600080fd5b505af1158015610435573d6000803e3d6000fd5b5050505060006001600160a01b03166004848154811061045757610457611398565b6000918252602090912001546001600160a01b0316036104b857816004848154811061048557610485611398565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0384166001600160a01b0319909116179055505050565b6000633b9aca006005547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231856040518263ffffffff1660e01b815260040161056091906111f4565b602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190611346565b6105ab91906113ae565b6105b591906113db565b92915050565b6000546001600160a01b031633146105f1573360405163053e900f60e21b81526004016105e891906111f4565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60408051600380825260808201909252606091816020015b604080518082019091526000808252602082015281526020019060019003908161062b57505060408051808201808352600354630d73f61760e11b90915291519293509182916001600160a01b031690631ae7ec2e906044808501916020918187030181865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c791906113fd565b6001600160d81b031916815263bbaed5cb60e01b602090910152815182906000906106f4576106f4611398565b60200260200101819052506040518060400160405280600360009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078191906113fd565b6001600160d81b0319168152626b3fcf60e71b6020909101528151829060019081106107af576107af611398565b60200260200101819052506040518060400160405280600360009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c91906113fd565b6001600160d81b0319168152630d85347960e11b60209091015281518290600290811061086b5761086b611398565b602002602001018190525090565b60015460405163d09a20c560e01b8152703234b9ba3934b13aba37b92fb0b236b4b760791b916001600160a01b03169063d09a20c5906108bf9084903390600401611381565b600060405180830381600087803b1580156108d957600080fd5b505af11580156108ed573d6000803e3d6000fd5b5050506006929092555050565b60015460405163d09a20c560e01b8152703234b9ba3934b13aba37b92fb0b236b4b760791b916001600160a01b03169063d09a20c5906109409084903390600401611381565b600060405180830381600087803b15801561095a57600080fd5b505af115801561096e573d6000803e3d6000fd5b5061098192506004915085905084611110565b50505050565b604080516003808252608082019092526060916020820183803683370190505090506426a4a72a2960d91b816000815181106109c5576109c5611398565b6001600160d81b0319909216602092830291909101909101526109ed64545253525960d81b90565b81600181518110610a0057610a00611398565b6001600160d81b031990921660209283029190910190910152610a2864524f4c455360d81b90565b81600281518110610a3b57610a3b611398565b60200260200101906001600160d81b03191690816001600160d81b03191681525050610a8081600081518110610a7357610a73611398565b6020026020010151611073565b600360006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610abc81600181518110610a7357610a73611398565b600280546001600160a01b0319166001600160a01b03929092169190911781558151610af29183918110610a7357610a73611398565b600180546001600160a01b0319166001600160a01b039290921691909117905590565b60015460405163d09a20c560e01b8152703234b9ba3934b13aba37b92fb0b236b4b760791b916001600160a01b03169063d09a20c590610b5b9084903390600401611381565b600060405180830381600087803b158015610b7557600080fd5b505af1158015610b89573d6000803e3d6000fd5b50505050816001600160a01b031660048481548110610baa57610baa611398565b6000918252602090912001546001600160a01b031614610bdc576040516269d72360e41b815260040160405180910390fd5b60006004848154811061048557610485611398565b60015460405163d09a20c560e01b8152703234b9ba3934b13aba37b92fb0b236b4b760791b916001600160a01b03169063d09a20c590610c379084903390600401611381565b600060405180830381600087803b158015610c5157600080fd5b505af1158015610c65573d6000803e3d6000fd5b5050506005929092555050565b60048181548110610c8257600080fd5b6000918252602090912001546001600160a01b0316905081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ce557604051634bed2c2560e01b815260040160405180910390fd5b60075460ff16610d085760405163c3940a9760e01b815260040160405180910390fd5b600354604051626b3fcf60e71b81526001600160a01b039091169063359fe78090610d3b90309060001990600401611427565b600060405180830381600087803b158015610d5557600080fd5b505af1158015610d69573d6000803e3d6000fd5b50506003546001600160a01b0316915063bbaed5cb90507f0000000000000000000000000000000000000000000000000000000000000000610daa8161050a565b6040518363ffffffff1660e01b8152600401610dc7929190611427565b600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b50506004549150600090505b81811015610f1e57600060048281548110610e1e57610e1e611398565b60009182526020822001546001600160a01b03169150610e3d8261050a565b90506001600160a01b03821615801590610e575750600081115b15610f145760035460405163bbaed5cb60e01b81526001600160a01b039091169063bbaed5cb90610e8e9085908590600401611427565b600060405180830381600087803b158015610ea857600080fd5b505af1158015610ebc573d6000803e3d6000fd5b50505050816001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610efb57600080fd5b505af1158015610f0f573d6000803e3d6000fd5b505050505b5050600101610e01565b50600354604051630d85347960e11b81526001600160a01b0390911690631b0a68f290610f5390309060001990600401611427565b600060405180830381600087803b158015610f6d57600080fd5b505af1158015610f81573d6000803e3d6000fd5b50506007805460ff19169055505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fdd57604051634bed2c2560e01b815260040160405180910390fd5b6006541561106c5760035460065460405163bbaed5cb60e01b81526001600160a01b039092169163bbaed5cb91611039917f00000000000000000000000000000000000000000000000000000000000000009190600401611427565b600060405180830381600087803b15801561105357600080fd5b505af1158015611067573d6000803e3d6000fd5b505050505b5060065490565b60008054604051632d37002d60e21b815282916001600160a01b03169063b4dc00b4906110a4908690600401611440565b602060405180830381865afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190611455565b90506001600160a01b0381166105b55782604051635c3fa9cd60e01b81526004016105e89190611440565b828054828255906000526020600020908101928215611163579160200282015b828111156111635781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611130565b5061116f929150611173565b5090565b5b8082111561116f5760008155600101611174565b6001600160a01b038116811461119d57600080fd5b50565b600080604083850312156111b357600080fd5b8235915060208301356111c581611188565b809150509250929050565b6000602082840312156111e257600080fd5b81356111ed81611188565b9392505050565b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b8281101561125e57815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101611225565b5091979650505050505050565b60006020828403121561127d57600080fd5b5035919050565b6000806020838503121561129757600080fd5b82356001600160401b03808211156112ae57600080fd5b818501915085601f8301126112c257600080fd5b8135818111156112d157600080fd5b8660208260051b85010111156112e657600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b8181101561133a5783516001600160d81b03191683529284019291840191600101611314565b50909695505050505050565b60006020828403121561135857600080fd5b5051919050565b60006020828403121561137157600080fd5b815180151581146111ed57600080fd5b9182526001600160a01b0316602082015260400190565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156113d657634e487b7160e01b600052601160045260246000fd5b500290565b6000826113f857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561140f57600080fd5b81516001600160d81b0319811681146111ed57600080fd5b6001600160a01b03929092168252602082015260400190565b6001600160d81b031991909116815260200190565b60006020828403121561146757600080fd5b81516111ed8161118856fea26469706673582212202103824f03d8013cdba704f6c56a66dbc2710cb017f98906aa41064eed52470164736f6c634300080f0033";

type DistributorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DistributorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Distributor__factory extends ContractFactory {
  constructor(...args: DistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kernel_: PromiseOrValue<string>,
    gdao_: PromiseOrValue<string>,
    staking_: PromiseOrValue<string>,
    initialRate_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Distributor> {
    return super.deploy(kernel_, gdao_, staking_, initialRate_, overrides || {}) as Promise<Distributor>;
  }
  override getDeployTransaction(
    kernel_: PromiseOrValue<string>,
    gdao_: PromiseOrValue<string>,
    staking_: PromiseOrValue<string>,
    initialRate_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(kernel_, gdao_, staking_, initialRate_, overrides || {});
  }
  override attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  override connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
