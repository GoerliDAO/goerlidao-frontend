/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IHeart, IHeartInterface } from "../IHeart";

const _abi = [
  {
    inputs: [],
    name: "Heart_BeatAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "Heart_BeatStopped",
    type: "error",
  },
  {
    inputs: [],
    name: "Heart_InvalidParams",
    type: "error",
  },
  {
    inputs: [],
    name: "Heart_OutOfCycle",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp_",
        type: "uint256",
      },
    ],
    name: "Beat",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount_",
        type: "uint256",
      },
    ],
    name: "RewardIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ERC20",
        name: "token_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount_",
        type: "uint256",
      },
    ],
    name: "RewardUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "beat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "frequency",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetBeat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward_",
        type: "uint256",
      },
    ],
    name: "setRewardTokenAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "withdrawUnspentRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHeart__factory {
  static readonly abi = _abi;
  static createInterface(): IHeartInterface {
    return new utils.Interface(_abi) as IHeartInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IHeart {
    return new Contract(address, _abi, signerOrProvider) as IHeart;
  }
}
