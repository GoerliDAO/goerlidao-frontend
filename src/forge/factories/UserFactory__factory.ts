/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UserFactory, UserFactoryInterface } from "../UserFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userNum",
        type: "uint256",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "next",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x737109709ecfa91a80626ff3989d68f67f5b1dd12d60805264757365727360d81b60c052600560a05260c56040527f39b41f4ff9d03853a3e5e26ffad8712de4330b640064cfa05d0a29978dea11c660005534801561005d57600080fd5b506080516102ca610079600039600061013801526102ca6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c8fe5261461003b578063780900dc14610060575b600080fd5b610043610080565b6040516001600160a01b0390911681526020015b60405180910390f35b61007361006e3660046101db565b6100aa565b60405161005791906101f4565b60008054604080516020808201849052825180830382018152918301909252805191012090915590565b60606000826001600160401b038111156100c6576100c6610241565b6040519080825280602002602001820160405280156100ef578160200160208202803683370190505b50905060005b838110156101d4576000610107610080565b60405163c88a5e6d60e01b81526001600160a01b03808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b15801561017e57600080fd5b505af1158015610192573d6000803e3d6000fd5b50505050808383815181106101a9576101a9610257565b6001600160a01b039092166020928302919091019091015250806101cc8161026d565b9150506100f5565b5092915050565b6000602082840312156101ed57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156102355783516001600160a01b031683529284019291840191600101610210565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161028d57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220c5f1d0ec3c3b892ecedef56231257063d9a560a00e9e7ba619e3d2aea24bda7464736f6c634300080f0033";

type UserFactoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: UserFactoryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class UserFactory__factory extends ContractFactory {
  constructor(...args: UserFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<UserFactory> {
    return super.deploy(overrides || {}) as Promise<UserFactory>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserFactory {
    return super.attach(address) as UserFactory;
  }
  override connect(signer: Signer): UserFactory__factory {
    return super.connect(signer) as UserFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserFactoryInterface {
    return new utils.Interface(_abi) as UserFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): UserFactory {
    return new Contract(address, _abi, signerOrProvider) as UserFactory;
  }
}
