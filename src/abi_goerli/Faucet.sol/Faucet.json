{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "gdao_",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "reserve_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ethDrip_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gdaoDrip_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveDrip_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dripInterval_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "Faucet_DripFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "Faucet_DripOnCooldown",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "Faucet_InsufficientFunds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Drip",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "dripAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dripInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dripTestAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum Faucet.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "lastDrip",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset_",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "setDripAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interval_",
          "type": "uint256"
        }
      ],
      "name": "setDripInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600160005534801561001557600080fd5b50604051610faa380380610faa8339810160408190526100349161014d565b600180546001600160a01b039889166001600160a01b0319918216179091557fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c8054978916978216979097179096557fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d80549096169490961693909317909355600260208190527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b919091557fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0929092556000919091527f679795a0195a1b76cdebb7c51d74e058aee92919b8c3389af86ef24535e8a28c556005556101c1565b6001600160a01b038116811461014a57600080fd5b50565b600080600080600080600060e0888a03121561016857600080fd5b875161017381610135565b602089015190975061018481610135565b604089015190965061019581610135565b80955050606088015193506080880151925060a0880151915060c0880151905092959891949750929550565b610dda806101d06000396000f3fe6080604052600436106100b55760003560e01c806392c6672811610069578063cd3a88611161004e578063cd3a8861146101b9578063f851a440146101e6578063fd00ea1c1461023857600080fd5b806392c6672814610179578063a9a89db91461019957600080fd5b8063558d04231161009a578063558d0423146100f85780636a2148111461014357806370fef9f61461015957600080fd5b80631a624b17146100c15780632c35c40b146100d857600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100d661027b565b005b3480156100e457600080fd5b506100d66100f3366004610bcc565b61029b565b34801561010457600080fd5b50610130610113366004610bcc565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561014f57600080fd5b5061013060055481565b34801561016557600080fd5b506100d6610174366004610c1a565b61052e565b34801561018557600080fd5b506100d6610194366004610c3c565b610904565b3480156101a557600080fd5b506100d66101b4366004610c66565b6109c2565b3480156101c557600080fd5b506101306101d4366004610c1a565b60026020526000908152604090205481565b3480156101f257600080fd5b506001546102139073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013a565b34801561024457600080fd5b50610213610253366004610c1a565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b610285600061052e565b61028f600161052e565b610299600261052e565b565b60015473ffffffffffffffffffffffffffffffffffffffff163314610321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742062652061646d696e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b600081600281111561033557610335610c7f565b036104095760008273ffffffffffffffffffffffffffffffffffffffff164760405160006040518083038185875af1925050503d8060008114610394576040519150601f19603f3d011682016040523d82523d6000602084013e610399565b606091505b5050905080610404576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5769746864726177204661696c656400000000000000000000000000000000006044820152606401610318565b505050565b61052a826003600084600281111561042357610423610c7f565b600281111561043457610434610c7f565b8152602081019190915260409081016000205490517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610cae565b600360008560028111156104eb576104eb610c7f565b60028111156104fc576104fc610c7f565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff169190610a48565b5050565b60005460011461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610318565b60026000818155600554338252600460205260408220909290919084908111156105c6576105c6610c7f565b60028111156105d7576105d7610c7f565b8152602001908152602001600020546105f09190610cc7565b42101561062b57806040517fd1510d6e0000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b600081600281111561063f5761063f610c7f565b03610774576002600082600281111561065a5761065a610c7f565b600281111561066b5761066b610c7f565b8152602001908152602001600020544710156106b557806040517f63dbac910000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b60003360028284828111156106cc576106cc610c7f565b60028111156106dd576106dd610c7f565b81526020019081526020016000205460405160006040518083038185875af1925050503d806000811461072c576040519150601f19603f3d011682016040523d82523d6000602084013e610731565b606091505b505090508061076e57816040517f9e73bbe70000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b506108fc565b6002600082600281111561078a5761078a610c7f565b600281111561079b5761079b610c7f565b815260200190815260200160002054600360008360028111156107c0576107c0610c7f565b60028111156107d1576107d1610c7f565b8152602081019190915260409081016000205490517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561084e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108729190610cae565b10156108ac57806040517f63dbac910000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b6108fc33600260008460028111156108c6576108c6610c7f565b60028111156108d7576108d7610c7f565b815260200190815260200160002054600360008560028111156104eb576104eb610c7f565b506001600055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742062652061646d696e000000000000000000000000000000000000006044820152606401610318565b806002600084600281111561099c5761099c610c7f565b60028111156109ad576109ad610c7f565b81526020810191909152604001600020555050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610a43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742062652061646d696e000000000000000000000000000000000000006044820152606401610318565b600555565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691610adf9190610d47565b6000604051808303816000865af19150503d8060008114610b1c576040519150601f19603f3d011682016040523d82523d6000602084013e610b21565b606091505b5091509150818015610b4b575080511580610b4b575080806020019051810190610b4b9190610d82565b610bb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610318565b5050505050565b803560038110610bc757600080fd5b919050565b60008060408385031215610bdf57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610c0357600080fd5b9150610c1160208401610bb8565b90509250929050565b600060208284031215610c2c57600080fd5b610c3582610bb8565b9392505050565b60008060408385031215610c4f57600080fd5b610c5883610bb8565b946020939093013593505050565b600060208284031215610c7857600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215610cc057600080fd5b5051919050565b60008219821115610d01577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6020810160038310610d41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000825160005b81811015610d685760208186018101518583015201610d4e565b81811115610d77576000828501525b509190910192915050565b600060208284031215610d9457600080fd5b81518015158114610c3557600080fdfea2646970667358221220780d82c292822c78c62fcdd97a9000c6041b9cce6ebf5540b14f6d1b7291cb1464736f6c634300080f0033",
    "sourceMap": "239:2955:56:-:0;;;451:1:14;426:26;;1012:484:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1223:5;:14;;-1:-1:-1;;;;;1223:14:56;;;-1:-1:-1;;;;;;1223:14:56;;;;;;;1247:17;:25;;;;;;;;;;;;;;;1282:20;:31;;;;;;;;;;;;;;;;1288:13;1247:17;1324:21;;;;:32;;;;1366:22;:34;;;;-1:-1:-1;1410:25:56;;;;;:40;1461:12;:28;239:2955;;14:131:183;-1:-1:-1;;;;;89:31:183;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:797::-;304:6;312;320;328;336;344;352;405:3;393:9;384:7;380:23;376:33;373:53;;;422:1;419;412:12;373:53;454:9;448:16;473:31;498:5;473:31;:::i;:::-;573:2;558:18;;552:25;523:5;;-1:-1:-1;586:33:183;552:25;586:33;:::i;:::-;690:2;675:18;;669:25;638:7;;-1:-1:-1;703:33:183;669:25;703:33;:::i;:::-;755:7;745:17;;;802:2;791:9;787:18;781:25;771:35;;846:3;835:9;831:19;825:26;815:36;;891:3;880:9;876:19;870:26;860:36;;936:3;925:9;921:19;915:26;905:36;;150:797;;;;;;;;;;:::o;952:127::-;239:2955:56;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100b55760003560e01c806392c6672811610069578063cd3a88611161004e578063cd3a8861146101b9578063f851a440146101e6578063fd00ea1c1461023857600080fd5b806392c6672814610179578063a9a89db91461019957600080fd5b8063558d04231161009a578063558d0423146100f85780636a2148111461014357806370fef9f61461015957600080fd5b80631a624b17146100c15780632c35c40b146100d857600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100d661027b565b005b3480156100e457600080fd5b506100d66100f3366004610bcc565b61029b565b34801561010457600080fd5b50610130610113366004610bcc565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561014f57600080fd5b5061013060055481565b34801561016557600080fd5b506100d6610174366004610c1a565b61052e565b34801561018557600080fd5b506100d6610194366004610c3c565b610904565b3480156101a557600080fd5b506100d66101b4366004610c66565b6109c2565b3480156101c557600080fd5b506101306101d4366004610c1a565b60026020526000908152604090205481565b3480156101f257600080fd5b506001546102139073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013a565b34801561024457600080fd5b50610213610253366004610c1a565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b610285600061052e565b61028f600161052e565b610299600261052e565b565b60015473ffffffffffffffffffffffffffffffffffffffff163314610321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742062652061646d696e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b600081600281111561033557610335610c7f565b036104095760008273ffffffffffffffffffffffffffffffffffffffff164760405160006040518083038185875af1925050503d8060008114610394576040519150601f19603f3d011682016040523d82523d6000602084013e610399565b606091505b5050905080610404576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5769746864726177204661696c656400000000000000000000000000000000006044820152606401610318565b505050565b61052a826003600084600281111561042357610423610c7f565b600281111561043457610434610c7f565b8152602081019190915260409081016000205490517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610cae565b600360008560028111156104eb576104eb610c7f565b60028111156104fc576104fc610c7f565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff169190610a48565b5050565b60005460011461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610318565b60026000818155600554338252600460205260408220909290919084908111156105c6576105c6610c7f565b60028111156105d7576105d7610c7f565b8152602001908152602001600020546105f09190610cc7565b42101561062b57806040517fd1510d6e0000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b600081600281111561063f5761063f610c7f565b03610774576002600082600281111561065a5761065a610c7f565b600281111561066b5761066b610c7f565b8152602001908152602001600020544710156106b557806040517f63dbac910000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b60003360028284828111156106cc576106cc610c7f565b60028111156106dd576106dd610c7f565b81526020019081526020016000205460405160006040518083038185875af1925050503d806000811461072c576040519150601f19603f3d011682016040523d82523d6000602084013e610731565b606091505b505090508061076e57816040517f9e73bbe70000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b506108fc565b6002600082600281111561078a5761078a610c7f565b600281111561079b5761079b610c7f565b815260200190815260200160002054600360008360028111156107c0576107c0610c7f565b60028111156107d1576107d1610c7f565b8152602081019190915260409081016000205490517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561084e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108729190610cae565b10156108ac57806040517f63dbac910000000000000000000000000000000000000000000000000000000081526004016103189190610d06565b6108fc33600260008460028111156108c6576108c6610c7f565b60028111156108d7576108d7610c7f565b815260200190815260200160002054600360008560028111156104eb576104eb610c7f565b506001600055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742062652061646d696e000000000000000000000000000000000000006044820152606401610318565b806002600084600281111561099c5761099c610c7f565b60028111156109ad576109ad610c7f565b81526020810191909152604001600020555050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610a43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742062652061646d696e000000000000000000000000000000000000006044820152606401610318565b600555565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691610adf9190610d47565b6000604051808303816000865af19150503d8060008114610b1c576040519150601f19603f3d011682016040523d82523d6000602084013e610b21565b606091505b5091509150818015610b4b575080511580610b4b575080806020019051810190610b4b9190610d82565b610bb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610318565b5050505050565b803560038110610bc757600080fd5b919050565b60008060408385031215610bdf57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610c0357600080fd5b9150610c1160208401610bb8565b90509250929050565b600060208284031215610c2c57600080fd5b610c3582610bb8565b9392505050565b60008060408385031215610c4f57600080fd5b610c5883610bb8565b946020939093013593505050565b600060208284031215610c7857600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215610cc057600080fd5b5051919050565b60008219821115610d01577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6020810160038310610d41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000825160005b81811015610d685760208186018101518583015201610d4e565b81811115610d77576000828501525b509190910192915050565b600060208284031215610d9457600080fd5b81518015158114610c3557600080fdfea2646970667358221220780d82c292822c78c62fcdd97a9000c6041b9cce6ebf5540b14f6d1b7291cb1464736f6c634300080f0033",
    "sourceMap": "239:2955:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:123;;;;;;;;;;;;;:::i;:::-;;2466:400;;;;;;;;;;-1:-1:-1;2466:400:56;;;;;:::i;:::-;;:::i;868:61::-;;;;;;;;;;-1:-1:-1;868:61:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;713:25:183;;;701:2;686:18;868:61:56;;;;;;;;935:27;;;;;;;;;;;;;;;;1550:698;;;;;;;;;;-1:-1:-1;1550:698:56;;;;;:::i;:::-;;:::i;3028:164::-;;;;;;;;;;-1:-1:-1;3028:164:56;;;;;:::i;:::-;;:::i;2872:150::-;;;;;;;;;;-1:-1:-1;2872:150:56;;;;;:::i;:::-;;:::i;777:43::-;;;;;;;;;;-1:-1:-1;777:43:56;;;;;:::i;:::-;;;;;;;;;;;;;;750:20;;;;;;;;;;-1:-1:-1;750:20:56;;;;;;;;;;;1588:42:183;1576:55;;;1558:74;;1546:2;1531:18;750:20:56;1412:226:183;826:36:56;;;;;;;;;;-1:-1:-1;826:36:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;2254:123;2300:15;2305:9;2300:4;:15::i;:::-;2325:16;2330:10;2325:4;:16::i;:::-;2351:19;2356:13;2351:4;:19::i;:::-;2254:123::o;2466:400::-;2555:5;;;;2541:10;:19;2533:45;;;;;;;2091:2:183;2533:45:56;;;2073:21:183;2130:2;2110:18;;;2103:30;2169:15;2149:18;;;2142:43;2202:18;;2533:45:56;;;;;;;;;2603:9;2593:6;:19;;;;;;;;:::i;:::-;;2589:271;;2629:12;2655:3;2647:17;;2672:21;2647:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2628:70;;;2720:7;2712:35;;;;;;;2832:2:183;2712:35:56;;;2814:21:183;2871:2;2851:18;;;2844:30;2910:17;2890:18;;;2883:45;2945:18;;2712:35:56;2630:339:183;2712:35:56;2614:144;2466:400;;:::o;2589:271::-;2778:71;2805:3;2810:5;:13;2816:6;2810:13;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;2810:13:56;;:38;;;;;2842:4;2810:38;;;1558:74:183;2810:13:56;;;;;:23;;1531:18:183;;2810:38:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2778:5;:13;2784:6;2778:13;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;2778:13:56;;;;;:71;:26;:71::i;:::-;2466:400;;:::o;1550:698::-;509:6:14;;519:1;509:11;501:34;;;;;;;3365:2:183;501:34:14;;;3347:21:183;3404:2;3384:18;;;3377:30;3443:12;3423:18;;;3416:40;3473:18;;501:34:14;3163:334:183;501:34:14;555:1;546:6;:10;;;1661:12:56::1;::::0;1639:10:::1;1630:20:::0;;:8:::1;:20;::::0;;;;1661:12;;1630:20;;546:6:14;1651::56;;1630:28;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;;:::i;:::-;1612:15;:61;1608:115;;;1716:6;1694:29;;;;;;;;;;;:::i;1608:115::-;1748:9;1738:6;:19;;;;;;;;:::i;:::-;::::0;1734:508:::1;;1801:10;:18;1812:6;1801:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1777:21;:42;1773:87;;;1853:6;1828:32;;;;;;;;;;;:::i;1773:87::-;1875:12;1901:10;1925;1875:12:::0;1936:6;1925:18;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1893:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1874:74;;;1967:7;1962:46;;2001:6;1983:25;;;;;;;;;;;:::i;1962:46::-;1759:260;1734:508;;;2084:10;:18;2095:6;2084:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2043:5;:13;2049:6;2043:13;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;;;;;;;;-1:-1:-1;2043:13:56;;:38;;;;;2075:4:::1;2043:38;::::0;::::1;1558:74:183::0;2043:13:56::1;::::0;;::::1;::::0;:23:::1;::::0;1531:18:183;;2043:38:56::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;2039:120;;;2152:6;2127:32;;;;;;;;;;;:::i;2039:120::-;2173:58;2200:10;2212;:18;2223:6;2212:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2173:5;:13;2179:6;2173:13;;;;;;;;:::i;:58::-;-1:-1:-1::0;588:1:14;579:6;:10;1550:698:56:o;3028:164::-;3123:5;;;;3109:10;:19;3101:45;;;;;;;2091:2:183;3101:45:56;;;2073:21:183;2130:2;2110:18;;;2103:30;2169:15;2149:18;;;2142:43;2202:18;;3101:45:56;1889:337:183;3101:45:56;3178:7;3157:10;:18;3168:6;3157:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;3157:18:56;:28;-1:-1:-1;;3028:164:56:o;2872:150::-;2957:5;;;;2943:10;:19;2935:45;;;;;;;2091:2:183;2935:45:56;;;2073:21:183;2130:2;2110:18;;;2103:30;2169:15;2149:18;;;2142:43;2202:18;;2935:45:56;1889:337:183;2935:45:56;2991:12;:24;2872:150::o;784:353:89:-;965:59;;;932:19;4382:55:183;;;965:59:89;;;4364:74:183;4454:18;;;;4447:34;;;965:59:89;;;;;;;;;;4337:18:183;;;;965:59:89;;;;;;;;;988:23;965:59;;;932:102;;-1:-1:-1;;;;932:19:89;;;;:102;;965:59;932:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:138;;;;1053:7;:57;;;;-1:-1:-1;1065:11:89;;:16;;:44;;;1096:4;1085:24;;;;;;;;;;;;:::i;:::-;1045:85;;;;;;;5407:2:183;1045:85:89;;;5389:21:183;5446:2;5426:18;;;5419:30;5485:17;5465:18;;;5458:45;5520:18;;1045:85:89;5205:339:183;1045:85:89;886:251;;784:353;;;:::o;14:146:183:-;85:20;;134:1;124:12;;114:40;;150:1;147;140:12;114:40;14:146;;;:::o;165:397::-;244:6;252;305:2;293:9;284:7;280:23;276:32;273:52;;;321:1;318;311:12;273:52;360:9;347:23;410:42;403:5;399:54;392:5;389:65;379:93;;468:1;465;458:12;379:93;491:5;-1:-1:-1;515:41:183;552:2;537:18;;515:41;:::i;:::-;505:51;;165:397;;;;;:::o;749:200::-;819:6;872:2;860:9;851:7;847:23;843:32;840:52;;;888:1;885;878:12;840:52;911:32;933:9;911:32;:::i;:::-;901:42;749:200;-1:-1:-1;;;749:200:183:o;954:268::-;1033:6;1041;1094:2;1082:9;1073:7;1069:23;1065:32;1062:52;;;1110:1;1107;1100:12;1062:52;1133:32;1155:9;1133:32;:::i;:::-;1123:42;1212:2;1197:18;;;;1184:32;;-1:-1:-1;;;954:268:183:o;1227:180::-;1286:6;1339:2;1327:9;1318:7;1314:23;1310:32;1307:52;;;1355:1;1352;1345:12;1307:52;-1:-1:-1;1378:23:183;;1227:180;-1:-1:-1;1227:180:183:o;2231:184::-;2283:77;2280:1;2273:88;2380:4;2377:1;2370:15;2404:4;2401:1;2394:15;2974:184;3044:6;3097:2;3085:9;3076:7;3072:23;3068:32;3065:52;;;3113:1;3110;3103:12;3065:52;-1:-1:-1;3136:16:183;;2974:184;-1:-1:-1;2974:184:183:o;3502:282::-;3542:3;3573:1;3569:6;3566:1;3563:13;3560:193;;;3609:77;3606:1;3599:88;3710:4;3707:1;3700:15;3738:4;3735:1;3728:15;3560:193;-1:-1:-1;3769:9:183;;3502:282::o;3789:396::-;3932:2;3917:18;;3965:1;3954:13;;3944:201;;4001:77;3998:1;3991:88;4102:4;4099:1;4092:15;4130:4;4127:1;4120:15;3944:201;4154:25;;;3789:396;:::o;4492:426::-;4621:3;4659:6;4653:13;4684:1;4694:129;4708:6;4705:1;4702:13;4694:129;;;4806:4;4790:14;;;4786:25;;4780:32;4767:11;;;4760:53;4723:12;4694:129;;;4841:6;4838:1;4835:13;4832:48;;;4876:1;4867:6;4862:3;4858:16;4851:27;4832:48;-1:-1:-1;4896:16:183;;;;;4492:426;-1:-1:-1;;4492:426:183:o;4923:277::-;4990:6;5043:2;5031:9;5022:7;5018:23;5014:32;5011:52;;;5059:1;5056;5049:12;5011:52;5091:9;5085:16;5144:5;5137:13;5130:21;5123:5;5120:32;5110:60;;5166:1;5163;5156:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "drip(uint8)": "70fef9f6",
    "dripAmount(uint8)": "cd3a8861",
    "dripInterval()": "6a214811",
    "dripTestAmounts()": "1a624b17",
    "lastDrip(address,uint8)": "558d0423",
    "setDripAmount(uint8,uint256)": "92c66728",
    "setDripInterval(uint256)": "a9a89db9",
    "token(uint8)": "fd00ea1c",
    "withdrawAll(address,uint8)": "2c35c40b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"gdao_\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"reserve_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ethDrip_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gdaoDrip_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveDrip_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dripInterval_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum Faucet.Asset\",\"name\":\"asset\",\"type\":\"uint8\"}],\"name\":\"Faucet_DripFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Faucet.Asset\",\"name\":\"asset\",\"type\":\"uint8\"}],\"name\":\"Faucet_DripOnCooldown\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Faucet.Asset\",\"name\":\"asset\",\"type\":\"uint8\"}],\"name\":\"Faucet_InsufficientFunds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Faucet.Asset\",\"name\":\"asset\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Drip\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Faucet.Asset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Faucet.Asset\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"dripAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dripInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dripTestAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum Faucet.Asset\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"lastDrip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Faucet.Asset\",\"name\":\"asset_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"setDripAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval_\",\"type\":\"uint256\"}],\"name\":\"setDripInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Faucet.Asset\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"enum Faucet.Asset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/external/Faucet.sol\":{\"keccak256\":\"0x6ebd5126c82064bfb8dcf1f93cf33d635b9c26d4a984dcb7da7a679a60f5f214\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a157f87a57210193a01d330ad58a18b1097cab49ca26bb27be0fe8c1999dec3f\",\"dweb:/ipfs/QmV7h4rSJV1iznBPYBJkAzawDtfF7qsaf6Dfm6aWurX23c\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "gdao_",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "reserve_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ethDrip_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gdaoDrip_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveDrip_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dripInterval_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "enum Faucet.Asset",
              "name": "asset",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "Faucet_DripFailed"
        },
        {
          "inputs": [
            {
              "internalType": "enum Faucet.Asset",
              "name": "asset",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "Faucet_DripOnCooldown"
        },
        {
          "inputs": [
            {
              "internalType": "enum Faucet.Asset",
              "name": "asset",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "Faucet_InsufficientFunds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "enum Faucet.Asset",
              "name": "asset",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Drip",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Faucet.Asset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "drip"
        },
        {
          "inputs": [
            {
              "internalType": "enum Faucet.Asset",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dripAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dripInterval",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "dripTestAmounts"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum Faucet.Asset",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastDrip",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Faucet.Asset",
              "name": "asset_",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDripAmount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "interval_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDripInterval"
        },
        {
          "inputs": [
            {
              "internalType": "enum Faucet.Asset",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            },
            {
              "internalType": "enum Faucet.Asset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAll"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/external/Faucet.sol": "Faucet"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/Faucet.sol": {
        "keccak256": "0x6ebd5126c82064bfb8dcf1f93cf33d635b9c26d4a984dcb7da7a679a60f5f214",
        "urls": [
          "bzz-raw://a157f87a57210193a01d330ad58a18b1097cab49ca26bb27be0fe8c1999dec3f",
          "dweb:/ipfs/QmV7h4rSJV1iznBPYBJkAzawDtfF7qsaf6Dfm6aWurX23c"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/external/Faucet.sol",
    "id": 29848,
    "exportedSymbols": {
      "ERC20": [
        25731
      ],
      "Faucet": [
        29847
      ],
      "ReentrancyGuard": [
        25876
      ],
      "TransferHelper": [
        38101
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3158:56",
    "nodes": [
      {
        "id": 29499,
        "nodeType": "PragmaDirective",
        "src": "37:23:56",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 29501,
        "nodeType": "ImportDirective",
        "src": "62:60:56",
        "nodes": [],
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29848,
        "sourceUnit": 38102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29500,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38101,
              "src": "70:14:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29503,
        "nodeType": "ImportDirective",
        "src": "123:47:56",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29848,
        "sourceUnit": 25732,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29502,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "131:5:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29505,
        "nodeType": "ImportDirective",
        "src": "171:66:56",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/ReentrancyGuard.sol",
        "file": "solmate/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29848,
        "sourceUnit": 25877,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29504,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25876,
              "src": "179:15:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29847,
        "nodeType": "ContractDefinition",
        "src": "239:2955:56",
        "nodes": [
          {
            "id": 29511,
            "nodeType": "UsingForDirective",
            "src": "280:31:56",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 29508,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38101,
              "src": "286:14:56"
            },
            "typeName": {
              "id": 29510,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29509,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25731,
                "src": "305:5:56"
              },
              "referencedDeclaration": 25731,
              "src": "305:5:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25731",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 29516,
            "nodeType": "ErrorDefinition",
            "src": "356:44:56",
            "nodes": [],
            "errorSelector": "63dbac91",
            "name": "Faucet_InsufficientFunds",
            "nameLocation": "362:24:56",
            "parameters": {
              "id": 29515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29514,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "393:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29516,
                  "src": "387:11:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 29513,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29512,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29539,
                      "src": "387:5:56"
                    },
                    "referencedDeclaration": 29539,
                    "src": "387:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "386:13:56"
            }
          },
          {
            "id": 29521,
            "nodeType": "ErrorDefinition",
            "src": "405:41:56",
            "nodes": [],
            "errorSelector": "d1510d6e",
            "name": "Faucet_DripOnCooldown",
            "nameLocation": "411:21:56",
            "parameters": {
              "id": 29520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29519,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "439:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29521,
                  "src": "433:11:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 29518,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29517,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29539,
                      "src": "433:5:56"
                    },
                    "referencedDeclaration": 29539,
                    "src": "433:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:13:56"
            }
          },
          {
            "id": 29526,
            "nodeType": "ErrorDefinition",
            "src": "451:37:56",
            "nodes": [],
            "errorSelector": "9e73bbe7",
            "name": "Faucet_DripFailed",
            "nameLocation": "457:17:56",
            "parameters": {
              "id": 29525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29524,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "481:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29526,
                  "src": "475:11:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 29523,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29522,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29539,
                      "src": "475:5:56"
                    },
                    "referencedDeclaration": 29539,
                    "src": "475:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:13:56"
            }
          },
          {
            "id": 29535,
            "nodeType": "EventDefinition",
            "src": "533:58:56",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "5a472ace1fbd0245811452e40123d6cb2c0991f4c04c4e5ab26febfdfc469363",
            "name": "Drip",
            "nameLocation": "539:4:56",
            "parameters": {
              "id": 29534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "552:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29535,
                  "src": "544:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29531,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "568:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29535,
                  "src": "562:11:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 29530,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29529,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29539,
                      "src": "562:5:56"
                    },
                    "referencedDeclaration": 29539,
                    "src": "562:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29533,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "583:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29535,
                  "src": "575:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:47:56"
            }
          },
          {
            "id": 29539,
            "nodeType": "EnumDefinition",
            "src": "636:61:56",
            "nodes": [],
            "canonicalName": "Faucet.Asset",
            "members": [
              {
                "id": 29536,
                "name": "ETH",
                "nameLocation": "657:3:56",
                "nodeType": "EnumValue",
                "src": "657:3:56"
              },
              {
                "id": 29537,
                "name": "GDAO",
                "nameLocation": "670:4:56",
                "nodeType": "EnumValue",
                "src": "670:4:56"
              },
              {
                "id": 29538,
                "name": "RESERVE",
                "nameLocation": "684:7:56",
                "nodeType": "EnumValue",
                "src": "684:7:56"
              }
            ],
            "name": "Asset",
            "nameLocation": "641:5:56"
          },
          {
            "id": 29541,
            "nodeType": "VariableDeclaration",
            "src": "750:20:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "765:5:56",
            "scope": 29847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29540,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "750:7:56",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29546,
            "nodeType": "VariableDeclaration",
            "src": "777:43:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "cd3a8861",
            "mutability": "mutable",
            "name": "dripAmount",
            "nameLocation": "810:10:56",
            "scope": 29847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
              "typeString": "mapping(enum Faucet.Asset => uint256)"
            },
            "typeName": {
              "id": 29545,
              "keyType": {
                "id": 29543,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29542,
                  "name": "Asset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29539,
                  "src": "785:5:56"
                },
                "referencedDeclaration": 29539,
                "src": "785:5:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Asset_$29539",
                  "typeString": "enum Faucet.Asset"
                }
              },
              "nodeType": "Mapping",
              "src": "777:25:56",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                "typeString": "mapping(enum Faucet.Asset => uint256)"
              },
              "valueType": {
                "id": 29544,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 29552,
            "nodeType": "VariableDeclaration",
            "src": "826:36:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "fd00ea1c",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "857:5:56",
            "scope": 29847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
              "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
            },
            "typeName": {
              "id": 29551,
              "keyType": {
                "id": 29548,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29547,
                  "name": "Asset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29539,
                  "src": "834:5:56"
                },
                "referencedDeclaration": 29539,
                "src": "834:5:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Asset_$29539",
                  "typeString": "enum Faucet.Asset"
                }
              },
              "nodeType": "Mapping",
              "src": "826:23:56",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
                "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
              },
              "valueType": {
                "id": 29550,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29549,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25731,
                  "src": "843:5:56"
                },
                "referencedDeclaration": 25731,
                "src": "843:5:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$25731",
                  "typeString": "contract ERC20"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 29559,
            "nodeType": "VariableDeclaration",
            "src": "868:61:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "558d0423",
            "mutability": "mutable",
            "name": "lastDrip",
            "nameLocation": "921:8:56",
            "scope": 29847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum Faucet.Asset => uint256))"
            },
            "typeName": {
              "id": 29558,
              "keyType": {
                "id": 29553,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "876:7:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "868:45:56",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum Faucet.Asset => uint256))"
              },
              "valueType": {
                "id": 29557,
                "keyType": {
                  "id": 29555,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29554,
                    "name": "Asset",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 29539,
                    "src": "895:5:56"
                  },
                  "referencedDeclaration": 29539,
                  "src": "895:5:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  }
                },
                "nodeType": "Mapping",
                "src": "887:25:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                  "typeString": "mapping(enum Faucet.Asset => uint256)"
                },
                "valueType": {
                  "id": 29556,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "904:7:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 29561,
            "nodeType": "VariableDeclaration",
            "src": "935:27:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "6a214811",
            "mutability": "mutable",
            "name": "dripInterval",
            "nameLocation": "950:12:56",
            "scope": 29847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29560,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "935:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29624,
            "nodeType": "FunctionDefinition",
            "src": "1012:484:56",
            "nodes": [],
            "body": {
              "id": 29623,
              "nodeType": "Block",
              "src": "1213:283:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29580,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29541,
                      "src": "1223:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29581,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29563,
                      "src": "1231:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1223:14:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29583,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:14:56"
                },
                {
                  "expression": {
                    "id": 29589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29584,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29552,
                        "src": "1247:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
                          "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                        }
                      },
                      "id": 29587,
                      "indexExpression": {
                        "expression": {
                          "id": 29585,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "1253:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GDAO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29537,
                        "src": "1253:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1247:17:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29588,
                      "name": "gdao_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29566,
                      "src": "1267:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1247:25:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 29590,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:25:56"
                },
                {
                  "expression": {
                    "id": 29596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29591,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29552,
                        "src": "1282:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
                          "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                        }
                      },
                      "id": 29594,
                      "indexExpression": {
                        "expression": {
                          "id": 29592,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "1288:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "RESERVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29538,
                        "src": "1288:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1282:20:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29595,
                      "name": "reserve_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29569,
                      "src": "1305:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1282:31:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 29597,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:31:56"
                },
                {
                  "expression": {
                    "id": 29603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29598,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29546,
                        "src": "1324:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 29601,
                      "indexExpression": {
                        "expression": {
                          "id": 29599,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "1335:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29536,
                        "src": "1335:9:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1324:21:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29602,
                      "name": "ethDrip_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29571,
                      "src": "1348:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1324:32:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29604,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:32:56"
                },
                {
                  "expression": {
                    "id": 29610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29605,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29546,
                        "src": "1366:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 29608,
                      "indexExpression": {
                        "expression": {
                          "id": 29606,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "1377:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GDAO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29537,
                        "src": "1377:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1366:22:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29609,
                      "name": "gdaoDrip_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29573,
                      "src": "1391:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1366:34:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29611,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:34:56"
                },
                {
                  "expression": {
                    "id": 29617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29612,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29546,
                        "src": "1410:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 29615,
                      "indexExpression": {
                        "expression": {
                          "id": 29613,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "1421:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "RESERVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29538,
                        "src": "1421:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1410:25:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29616,
                      "name": "reserveDrip_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29575,
                      "src": "1438:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:40:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29618,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:40:56"
                },
                {
                  "expression": {
                    "id": 29621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29619,
                      "name": "dripInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29561,
                      "src": "1461:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29620,
                      "name": "dripInterval_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29577,
                      "src": "1476:13:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1461:28:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29622,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:28:56"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29563,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "1041:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29624,
                  "src": "1033:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29566,
                  "mutability": "mutable",
                  "name": "gdao_",
                  "nameLocation": "1063:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29624,
                  "src": "1057:11:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 29565,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29564,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "1057:5:56"
                    },
                    "referencedDeclaration": 25731,
                    "src": "1057:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29569,
                  "mutability": "mutable",
                  "name": "reserve_",
                  "nameLocation": "1084:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29624,
                  "src": "1078:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 29568,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29567,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "1078:5:56"
                    },
                    "referencedDeclaration": 25731,
                    "src": "1078:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29571,
                  "mutability": "mutable",
                  "name": "ethDrip_",
                  "nameLocation": "1110:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29624,
                  "src": "1102:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29573,
                  "mutability": "mutable",
                  "name": "gdaoDrip_",
                  "nameLocation": "1136:9:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29624,
                  "src": "1128:17:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29575,
                  "mutability": "mutable",
                  "name": "reserveDrip_",
                  "nameLocation": "1163:12:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29624,
                  "src": "1155:20:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29577,
                  "mutability": "mutable",
                  "name": "dripInterval_",
                  "nameLocation": "1193:13:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29624,
                  "src": "1185:21:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:189:56"
            },
            "returnParameters": {
              "id": 29579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1213:0:56"
            },
            "scope": 29847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29721,
            "nodeType": "FunctionDefinition",
            "src": "1550:698:56",
            "nodes": [],
            "body": {
              "id": 29720,
              "nodeType": "Block",
              "src": "1598:650:56",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 29632,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1612:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 29633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1612:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 29641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 29634,
                            "name": "lastDrip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29559,
                            "src": "1630:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(enum Faucet.Asset => uint256))"
                            }
                          },
                          "id": 29637,
                          "indexExpression": {
                            "expression": {
                              "id": 29635,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1639:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 29636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1639:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1630:20:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                            "typeString": "mapping(enum Faucet.Asset => uint256)"
                          }
                        },
                        "id": 29639,
                        "indexExpression": {
                          "id": 29638,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29627,
                          "src": "1651:6:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Asset_$29539",
                            "typeString": "enum Faucet.Asset"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1630:28:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 29640,
                        "name": "dripInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29561,
                        "src": "1661:12:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1630:43:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1612:61:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29647,
                  "nodeType": "IfStatement",
                  "src": "1608:115:56",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 29644,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29627,
                          "src": "1716:6:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Asset_$29539",
                            "typeString": "enum Faucet.Asset"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Asset_$29539",
                            "typeString": "enum Faucet.Asset"
                          }
                        ],
                        "id": 29643,
                        "name": "Faucet_DripOnCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29521,
                        "src": "1694:21:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$29539_$returns$__$",
                          "typeString": "function (enum Faucet.Asset) pure"
                        }
                      },
                      "id": 29645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1694:29:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29646,
                    "nodeType": "RevertStatement",
                    "src": "1687:36:56"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    },
                    "id": 29651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29648,
                      "name": "asset_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29627,
                      "src": "1738:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$29539",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 29649,
                        "name": "Asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29539,
                        "src": "1748:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                          "typeString": "type(enum Faucet.Asset)"
                        }
                      },
                      "id": 29650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29536,
                      "src": "1748:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$29539",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "src": "1738:19:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 29718,
                    "nodeType": "Block",
                    "src": "2025:217:56",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 29701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 29695,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2075:4:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Faucet_$29847",
                                      "typeString": "contract Faucet"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Faucet_$29847",
                                      "typeString": "contract Faucet"
                                    }
                                  ],
                                  "id": 29694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2067:7:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 29693,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2067:7:56",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 29696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2067:13:56",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 29689,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29552,
                                  "src": "2043:5:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
                                    "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                  }
                                },
                                "id": 29691,
                                "indexExpression": {
                                  "id": 29690,
                                  "name": "asset_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29627,
                                  "src": "2049:6:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Asset_$29539",
                                    "typeString": "enum Faucet.Asset"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2043:13:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$25731",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 29692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25382,
                              "src": "2043:23:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 29697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2043:38:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 29698,
                              "name": "dripAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29546,
                              "src": "2084:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                                "typeString": "mapping(enum Faucet.Asset => uint256)"
                              }
                            },
                            "id": 29700,
                            "indexExpression": {
                              "id": 29699,
                              "name": "asset_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29627,
                              "src": "2095:6:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Asset_$29539",
                                "typeString": "enum Faucet.Asset"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2084:18:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2043:59:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29706,
                        "nodeType": "IfStatement",
                        "src": "2039:120:56",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 29703,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29627,
                                "src": "2152:6:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              ],
                              "id": 29702,
                              "name": "Faucet_InsufficientFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29516,
                              "src": "2127:24:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$29539_$returns$__$",
                                "typeString": "function (enum Faucet.Asset) pure"
                              }
                            },
                            "id": 29704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2127:32:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 29705,
                          "nodeType": "RevertStatement",
                          "src": "2120:39:56"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 29711,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2200:3:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 29712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2200:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 29713,
                                "name": "dripAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29546,
                                "src": "2212:10:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                                  "typeString": "mapping(enum Faucet.Asset => uint256)"
                                }
                              },
                              "id": 29715,
                              "indexExpression": {
                                "id": 29714,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29627,
                                "src": "2223:6:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2212:18:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 29707,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29552,
                                "src": "2173:5:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
                                  "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                }
                              },
                              "id": 29709,
                              "indexExpression": {
                                "id": 29708,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29627,
                                "src": "2179:6:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2173:13:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 29710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38051,
                            "src": "2173:26:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 29716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2173:58:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29717,
                        "nodeType": "ExpressionStatement",
                        "src": "2173:58:56"
                      }
                    ]
                  },
                  "id": 29719,
                  "nodeType": "IfStatement",
                  "src": "1734:508:56",
                  "trueBody": {
                    "id": 29688,
                    "nodeType": "Block",
                    "src": "1759:260:56",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 29660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 29654,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1785:4:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Faucet_$29847",
                                    "typeString": "contract Faucet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Faucet_$29847",
                                    "typeString": "contract Faucet"
                                  }
                                ],
                                "id": 29653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1777:7:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29652,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1777:7:56",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1777:13:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 29656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "1777:21:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 29657,
                              "name": "dripAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29546,
                              "src": "1801:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                                "typeString": "mapping(enum Faucet.Asset => uint256)"
                              }
                            },
                            "id": 29659,
                            "indexExpression": {
                              "id": 29658,
                              "name": "asset_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29627,
                              "src": "1812:6:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Asset_$29539",
                                "typeString": "enum Faucet.Asset"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1801:18:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1777:42:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29665,
                        "nodeType": "IfStatement",
                        "src": "1773:87:56",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 29662,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29627,
                                "src": "1853:6:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              ],
                              "id": 29661,
                              "name": "Faucet_InsufficientFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29516,
                              "src": "1828:24:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$29539_$returns$__$",
                                "typeString": "function (enum Faucet.Asset) pure"
                              }
                            },
                            "id": 29663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1828:32:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 29664,
                          "nodeType": "RevertStatement",
                          "src": "1821:39:56"
                        }
                      },
                      {
                        "assignments": [
                          29667,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29667,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1880:7:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 29688,
                            "src": "1875:12:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 29666,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1875:4:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 29680,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 29678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1945:2:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 29670,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1901:3:56",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 29671,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1901:10:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 29669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1893:8:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 29668,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1893:8:56",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 29672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1893:19:56",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 29673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1893:24:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 29677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "baseExpression": {
                                  "id": 29674,
                                  "name": "dripAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29546,
                                  "src": "1925:10:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                                    "typeString": "mapping(enum Faucet.Asset => uint256)"
                                  }
                                },
                                "id": 29676,
                                "indexExpression": {
                                  "id": 29675,
                                  "name": "asset_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29627,
                                  "src": "1936:6:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Asset_$29539",
                                    "typeString": "enum Faucet.Asset"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1925:18:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1893:51:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 29679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1893:55:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1874:74:56"
                      },
                      {
                        "condition": {
                          "id": 29682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1966:8:56",
                          "subExpression": {
                            "id": 29681,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29667,
                            "src": "1967:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29687,
                        "nodeType": "IfStatement",
                        "src": "1962:46:56",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 29684,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29627,
                                "src": "2001:6:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              ],
                              "id": 29683,
                              "name": "Faucet_DripFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29526,
                              "src": "1983:17:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$29539_$returns$__$",
                                "typeString": "function (enum Faucet.Asset) pure"
                              }
                            },
                            "id": 29685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1983:25:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 29686,
                          "nodeType": "RevertStatement",
                          "src": "1976:32:56"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "70fef9f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29630,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29629,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "1585:12:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "1585:12:56"
              }
            ],
            "name": "drip",
            "nameLocation": "1559:4:56",
            "parameters": {
              "id": 29628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29627,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "1570:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29721,
                  "src": "1564:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 29626,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29625,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29539,
                      "src": "1564:5:56"
                    },
                    "referencedDeclaration": 29539,
                    "src": "1564:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:14:56"
            },
            "returnParameters": {
              "id": 29631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1598:0:56"
            },
            "scope": 29847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29740,
            "nodeType": "FunctionDefinition",
            "src": "2254:123:56",
            "nodes": [],
            "body": {
              "id": 29739,
              "nodeType": "Block",
              "src": "2290:87:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29725,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "2305:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29536,
                        "src": "2305:9:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      ],
                      "id": 29724,
                      "name": "drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29721,
                      "src": "2300:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Asset_$29539_$returns$__$",
                        "typeString": "function (enum Faucet.Asset)"
                      }
                    },
                    "id": 29727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2300:15:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29728,
                  "nodeType": "ExpressionStatement",
                  "src": "2300:15:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29730,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "2330:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GDAO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29537,
                        "src": "2330:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      ],
                      "id": 29729,
                      "name": "drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29721,
                      "src": "2325:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Asset_$29539_$returns$__$",
                        "typeString": "function (enum Faucet.Asset)"
                      }
                    },
                    "id": 29732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:16:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29733,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:16:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29735,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29539,
                          "src": "2356:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 29736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "RESERVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29538,
                        "src": "2356:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      ],
                      "id": 29734,
                      "name": "drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29721,
                      "src": "2351:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Asset_$29539_$returns$__$",
                        "typeString": "function (enum Faucet.Asset)"
                      }
                    },
                    "id": 29737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:19:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29738,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:19:56"
                }
              ]
            },
            "functionSelector": "1a624b17",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dripTestAmounts",
            "nameLocation": "2263:15:56",
            "parameters": {
              "id": 29722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2278:2:56"
            },
            "returnParameters": {
              "id": 29723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2290:0:56"
            },
            "scope": 29847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29744,
            "nodeType": "FunctionDefinition",
            "src": "2383:29:56",
            "nodes": [],
            "body": {
              "id": 29743,
              "nodeType": "Block",
              "src": "2410:2:56",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:2:56"
            },
            "returnParameters": {
              "id": 29742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2410:0:56"
            },
            "scope": 29847,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29805,
            "nodeType": "FunctionDefinition",
            "src": "2466:400:56",
            "nodes": [],
            "body": {
              "id": 29804,
              "nodeType": "Block",
              "src": "2523:343:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 29753,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2541:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2541:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 29755,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29541,
                          "src": "2555:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2541:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 29757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2562:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 29752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2533:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2533:45:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29759,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:45:56"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    },
                    "id": 29763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29760,
                      "name": "asset_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29749,
                      "src": "2593:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$29539",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 29761,
                        "name": "Asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29539,
                        "src": "2603:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Asset_$29539_$",
                          "typeString": "type(enum Faucet.Asset)"
                        }
                      },
                      "id": 29762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29536,
                      "src": "2603:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$29539",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "src": "2593:19:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 29802,
                    "nodeType": "Block",
                    "src": "2764:96:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29790,
                              "name": "to_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29746,
                              "src": "2805:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 29797,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2842:4:56",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Faucet_$29847",
                                        "typeString": "contract Faucet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Faucet_$29847",
                                        "typeString": "contract Faucet"
                                      }
                                    ],
                                    "id": 29796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2834:7:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 29795,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2834:7:56",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 29798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2834:13:56",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "id": 29791,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29552,
                                    "src": "2810:5:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
                                      "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                    }
                                  },
                                  "id": 29793,
                                  "indexExpression": {
                                    "id": 29792,
                                    "name": "asset_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29749,
                                    "src": "2816:6:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Asset_$29539",
                                      "typeString": "enum Faucet.Asset"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2810:13:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25731",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 29794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25382,
                                "src": "2810:23:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 29799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2810:38:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 29786,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29552,
                                "src": "2778:5:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_contract$_ERC20_$25731_$",
                                  "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                }
                              },
                              "id": 29788,
                              "indexExpression": {
                                "id": 29787,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29749,
                                "src": "2784:6:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$29539",
                                  "typeString": "enum Faucet.Asset"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2778:13:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 29789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38051,
                            "src": "2778:26:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 29800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2778:71:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29801,
                        "nodeType": "ExpressionStatement",
                        "src": "2778:71:56"
                      }
                    ]
                  },
                  "id": 29803,
                  "nodeType": "IfStatement",
                  "src": "2589:271:56",
                  "trueBody": {
                    "id": 29785,
                    "nodeType": "Block",
                    "src": "2614:144:56",
                    "statements": [
                      {
                        "assignments": [
                          29765,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29765,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2634:7:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 29785,
                            "src": "2629:12:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 29764,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2629:4:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 29779,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 29777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2695:2:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 29768,
                                    "name": "to_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29746,
                                    "src": "2655:3:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 29767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2647:8:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 29766,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2647:8:56",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 29769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2647:12:56",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 29770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2647:17:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 29776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 29773,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2680:4:56",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Faucet_$29847",
                                        "typeString": "contract Faucet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Faucet_$29847",
                                        "typeString": "contract Faucet"
                                      }
                                    ],
                                    "id": 29772,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2672:7:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 29771,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2672:7:56",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 29774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2672:13:56",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 29775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2672:21:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2647:47:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 29778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2647:51:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2628:70:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29781,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29765,
                              "src": "2720:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5769746864726177204661696c6564",
                              "id": 29782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2729:17:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_544038b4753b2bdb650934475d09831c60eb7f6256f10d2a72bbe739349a33ab",
                                "typeString": "literal_string \"Withdraw Failed\""
                              },
                              "value": "Withdraw Failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_544038b4753b2bdb650934475d09831c60eb7f6256f10d2a72bbe739349a33ab",
                                "typeString": "literal_string \"Withdraw Failed\""
                              }
                            ],
                            "id": 29780,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2712:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 29783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2712:35:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29784,
                        "nodeType": "ExpressionStatement",
                        "src": "2712:35:56"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2c35c40b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "2475:11:56",
            "parameters": {
              "id": 29750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29746,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "2495:3:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29805,
                  "src": "2487:11:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29749,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2506:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29805,
                  "src": "2500:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 29748,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29747,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29539,
                      "src": "2500:5:56"
                    },
                    "referencedDeclaration": 29539,
                    "src": "2500:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2486:27:56"
            },
            "returnParameters": {
              "id": 29751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:0:56"
            },
            "scope": 29847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29823,
            "nodeType": "FunctionDefinition",
            "src": "2872:150:56",
            "nodes": [],
            "body": {
              "id": 29822,
              "nodeType": "Block",
              "src": "2925:97:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 29811,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2943:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2943:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 29813,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29541,
                          "src": "2957:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2943:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 29815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2964:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 29810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2935:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2935:45:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29817,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:45:56"
                },
                {
                  "expression": {
                    "id": 29820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29818,
                      "name": "dripInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29561,
                      "src": "2991:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29819,
                      "name": "interval_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29807,
                      "src": "3006:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2991:24:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29821,
                  "nodeType": "ExpressionStatement",
                  "src": "2991:24:56"
                }
              ]
            },
            "functionSelector": "a9a89db9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDripInterval",
            "nameLocation": "2881:15:56",
            "parameters": {
              "id": 29808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29807,
                  "mutability": "mutable",
                  "name": "interval_",
                  "nameLocation": "2905:9:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29823,
                  "src": "2897:17:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2897:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2896:19:56"
            },
            "returnParameters": {
              "id": 29809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2925:0:56"
            },
            "scope": 29847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29846,
            "nodeType": "FunctionDefinition",
            "src": "3028:164:56",
            "nodes": [],
            "body": {
              "id": 29845,
              "nodeType": "Block",
              "src": "3091:101:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 29832,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3109:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3109:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 29834,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29541,
                          "src": "3123:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3109:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 29836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3130:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 29831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3101:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:45:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29838,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:45:56"
                },
                {
                  "expression": {
                    "id": 29843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29839,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29546,
                        "src": "3157:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$29539_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 29841,
                      "indexExpression": {
                        "id": 29840,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29826,
                        "src": "3168:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$29539",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3157:18:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29842,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29828,
                      "src": "3178:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3157:28:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29844,
                  "nodeType": "ExpressionStatement",
                  "src": "3157:28:56"
                }
              ]
            },
            "functionSelector": "92c66728",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDripAmount",
            "nameLocation": "3037:13:56",
            "parameters": {
              "id": 29829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29826,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "3057:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29846,
                  "src": "3051:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$29539",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 29825,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29824,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29539,
                      "src": "3051:5:56"
                    },
                    "referencedDeclaration": 29539,
                    "src": "3051:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$29539",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29828,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3073:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 29846,
                  "src": "3065:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3065:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3050:31:56"
            },
            "returnParameters": {
              "id": 29830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3091:0:56"
            },
            "scope": 29847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29506,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25876,
              "src": "258:15:56"
            },
            "id": 29507,
            "nodeType": "InheritanceSpecifier",
            "src": "258:15:56"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29847,
          25876
        ],
        "name": "Faucet",
        "nameLocation": "248:6:56",
        "scope": 29848,
        "usedErrors": [
          29516,
          29521,
          29526
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 56
}