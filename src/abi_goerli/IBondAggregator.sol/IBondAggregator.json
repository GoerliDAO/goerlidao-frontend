{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payout_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quote_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxExpiry_",
          "type": "uint256"
        }
      ],
      "name": "findMarketFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getAuctioneer",
      "outputs": [
        {
          "internalType": "contract IBondAuctioneer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getTeller",
      "outputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isInstantSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstIndex_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastIndex_",
          "type": "uint256"
        }
      ],
      "name": "liveMarketsBetween",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "firstIndex_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastIndex_",
          "type": "uint256"
        }
      ],
      "name": "liveMarketsBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPayout_",
          "type": "bool"
        }
      ],
      "name": "liveMarketsFor",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payout_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quote_",
          "type": "address"
        }
      ],
      "name": "marketsFor",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "maxAmountAccepted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "payoutFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBondAuctioneer",
          "name": "auctioneer_",
          "type": "address"
        }
      ],
      "name": "registerAuctioneer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "payoutToken_",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken_",
          "type": "address"
        }
      ],
      "name": "registerMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "currentCapacity(uint256)": "1c063a6c",
    "findMarketFor(address,address,uint256,uint256,uint256)": "9a0fae9b",
    "getAuctioneer(uint256)": "52047942",
    "getTeller(uint256)": "78b5a87a",
    "isInstantSwap(uint256)": "8b098db3",
    "isLive(uint256)": "27507458",
    "liveMarketsBetween(uint256,uint256)": "bb6e75de",
    "liveMarketsBy(address,uint256,uint256)": "4938a3fe",
    "liveMarketsFor(address,bool)": "f9e709df",
    "marketPrice(uint256)": "3adec5a7",
    "marketScale(uint256)": "946824cd",
    "marketsFor(address,address)": "bbfe3a32",
    "maxAmountAccepted(uint256,address)": "c7bf8ca0",
    "payoutFor(uint256,uint256,address)": "bf48582b",
    "registerAuctioneer(address)": "66b382ee",
    "registerMarket(address,address)": "b4359143"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payout_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxExpiry_\",\"type\":\"uint256\"}],\"name\":\"findMarketFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getAuctioneer\",\"outputs\":[{\"internalType\":\"contract IBondAuctioneer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getTeller\",\"outputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isInstantSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstIndex_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastIndex_\",\"type\":\"uint256\"}],\"name\":\"liveMarketsBetween\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"firstIndex_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastIndex_\",\"type\":\"uint256\"}],\"name\":\"liveMarketsBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPayout_\",\"type\":\"bool\"}],\"name\":\"liveMarketsFor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payout_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote_\",\"type\":\"address\"}],\"name\":\"marketsFor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"maxAmountAccepted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBondAuctioneer\",\"name\":\"auctioneer_\",\"type\":\"address\"}],\"name\":\"registerAuctioneer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken_\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken_\",\"type\":\"address\"}],\"name\":\"registerMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"findMarketFor(address,address,uint256,uint256,uint256)\":{\"params\":{\"amountIn_\":\"Amount of quote tokens to deposit\",\"maxExpiry_\":\"Latest acceptable vesting timestamp for bond                         Inputting the zero address will take into account just the protocol fee.\",\"minAmountOut_\":\"Minimum amount of payout tokens to receive as payout\",\"payout_\":\"Address of payout token\",\"quote_\":\"Address of quote token\"}},\"getAuctioneer(uint256)\":{\"params\":{\"id_\":\"ID of Market\"}},\"isInstantSwap(uint256)\":{\"params\":{\"id_\":\"Market ID to search for\"}},\"isLive(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"liveMarketsBetween(uint256,uint256)\":{\"details\":\"Should be used if length exceeds max to query entire array\"},\"liveMarketsBy(address,uint256,uint256)\":{\"params\":{\"firstIndex_\":\"Market ID to start at\",\"lastIndex_\":\"Market ID to end at (non-inclusive)\",\"owner_\":\"Address of owner to query by\"}},\"liveMarketsFor(address,bool)\":{\"params\":{\"isPayout_\":\"If true, search by payout token, else search for quote token\",\"token_\":\"Address of token to query by\"}},\"marketPrice(uint256)\":{\"details\":\"Accounts for debt and control variable decay since last deposit (vs _marketPrice())\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Price for market (see the specific auctioneer for units)\"}},\"marketScale(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Scaling factor for market in configured decimals\"}},\"marketsFor(address,address)\":{\"params\":{\"payout_\":\"Address of payout token\",\"quote_\":\"Address of quote token\"}},\"maxAmountAccepted(uint256,address)\":{\"params\":{\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"}},\"payoutFor(uint256,uint256,address)\":{\"details\":\"Accounts for debt and control variable decay so it is up to date\",\"params\":{\"amount_\":\"Amount of quote tokens to spend\",\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"},\"returns\":{\"_0\":\"amount of payout tokens to be paid\"}},\"registerAuctioneer(address)\":{\"details\":\"A auctioneer must be registered with an aggregator to create markets\",\"params\":{\"auctioneer_\":\"Address of the Auctioneer to register\"}},\"registerMarket(address,address)\":{\"params\":{\"marketId\":\"ID of the market being created\",\"payoutToken_\":\"Token to be paid out by the market\",\"quoteToken_\":\"Token to be accepted by the market\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"currentCapacity(uint256)\":{\"notice\":\"Returns current capacity of a market\"},\"findMarketFor(address,address,uint256,uint256,uint256)\":{\"notice\":\"Returns the market ID with the highest current payoutToken payout for depositing quoteToken\"},\"getAuctioneer(uint256)\":{\"notice\":\"Get the auctioneer for the provided market ID\"},\"getTeller(uint256)\":{\"notice\":\"Returns the Teller that services the market ID\"},\"isInstantSwap(uint256)\":{\"notice\":\"Does market send payout immediately\"},\"isLive(uint256)\":{\"notice\":\"Is a given market accepting deposits\"},\"liveMarketsBetween(uint256,uint256)\":{\"notice\":\"Returns array of active market IDs within a range\"},\"liveMarketsBy(address,uint256,uint256)\":{\"notice\":\"Returns an array of all active market IDs for a given owner\"},\"liveMarketsFor(address,bool)\":{\"notice\":\"Returns an array of all active market IDs for a given quote token\"},\"marketPrice(uint256)\":{\"notice\":\"Calculate current market price of payout token in quote tokens\"},\"marketScale(uint256)\":{\"notice\":\"Scale value to use when converting between quote token and payout token amounts with marketPrice()\"},\"marketsFor(address,address)\":{\"notice\":\"Returns an array of all active market IDs for a given payout and quote token\"},\"maxAmountAccepted(uint256,address)\":{\"notice\":\"Returns maximum amount of quote token accepted by the market\"},\"payoutFor(uint256,uint256,address)\":{\"notice\":\"Payout due for amount of quote tokens\"},\"registerAuctioneer(address)\":{\"notice\":\"Register a auctioneer with the aggregatorOnly Guardian\"},\"registerMarket(address,address)\":{\"notice\":\"Register a new market with the aggregatorOnly registered depositories\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBondAggregator.sol\":\"IBondAggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "payout_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quote_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxExpiry_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "findMarketFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuctioneer",
          "outputs": [
            {
              "internalType": "contract IBondAuctioneer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeller",
          "outputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInstantSwap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "firstIndex_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastIndex_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "liveMarketsBetween",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "firstIndex_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastIndex_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "liveMarketsBy",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isPayout_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "liveMarketsFor",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "payout_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quote_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketsFor",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAmountAccepted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "payoutFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IBondAuctioneer",
              "name": "auctioneer_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAuctioneer"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "payoutToken_",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerMarket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "findMarketFor(address,address,uint256,uint256,uint256)": {
            "params": {
              "amountIn_": "Amount of quote tokens to deposit",
              "maxExpiry_": "Latest acceptable vesting timestamp for bond                         Inputting the zero address will take into account just the protocol fee.",
              "minAmountOut_": "Minimum amount of payout tokens to receive as payout",
              "payout_": "Address of payout token",
              "quote_": "Address of quote token"
            }
          },
          "getAuctioneer(uint256)": {
            "params": {
              "id_": "ID of Market"
            }
          },
          "isInstantSwap(uint256)": {
            "params": {
              "id_": "Market ID to search for"
            }
          },
          "isLive(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "liveMarketsBetween(uint256,uint256)": {
            "details": "Should be used if length exceeds max to query entire array"
          },
          "liveMarketsBy(address,uint256,uint256)": {
            "params": {
              "firstIndex_": "Market ID to start at",
              "lastIndex_": "Market ID to end at (non-inclusive)",
              "owner_": "Address of owner to query by"
            }
          },
          "liveMarketsFor(address,bool)": {
            "params": {
              "isPayout_": "If true, search by payout token, else search for quote token",
              "token_": "Address of token to query by"
            }
          },
          "marketPrice(uint256)": {
            "details": "Accounts for debt and control variable decay since last deposit (vs _marketPrice())",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Price for market (see the specific auctioneer for units)"
            }
          },
          "marketScale(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Scaling factor for market in configured decimals"
            }
          },
          "marketsFor(address,address)": {
            "params": {
              "payout_": "Address of payout token",
              "quote_": "Address of quote token"
            }
          },
          "maxAmountAccepted(uint256,address)": {
            "params": {
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            }
          },
          "payoutFor(uint256,uint256,address)": {
            "details": "Accounts for debt and control variable decay so it is up to date",
            "params": {
              "amount_": "Amount of quote tokens to spend",
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            },
            "returns": {
              "_0": "amount of payout tokens to be paid"
            }
          },
          "registerAuctioneer(address)": {
            "details": "A auctioneer must be registered with an aggregator to create markets",
            "params": {
              "auctioneer_": "Address of the Auctioneer to register"
            }
          },
          "registerMarket(address,address)": {
            "params": {
              "marketId": "ID of the market being created",
              "payoutToken_": "Token to be paid out by the market",
              "quoteToken_": "Token to be accepted by the market"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "currentCapacity(uint256)": {
            "notice": "Returns current capacity of a market"
          },
          "findMarketFor(address,address,uint256,uint256,uint256)": {
            "notice": "Returns the market ID with the highest current payoutToken payout for depositing quoteToken"
          },
          "getAuctioneer(uint256)": {
            "notice": "Get the auctioneer for the provided market ID"
          },
          "getTeller(uint256)": {
            "notice": "Returns the Teller that services the market ID"
          },
          "isInstantSwap(uint256)": {
            "notice": "Does market send payout immediately"
          },
          "isLive(uint256)": {
            "notice": "Is a given market accepting deposits"
          },
          "liveMarketsBetween(uint256,uint256)": {
            "notice": "Returns array of active market IDs within a range"
          },
          "liveMarketsBy(address,uint256,uint256)": {
            "notice": "Returns an array of all active market IDs for a given owner"
          },
          "liveMarketsFor(address,bool)": {
            "notice": "Returns an array of all active market IDs for a given quote token"
          },
          "marketPrice(uint256)": {
            "notice": "Calculate current market price of payout token in quote tokens"
          },
          "marketScale(uint256)": {
            "notice": "Scale value to use when converting between quote token and payout token amounts with marketPrice()"
          },
          "marketsFor(address,address)": {
            "notice": "Returns an array of all active market IDs for a given payout and quote token"
          },
          "maxAmountAccepted(uint256,address)": {
            "notice": "Returns maximum amount of quote token accepted by the market"
          },
          "payoutFor(uint256,uint256,address)": {
            "notice": "Payout due for amount of quote tokens"
          },
          "registerAuctioneer(address)": {
            "notice": "Register a auctioneer with the aggregatorOnly Guardian"
          },
          "registerMarket(address,address)": {
            "notice": "Register a new market with the aggregatorOnly registered depositories"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IBondAggregator.sol": "IBondAggregator"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IBondAggregator.sol",
    "id": 35813,
    "exportedSymbols": {
      "ERC20": [
        25731
      ],
      "IBondAggregator": [
        35812
      ],
      "IBondAuctioneer": [
        35997
      ],
      "IBondTeller": [
        36306
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:5970:67",
    "nodes": [
      {
        "id": 35644,
        "nodeType": "PragmaDirective",
        "src": "37:24:67",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 35646,
        "nodeType": "ImportDirective",
        "src": "63:47:67",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35813,
        "sourceUnit": 25732,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35645,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "71:5:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35648,
        "nodeType": "ImportDirective",
        "src": "111:66:67",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondAuctioneer.sol",
        "file": "../interfaces/IBondAuctioneer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35813,
        "sourceUnit": 35998,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35647,
              "name": "IBondAuctioneer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35997,
              "src": "119:15:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35650,
        "nodeType": "ImportDirective",
        "src": "178:58:67",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondTeller.sol",
        "file": "../interfaces/IBondTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35813,
        "sourceUnit": 36307,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35649,
              "name": "IBondTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36306,
              "src": "186:11:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35812,
        "nodeType": "ContractDefinition",
        "src": "238:5768:67",
        "nodes": [
          {
            "id": 35657,
            "nodeType": "FunctionDefinition",
            "src": "545:66:67",
            "nodes": [],
            "documentation": {
              "id": 35651,
              "nodeType": "StructuredDocumentation",
              "src": "270:270:67",
              "text": "@notice             Register a auctioneer with the aggregator\n @notice             Only Guardian\n @param auctioneer_  Address of the Auctioneer to register\n @dev                A auctioneer must be registered with an aggregator to create markets"
            },
            "functionSelector": "66b382ee",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAuctioneer",
            "nameLocation": "554:18:67",
            "parameters": {
              "id": 35655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35654,
                  "mutability": "mutable",
                  "name": "auctioneer_",
                  "nameLocation": "589:11:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35657,
                  "src": "573:27:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAuctioneer_$35997",
                    "typeString": "contract IBondAuctioneer"
                  },
                  "typeName": {
                    "id": 35653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35652,
                      "name": "IBondAuctioneer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35997,
                      "src": "573:15:67"
                    },
                    "referencedDeclaration": 35997,
                    "src": "573:15:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAuctioneer_$35997",
                      "typeString": "contract IBondAuctioneer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:29:67"
            },
            "returnParameters": {
              "id": 35656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:67"
            },
            "scope": 35812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35669,
            "nodeType": "FunctionDefinition",
            "src": "929:115:67",
            "nodes": [],
            "documentation": {
              "id": 35658,
              "nodeType": "StructuredDocumentation",
              "src": "617:307:67",
              "text": "@notice             Register a new market with the aggregator\n @notice             Only registered depositories\n @param payoutToken_ Token to be paid out by the market\n @param quoteToken_  Token to be accepted by the market\n @param marketId     ID of the market being created"
            },
            "functionSelector": "b4359143",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerMarket",
            "nameLocation": "938:14:67",
            "parameters": {
              "id": 35665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35661,
                  "mutability": "mutable",
                  "name": "payoutToken_",
                  "nameLocation": "959:12:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35669,
                  "src": "953:18:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 35660,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35659,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "953:5:67"
                    },
                    "referencedDeclaration": 25731,
                    "src": "953:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35664,
                  "mutability": "mutable",
                  "name": "quoteToken_",
                  "nameLocation": "979:11:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35669,
                  "src": "973:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 35663,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35662,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "973:5:67"
                    },
                    "referencedDeclaration": 25731,
                    "src": "973:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:39:67"
            },
            "returnParameters": {
              "id": 35668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35667,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "1034:8:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35669,
                  "src": "1026:16:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:18:67"
            },
            "scope": 35812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35678,
            "nodeType": "FunctionDefinition",
            "src": "1149:76:67",
            "nodes": [],
            "documentation": {
              "id": 35670,
              "nodeType": "StructuredDocumentation",
              "src": "1050:94:67",
              "text": "@notice     Get the auctioneer for the provided market ID\n @param id_  ID of Market"
            },
            "functionSelector": "52047942",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAuctioneer",
            "nameLocation": "1158:13:67",
            "parameters": {
              "id": 35673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35672,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "1180:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35678,
                  "src": "1172:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1171:13:67"
            },
            "returnParameters": {
              "id": 35677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35676,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35678,
                  "src": "1208:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAuctioneer_$35997",
                    "typeString": "contract IBondAuctioneer"
                  },
                  "typeName": {
                    "id": 35675,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35674,
                      "name": "IBondAuctioneer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35997,
                      "src": "1208:15:67"
                    },
                    "referencedDeclaration": 35997,
                    "src": "1208:15:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAuctioneer_$35997",
                      "typeString": "contract IBondAuctioneer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1207:17:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35686,
            "nodeType": "FunctionDefinition",
            "src": "1711:66:67",
            "nodes": [],
            "documentation": {
              "id": 35679,
              "nodeType": "StructuredDocumentation",
              "src": "1231:324:67",
              "text": "@notice             Calculate current market price of payout token in quote tokens\n @dev                Accounts for debt and control variable decay since last deposit (vs _marketPrice())\n @param id_          ID of market\n @return             Price for market (see the specific auctioneer for units)"
            },
            "functionSelector": "3adec5a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketPrice",
            "nameLocation": "1720:11:67",
            "parameters": {
              "id": 35682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35681,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "1740:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35686,
                  "src": "1732:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:13:67"
            },
            "returnParameters": {
              "id": 35685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35684,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35686,
                  "src": "1768:7:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:9:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35694,
            "nodeType": "FunctionDefinition",
            "src": "2028:66:67",
            "nodes": [],
            "documentation": {
              "id": 35687,
              "nodeType": "StructuredDocumentation",
              "src": "1783:240:67",
              "text": "@notice             Scale value to use when converting between quote token and payout token amounts with marketPrice()\n @param id_          ID of market\n @return             Scaling factor for market in configured decimals"
            },
            "functionSelector": "946824cd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketScale",
            "nameLocation": "2037:11:67",
            "parameters": {
              "id": 35690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35689,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "2057:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35694,
                  "src": "2049:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2048:13:67"
            },
            "returnParameters": {
              "id": 35693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35694,
                  "src": "2085:7:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:9:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35706,
            "nodeType": "FunctionDefinition",
            "src": "2627:130:67",
            "nodes": [],
            "documentation": {
              "id": 35695,
              "nodeType": "StructuredDocumentation",
              "src": "2100:522:67",
              "text": "@notice             Payout due for amount of quote tokens\n @dev                Accounts for debt and control variable decay so it is up to date\n @param amount_      Amount of quote tokens to spend\n @param id_          ID of market\n @param referrer_    Address of referrer, used to get fees to calculate accurate payout amount.\n                     Inputting the zero address will take into account just the protocol fee.\n @return             amount of payout tokens to be paid"
            },
            "functionSelector": "bf48582b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payoutFor",
            "nameLocation": "2636:9:67",
            "parameters": {
              "id": 35702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35697,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "2663:7:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35706,
                  "src": "2655:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35699,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "2688:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35706,
                  "src": "2680:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35701,
                  "mutability": "mutable",
                  "name": "referrer_",
                  "nameLocation": "2709:9:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35706,
                  "src": "2701:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2701:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2645:79:67"
            },
            "returnParameters": {
              "id": 35705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35706,
                  "src": "2748:7:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2747:9:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35716,
            "nodeType": "FunctionDefinition",
            "src": "3097:91:67",
            "nodes": [],
            "documentation": {
              "id": 35707,
              "nodeType": "StructuredDocumentation",
              "src": "2763:329:67",
              "text": "@notice             Returns maximum amount of quote token accepted by the market\n @param id_          ID of market\n @param referrer_    Address of referrer, used to get fees to calculate accurate payout amount.\n                     Inputting the zero address will take into account just the protocol fee."
            },
            "functionSelector": "c7bf8ca0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxAmountAccepted",
            "nameLocation": "3106:17:67",
            "parameters": {
              "id": 35712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35709,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "3132:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35716,
                  "src": "3124:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35711,
                  "mutability": "mutable",
                  "name": "referrer_",
                  "nameLocation": "3145:9:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35716,
                  "src": "3137:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3137:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3123:32:67"
            },
            "returnParameters": {
              "id": 35715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35714,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35716,
                  "src": "3179:7:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3179:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3178:9:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35724,
            "nodeType": "FunctionDefinition",
            "src": "3310:65:67",
            "nodes": [],
            "documentation": {
              "id": 35717,
              "nodeType": "StructuredDocumentation",
              "src": "3194:111:67",
              "text": "@notice             Does market send payout immediately\n @param id_          Market ID to search for"
            },
            "functionSelector": "8b098db3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isInstantSwap",
            "nameLocation": "3319:13:67",
            "parameters": {
              "id": 35720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35719,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "3341:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35724,
                  "src": "3333:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3332:13:67"
            },
            "returnParameters": {
              "id": 35723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35724,
                  "src": "3369:4:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35721,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3368:6:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35732,
            "nodeType": "FunctionDefinition",
            "src": "3487:58:67",
            "nodes": [],
            "documentation": {
              "id": 35725,
              "nodeType": "StructuredDocumentation",
              "src": "3381:101:67",
              "text": "@notice             Is a given market accepting deposits\n @param id_          ID of market"
            },
            "functionSelector": "27507458",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isLive",
            "nameLocation": "3496:6:67",
            "parameters": {
              "id": 35728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35727,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "3511:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35732,
                  "src": "3503:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3502:13:67"
            },
            "returnParameters": {
              "id": 35731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35732,
                  "src": "3539:4:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35729,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3538:6:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35743,
            "nodeType": "FunctionDefinition",
            "src": "3716:134:67",
            "nodes": [],
            "documentation": {
              "id": 35733,
              "nodeType": "StructuredDocumentation",
              "src": "3551:160:67",
              "text": "@notice             Returns array of active market IDs within a range\n @dev                Should be used if length exceeds max to query entire array"
            },
            "functionSelector": "bb6e75de",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liveMarketsBetween",
            "nameLocation": "3725:18:67",
            "parameters": {
              "id": 35738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35735,
                  "mutability": "mutable",
                  "name": "firstIndex_",
                  "nameLocation": "3752:11:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35743,
                  "src": "3744:19:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35737,
                  "mutability": "mutable",
                  "name": "lastIndex_",
                  "nameLocation": "3773:10:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35743,
                  "src": "3765:18:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3765:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3743:41:67"
            },
            "returnParameters": {
              "id": 35742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35743,
                  "src": "3832:16:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35739,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3832:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35740,
                    "nodeType": "ArrayTypeName",
                    "src": "3832:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3831:18:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35754,
            "nodeType": "FunctionDefinition",
            "src": "4096:121:67",
            "nodes": [],
            "documentation": {
              "id": 35744,
              "nodeType": "StructuredDocumentation",
              "src": "3856:235:67",
              "text": "@notice             Returns an array of all active market IDs for a given quote token\n @param token_       Address of token to query by\n @param isPayout_    If true, search by payout token, else search for quote token"
            },
            "functionSelector": "f9e709df",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liveMarketsFor",
            "nameLocation": "4105:14:67",
            "parameters": {
              "id": 35749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35746,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "4128:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35754,
                  "src": "4120:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4120:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35748,
                  "mutability": "mutable",
                  "name": "isPayout_",
                  "nameLocation": "4141:9:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35754,
                  "src": "4136:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35747,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4119:32:67"
            },
            "returnParameters": {
              "id": 35753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35754,
                  "src": "4199:16:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35750,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4199:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35751,
                    "nodeType": "ArrayTypeName",
                    "src": "4199:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4198:18:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35767,
            "nodeType": "FunctionDefinition",
            "src": "4482:151:67",
            "nodes": [],
            "documentation": {
              "id": 35755,
              "nodeType": "StructuredDocumentation",
              "src": "4223:254:67",
              "text": "@notice             Returns an array of all active market IDs for a given owner\n @param owner_       Address of owner to query by\n @param firstIndex_  Market ID to start at\n @param lastIndex_   Market ID to end at (non-inclusive)"
            },
            "functionSelector": "4938a3fe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liveMarketsBy",
            "nameLocation": "4491:13:67",
            "parameters": {
              "id": 35762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35757,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "4522:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35767,
                  "src": "4514:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4514:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35759,
                  "mutability": "mutable",
                  "name": "firstIndex_",
                  "nameLocation": "4546:11:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35767,
                  "src": "4538:19:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4538:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35761,
                  "mutability": "mutable",
                  "name": "lastIndex_",
                  "nameLocation": "4575:10:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35767,
                  "src": "4567:18:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4504:87:67"
            },
            "returnParameters": {
              "id": 35766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35767,
                  "src": "4615:16:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35763,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4615:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35764,
                    "nodeType": "ArrayTypeName",
                    "src": "4615:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4614:18:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35778,
            "nodeType": "FunctionDefinition",
            "src": "4847:94:67",
            "nodes": [],
            "documentation": {
              "id": 35768,
              "nodeType": "StructuredDocumentation",
              "src": "4639:203:67",
              "text": "@notice             Returns an array of all active market IDs for a given payout and quote token\n @param payout_      Address of payout token\n @param quote_       Address of quote token"
            },
            "functionSelector": "bbfe3a32",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketsFor",
            "nameLocation": "4856:10:67",
            "parameters": {
              "id": 35773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35770,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "4875:7:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35778,
                  "src": "4867:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35772,
                  "mutability": "mutable",
                  "name": "quote_",
                  "nameLocation": "4892:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35778,
                  "src": "4884:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4884:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4866:33:67"
            },
            "returnParameters": {
              "id": 35777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35776,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35778,
                  "src": "4923:16:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35774,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4923:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35775,
                    "nodeType": "ArrayTypeName",
                    "src": "4923:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4922:18:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35794,
            "nodeType": "FunctionDefinition",
            "src": "5515:199:67",
            "nodes": [],
            "documentation": {
              "id": 35779,
              "nodeType": "StructuredDocumentation",
              "src": "4947:563:67",
              "text": "@notice                 Returns the market ID with the highest current payoutToken payout for depositing quoteToken\n @param payout_          Address of payout token\n @param quote_           Address of quote token\n @param amountIn_        Amount of quote tokens to deposit\n @param minAmountOut_    Minimum amount of payout tokens to receive as payout\n @param maxExpiry_       Latest acceptable vesting timestamp for bond\n                         Inputting the zero address will take into account just the protocol fee."
            },
            "functionSelector": "9a0fae9b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "findMarketFor",
            "nameLocation": "5524:13:67",
            "parameters": {
              "id": 35790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35781,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "5555:7:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "5547:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5547:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35783,
                  "mutability": "mutable",
                  "name": "quote_",
                  "nameLocation": "5580:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "5572:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5572:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35785,
                  "mutability": "mutable",
                  "name": "amountIn_",
                  "nameLocation": "5604:9:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "5596:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5596:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35787,
                  "mutability": "mutable",
                  "name": "minAmountOut_",
                  "nameLocation": "5631:13:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "5623:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5623:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35789,
                  "mutability": "mutable",
                  "name": "maxExpiry_",
                  "nameLocation": "5662:10:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "5654:18:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5654:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5537:141:67"
            },
            "returnParameters": {
              "id": 35793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35792,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5710:2:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "5702:10:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5701:12:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35803,
            "nodeType": "FunctionDefinition",
            "src": "5795:68:67",
            "nodes": [],
            "documentation": {
              "id": 35795,
              "nodeType": "StructuredDocumentation",
              "src": "5720:70:67",
              "text": "@notice             Returns the Teller that services the market ID"
            },
            "functionSelector": "78b5a87a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTeller",
            "nameLocation": "5804:9:67",
            "parameters": {
              "id": 35798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35797,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "5822:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35803,
                  "src": "5814:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5814:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5813:13:67"
            },
            "returnParameters": {
              "id": 35802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35801,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35803,
                  "src": "5850:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondTeller_$36306",
                    "typeString": "contract IBondTeller"
                  },
                  "typeName": {
                    "id": 35800,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35799,
                      "name": "IBondTeller",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36306,
                      "src": "5850:11:67"
                    },
                    "referencedDeclaration": 36306,
                    "src": "5850:11:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$36306",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5849:13:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35811,
            "nodeType": "FunctionDefinition",
            "src": "5934:70:67",
            "nodes": [],
            "documentation": {
              "id": 35804,
              "nodeType": "StructuredDocumentation",
              "src": "5869:60:67",
              "text": "@notice             Returns current capacity of a market"
            },
            "functionSelector": "1c063a6c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currentCapacity",
            "nameLocation": "5943:15:67",
            "parameters": {
              "id": 35807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35806,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "5967:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "5959:11:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5959:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5958:13:67"
            },
            "returnParameters": {
              "id": 35810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "5995:7:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5995:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5994:9:67"
            },
            "scope": 35812,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBondAggregator",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          35812
        ],
        "name": "IBondAggregator",
        "nameLocation": "248:15:67",
        "scope": 35813,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 67
}