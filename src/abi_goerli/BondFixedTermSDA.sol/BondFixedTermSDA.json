{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "teller_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auctioneer_AmountLessThanMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_BadExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InitialPriceLessThanMin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "conclusion_",
          "type": "uint256"
        }
      ],
      "name": "Auctioneer_MarketConcluded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MaxPayoutExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NewMarketsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotEnoughCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OnlyMarketOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "defaultTuneInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "defaultTuneAdjustment",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDebtDecayInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDepositInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minMarketDuration",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDebtBuffer",
          "type": "uint32"
        }
      ],
      "name": "DefaultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "MarketClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldControlVariable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newControlVariable",
          "type": "uint256"
        }
      ],
      "name": "Tuned",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adjustments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "change",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "lastAdjustment",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "timeToAdjusted",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowNewMarkets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callbackAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "closeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "params_",
          "type": "bytes"
        }
      ],
      "name": "createMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentControlVariable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultTuneAdjustment",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultTuneInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAggregator",
      "outputs": [
        {
          "internalType": "contract IBondAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getMarketInfoForPurchase",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTeller",
      "outputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isInstantSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "capacityInQuote",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purchased",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "scale",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "maxAmountAccepted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "lastTune",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "lastDecay",
          "type": "uint48"
        },
        {
          "internalType": "uint32",
          "name": "length",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "depositInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "tuneInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "tuneAdjustmentDelay",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "debtDecayInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "tuneIntervalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tuneBelowCapacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastTuneDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDebtBuffer",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDebtDecayInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDepositInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minMarketDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "newOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "payoutFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "pullOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchaseBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setAllowNewMarkets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setCallbackAuthStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[6]",
          "name": "defaults_",
          "type": "uint32[6]"
        }
      ],
      "name": "setDefaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint32[3]",
          "name": "intervals_",
          "type": "uint32[3]"
        }
      ],
      "name": "setIntervals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "terms",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "controlVariable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "conclusion",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b50604051620039523803806200395283398101604081905262000034916200013d565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050506001600160a01b039081166080521660a0525050600980546001600160c01b0319167527100001518000000e100003f48000000e100001518017905550506007805460ff19166001179055620001a5565b6001600160a01b03811681146200013a57600080fd5b50565b600080600080608085870312156200015457600080fd5b8451620001618162000124565b6020860151909450620001748162000124565b6040860151909350620001878162000124565b60608601519092506200019a8162000124565b939692955090935050565b60805160a05161376b620001e7600039600081816103e0015281816115000152818161173301526117f70152600081816102680152611e70015261376b6000f3fe608060405234801561001057600080fd5b50600436106101cd5760003560e01c80630a9d85eb146101d257806310b05317146101f857806313af40351461020d5780631c063a6c1461022057806327507458146102435780633ad59dbc146102665780633adec5a71461029557806353c7f8e0146102a85780635dc4d16b146102bb5780635f77274e146102de5780636352211e146102f15780636729a41e1461031a578063699e17d9146103435780637a9e5e4b146103565780638973082c146103695780638b098db3146103955780638da5cb5b146103a8578063946824cd146103bb5780639787d107146103de578063acc5570c14610404578063ae41809514610533578063afa9d3b014610546578063b1283e7714610553578063bbbdd95a14610639578063bc3b2b121461064c578063bcb29667146106c4578063bcf6cde8146106d7578063bd1f3a5e146106ea578063bf48582b146106fd578063bf7e214f14610710578063c0aa0e8a14610723578063c7bf8ca014610793578063d2040687146107a6578063d2bee323146107bd578063d9ccdc93146107d4578063e007fa97146107e4578063e3684e39146107f7578063e9220673146108dd578063ea0aca33146108f4575b600080fd5b6101e56101e036600461318e565b61090b565b6040519081526020015b60405180910390f35b61020b61020636600461318e565b61093d565b005b61020b61021b3660046131cc565b6109ad565b6101e561022e36600461318e565b60009081526002602052604090206004015490565b61025661025136600461318e565b610a33565b60405190151581526020016101ef565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516101ef91906131e9565b6101e56102a336600461318e565b610a79565b6101e56102b63660046131fd565b610adc565b6102566102c93660046131cc565b60086020526000908152604090205460ff1681565b61020b6102ec366004613287565b610b6b565b6102886102ff36600461318e565b6000908152600260205260409020546001600160a01b031690565b61028861032836600461318e565b6006602052600090815260409020546001600160a01b031681565b61020b6103513660046132a4565b610bb0565b61020b6103643660046131cc565b610f0a565b60095461038090600160a01b900463ffffffff1681565b60405163ffffffff90911681526020016101ef565b6102566103a336600461318e565b610ff4565b600054610288906001600160a01b031681565b6101e56103c936600461318e565b6000908152600260205260409020600a015490565b7f0000000000000000000000000000000000000000000000000000000000000000610288565b6104ea61041236600461318e565b600081815260026020818152604080842081516101808101835281546001600160a01b039081168083526001840154821683870181905284880154831684870181905260038087015494851660608701819052600160a01b90950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007870154610100870190815260088801546101208801526009880154610140880152600a90970154610160909601959095529989529290955292909520909301549251919590949265ffffffffffff169190565b604080516001600160a01b0397881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c0016101ef565b61020b61054136600461318e565b61102a565b6007546102569060ff1681565b6105cc61056136600461318e565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860154600787015460088801546009890154600a909901546001600160a01b039889169a89169997891698871697600160a01b90970460ff1696908c565b604080516001600160a01b039d8e1681529b8d1660208d0152998c16998b0199909952999096166060890152931515608088015260a087019290925260c086015260e0850152610100840152610120830152610140820192909252610160810191909152610180016101ef565b61020b6106473660046132d7565b61106d565b61069361065a36600461318e565b6005602052600090815260409020805460019091015465ffffffffffff80821691600160301b810490911690600160601b900460ff1684565b6040516101ef949392919093845265ffffffffffff9283166020850152911660408301521515606082015260800190565b6101e56106d236600461318e565b6110ca565b61020b6106e5366004613310565b611206565b61020b6106f8366004613388565b61126b565b6101e561070b36600461340c565b6114f8565b600154610288906001600160a01b031681565b61076561073136600461318e565b60036020526000908152604090208054600182015460029092015490919065ffffffffffff80821691600160301b90041684565b60408051948552602085019390935265ffffffffffff918216928401929092521660608201526080016101ef565b6101e56107a1366004613310565b611610565b60095461038090600160601b900463ffffffff1681565b60095461038090600160801b900463ffffffff1681565b6009546103809063ffffffff1681565b6101e56107f2366004613445565b6117ea565b61087761080536600461318e565b600460205260009081526040902080546001820154600283015460039093015465ffffffffffff80841694600160301b85049091169363ffffffff600160601b8204811694600160801b8304821694600160a01b8404831694600160c01b8504841694600160e01b900490931692908a565b6040805165ffffffffffff9b8c1681529a90991660208b015263ffffffff978816988a01989098529486166060890152928516608088015290841660a08701529290921660c085015260e0840191909152610100830152610120820152610140016101ef565b60095461038090600160401b900463ffffffff1681565b60095461038090600160201b900463ffffffff1681565b60008061091783611a60565b5050600084815260036020526040902054909150610936908290613487565b9392505050565b6000818152600660205260409020546001600160a01b0316331461097457604051631623b81960e11b815260040160405180910390fd5b600090815260066020908152604080832054600290925290912080546001600160a01b0319166001600160a01b03909216919091179055565b6109c3336000356001600160e01b031916611b2f565b6109e85760405162461bcd60e51b81526004016109df9061349e565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610a73575060008281526003602052604090206002015442600160301b90910465ffffffffffff16115b92915050565b600080610aaa610a88846110ca565b6000858152600260205260409020600a0154610aa38661090b565b9190611bd9565b6000848152600260205260409020600601549091508111610a7357600083815260026020526040902060060154610936565b600080610aeb838501856134f5565b905080610100015165ffffffffffff16600014158015610b3c57506201518081610100015165ffffffffffff161080610b3c5750635dba240065ffffffffffff1681610100015165ffffffffffff16115b15610b5a57604051633b596f5f60e01b815260040160405180910390fd5b610b6381611c19565b949350505050565b610b81336000356001600160e01b031916611b2f565b610b9d5760405162461bcd60e51b81526004016109df9061349e565b6007805460ff1916911515919091179055565b610bb982610a33565b610bd657604051633b596f5f60e01b815260040160405180910390fd5b610be360208201826135cc565b63ffffffff161580610c085750610c0060408201602083016135cc565b63ffffffff16155b80610c265750610c1e60608201604083016135cc565b63ffffffff16155b15610c4457604051633b596f5f60e01b815260040160405180910390fd5b610c5460408201602083016135cc565b63ffffffff16610c6760208301836135cc565b63ffffffff161015610c8c57604051633b596f5f60e01b815260040160405180910390fd5b600082815260046020908152604090912080549091600160801b90910463ffffffff1690610cbc908401846135cc565b63ffffffff161015610ce157604051633b596f5f60e01b815260040160405180910390fd5b600954600160401b900463ffffffff16610d0160608401604085016135cc565b63ffffffff161015610d2657604051633b596f5f60e01b815260040160405180910390fd5b60008381526002602081815260409283902083516101808101855281546001600160a01b0390811680835260018401548216948301949094529382015484169481019490945260038101549283166060850152600160a01b90920460ff1615156080840152600482015460a0840152600582015460c0840152600682015460e0840152600782015461010084015260088201546101208401526009820154610140840152600a909101546101608301523314610df557604051634e1c8b5d60e01b815260040160405180910390fd5b610e0260208401846135cc565b825463ffffffff91909116600160a01b0263ffffffff60a01b19909116178255610e74610e3260208501856135cc565b60008681526003602052604090206002015463ffffffff9190911690610e68904290600160301b900465ffffffffffff16613487565b60a08401519190612621565b6001830181905560a082015111610e8c576000610ea0565b81600101548160a00151610ea09190613487565b6002830155610eb560408401602085016135cc565b825463ffffffff91909116600160c01b0263ffffffff60c01b19909116178255610ee560608401604085016135cc565b825463ffffffff91909116600160e01b026001600160e01b0390911617909155505050565b6000546001600160a01b0316331480610f9f575060015460405163b700961360e01b81526001600160a01b039091169063b700961390610f5e90339030906001600160e01b031960003516906004016135e7565b602060405180830381865afa158015610f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9f9190613614565b610fa857600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206002015465ffffffffffff16635dba24008111156110235742811115610936565b1592915050565b6000818152600260205260409020546001600160a01b0316331461106157604051634e1c8b5d60e01b815260040160405180910390fd5b61106a816126cf565b50565b611083336000356001600160e01b031916611b2f565b61109f5760405162461bcd60e51b81526004016109df9061349e565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6000818152600460209081526040808320815161014081018352815465ffffffffffff8082168352600160301b82041694820185905263ffffffff600160601b8204811694830194909452600160801b810484166060830152600160a01b810484166080830152600160c01b8104841660a0830152600160e01b900490921660c0830152600181015460e08301526002810154610100830152600301546101208201529042808211156111c75760c0830151818303906111bd9061119590839063ffffffff16613631565b60c0860151600089815260026020526040902060050154919063ffffffff9081169061262116565b9695505050505050565b60c08301518282039063ffffffff1681116111fa576111f5818560c0015163ffffffff166111959190613487565b6111bd565b60009695505050505050565b6000828152600260205260409020546001600160a01b0316331461123d57604051634e1c8b5d60e01b815260040160405180910390fd5b60009182526006602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b611281336000356001600160e01b031916611b2f565b61129d5760405162461bcd60e51b81526004016109df9061349e565b6020810151815163ffffffff918216911610156112cd57604051633b596f5f60e01b815260040160405180910390fd5b6060810151815163ffffffff918216911610156112fd57604051633b596f5f60e01b815260040160405180910390fd5b6080810151606082015163ffffffff9182169116111561133057604051633b596f5f60e01b815260040160405180910390fd5b6060810151611340906005613649565b63ffffffff16816002602002015163ffffffff16101561137357604051633b596f5f60e01b815260040160405180910390fd5b80600060200201516009805463ffffffff191663ffffffff90921691909117905580600160200201516009805463ffffffff909216600160201b0263ffffffff60201b1990921691909117905580600260200201516009805463ffffffff909216600160401b0263ffffffff60401b1990921691909117905580600360200201516009805463ffffffff909216600160601b0263ffffffff60601b1990921691909117905580600460200201516009805463ffffffff909216600160801b0263ffffffff60801b19909216919091179055806005602090810291909101516009805463ffffffff60a01b198116600160a01b63ffffffff94851681029182179384905560408051938616928616929092178352600160201b8404851695830195909552600160401b8304841690820152600160601b820483166060820152600160801b8204831660808201529290041660a08201527fbbc02fa2138d26ec5ecb379612618d1b291bf5140167f3028178080953459c5a9060c00160405180910390a150565b60008061159e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b88c9148856040518263ffffffff1660e01b815260040161154a91906131e9565b602060405180830381865afa158015611567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158b9190613675565b869065ffffffffffff16620186a0612621565b6000858152600260205260408120600a0154919250906115d2906115c187610a79565b6115cb858a613487565b9190612621565b60008681526002602052604090206007015490915081111561160757604051632e21875760e11b815260040160405180910390fd5b91506109369050565b600082815260026020818152604080842081516101808101835281546001600160a01b03908116825260018301548116948201949094529381015483169184019190915260038101549182166060840152600160a01b90910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a0154610160820152816116c685610a79565b9050600082608001516116ee5761016083015160a08401516116e9918490612621565b6116f4565b8260a001515b90506000611717838561016001518661010001516126219092919063ffffffff16565b90506000818310611728578161172a565b825b905060006117d17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b88c91488a6040518263ffffffff1660e01b815260040161177d91906131e9565b602060405180830381865afa15801561179a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117be9190613675565b839065ffffffffffff16620186a0612621565b90506117dd8183613631565b9998505050505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461183557604051631623b81960e11b815260040160405180910390fd5b60008481526002602081815260408084206003808452948290208251608081018452815481526001820154948101949094529093015465ffffffffffff80821692840192909252600160301b9004166060820152918101549091906001600160a01b0316158015906118c1575081546001600160a01b031660009081526008602052604090205460ff16155b156118df57604051631623b81960e11b815260040160405180910390fd5b6000429050816060015165ffffffffffff168165ffffffffffff1610611927576060820151604051627fc4a760e41b815265ffffffffffff90911660048201526024016109df565b600061193488884261273a565b9550905085851015611959576040516374ec9d5b60e01b815260040160405180910390fd5b836007015485111561197e57604051632e21875760e11b815260040160405180910390fd5b6003840154600160a01b900460ff1661199d57836004015485116119a5565b836004015487115b156119c35760405163f3383dc960e01b815260040160405180910390fd5b6003840154600160a01b900460ff166119dc57846119de565b865b8460040160008282546119f19190613487565b9250508190555086846009016000828254611a0c9190613631565b9250508190555084846008016000828254611a279190613631565b9091555050600584015460208401511015611a4a57611a45886126cf565b611a55565b611a55888383612aa5565b505050509392505050565b600081815260056020908152604080832081516080810183528154815260019091015465ffffffffffff80821694830194909452600160301b810490931691810191909152600160601b90910460ff1615156060820181905282918291611ad257600080600093509350935050611b28565b6020810151611ae19042613692565b9250806040015165ffffffffffff168365ffffffffffff1610915081611b08578051611b24565b60408101518151611b249165ffffffffffff8087169116612621565b9350505b9193909250565b6001546000906001600160a01b03168015801590611bb9575060405163b700961360e01b81526001600160a01b0382169063b700961390611b78908790309088906004016135e7565b602060405180830381865afa158015611b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb99190613614565b80610b6357506000546001600160a01b0385811691161491505092915050565b6000611be6848484612621565b905060008280611bf857611bf86136b9565b8486091115610936576000198110611c0f57600080fd5b6001019392505050565b60075460009060ff16611c3f5760405163325f1ffd60e11b815260040160405180910390fd5b600082600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca791906136cf565b9050600083602001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1191906136cf565b905060068260ff161080611d28575060128260ff16115b15611d4657604051633b596f5f60e01b815260040160405180910390fd5b60068160ff161080611d5b575060128160ff16115b15611d7957604051633b596f5f60e01b815260040160405180910390fd5b60171984610160015160000b1280611d995750601884610160015160000b135b15611db757604051633b596f5f60e01b815260040160405180910390fd5b3360009081526008602052604090205460ff16158015611de3575060408401516001600160a01b031615155b15611e0157604051631623b81960e11b815260040160405180910390fd5b5050600082610160015160240160ff16600a0a90508260c001518360a001511015611e3f57604051634496547d60e01b815260040160405180910390fd5b8251602084015160405163b435914360e01b81526001600160a01b03928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af1158015611eb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edd91906136f2565b90506000804286610120015165ffffffffffff16611efb9190613487565b60095490925063ffffffff600160801b90910481169083161080611f36575060095461014087015163ffffffff600160601b90920482169116105b80611f5157508163ffffffff1686610140015163ffffffff16115b15611f6f57604051633b596f5f60e01b815260040160405180910390fd5b60008661014001516005611f839190613649565b60095490915063ffffffff808316600160401b9092041611611fa55780611fb6565b600954600160401b900463ffffffff165b60095461014089015191935060009161200e9163ffffffff908116911611611fe65760095463ffffffff16611fed565b8861014001515b63ffffffff168563ffffffff168a608001516126219092919063ffffffff16565b60408051610140808201835265ffffffffffff4216808352602083015263ffffffff808916938301939093528b0180518316606083015260095490519394509092608084019291821691161161206c5760095463ffffffff16612073565b8961014001515b63ffffffff9081168252600954600160201b900481166020830152851660408201526060810183905260808a8101519101906120b0908490613487565b81526020016120ee8563ffffffff168763ffffffff168c606001516120d9578c608001516115cb565b60a08d015160808e01516115cb918d90612621565b90526000868152600460209081526040808320845181549386015192860151606080880151608089015160a08a015160c08b015165ffffffffffff9687166001600160601b0319909a1699909917600160301b969098169590950296909617600160601b600160a01b031916600160601b63ffffffff9485160263ffffffff60801b191617600160801b9184169190910217600160a01b600160e01b031916600160a01b9583169590950263ffffffff60c01b191694909417600160c01b92821692909202919091176001600160e01b0316600160e01b919094160292909217825560e0840151600183015561010084015160028301556101209093015160039091015590890151909250829150819061220c578860800151612221565b60a089015160808a0151612221918990612621565b905061223a8163ffffffff808716908881169061262116565b925061226289610140015163ffffffff168663ffffffff16836126219092919063ffffffff16565b915050604051806101800160405280336001600160a01b0316815260200189600001516001600160a01b0316815260200189602001516001600160a01b0316815260200189604001516001600160a01b03168152602001896060015115158152602001896080015181526020018381526020018960c0015181526020018281526020016000815260200160008152602001878152506002600087815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a01559050506000600960149054906101000a900463ffffffff1663ffffffff16612466620186a065ffffffffffff1685856126219092919063ffffffff16565b1161248057600954600160a01b900463ffffffff1661248e565b61248e82620186a085612621565b905060006124c3828b60e0015163ffffffff16116124ac57826124b8565b8a60e0015163ffffffff165b8590620186a0612621565b6124cd9085613631565b60a08b01519091506000906124e3908a87612621565b905060405180608001604052808281526020018381526020018c610100015165ffffffffffff1681526020018c610120015165ffffffffffff16815250600360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160020160066101000a81548165ffffffffffff021916908365ffffffffffff1602179055509050508a602001516001600160a01b03168b600001516001600160a01b0316897f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d8e61010001518f60a0015160405161260a92919065ffffffffffff929092168252602082015260400190565b60405180910390a450959998505050505050505050565b600080806000198587098587029250828110838203039150508060000361265a576000841161264f57600080fd5b508290049050610936565b80841161266657600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60008181526003602090815260408083206002908101805465ffffffffffff60301b1916600160301b4265ffffffffffff16021790559091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b600083815260026020818152604080842081516101808101835281546001600160a01b03908116825260018301548116948201949094529381015483169184019190915260038101549182166060840152600160a01b90910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a01546101608201528190816127f2876110ca565b60008881526002602090815260408083206005908101859055909152902060010154909150600160601b900460ff16156129135760008781526005602052604081209080806128408b611a60565b60008e815260036020526040812080549497509295509093508592612866908490613487565b909155505080156128fe57828460000160008282546128859190613487565b90915550506001840180548391906006906128b0908490600160301b900465ffffffffffff16613692565b92506101000a81548165ffffffffffff021916908365ffffffffffff160217905550888460010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555061290e565b60018401805460ff60601b191690555b505050505b61291c876130c9565b60e083015190945080851015612930578094505b61016083015161294290889087612621565b60008981526004602052604081208054600390910154929650600160e01b810463ffffffff9081169392600160301b90920465ffffffffffff16919061298e9085908a908690611bd916565b60008d8152600460205260409020805491925082916006906129c0908490600160301b900465ffffffffffff1661370b565b92506101000a81548165ffffffffffff021916908365ffffffffffff1602179055506000828b65ffffffffffff1611612a1457612a0565ffffffffffff8c1684613487565b612a0f9086613631565b612a4f565b612a268365ffffffffffff8d16613487565b8511612a33576000612a4f565b612a458365ffffffffffff8d16613487565b612a4f9086613487565b905088612a6886612a608585613631565b8a9190612621565b612a729190613631565b612a7d906001613631565b60009d8e5260026020526040909d206005019c909c5550969a95995094975050505050505050565b600060046000858152602001908152602001600020604051806101400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152602001600282015481526020016003820154815250509050600060026000868152602001908152602001600020604051806101800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160149054906101000a900460ff16151515158152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152505090506000846003600088815260200190815260200160002060020160069054906101000a900465ffffffffffff16612d729190613692565b65ffffffffffff16905060008260800151612d91578260a00151612da6565b61016083015160a0840151612da69187612621565b905060008360800151612dbe57836101200151612dd4565b610160840151610140850151612dd49188612621565b612dde9083613631565b9050600082612e1785886040015163ffffffff16612dfc9190613487565b886040015163ffffffff16856126219092919063ffffffff16565b612e219190613631565b90508561010001518560a00151108015612e3a57508181105b80612e75575060808601518651612e579163ffffffff169061370b565b65ffffffffffff168865ffffffffffff1610158015612e7557508181115b156130be57612e99866060015163ffffffff1685856126219092919063ffffffff16565b60008a8152600260205260408082206007019290925560c0880151918801519091612ed291849163ffffffff9081169181169061262116565b60008b81526003602052604081205461016089015192935091612ef7908b9085611bd9565b60408051848152602081018390529192508d917f78f9c01d72705dba80d6ce051d36a1f987bf2a3800fee938c111a2ae741e57d1910160405180910390a281811015613025576000612f498284613487565b905060405180608001604052808281526020018d65ffffffffffff1681526020018b60a0015163ffffffff1665ffffffffffff16815260200160011515815250600560008f81526020019081526020016000206000820151816000015560208201518160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060408201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550606082015181600101600c6101000a81548160ff0219169083151502179055509050505061304f565b60008c815260036020908152604080832084905560059091529020600101805460ff60601b191690555b60008c8152600460205260409020805465ffffffffffff191665ffffffffffff8d1617905560e089015160a08901511161308a57600061309e565b8860e001518860a0015161309e9190613487565b60008d815260046020526040902060028101919091556003019290925550505b505050505050505050565b600081815260026020818152604080842081516101808101835281546001600160a01b0390811682526001830154811682860152948201548516818401526003808301549586166060830152600160a01b90950460ff1615156080820152600482015460a0820152600582015460c08201819052600683015460e0830152600783015461010083015260088301546101208301526009830154610140830152600a90920154610160820181905287875294909352908420549192610936929190611bd9565b6000602082840312156131a057600080fd5b5035919050565b6001600160a01b038116811461106a57600080fd5b80356131c7816131a7565b919050565b6000602082840312156131de57600080fd5b8135610936816131a7565b6001600160a01b0391909116815260200190565b6000806020838503121561321057600080fd5b82356001600160401b038082111561322757600080fd5b818501915085601f83011261323b57600080fd5b81358181111561324a57600080fd5b86602082850101111561325c57600080fd5b60209290920196919550909350505050565b801515811461106a57600080fd5b80356131c78161326e565b60006020828403121561329957600080fd5b81356109368161326e565b600080608083850312156132b757600080fd5b82359150836080840111156132cb57600080fd5b50926020919091019150565b600080604083850312156132ea57600080fd5b82356132f5816131a7565b915060208301356133058161326e565b809150509250929050565b6000806040838503121561332357600080fd5b823591506020830135613305816131a7565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171561336e5761336e613335565b60405290565b803563ffffffff811681146131c757600080fd5b600060c0828403121561339a57600080fd5b82601f8301126133a957600080fd5b60405160c081016001600160401b03811182821017156133cb576133cb613335565b6040528060c08401858111156133e057600080fd5b845b81811015613401576133f381613374565b8352602092830192016133e2565b509195945050505050565b60008060006060848603121561342157600080fd5b8335925060208401359150604084013561343a816131a7565b809150509250925092565b60008060006060848603121561345a57600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561349957613499613471565b500390565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b65ffffffffffff8116811461106a57600080fd5b80356131c7816134c4565b8035600081900b81146131c757600080fd5b6000610180828403121561350857600080fd5b61351061334b565b613519836131bc565b8152613527602084016131bc565b6020820152613538604084016131bc565b60408201526135496060840161327c565b60608201526080830135608082015260a083013560a082015260c083013560c082015261357860e08401613374565b60e082015261010061358b8185016134d8565b9082015261012061359d8482016134d8565b908201526101406135af848201613374565b908201526101606135c18482016134e3565b908201529392505050565b6000602082840312156135de57600080fd5b61093682613374565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561362657600080fd5b81516109368161326e565b6000821982111561364457613644613471565b500190565b600063ffffffff8083168185168183048111821515161561366c5761366c613471565b02949350505050565b60006020828403121561368757600080fd5b8151610936816134c4565b600065ffffffffffff838116908316818110156136b1576136b1613471565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000602082840312156136e157600080fd5b815160ff8116811461093657600080fd5b60006020828403121561370457600080fd5b5051919050565b600065ffffffffffff80831681851680830382111561372c5761372c613471565b0194935050505056fea264697066735822122068416d5f8005dd8711509ba70ce6c5aba75cf87e66df1f12426173b2e70e5e2064736f6c634300080f0033",
    "sourceMap": "1215:946:85:-:0;;;1308:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;1466:7:85;;1475:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;;5247:25:83;;::::1;;::::0;5283:17:::1;;::::0;-1:-1:-1;;5313:19:83::1;:30:::0;;-1:-1:-1;;;;;;5512:21:83;;;;;-1:-1:-1;;5553:15:83::1;:22:::0;;-1:-1:-1;;5553:22:83::1;-1:-1:-1::0;5553:22:83::1;::::0;;1215:946:85;;14:144:146;-1:-1:-1;;;;;102:31:146;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:771::-;325:6;333;341;349;402:3;390:9;381:7;377:23;373:33;370:53;;;419:1;416;409:12;370:53;451:9;445:16;470:44;508:5;470:44;:::i;:::-;583:2;568:18;;562:25;533:5;;-1:-1:-1;596:46:146;562:25;596:46;:::i;:::-;713:2;698:18;;692:25;661:7;;-1:-1:-1;726:46:146;692:25;726:46;:::i;:::-;843:2;828:18;;822:25;791:7;;-1:-1:-1;856:46:146;822:25;856:46;:::i;:::-;163:771;;;;-1:-1:-1;163:771:146;;-1:-1:-1;;163:771:146:o;:::-;1215:946:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101cd5760003560e01c80630a9d85eb146101d257806310b05317146101f857806313af40351461020d5780631c063a6c1461022057806327507458146102435780633ad59dbc146102665780633adec5a71461029557806353c7f8e0146102a85780635dc4d16b146102bb5780635f77274e146102de5780636352211e146102f15780636729a41e1461031a578063699e17d9146103435780637a9e5e4b146103565780638973082c146103695780638b098db3146103955780638da5cb5b146103a8578063946824cd146103bb5780639787d107146103de578063acc5570c14610404578063ae41809514610533578063afa9d3b014610546578063b1283e7714610553578063bbbdd95a14610639578063bc3b2b121461064c578063bcb29667146106c4578063bcf6cde8146106d7578063bd1f3a5e146106ea578063bf48582b146106fd578063bf7e214f14610710578063c0aa0e8a14610723578063c7bf8ca014610793578063d2040687146107a6578063d2bee323146107bd578063d9ccdc93146107d4578063e007fa97146107e4578063e3684e39146107f7578063e9220673146108dd578063ea0aca33146108f4575b600080fd5b6101e56101e036600461318e565b61090b565b6040519081526020015b60405180910390f35b61020b61020636600461318e565b61093d565b005b61020b61021b3660046131cc565b6109ad565b6101e561022e36600461318e565b60009081526002602052604090206004015490565b61025661025136600461318e565b610a33565b60405190151581526020016101ef565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516101ef91906131e9565b6101e56102a336600461318e565b610a79565b6101e56102b63660046131fd565b610adc565b6102566102c93660046131cc565b60086020526000908152604090205460ff1681565b61020b6102ec366004613287565b610b6b565b6102886102ff36600461318e565b6000908152600260205260409020546001600160a01b031690565b61028861032836600461318e565b6006602052600090815260409020546001600160a01b031681565b61020b6103513660046132a4565b610bb0565b61020b6103643660046131cc565b610f0a565b60095461038090600160a01b900463ffffffff1681565b60405163ffffffff90911681526020016101ef565b6102566103a336600461318e565b610ff4565b600054610288906001600160a01b031681565b6101e56103c936600461318e565b6000908152600260205260409020600a015490565b7f0000000000000000000000000000000000000000000000000000000000000000610288565b6104ea61041236600461318e565b600081815260026020818152604080842081516101808101835281546001600160a01b039081168083526001840154821683870181905284880154831684870181905260038087015494851660608701819052600160a01b90950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007870154610100870190815260088801546101208801526009880154610140880152600a90970154610160909601959095529989529290955292909520909301549251919590949265ffffffffffff169190565b604080516001600160a01b0397881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c0016101ef565b61020b61054136600461318e565b61102a565b6007546102569060ff1681565b6105cc61056136600461318e565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860154600787015460088801546009890154600a909901546001600160a01b039889169a89169997891698871697600160a01b90970460ff1696908c565b604080516001600160a01b039d8e1681529b8d1660208d0152998c16998b0199909952999096166060890152931515608088015260a087019290925260c086015260e0850152610100840152610120830152610140820192909252610160810191909152610180016101ef565b61020b6106473660046132d7565b61106d565b61069361065a36600461318e565b6005602052600090815260409020805460019091015465ffffffffffff80821691600160301b810490911690600160601b900460ff1684565b6040516101ef949392919093845265ffffffffffff9283166020850152911660408301521515606082015260800190565b6101e56106d236600461318e565b6110ca565b61020b6106e5366004613310565b611206565b61020b6106f8366004613388565b61126b565b6101e561070b36600461340c565b6114f8565b600154610288906001600160a01b031681565b61076561073136600461318e565b60036020526000908152604090208054600182015460029092015490919065ffffffffffff80821691600160301b90041684565b60408051948552602085019390935265ffffffffffff918216928401929092521660608201526080016101ef565b6101e56107a1366004613310565b611610565b60095461038090600160601b900463ffffffff1681565b60095461038090600160801b900463ffffffff1681565b6009546103809063ffffffff1681565b6101e56107f2366004613445565b6117ea565b61087761080536600461318e565b600460205260009081526040902080546001820154600283015460039093015465ffffffffffff80841694600160301b85049091169363ffffffff600160601b8204811694600160801b8304821694600160a01b8404831694600160c01b8504841694600160e01b900490931692908a565b6040805165ffffffffffff9b8c1681529a90991660208b015263ffffffff978816988a01989098529486166060890152928516608088015290841660a08701529290921660c085015260e0840191909152610100830152610120820152610140016101ef565b60095461038090600160401b900463ffffffff1681565b60095461038090600160201b900463ffffffff1681565b60008061091783611a60565b5050600084815260036020526040902054909150610936908290613487565b9392505050565b6000818152600660205260409020546001600160a01b0316331461097457604051631623b81960e11b815260040160405180910390fd5b600090815260066020908152604080832054600290925290912080546001600160a01b0319166001600160a01b03909216919091179055565b6109c3336000356001600160e01b031916611b2f565b6109e85760405162461bcd60e51b81526004016109df9061349e565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610a73575060008281526003602052604090206002015442600160301b90910465ffffffffffff16115b92915050565b600080610aaa610a88846110ca565b6000858152600260205260409020600a0154610aa38661090b565b9190611bd9565b6000848152600260205260409020600601549091508111610a7357600083815260026020526040902060060154610936565b600080610aeb838501856134f5565b905080610100015165ffffffffffff16600014158015610b3c57506201518081610100015165ffffffffffff161080610b3c5750635dba240065ffffffffffff1681610100015165ffffffffffff16115b15610b5a57604051633b596f5f60e01b815260040160405180910390fd5b610b6381611c19565b949350505050565b610b81336000356001600160e01b031916611b2f565b610b9d5760405162461bcd60e51b81526004016109df9061349e565b6007805460ff1916911515919091179055565b610bb982610a33565b610bd657604051633b596f5f60e01b815260040160405180910390fd5b610be360208201826135cc565b63ffffffff161580610c085750610c0060408201602083016135cc565b63ffffffff16155b80610c265750610c1e60608201604083016135cc565b63ffffffff16155b15610c4457604051633b596f5f60e01b815260040160405180910390fd5b610c5460408201602083016135cc565b63ffffffff16610c6760208301836135cc565b63ffffffff161015610c8c57604051633b596f5f60e01b815260040160405180910390fd5b600082815260046020908152604090912080549091600160801b90910463ffffffff1690610cbc908401846135cc565b63ffffffff161015610ce157604051633b596f5f60e01b815260040160405180910390fd5b600954600160401b900463ffffffff16610d0160608401604085016135cc565b63ffffffff161015610d2657604051633b596f5f60e01b815260040160405180910390fd5b60008381526002602081815260409283902083516101808101855281546001600160a01b0390811680835260018401548216948301949094529382015484169481019490945260038101549283166060850152600160a01b90920460ff1615156080840152600482015460a0840152600582015460c0840152600682015460e0840152600782015461010084015260088201546101208401526009820154610140840152600a909101546101608301523314610df557604051634e1c8b5d60e01b815260040160405180910390fd5b610e0260208401846135cc565b825463ffffffff91909116600160a01b0263ffffffff60a01b19909116178255610e74610e3260208501856135cc565b60008681526003602052604090206002015463ffffffff9190911690610e68904290600160301b900465ffffffffffff16613487565b60a08401519190612621565b6001830181905560a082015111610e8c576000610ea0565b81600101548160a00151610ea09190613487565b6002830155610eb560408401602085016135cc565b825463ffffffff91909116600160c01b0263ffffffff60c01b19909116178255610ee560608401604085016135cc565b825463ffffffff91909116600160e01b026001600160e01b0390911617909155505050565b6000546001600160a01b0316331480610f9f575060015460405163b700961360e01b81526001600160a01b039091169063b700961390610f5e90339030906001600160e01b031960003516906004016135e7565b602060405180830381865afa158015610f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9f9190613614565b610fa857600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206002015465ffffffffffff16635dba24008111156110235742811115610936565b1592915050565b6000818152600260205260409020546001600160a01b0316331461106157604051634e1c8b5d60e01b815260040160405180910390fd5b61106a816126cf565b50565b611083336000356001600160e01b031916611b2f565b61109f5760405162461bcd60e51b81526004016109df9061349e565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6000818152600460209081526040808320815161014081018352815465ffffffffffff8082168352600160301b82041694820185905263ffffffff600160601b8204811694830194909452600160801b810484166060830152600160a01b810484166080830152600160c01b8104841660a0830152600160e01b900490921660c0830152600181015460e08301526002810154610100830152600301546101208201529042808211156111c75760c0830151818303906111bd9061119590839063ffffffff16613631565b60c0860151600089815260026020526040902060050154919063ffffffff9081169061262116565b9695505050505050565b60c08301518282039063ffffffff1681116111fa576111f5818560c0015163ffffffff166111959190613487565b6111bd565b60009695505050505050565b6000828152600260205260409020546001600160a01b0316331461123d57604051634e1c8b5d60e01b815260040160405180910390fd5b60009182526006602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b611281336000356001600160e01b031916611b2f565b61129d5760405162461bcd60e51b81526004016109df9061349e565b6020810151815163ffffffff918216911610156112cd57604051633b596f5f60e01b815260040160405180910390fd5b6060810151815163ffffffff918216911610156112fd57604051633b596f5f60e01b815260040160405180910390fd5b6080810151606082015163ffffffff9182169116111561133057604051633b596f5f60e01b815260040160405180910390fd5b6060810151611340906005613649565b63ffffffff16816002602002015163ffffffff16101561137357604051633b596f5f60e01b815260040160405180910390fd5b80600060200201516009805463ffffffff191663ffffffff90921691909117905580600160200201516009805463ffffffff909216600160201b0263ffffffff60201b1990921691909117905580600260200201516009805463ffffffff909216600160401b0263ffffffff60401b1990921691909117905580600360200201516009805463ffffffff909216600160601b0263ffffffff60601b1990921691909117905580600460200201516009805463ffffffff909216600160801b0263ffffffff60801b19909216919091179055806005602090810291909101516009805463ffffffff60a01b198116600160a01b63ffffffff94851681029182179384905560408051938616928616929092178352600160201b8404851695830195909552600160401b8304841690820152600160601b820483166060820152600160801b8204831660808201529290041660a08201527fbbc02fa2138d26ec5ecb379612618d1b291bf5140167f3028178080953459c5a9060c00160405180910390a150565b60008061159e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b88c9148856040518263ffffffff1660e01b815260040161154a91906131e9565b602060405180830381865afa158015611567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158b9190613675565b869065ffffffffffff16620186a0612621565b6000858152600260205260408120600a0154919250906115d2906115c187610a79565b6115cb858a613487565b9190612621565b60008681526002602052604090206007015490915081111561160757604051632e21875760e11b815260040160405180910390fd5b91506109369050565b600082815260026020818152604080842081516101808101835281546001600160a01b03908116825260018301548116948201949094529381015483169184019190915260038101549182166060840152600160a01b90910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a0154610160820152816116c685610a79565b9050600082608001516116ee5761016083015160a08401516116e9918490612621565b6116f4565b8260a001515b90506000611717838561016001518661010001516126219092919063ffffffff16565b90506000818310611728578161172a565b825b905060006117d17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b88c91488a6040518263ffffffff1660e01b815260040161177d91906131e9565b602060405180830381865afa15801561179a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117be9190613675565b839065ffffffffffff16620186a0612621565b90506117dd8183613631565b9998505050505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461183557604051631623b81960e11b815260040160405180910390fd5b60008481526002602081815260408084206003808452948290208251608081018452815481526001820154948101949094529093015465ffffffffffff80821692840192909252600160301b9004166060820152918101549091906001600160a01b0316158015906118c1575081546001600160a01b031660009081526008602052604090205460ff16155b156118df57604051631623b81960e11b815260040160405180910390fd5b6000429050816060015165ffffffffffff168165ffffffffffff1610611927576060820151604051627fc4a760e41b815265ffffffffffff90911660048201526024016109df565b600061193488884261273a565b9550905085851015611959576040516374ec9d5b60e01b815260040160405180910390fd5b836007015485111561197e57604051632e21875760e11b815260040160405180910390fd5b6003840154600160a01b900460ff1661199d57836004015485116119a5565b836004015487115b156119c35760405163f3383dc960e01b815260040160405180910390fd5b6003840154600160a01b900460ff166119dc57846119de565b865b8460040160008282546119f19190613487565b9250508190555086846009016000828254611a0c9190613631565b9250508190555084846008016000828254611a279190613631565b9091555050600584015460208401511015611a4a57611a45886126cf565b611a55565b611a55888383612aa5565b505050509392505050565b600081815260056020908152604080832081516080810183528154815260019091015465ffffffffffff80821694830194909452600160301b810490931691810191909152600160601b90910460ff1615156060820181905282918291611ad257600080600093509350935050611b28565b6020810151611ae19042613692565b9250806040015165ffffffffffff168365ffffffffffff1610915081611b08578051611b24565b60408101518151611b249165ffffffffffff8087169116612621565b9350505b9193909250565b6001546000906001600160a01b03168015801590611bb9575060405163b700961360e01b81526001600160a01b0382169063b700961390611b78908790309088906004016135e7565b602060405180830381865afa158015611b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb99190613614565b80610b6357506000546001600160a01b0385811691161491505092915050565b6000611be6848484612621565b905060008280611bf857611bf86136b9565b8486091115610936576000198110611c0f57600080fd5b6001019392505050565b60075460009060ff16611c3f5760405163325f1ffd60e11b815260040160405180910390fd5b600082600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca791906136cf565b9050600083602001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1191906136cf565b905060068260ff161080611d28575060128260ff16115b15611d4657604051633b596f5f60e01b815260040160405180910390fd5b60068160ff161080611d5b575060128160ff16115b15611d7957604051633b596f5f60e01b815260040160405180910390fd5b60171984610160015160000b1280611d995750601884610160015160000b135b15611db757604051633b596f5f60e01b815260040160405180910390fd5b3360009081526008602052604090205460ff16158015611de3575060408401516001600160a01b031615155b15611e0157604051631623b81960e11b815260040160405180910390fd5b5050600082610160015160240160ff16600a0a90508260c001518360a001511015611e3f57604051634496547d60e01b815260040160405180910390fd5b8251602084015160405163b435914360e01b81526001600160a01b03928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af1158015611eb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edd91906136f2565b90506000804286610120015165ffffffffffff16611efb9190613487565b60095490925063ffffffff600160801b90910481169083161080611f36575060095461014087015163ffffffff600160601b90920482169116105b80611f5157508163ffffffff1686610140015163ffffffff16115b15611f6f57604051633b596f5f60e01b815260040160405180910390fd5b60008661014001516005611f839190613649565b60095490915063ffffffff808316600160401b9092041611611fa55780611fb6565b600954600160401b900463ffffffff165b60095461014089015191935060009161200e9163ffffffff908116911611611fe65760095463ffffffff16611fed565b8861014001515b63ffffffff168563ffffffff168a608001516126219092919063ffffffff16565b60408051610140808201835265ffffffffffff4216808352602083015263ffffffff808916938301939093528b0180518316606083015260095490519394509092608084019291821691161161206c5760095463ffffffff16612073565b8961014001515b63ffffffff9081168252600954600160201b900481166020830152851660408201526060810183905260808a8101519101906120b0908490613487565b81526020016120ee8563ffffffff168763ffffffff168c606001516120d9578c608001516115cb565b60a08d015160808e01516115cb918d90612621565b90526000868152600460209081526040808320845181549386015192860151606080880151608089015160a08a015160c08b015165ffffffffffff9687166001600160601b0319909a1699909917600160301b969098169590950296909617600160601b600160a01b031916600160601b63ffffffff9485160263ffffffff60801b191617600160801b9184169190910217600160a01b600160e01b031916600160a01b9583169590950263ffffffff60c01b191694909417600160c01b92821692909202919091176001600160e01b0316600160e01b919094160292909217825560e0840151600183015561010084015160028301556101209093015160039091015590890151909250829150819061220c578860800151612221565b60a089015160808a0151612221918990612621565b905061223a8163ffffffff808716908881169061262116565b925061226289610140015163ffffffff168663ffffffff16836126219092919063ffffffff16565b915050604051806101800160405280336001600160a01b0316815260200189600001516001600160a01b0316815260200189602001516001600160a01b0316815260200189604001516001600160a01b03168152602001896060015115158152602001896080015181526020018381526020018960c0015181526020018281526020016000815260200160008152602001878152506002600087815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a01559050506000600960149054906101000a900463ffffffff1663ffffffff16612466620186a065ffffffffffff1685856126219092919063ffffffff16565b1161248057600954600160a01b900463ffffffff1661248e565b61248e82620186a085612621565b905060006124c3828b60e0015163ffffffff16116124ac57826124b8565b8a60e0015163ffffffff165b8590620186a0612621565b6124cd9085613631565b60a08b01519091506000906124e3908a87612621565b905060405180608001604052808281526020018381526020018c610100015165ffffffffffff1681526020018c610120015165ffffffffffff16815250600360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160020160066101000a81548165ffffffffffff021916908365ffffffffffff1602179055509050508a602001516001600160a01b03168b600001516001600160a01b0316897f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d8e61010001518f60a0015160405161260a92919065ffffffffffff929092168252602082015260400190565b60405180910390a450959998505050505050505050565b600080806000198587098587029250828110838203039150508060000361265a576000841161264f57600080fd5b508290049050610936565b80841161266657600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60008181526003602090815260408083206002908101805465ffffffffffff60301b1916600160301b4265ffffffffffff16021790559091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b600083815260026020818152604080842081516101808101835281546001600160a01b03908116825260018301548116948201949094529381015483169184019190915260038101549182166060840152600160a01b90910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a01546101608201528190816127f2876110ca565b60008881526002602090815260408083206005908101859055909152902060010154909150600160601b900460ff16156129135760008781526005602052604081209080806128408b611a60565b60008e815260036020526040812080549497509295509093508592612866908490613487565b909155505080156128fe57828460000160008282546128859190613487565b90915550506001840180548391906006906128b0908490600160301b900465ffffffffffff16613692565b92506101000a81548165ffffffffffff021916908365ffffffffffff160217905550888460010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555061290e565b60018401805460ff60601b191690555b505050505b61291c876130c9565b60e083015190945080851015612930578094505b61016083015161294290889087612621565b60008981526004602052604081208054600390910154929650600160e01b810463ffffffff9081169392600160301b90920465ffffffffffff16919061298e9085908a908690611bd916565b60008d8152600460205260409020805491925082916006906129c0908490600160301b900465ffffffffffff1661370b565b92506101000a81548165ffffffffffff021916908365ffffffffffff1602179055506000828b65ffffffffffff1611612a1457612a0565ffffffffffff8c1684613487565b612a0f9086613631565b612a4f565b612a268365ffffffffffff8d16613487565b8511612a33576000612a4f565b612a458365ffffffffffff8d16613487565b612a4f9086613487565b905088612a6886612a608585613631565b8a9190612621565b612a729190613631565b612a7d906001613631565b60009d8e5260026020526040909d206005019c909c5550969a95995094975050505050505050565b600060046000858152602001908152602001600020604051806101400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152602001600282015481526020016003820154815250509050600060026000868152602001908152602001600020604051806101800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160149054906101000a900460ff16151515158152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152505090506000846003600088815260200190815260200160002060020160069054906101000a900465ffffffffffff16612d729190613692565b65ffffffffffff16905060008260800151612d91578260a00151612da6565b61016083015160a0840151612da69187612621565b905060008360800151612dbe57836101200151612dd4565b610160840151610140850151612dd49188612621565b612dde9083613631565b9050600082612e1785886040015163ffffffff16612dfc9190613487565b886040015163ffffffff16856126219092919063ffffffff16565b612e219190613631565b90508561010001518560a00151108015612e3a57508181105b80612e75575060808601518651612e579163ffffffff169061370b565b65ffffffffffff168865ffffffffffff1610158015612e7557508181115b156130be57612e99866060015163ffffffff1685856126219092919063ffffffff16565b60008a8152600260205260408082206007019290925560c0880151918801519091612ed291849163ffffffff9081169181169061262116565b60008b81526003602052604081205461016089015192935091612ef7908b9085611bd9565b60408051848152602081018390529192508d917f78f9c01d72705dba80d6ce051d36a1f987bf2a3800fee938c111a2ae741e57d1910160405180910390a281811015613025576000612f498284613487565b905060405180608001604052808281526020018d65ffffffffffff1681526020018b60a0015163ffffffff1665ffffffffffff16815260200160011515815250600560008f81526020019081526020016000206000820151816000015560208201518160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060408201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550606082015181600101600c6101000a81548160ff0219169083151502179055509050505061304f565b60008c815260036020908152604080832084905560059091529020600101805460ff60601b191690555b60008c8152600460205260409020805465ffffffffffff191665ffffffffffff8d1617905560e089015160a08901511161308a57600061309e565b8860e001518860a0015161309e9190613487565b60008d815260046020526040902060028101919091556003019290925550505b505050505050505050565b600081815260026020818152604080842081516101808101835281546001600160a01b0390811682526001830154811682860152948201548516818401526003808301549586166060830152600160a01b90950460ff1615156080820152600482015460a0820152600582015460c08201819052600683015460e0830152600783015461010083015260088301546101208301526009830154610140830152600a90920154610160820181905287875294909352908420549192610936929190611bd9565b6000602082840312156131a057600080fd5b5035919050565b6001600160a01b038116811461106a57600080fd5b80356131c7816131a7565b919050565b6000602082840312156131de57600080fd5b8135610936816131a7565b6001600160a01b0391909116815260200190565b6000806020838503121561321057600080fd5b82356001600160401b038082111561322757600080fd5b818501915085601f83011261323b57600080fd5b81358181111561324a57600080fd5b86602082850101111561325c57600080fd5b60209290920196919550909350505050565b801515811461106a57600080fd5b80356131c78161326e565b60006020828403121561329957600080fd5b81356109368161326e565b600080608083850312156132b757600080fd5b82359150836080840111156132cb57600080fd5b50926020919091019150565b600080604083850312156132ea57600080fd5b82356132f5816131a7565b915060208301356133058161326e565b809150509250929050565b6000806040838503121561332357600080fd5b823591506020830135613305816131a7565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171561336e5761336e613335565b60405290565b803563ffffffff811681146131c757600080fd5b600060c0828403121561339a57600080fd5b82601f8301126133a957600080fd5b60405160c081016001600160401b03811182821017156133cb576133cb613335565b6040528060c08401858111156133e057600080fd5b845b81811015613401576133f381613374565b8352602092830192016133e2565b509195945050505050565b60008060006060848603121561342157600080fd5b8335925060208401359150604084013561343a816131a7565b809150509250925092565b60008060006060848603121561345a57600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561349957613499613471565b500390565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b65ffffffffffff8116811461106a57600080fd5b80356131c7816134c4565b8035600081900b81146131c757600080fd5b6000610180828403121561350857600080fd5b61351061334b565b613519836131bc565b8152613527602084016131bc565b6020820152613538604084016131bc565b60408201526135496060840161327c565b60608201526080830135608082015260a083013560a082015260c083013560c082015261357860e08401613374565b60e082015261010061358b8185016134d8565b9082015261012061359d8482016134d8565b908201526101406135af848201613374565b908201526101606135c18482016134e3565b908201529392505050565b6000602082840312156135de57600080fd5b61093682613374565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561362657600080fd5b81516109368161326e565b6000821982111561364457613644613471565b500190565b600063ffffffff8083168185168183048111821515161561366c5761366c613471565b02949350505050565b60006020828403121561368757600080fd5b8151610936816134c4565b600065ffffffffffff838116908316818110156136b1576136b1613471565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000602082840312156136e157600080fd5b815160ff8116811461093657600080fd5b60006020828403121561370457600080fd5b5051919050565b600065ffffffffffff80831681851680830382111561372c5761372c613471565b0194935050505056fea264697066735822122068416d5f8005dd8711509ba70ce6c5aba75cf87e66df1f12426173b2e70e5e2064736f6c634300080f0033",
    "sourceMap": "1215:946:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36609:195:83;;;;;;:::i;:::-;;:::i;:::-;;;345:25:146;;;333:2;318:18;36609:195:83;;;;;;;;16318:186;;;;;;:::i;:::-;;:::i;:::-;;1944:147:22;;;;;;:::i;:::-;;:::i;37768:126:83:-;;;;;;:::i;:::-;37838:7;37865:12;;;:7;:12;;;;;:21;;;;37768:126;37101:162;;;;;;:::i;:::-;;:::i;:::-;;;1073:14:146;;1066:22;1048:41;;1036:2;1021:18;37101:162:83;908:187:146;37612:111:83;37704:11;37612:111;;;;;;;:::i;32840:265::-;;;;;;:::i;:::-;;:::i;1604:554:85:-;;;;;;:::i;:::-;;:::i;4122:50:83:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17879:164;;;;;;:::i;:::-;;:::i;37308:115::-;;;;;;:::i;:::-;37370:7;37397:12;;;:7;:12;;;;;:18;-1:-1:-1;;;;;37397:18:83;;37308:115;3771:44;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3771:44:83;;;14375:1651;;;;;;:::i;:::-;;:::i;1504:434:22:-;;;;;;:::i;:::-;;:::i;4553:27:83:-;;;;;-1:-1:-1;;;4553:27:83;;;;;;;;;3409:10:146;3397:23;;;3379:42;;3367:2;3352:18;4553:27:83;3235:192:146;36849:207:83;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;-1:-1:-1;;;;;551:20:22;;;33150:119:83;;;;;;:::i;:::-;33216:7;33243:12;;;:7;:12;;;;;:18;;;;33150:119;37468:99;37552:7;37468:99;;32225:577;;;;;;:::i;:::-;32336:13;32563:12;;;:7;:12;;;;;;;;32536:39;;;;;;;;;-1:-1:-1;;;;;32536:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;32536:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32734:10;;;;;;;;;;;:18;;;;32767:16;;32536:39;;;;;32734:18;;;32767:16;32225:577;;;;;-1:-1:-1;;;;;4032:15:146;;;4014:34;;4084:15;;;4079:2;4064:18;;4057:43;4136:15;;;4116:18;;;4109:43;;;;4188:15;;4183:2;4168:18;;4161:43;4253:14;4241:27;;;4235:3;4220:19;;4213:56;3994:3;4285:19;;4278:35;;;;3963:3;3948:19;32225:577:83;3661:658:146;18331:166:83;;;;;;:::i;:::-;;:::i;3995:27::-;;;;;;;;;3275:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3275:45:83;;;;;;;;;;;;;;-1:-1:-1;;;3275:45:83;;;;;;;;;;;;;-1:-1:-1;;;;;4861:15:146;;;4843:34;;4913:15;;;4908:2;4893:18;;4886:43;4965:15;;;4945:18;;;4938:43;;;;5017:15;;;;5012:2;4997:18;;4990:43;5077:14;;5070:22;5064:3;5049:19;;5042:51;4823:3;5109:19;;5102:35;;;;5168:3;5153:19;;5146:35;5212:3;5197:19;;5190:35;5256:3;5241:19;;5234:35;5300:3;5285:19;;5278:35;5344:3;5329:19;;5322:36;;;;5389:3;5374:19;;5367:36;;;;4792:3;4777:19;3275:45:83;4324:1085:146;18088:198:83;;;;;;:::i;:::-;;:::i;3602:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3602:49:83;;;;;;-1:-1:-1;;;3602:49:83;;;;;;;;;;;;;;;6022:25:146;;;6066:14;6116:15;;;6111:2;6096:18;;6089:43;6168:15;;6163:2;6148:18;;6141:43;6227:14;6220:22;6215:2;6200:18;;6193:50;6009:3;5994:19;;5801:448;35239:1332:83;;;;;;:::i;:::-;;:::i;16071:202::-;;;;;;:::i;:::-;;:::i;16549:1285::-;;;;;;:::i;:::-;;:::i;33314:665::-;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;-1:-1:-1;;;;;578:26:22;;;3400:42:83;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3400:42:83;;;;;;;;;8738:25:146;;;8794:2;8779:18;;8772:34;;;;8825:14;8875:15;;;8855:18;;;8848:43;;;;8927:15;8922:2;8907:18;;8900:43;8725:3;8710:19;3400:42:83;8511:438:146;34024:1177:83;;;;;;:::i;:::-;;:::i;4476:32::-;;;;;-1:-1:-1;;;4476:32:83;;;;;;4515:31;;;;;-1:-1:-1;;;4515:31:83;;;;;;4267:33;;;;;;;;;18594:2514;;;;;;:::i;:::-;;:::i;3503:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3503:48:83;;;;;;;-1:-1:-1;;;3503:48:83;;;;;-1:-1:-1;;;3503:48:83;;;;;-1:-1:-1;;;3503:48:83;;;;;-1:-1:-1;;;3503:48:83;;;;;-1:-1:-1;;;3503:48:83;;;;;;;;;;;;;9670:14:146;9711:15;;;9693:34;;9763:15;;;;9758:2;9743:18;;9736:43;9798:10;9844:15;;;9824:18;;;9817:43;;;;9896:15;;;9891:2;9876:18;;9869:43;9949:15;;;9943:3;9928:19;;9921:44;10002:15;;;9996:3;9981:19;;9974:44;10055:15;;;;10049:3;10034:19;;10027:44;10102:3;10087:19;;10080:35;;;;10146:3;10131:19;;10124:35;10190:3;10175:19;;10168:35;9647:3;9632:19;3503:48:83;9275:934:146;4435:34:83;;;;;-1:-1:-1;;;4435:34:83;;;;;;4307:35;;;;;-1:-1:-1;;;4307:35:83;;;;;;36609:195;36684:7;36705:13;36726:18;36740:3;36726:13;:18::i;:::-;-1:-1:-1;;36762:10:83;;;;:5;:10;;;;;:26;36704:40;;-1:-1:-1;36762:34:83;;36704:40;;36762:34;:::i;:::-;36755:41;36609:195;-1:-1:-1;;;36609:195:83:o;16318:186::-;16401:14;;;;:9;:14;;;;;;-1:-1:-1;;;;;16401:14:83;16387:10;:28;16383:67;;16424:26;;-1:-1:-1;;;16424:26:83;;;;;;;;;;;16383:67;16482:14;;;;:9;:14;;;;;;;;;16461:7;:12;;;;;;:35;;-1:-1:-1;;;;;;16461:35:83;-1:-1:-1;;;;;16482:14:83;;;16461:35;;;;;;16318:186::o;1944:147:22:-;883:33;896:10;908:7;;-1:-1:-1;;;;;;908:7:22;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:22;;;;;;;:::i;:::-;;;;;;;;;2018:5:::1;:16:::0;;-1:-1:-1;;;;;;2018:16:22::1;-1:-1:-1::0;;;;;2018:16:22;::::1;::::0;;::::1;::::0;;2050:34:::1;::::0;2018:16;;2063:10:::1;::::0;2050:34:::1;::::0;2018:5;2050:34:::1;1944:147:::0;:::o;37101:162:83:-;37160:4;37185:12;;;:7;:12;;;;;:21;;;:26;;;;:69;;-1:-1:-1;37215:10:83;;;;:5;:10;;;;;:21;;;37239:15;-1:-1:-1;;;37215:21:83;;;;;:39;37185:69;37177:78;37101:162;-1:-1:-1;;37101:162:83:o;32840:265::-;32904:7;32924:13;32940:74;32977:16;32989:3;32977:11;:16::i;:::-;32995:12;;;;:7;:12;;;;;:18;;;32940:27;33003:3;32940:22;:27::i;:::-;:36;:74;:36;:74::i;:::-;33043:12;;;;:7;:12;;;;;:21;;;32924:90;;-1:-1:-1;33035:29:83;;33034:63;;33076:12;;;;:7;:12;;;;;:21;;;33034:63;;1604:554:85;1677:7;;1801:35;;;;1812:7;1801:35;:::i;:::-;1772:64;;1931:6;:14;;;:19;;1949:1;1931:19;;:83;;;;;1972:6;1955;:14;;;:23;;;:58;;;;4722:13:83;1982:31:85;;:6;:14;;;:31;;;1955:58;1927:135;;;2036:26;;-1:-1:-1;;;2036:26:85;;;;;;;;;;;1927:135;2129:21;2143:6;2129:13;:21::i;:::-;2122:28;1604:554;-1:-1:-1;;;;1604:554:85:o;17879:164:83:-;883:33:22;896:10;908:7;;-1:-1:-1;;;;;;908:7:22;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:22;;;;;;;:::i;:::-;18010:15:83::1;:25:::0;;-1:-1:-1;;18010:25:83::1;::::0;::::1;;::::0;;;::::1;::::0;;17879:164::o;14375:1651::-;14517:11;14524:3;14517:6;:11::i;:::-;14512:51;;14537:26;;-1:-1:-1;;;14537:26:83;;;;;;;;;;;14512:51;14630:13;;;;:10;:13;:::i;:::-;:18;;;;:40;;-1:-1:-1;14652:13:83;;;;;;;;:::i;:::-;:18;;;14630:40;:62;;;-1:-1:-1;14674:13:83;;;;;;;;:::i;:::-;:18;;;14630:62;14626:114;;;14714:26;;-1:-1:-1;;;14714:26:83;;;;;;;;;;;14626:114;14832:13;;;;;;;;:::i;:::-;14816:29;;:13;;;;:10;:13;:::i;:::-;:29;;;14812:68;;;14854:26;;-1:-1:-1;;;14854:26:83;;;;;;;;;;;14812:68;14893:25;14921:13;;;:8;:13;;;;;;;;15020:20;;14921:13;;-1:-1:-1;;;15020:20:83;;;;;;15004:13;;;;;;:::i;:::-;:36;;;15000:75;;;15049:26;;-1:-1:-1;;;15049:26:83;;;;;;;;;;;15000:75;15173:20;;-1:-1:-1;;;15173:20:83;;;;15157:13;;;;;;;;:::i;:::-;:36;;;15153:75;;;15202:26;;-1:-1:-1;;;15202:26:83;;;;;;;;;;;15153:75;15287:24;15314:12;;;:7;:12;;;;;;;;;15287:39;;;;;;;;;-1:-1:-1;;;;;15287:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15287:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15341:10;:26;15337:67;;15376:28;;-1:-1:-1;;;15376:28:83;;;;;;;;;;;15337:67;15466:13;;;;:10;:13;:::i;:::-;15446:33;;;;;;;-1:-1:-1;;;15446:33:83;-1:-1:-1;;;;15446:33:83;;;;;;15518:133;15563:13;;;;;;:::i;:::-;15600:10;;;;:5;:10;;;;;:21;;;15555:22;;;;;;15592:48;;15625:15;;-1:-1:-1;;;15600:21:83;;;;15592:48;:::i;:::-;15518:15;;;;;:133;:22;:133::i;:::-;15490:25;;;:161;;;15799:15;;;;:43;:119;;15917:1;15799:119;;;15876:4;:25;;;15858:6;:15;;;:43;;;;:::i;:::-;15774:22;;;:144;15956:13;;;;;;;;:::i;:::-;15929:40;;;;;;;-1:-1:-1;;;15929:40:83;-1:-1:-1;;;;15929:40:83;;;;;;16005:13;;;;;;;;:::i;:::-;15980:38;;;;;;;-1:-1:-1;;;15980:38:83;-1:-1:-1;;;;;15980:38:83;;;;;;;-1:-1:-1;;;14375:1651:83:o;1504:434:22:-;1775:5;;-1:-1:-1;;;;;1775:5:22;1761:10;:19;;:76;;-1:-1:-1;1784:9:22;;:53;;-1:-1:-1;;;1784:53:22;;-1:-1:-1;;;;;1784:9:22;;;;:17;;:53;;1802:10;;1822:4;;-1:-1:-1;;;;;;1784:9:22;1829:7;;;1784:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:85;;;;;;1849:9;:24;;-1:-1:-1;;;;;;1849:24:22;-1:-1:-1;;;;;1849:24:22;;;;;;;;1889:42;;1906:10;;1889:42;;-1:-1:-1;;1889:42:22;1504:434;:::o;36849:207:83:-;36906:4;36941:10;;;:5;:10;;;;;:18;;;;;4722:13;36978:25;;;36977:71;;37033:15;37022:7;:26;;36977:71;;;37007:12;;36970:78;-1:-1:-1;;36849:207:83:o;18331:166::-;18412:12;;;;:7;:12;;;;;:18;-1:-1:-1;;;;;18412:18:83;18398:10;:32;18394:73;;18439:28;;-1:-1:-1;;;18439:28:83;;;;;;;;;;;18394:73;18478:11;18485:3;18478:6;:11::i;:::-;18331:166;:::o;18088:198::-;883:33:22;896:10;908:7;;-1:-1:-1;;;;;;908:7:22;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;18240:28:83;;;::::1;;::::0;;;:18:::1;:28;::::0;;;;:38;;-1:-1:-1;;18240:38:83::1;::::0;::::1;;::::0;;;::::1;::::0;;18088:198::o;35239:1332::-;35303:7;35350:13;;;:8;:13;;;;;;;;35323:40;;;;;;;;;;;;;;;-1:-1:-1;;;35323:40:83;;;;;;;;;;-1:-1:-1;;;35323:40:83;;;;;;;;;;;-1:-1:-1;;;35323:40:83;;;;;;;;-1:-1:-1;;;35323:40:83;;;;;;;;-1:-1:-1;;;35323:40:83;;;;;;;;-1:-1:-1;;;35323:40:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35450:15;35727:23;;;35723:841;;;35983:22;;;;35846:23;;;;35923:171;;35975:46;;35846:23;;35975:31;;:46;:::i;:::-;36052:22;;;;35923:12;;;;:7;:12;;;;;:22;;;;:171;36044:31;;;;;35923:29;:171;:::i;:::-;35899:195;35239:1332;-1:-1:-1;;;;;;35239:1332:83:o;35723:841::-;36298:22;;;;36206:23;;;;36283:37;;;;:269;;36369:183;36459:12;36433:4;:22;;;36425:31;;:46;;;;:::i;36369:183::-;36283:269;;;36344:1;36259:293;35239:1332;-1:-1:-1;;;;;;35239:1332:83:o;16071:202::-;16173:12;;;;:7;:12;;;;;:18;-1:-1:-1;;;;;16173:18:83;16159:10;:32;16155:73;;16200:28;;-1:-1:-1;;;16200:28:83;;;;;;;;;;;16155:73;16239:14;;;;:9;:14;;;;;;:26;;-1:-1:-1;;;;;;16239:26:83;-1:-1:-1;;;;;16239:26:83;;;;;;;;;16071:202::o;16549:1285::-;883:33:22;896:10;908:7;;-1:-1:-1;;;;;;908:7:22;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:22;;;;;;;:::i;:::-;16804:12:83::1;::::0;::::1;::::0;16789;;:27:::1;::::0;;::::1;::::0;::::1;;16785:66;;;16825:26;;-1:-1:-1::0;;;16825:26:83::1;;;;;;;;;;;16785:66;16948:12:::0;;::::1;::::0;16933;;:27:::1;::::0;;::::1;::::0;::::1;;16929:66;;;16969:26;;-1:-1:-1::0;;;16969:26:83::1;;;;;;;;;;;16929:66;17090:12:::0;;::::1;::::0;17075;;::::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;;17071:66;;;17111:26;;-1:-1:-1::0;;;17111:26:83::1;;;;;;;;;;;17071:66;17239:12:::0;;::::1;::::0;:16:::1;::::0;17254:1:::1;17239:16;:::i;:::-;17224:31;;:9:::0;17234:1:::1;17224:12;;;;:31;;;17220:70;;;17264:26;;-1:-1:-1::0;;;17264:26:83::1;;;;;;;;;;;17220:70;17353:9:::0;17363:1:::1;17353:12;;;::::0;17331:19:::1;:34:::0;;-1:-1:-1;;17331:34:83::1;;::::0;;::::1;::::0;;;::::1;::::0;;17400:9;-1:-1:-1;17400:12:83::1;;;::::0;17376:21:::1;:36:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;17376:36:83::1;-1:-1:-1::0;;;;17376:36:83;;::::1;::::0;;;::::1;::::0;;17446:9;17456:1:::1;17446:12;;;::::0;17423:20:::1;:35:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;17423:35:83::1;-1:-1:-1::0;;;;17423:35:83;;::::1;::::0;;;::::1;::::0;;17490:9;17500:1:::1;17490:12;;;::::0;17469:18:::1;:33:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;17469:33:83::1;-1:-1:-1::0;;;;17469:33:83;;::::1;::::0;;;::::1;::::0;;17533:9;17543:1:::1;17533:12;;;::::0;17513:17:::1;:32:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;17513:32:83::1;-1:-1:-1::0;;;;17513:32:83;;::::1;::::0;;;::::1;::::0;;17572:9;17582:1:::1;17572:12;::::0;;::::1;::::0;;;::::1;::::0;17556:13:::1;:28:::0;;-1:-1:-1;;;;17556:28:83;::::1;-1:-1:-1::0;;;17556:28:83::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;17602:224:::1;::::0;;17632:19;;;;;;;;;;14068:34:146;;-1:-1:-1;;;17666:21:83;::::1;::::0;::::1;14118:18:146::0;;;14111:43;;;;-1:-1:-1;;;17702:20:83;::::1;::::0;::::1;14170:18:146::0;;;14163:43;-1:-1:-1;;;17737:18:83;::::1;::::0;::::1;14237:2:146::0;14222:18;;14215:43;-1:-1:-1;;;17770:17:83;::::1;::::0;::::1;14289:3:146::0;14274:19;;14267:44;17802:13:83;;::::1;;14342:3:146::0;14327:19;;14320:44;17602:224:83::1;::::0;14026:3:146;14011:19;17602:224:83::1;;;;;;;16549:1285:::0;:::o;33314:665::-;33446:7;33530:11;33544:46;33559:7;-1:-1:-1;;;;;33559:14:83;;33574:9;33559:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33544:7;;:46;;33586:3;33544:14;:46::i;:::-;33601:14;33641:12;;;:7;:12;;;;;:18;;;33530:60;;-1:-1:-1;33601:14:83;33618:60;;33661:16;33649:3;33661:11;:16::i;:::-;33619:13;33629:3;33619:7;:13;:::i;:::-;33618:22;:60;:22;:60::i;:::-;33838:12;;;;:7;:12;;;;;:22;;;33601:77;;-1:-1:-1;33829:31:83;;33825:147;;;33884:30;;-1:-1:-1;;;33884:30:83;;;;;;;;;;;33825:147;33954:6;-1:-1:-1;33947:13:83;;-1:-1:-1;33947:13:83;34024:1177;34106:7;34329:12;;;:7;:12;;;;;;;;34302:39;;;;;;;;;-1:-1:-1;;;;;34302:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;34302:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34106:7;34368:16;34329:12;34368:11;:16::i;:::-;34352:32;;34395:21;34419:6;:22;;;:112;;34518:12;;;;34488:15;;;;:43;;34511:5;;34488:22;:43::i;:::-;34419:112;;;34457:6;:15;;;34419:112;34395:136;;34542:16;34561:44;34585:5;34592:6;:12;;;34561:6;:16;;;:23;;:44;;;;;:::i;:::-;34542:63;;34616:22;34657:8;34641:13;:24;:51;;34684:8;34641:51;;;34668:13;34641:51;34616:76;;35068:20;35091:53;35113:7;-1:-1:-1;;;;;35113:14:83;;35128:9;35113:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35091:14;;:53;;35140:3;35091:21;:53::i;:::-;35068:76;-1:-1:-1;35164:29:83;35068:76;35164:14;:29;:::i;:::-;35157:36;34024:1177;-1:-1:-1;;;;;;;;;34024:1177:83:o;18594:2514::-;18730:14;18761:10;-1:-1:-1;;;;;18783:7:83;18761:30;;18757:69;;18800:26;;-1:-1:-1;;;18800:26:83;;;;;;;;;;;18757:69;18839:25;18867:12;;;:7;:12;;;;;;;;18914:5;:10;;;;;;;18890:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18890:34:83;;;;;;;19026:19;;;;18867:12;;18890:34;-1:-1:-1;;;;;19026:19:83;:33;;;;:70;;-1:-1:-1;19083:12:83;;-1:-1:-1;;;;;19083:12:83;19064:32;;;;:18;:32;;;;;;;;19063:33;19026:70;19022:122;;;19118:26;;-1:-1:-1;;;19118:26:83;;;;;;;;;;;19022:122;19204:18;19232:15;19204:44;;19278:4;:15;;;19263:30;;:11;:30;;;19259:86;;19329:15;;;;19302:43;;-1:-1:-1;;;19302:43:83;;14804:14:146;14792:27;;;19302:43:83;;;14774:46:146;14747:18;;19302:43:83;14629:197:146;19259:86:83;19358:13;19400:56;19418:3;19423:7;19439:15;19400:17;:56::i;:::-;19382:74;-1:-1:-1;19382:74:83;-1:-1:-1;19584:22:83;;;19580:69;;;19615:34;;-1:-1:-1;;;19615:34:83;;;;;;;;;;;19580:69;19830:6;:16;;;19821:6;:25;19817:68;;;19855:30;;-1:-1:-1;;;19855:30:83;;;;;;;;;;;19817:68;20272:22;;;;-1:-1:-1;;;20272:22:83;;;;:77;;20334:6;:15;;;20325:6;:24;20272:77;;;20307:6;:15;;;20297:7;:25;20272:77;20268:133;;;20371:30;;-1:-1:-1;;;20371:30:83;;;;;;;;;;;20268:133;20497:22;;;;-1:-1:-1;;;20497:22:83;;;;:41;;20532:6;20497:41;;;20522:7;20497:41;20478:6;:15;;;:60;;;;;;;:::i;:::-;;;;;;;;20702:7;20682:6;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;20735:6;20720;:11;;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;20848:16:83;;;;20833:12;;;;:31;20829:272;;;20881:11;20888:3;20881:6;:11::i;:::-;20829:272;;;21059:30;21065:3;21070:11;21083:5;21059;:30::i;:::-;18746:2362;;;;18594:2514;;;;;:::o;31556:565::-;31656:13;31782:16;;;:11;:16;;;;;;;;31757:41;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;31757:41:83;;;;;;;;;;;;-1:-1:-1;;;31757:41:83;;;;;;;;;;;;;31656:13;;;;31809:38;;31835:1;31838;31841:5;31827:20;;;;;;;;;31809:38;31901:19;;;;31875:45;;31882:15;31875:45;:::i;:::-;31860:60;;31955:4;:19;;;31940:34;;:12;:34;;;31931:43;;31993:6;:120;;32102:11;;31993:120;;;32065:19;;;;32015:11;;:71;;32034:21;;;;;32057:28;32015:18;:71::i;:::-;31985:128;;31746:375;31556:565;;;;;;:::o;958:540:22:-;1078:9;;1045:4;;-1:-1:-1;;;;;1078:9:22;1396:27;;;;;:77;;-1:-1:-1;1427:46:22;;-1:-1:-1;;;1427:46:22;;-1:-1:-1;;;;;1427:12:22;;;;;:46;;1440:4;;1454;;1461:11;;1427:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:96;;;-1:-1:-1;1486:5:22;;-1:-1:-1;;;;;1478:13:22;;;1486:5;;1478:13;1388:103;;;958:540;;;;:::o;5171:353:66:-;5285:14;5320:25;5327:1;5330;5333:11;5320:6;:25::i;:::-;5311:34;;5411:1;5396:11;5383:25;;;;;:::i;:::-;5393:1;5390;5383:25;:29;5379:129;;;-1:-1:-1;;5440:6:66;:26;5432:35;;;;;;5485:8;;5171:353;;;;;:::o;5854:8476:83:-;6044:15;;5924:7;;6044:15;;6039:62;;6068:33;;-1:-1:-1;;;6068:33:83;;;;;;;;;;;6039:62;6162:25;6190:7;:19;;;-1:-1:-1;;;;;6190:28:83;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6162:58;;6235:24;6262:7;:18;;;-1:-1:-1;;;;;6262:27:83;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6235:56;;6334:1;6312:19;:23;;;:51;;;;6361:2;6339:19;:24;;;6312:51;6308:107;;;6389:26;;-1:-1:-1;;;6389:26:83;;;;;;;;;;;6308:107;6455:1;6434:18;:22;;;:49;;;;6481:2;6460:18;:23;;;6434:49;6430:105;;;6509:26;;-1:-1:-1;;;6509:26:83;;;;;;;;;;;6430:105;-1:-1:-1;;6554:7:83;:23;;;:29;;;:61;;;;6613:2;6587:7;:23;;;:28;;;6554:61;6550:117;;;6641:26;;-1:-1:-1;;;6641:26:83;;;;;;;;;;;6550:117;6778:10;6759:30;;;;:18;:30;;;;;;;;6758:31;:69;;;;-1:-1:-1;6793:20:83;;;;-1:-1:-1;;;;;6793:34:83;;;6758:69;6754:125;;;6853:26;;-1:-1:-1;;;6853:26:83;;;;;;;;;;;6754:125;5944:947;;7249:13;7321:7;:23;;;7316:2;:28;7306:39;;:2;:39;7298:47;;7405:7;:29;;;7373:7;:29;;;:61;7369:123;;;7456:36;;-1:-1:-1;;;7456:36:83;;;;;;;;;;;7369:123;7614:19;;7635:18;;;;7587:67;;-1:-1:-1;;;7587:67:83;;-1:-1:-1;;;;;15731:15:146;;;7587:67:83;;;15713:34:146;15783:15;;;15763:18;;;15756:43;7568:16:83;;7587:11;:26;;;;15648:18:146;;7587:67:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7568:86;;7667:26;7704:24;7893:15;7872:7;:18;;;:36;;;;;;:::i;:::-;7968:17;;7843:66;;-1:-1:-1;7968:17:83;-1:-1:-1;;;7968:17:83;;;;;7946:39;;;;;:104;;-1:-1:-1;8032:18:83;;8006:23;;;;8032:18;-1:-1:-1;;;8032:18:83;;;;;8006:44;;;7946:104;:170;;;;8097:19;8071:45;;:7;:23;;;:45;;;7946:170;7924:241;;;8139:26;;-1:-1:-1;;;8139:26:83;;;;;;;;;;;7924:241;8743:20;8766:7;:23;;;8792:1;8766:27;;;;:::i;:::-;8828:20;;8743:50;;-1:-1:-1;8828:36:83;;;;-1:-1:-1;;;8828:20:83;;;;:36;:109;;8924:13;8828:109;;;8884:20;;-1:-1:-1;;;8884:20:83;;;;8828:109;9083:19;;9057:23;;;;8808:129;;-1:-1:-1;8954:28:83;;8985:296;;9083:19;;;;9057:45;;;:143;;9181:19;;;;9057:143;;;9130:7;:23;;;9057:143;9027:192;;9246:19;9238:28;;8985:7;:16;;;:23;;:296;;;;;:::i;:::-;9319:957;;;;;;;;;;9368:15;9319:957;;;;;;;;;;;;;;;;;;;9519:23;;;;9319:957;;;;;;9601:19;;9575:23;;8954:327;;-1:-1:-1;9319:957:83;;;;;;9601:19;;;9575:45;;;:135;;9691:19;;;;9575:135;;;9644:7;:23;;;9575:135;9319:957;;;;;;9750:21;;-1:-1:-1;;;9750:21:83;;;;9319:957;;;;;;;;;;;;;;;;;9925:16;;;;9319:957;;;9925:39;;9867:20;;9925:39;:::i;:::-;9319:957;;;;9997:263;10211:17;10203:26;;10239:19;10231:28;;10020:7;:23;;;:156;;10160:7;:16;;;10020:156;;;10102:29;;;;10071:16;;;;:61;;10095:5;;10071:23;:61::i;9997:263::-;9319:957;;9298:18;;;;:8;:18;;;;;;;;:978;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9298:978:83;;;;;;;-1:-1:-1;;;9298:978:83;;;;;;;;;;;;-1:-1:-1;;;;;;;;9298:978:83;-1:-1:-1;;;9298:978:83;;;;;-1:-1:-1;;;;9298:978:83;;-1:-1:-1;;;9298:978:83;;;;;;;;-1:-1:-1;;;;;;;;9298:978:83;-1:-1:-1;;;9298:978:83;;;;;;;-1:-1:-1;;;;9298:978:83;;;;;-1:-1:-1;;;9298:978:83;;;;;;;;;;;-1:-1:-1;;;;;9298:978:83;-1:-1:-1;;;9298:978:83;;;;;;;;;;;;;;;-1:-1:-1;9298:978:83;;;;;;;;;;;;;;;;;;;;;10957:23;;;;9298:18;;-1:-1:-1;9298:18:83;;-1:-1:-1;9298:18:83;;10957:140;;11081:7;:16;;;10957:140;;;11031:29;;;;11000:16;;;;:61;;11024:5;;11000:23;:61::i;:::-;10938:159;-1:-1:-1;11127:73:83;10938:159;11143:26;;;;;11171:28;;;;11127:15;:73;:::i;:::-;11114:86;;11661:128;11703:7;:23;;;11695:32;;11754:19;11746:28;;11661:8;:15;;:128;;;;;:::i;:::-;11649:140;;10923:878;11833:493;;;;;;;;11866:10;-1:-1:-1;;;;;11833:493:83;;;;;11904:7;:19;;;-1:-1:-1;;;;;11833:493:83;;;;;11950:7;:18;;;-1:-1:-1;;;;;11833:493:83;;;;;11997:7;:20;;;-1:-1:-1;;;;;11833:493:83;;;;;12049:7;:23;;;11833:493;;;;;;12097:7;:16;;;11833:493;;;;12139:10;11833:493;;;;12174:7;:29;;;11833:493;;;;12229:9;11833:493;;;;12286:1;11833:493;;;;12264:1;11833:493;;;;12309:5;11833:493;;;11813:7;:17;11821:8;11813:17;;;;;;;;;;;:513;;;;;;;;;;;;;-1:-1:-1;;;;;11813:513:83;;;;;-1:-1:-1;;;;;11813:513:83;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11813:513:83;;;;;-1:-1:-1;;;;;11813:513:83;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11813:513:83;;;;;-1:-1:-1;;;;;11813:513:83;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11813:513:83;;;;;-1:-1:-1;;;;;11813:513:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12964:22;13034:13;;;;;;;;;;;12989:58;;:42;4782:3;12989:42;;13020:10;12989:9;:16;;:42;;;;;:::i;:::-;:58;:145;;13121:13;;-1:-1:-1;;;13121:13:83;;;;12989:145;;;13063:42;:9;4782:3;13094:10;13063:16;:42::i;:::-;12964:170;;13145:15;13189:155;13254:14;13233:7;:18;;;:35;;;:73;;13292:14;13233:73;;;13271:7;:18;;;13233:73;;;13189:10;;13326:3;13189:17;:155::i;:::-;13163:181;;:10;:181;:::i;:::-;13800:29;;;;13145:199;;-1:-1:-1;13774:23:83;;13800:55;;13837:5;13844:10;13800:36;:55::i;:::-;13774:81;;13886:184;;;;;;;;13928:15;13886:184;;;;13967:7;13886:184;;;;13998:7;:15;;;13886:184;;;;;;14040:7;:18;;;13886:184;;;;;13868:5;:15;13874:8;13868:15;;;;;;;;;;;:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14190:7;:18;;;-1:-1:-1;;;;;14088:206:83;14147:7;:19;;;-1:-1:-1;;;;;14088:206:83;14116:8;14088:206;14224:7;:15;;;14254:7;:29;;;14088:206;;;;;;16201:14:146;16189:27;;;;16171:46;;16248:2;16233:18;;16226:34;16159:2;16144:18;;15999:267;14088:206:83;;;;;;;;-1:-1:-1;14314:8:83;;5854:8476;-1:-1:-1;;;;;;;;;5854:8476:83:o;742:4147:66:-;854:14;;;-1:-1:-1;;1417:1:66;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:66;;;;-1:-1:-1;1787:13:66;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;3784:1;2787;2753:31;;:35;;2752:51;;2909:22;;;;3765:1;:15;;3764:21;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;;;2737:12;3321;;;3317:23;;;3313:31;;;2490:20;;;2479:32;;;3380:12;;;;2537:21;;3053:16;;;;3371:21;;;;4834:11;;;-1:-1:-1;;;;742:4147:66:o;21308:175:83:-;21357:10;;;;:5;:10;;;;;;;;:21;;;;:47;;-1:-1:-1;;;;21357:47:83;-1:-1:-1;;;21388:15:83;21357:47;;;;;;21415:12;;;;;;:21;;:25;;;21458:17;21357:10;;21458:17;;;21308:175;:::o;21956:3803::-;22079:20;22156:12;;;:7;:12;;;;;;;;22129:39;;;;;;;;;-1:-1:-1;;;;;22129:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;22129:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22079:20;;;22776:16;22156:12;22776:11;:16::i;:::-;22803:12;;;;:7;:12;;;;;;;;:22;;;;:36;;;23063:16;;;;;:23;;;22803:36;;-1:-1:-1;;;;23063:23:83;;;;23059:527;;;23103:29;23135:16;;;:11;:16;;;;;;23103:29;;23228:18;23147:3;23228:13;:18::i;:::-;23261:10;;;;:5;:10;;;;;:38;;23168:78;;-1:-1:-1;23168:78:83;;-1:-1:-1;23168:78:83;;-1:-1:-1;23168:78:83;;23261:38;;23168:78;;23261:38;:::i;:::-;;;;-1:-1:-1;;23316:259:83;;;;23373:8;23352:10;:17;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;23400:25:83;;;:41;;23429:12;;23400:25;;;:41;;23429:12;;-1:-1:-1;;;23400:41:83;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;23488:5;23460:10;:25;;;:33;;;;;;;;;;;;;;;;;;23316:259;;;23534:17;;;:25;;-1:-1:-1;;;;23534:25:83;;;23316:259;23088:498;;;;23059:527;23681:24;23701:3;23681:19;:24::i;:::-;23735:15;;;;23666:39;;-1:-1:-1;23765:23:83;;;23761:52;;;23805:8;23790:23;;23761:52;24104:12;;;;24089:42;;:7;;24118:12;24089:14;:42::i;:::-;24190:25;24226:13;;;:8;:13;;;;;:31;;24292:26;;;;;24079:52;;-1:-1:-1;;;;24226:31:83;;;;;;;24292:26;-1:-1:-1;;;24357:23:83;;;;;;24190:25;24505:49;;24226:31;;24079:52;;24292:26;;24505;:49;:::i;:::-;24565:13;;;;:8;:13;;;;;:53;;24476:78;;-1:-1:-1;24476:78:83;;24565:23;;:53;;24476:78;;-1:-1:-1;;;24565:53:83;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25283:19;25313:9;25305:5;:17;;;:249;;25536:17;;;;:9;:17;:::i;:::-;25515:39;;:17;:39;:::i;:::-;25305:249;;;25378:17;25386:9;25378:17;;;;:::i;:::-;25357;:39;:127;;25483:1;25357:127;;;25441:17;25449:9;25441:17;;;;:::i;:::-;25420:39;;:17;:39;:::i;:::-;25283:271;-1:-1:-1;25690:7:83;25603:71;25622:17;25641:32;25655:18;25283:271;25641:32;:::i;:::-;25603:11;;:71;:18;:71::i;:::-;:94;;;;:::i;:::-;:111;;25713:1;25603:111;:::i;:::-;25565:12;;;;:7;:12;;;;;;:22;;:149;;;;-1:-1:-1;21956:3803:83;;;;-1:-1:-1;21956:3803:83;;-1:-1:-1;;;;;;;;21956:3803:83:o;26019:4510::-;26131:24;26158:8;:13;26167:3;26158:13;;;;;;;;;;;26131:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26182:24;26209:7;:12;26217:3;26209:12;;;;;;;;;;;26182:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;-1:-1:-1;;;;;26182:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26937:21;26993:5;26969;:10;26975:3;26969:10;;;;;;;;;;;:21;;;;;;;;;;;;:29;;;;:::i;:::-;26961:38;;26937:62;;27073:16;27092:6;:22;;;:113;;27190:6;:15;;;27092:113;;;27153:12;;;;27130:15;;;;:44;;27167:6;27130:22;:44::i;:::-;27073:132;;27326:23;27377:6;:22;;;:84;;27450:6;:11;;;27377:84;;;27426:12;;;;27402:16;;;;:45;;27440:6;27402:23;:45::i;:::-;27352:110;;:8;:110;:::i;:::-;27326:136;;27724:27;27876:8;27754:119;27814:13;27799:4;:11;;;27791:20;;:36;;;;:::i;:::-;27850:4;:11;;;27842:20;;27754:15;:22;;:119;;;;;:::i;:::-;:130;;;;:::i;:::-;27724:160;;27934:4;:22;;;27916:6;:15;;;:40;:81;;;;;27982:15;27960:19;:37;27916:81;27915:185;;;-1:-1:-1;28041:17:83;;;;28025:13;;:33;;;;;;:::i;:::-;28016:42;;:5;:42;;;;:83;;;;;28084:15;28062:19;:37;28016:83;27897:2625;;;28511:61;28535:4;:20;;;28527:29;;28558:13;28511:8;:15;;:61;;;;;:::i;:::-;28486:12;;;;:7;:12;;;;;;:22;;:86;;;;29201:22;;;;29251:11;;;;28486:12;;29148:130;;:19;;29193:31;;;;;29243:20;;;29148:26;:130;:::i;:::-;29362:23;29388:10;;;:5;:10;;;;;:26;29474:12;;;;29127:151;;-1:-1:-1;29388:26:83;29458:41;;:6;;29127:151;29458:15;:41::i;:::-;29521:47;;;16682:25:146;;;16738:2;16723:18;;16716:34;;;29429:70:83;;-1:-1:-1;29527:3:83;;29521:47;;16655:18:146;29521:47:83;;;;;;;29610:15;29589:18;:36;29585:649;;;29804:14;29821:36;29839:18;29821:15;:36;:::i;:::-;29804:53;;29895:57;;;;;;;;29906:6;29895:57;;;;29914:5;29895:57;;;;;;29921:4;:24;;;29895:57;;;;;;;;29947:4;29895:57;;;;;29876:11;:16;29888:3;29876:16;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29627:341;29585:649;;;30033:10;;;;:5;:10;;;;;;;;:47;;;30187:11;:16;;;;;:23;;:31;;-1:-1:-1;;;;30187:31:83;;;29585:649;30250:13;;;;:8;:13;;;;;:30;;-1:-1:-1;;30250:30:83;;;;;;;30347:25;;;;30329:15;;;;:43;:127;;30455:1;30329:127;;;30410:4;:25;;;30392:6;:15;;;:43;;;;:::i;:::-;30295:13;;;;:8;:13;;;;;:31;;;:161;;;;30471:26;;:39;;;;-1:-1:-1;;27897:2625:83;26120:4409;;;;;;26019:4510;;;:::o;31007:217::-;31072:7;31119:12;;;:7;:12;;;;;;;;31092:39;;;;;;;;;-1:-1:-1;;;;;31092:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;31092:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31149:10;;;;;;;;;;:26;31092:39;;31149:67;;:26;31092:39;31149:35;:67::i;14:180:146:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:146;;14:180;-1:-1:-1;14:180:146:o;381:131::-;-1:-1:-1;;;;;456:31:146;;446:42;;436:70;;502:1;499;492:12;517:134;585:20;;614:31;585:20;614:31;:::i;:::-;517:134;;;:::o;656:247::-;715:6;768:2;756:9;747:7;743:23;739:32;736:52;;;784:1;781;774:12;736:52;823:9;810:23;842:31;867:5;842:31;:::i;1100:228::-;-1:-1:-1;;;;;1289:32:146;;;;1271:51;;1259:2;1244:18;;1100:228::o;1333:591::-;1403:6;1411;1464:2;1452:9;1443:7;1439:23;1435:32;1432:52;;;1480:1;1477;1470:12;1432:52;1507:23;;-1:-1:-1;;;;;1579:14:146;;;1576:34;;;1606:1;1603;1596:12;1576:34;1644:6;1633:9;1629:22;1619:32;;1689:7;1682:4;1678:2;1674:13;1670:27;1660:55;;1711:1;1708;1701:12;1660:55;1751:2;1738:16;1777:2;1769:6;1766:14;1763:34;;;1793:1;1790;1783:12;1763:34;1838:7;1833:2;1824:6;1820:2;1816:15;1812:24;1809:37;1806:57;;;1859:1;1856;1849:12;1806:57;1890:2;1882:11;;;;;1912:6;;-1:-1:-1;1333:591:146;;-1:-1:-1;;;;1333:591:146:o;1929:118::-;2015:5;2008:13;2001:21;1994:5;1991:32;1981:60;;2037:1;2034;2027:12;2052:128;2117:20;;2146:28;2117:20;2146:28;:::i;2185:241::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;2349:9;2336:23;2368:28;2390:5;2368:28;:::i;2639:320::-;2731:6;2739;2792:3;2780:9;2771:7;2767:23;2763:33;2760:53;;;2809:1;2806;2799:12;2760:53;2845:9;2832:23;2822:33;;2891:7;2885:3;2874:9;2870:19;2867:32;2864:52;;;2912:1;2909;2902:12;2864:52;-1:-1:-1;2639:320:146;2950:2;2935:18;;;;;-1:-1:-1;2639:320:146:o;5414:382::-;5479:6;5487;5540:2;5528:9;5519:7;5515:23;5511:32;5508:52;;;5556:1;5553;5546:12;5508:52;5595:9;5582:23;5614:31;5639:5;5614:31;:::i;:::-;5664:5;-1:-1:-1;5721:2:146;5706:18;;5693:32;5734:30;5693:32;5734:30;:::i;:::-;5783:7;5773:17;;;5414:382;;;;;:::o;6254:315::-;6322:6;6330;6383:2;6371:9;6362:7;6358:23;6354:32;6351:52;;;6399:1;6396;6389:12;6351:52;6435:9;6422:23;6412:33;;6495:2;6484:9;6480:18;6467:32;6508:31;6533:5;6508:31;:::i;6574:127::-;6635:10;6630:3;6626:20;6623:1;6616:31;6666:4;6663:1;6656:15;6690:4;6687:1;6680:15;6706:247;6773:2;6767:9;6815:3;6803:16;;-1:-1:-1;;;;;6834:34:146;;6870:22;;;6831:62;6828:88;;;6896:18;;:::i;:::-;6932:2;6925:22;6706:247;:::o;6958:163::-;7025:20;;7085:10;7074:22;;7064:33;;7054:61;;7111:1;7108;7101:12;7126:765;7207:6;7260:3;7248:9;7239:7;7235:23;7231:33;7228:53;;;7277:1;7274;7267:12;7228:53;7326:7;7319:4;7308:9;7304:20;7300:34;7290:62;;7348:1;7345;7338:12;7290:62;7381:2;7375:9;7423:3;7411:16;;-1:-1:-1;;;;;7442:34:146;;7478:22;;;7439:62;7436:88;;;7504:18;;:::i;:::-;7540:2;7533:22;7575:6;7619:3;7604:19;;7635;;;7632:39;;;7667:1;7664;7657:12;7632:39;7691:9;7709:151;7725:6;7720:3;7717:15;7709:151;;;7793:22;7811:3;7793:22;:::i;:::-;7781:35;;7845:4;7836:14;;;;7742;7709:151;;;-1:-1:-1;7879:6:146;;7126:765;-1:-1:-1;;;;;7126:765:146:o;7896:383::-;7973:6;7981;7989;8042:2;8030:9;8021:7;8017:23;8013:32;8010:52;;;8058:1;8055;8048:12;8010:52;8094:9;8081:23;8071:33;;8151:2;8140:9;8136:18;8123:32;8113:42;;8205:2;8194:9;8190:18;8177:32;8218:31;8243:5;8218:31;:::i;:::-;8268:5;8258:15;;;7896:383;;;;;:::o;8954:316::-;9031:6;9039;9047;9100:2;9088:9;9079:7;9075:23;9071:32;9068:52;;;9116:1;9113;9106:12;9068:52;-1:-1:-1;;9139:23:146;;;9209:2;9194:18;;9181:32;;-1:-1:-1;9260:2:146;9245:18;;;9232:32;;8954:316;-1:-1:-1;8954:316:146:o;10214:127::-;10275:10;10270:3;10266:20;10263:1;10256:31;10306:4;10303:1;10296:15;10330:4;10327:1;10320:15;10346:125;10386:4;10414:1;10411;10408:8;10405:34;;;10419:18;;:::i;:::-;-1:-1:-1;10456:9:146;;10346:125::o;10476:336::-;10678:2;10660:21;;;10717:2;10697:18;;;10690:30;-1:-1:-1;;;10751:2:146;10736:18;;10729:42;10803:2;10788:18;;10476:336::o;10817:125::-;10902:14;10895:5;10891:26;10884:5;10881:37;10871:65;;10932:1;10929;10922:12;10947:132;11014:20;;11043:30;11014:20;11043:30;:::i;11084:159::-;11149:20;;11120:5;11198:20;;;11188:31;;11178:59;;11233:1;11230;11223:12;11248:1135;11338:6;11391:3;11379:9;11370:7;11366:23;11362:33;11359:53;;;11408:1;11405;11398:12;11359:53;11434:17;;:::i;:::-;11474:29;11493:9;11474:29;:::i;:::-;11467:5;11460:44;11536:38;11570:2;11559:9;11555:18;11536:38;:::i;:::-;11531:2;11524:5;11520:14;11513:62;11607:38;11641:2;11630:9;11626:18;11607:38;:::i;:::-;11602:2;11595:5;11591:14;11584:62;11678:35;11709:2;11698:9;11694:18;11678:35;:::i;:::-;11673:2;11666:5;11662:14;11655:59;11775:3;11764:9;11760:19;11747:33;11741:3;11734:5;11730:15;11723:58;11842:3;11831:9;11827:19;11814:33;11808:3;11801:5;11797:15;11790:58;11909:3;11898:9;11894:19;11881:33;11875:3;11868:5;11864:15;11857:58;11948:38;11981:3;11970:9;11966:19;11948:38;:::i;:::-;11942:3;11935:5;11931:15;11924:63;12006:3;12041:37;12074:2;12063:9;12059:18;12041:37;:::i;:::-;12025:14;;;12018:61;12098:3;12133:37;12151:18;;;12133:37;:::i;:::-;12117:14;;;12110:61;12190:3;12225:37;12243:18;;;12225:37;:::i;:::-;12209:14;;;12202:61;12282:3;12317:35;12333:18;;;12317:35;:::i;:::-;12301:14;;;12294:59;12305:5;11248:1135;-1:-1:-1;;;11248:1135:146:o;12520:184::-;12578:6;12631:2;12619:9;12610:7;12606:23;12602:32;12599:52;;;12647:1;12644;12637:12;12599:52;12670:28;12688:9;12670:28;:::i;12709:400::-;-1:-1:-1;;;;;12965:15:146;;;12947:34;;13017:15;;;;13012:2;12997:18;;12990:43;-1:-1:-1;;;;;;13069:33:146;;;13064:2;13049:18;;13042:61;12897:2;12882:18;;12709:400::o;13114:245::-;13181:6;13234:2;13222:9;13213:7;13209:23;13205:32;13202:52;;;13250:1;13247;13240:12;13202:52;13282:9;13276:16;13301:28;13323:5;13301:28;:::i;13364:128::-;13404:3;13435:1;13431:6;13428:1;13425:13;13422:39;;;13441:18;;:::i;:::-;-1:-1:-1;13477:9:146;;13364:128::o;13497:262::-;13536:7;13568:10;13605:2;13602:1;13598:10;13635:2;13632:1;13628:10;13691:3;13687:2;13683:12;13678:3;13675:21;13668:3;13661:11;13654:19;13650:47;13647:73;;;13700:18;;:::i;:::-;13740:13;;13497:262;-1:-1:-1;;;;13497:262:146:o;14375:249::-;14444:6;14497:2;14485:9;14476:7;14472:23;14468:32;14465:52;;;14513:1;14510;14503:12;14465:52;14545:9;14539:16;14564:30;14588:5;14564:30;:::i;14831:225::-;14870:4;14899:14;14963:10;;;;14933;;14985:12;;;14982:38;;;15000:18;;:::i;:::-;15037:13;;14831:225;-1:-1:-1;;;14831:225:146:o;15061:127::-;15122:10;15117:3;15113:20;15110:1;15103:31;15153:4;15150:1;15143:15;15177:4;15174:1;15167:15;15193:273;15261:6;15314:2;15302:9;15293:7;15289:23;15285:32;15282:52;;;15330:1;15327;15320:12;15282:52;15362:9;15356:16;15412:4;15405:5;15401:16;15394:5;15391:27;15381:55;;15432:1;15429;15422:12;15810:184;15880:6;15933:2;15921:9;15912:7;15908:23;15904:32;15901:52;;;15949:1;15946;15939:12;15901:52;-1:-1:-1;15972:16:146;;15810:184;-1:-1:-1;15810:184:146:o;16271:232::-;16310:3;16338:14;16379:2;16376:1;16372:10;16409:2;16406:1;16402:10;16440:3;16436:2;16432:12;16427:3;16424:21;16421:47;;;16448:18;;:::i;:::-;16484:13;;16271:232;-1:-1:-1;;;;16271:232:146:o",
    "linkReferences": {},
    "immutableReferences": {
      "48764": [
        {
          "start": 616,
          "length": 32
        },
        {
          "start": 7792,
          "length": 32
        }
      ],
      "48767": [
        {
          "start": 992,
          "length": 32
        },
        {
          "start": 5376,
          "length": 32
        },
        {
          "start": 5939,
          "length": 32
        },
        {
          "start": 6135,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "adjustments(uint256)": "bc3b2b12",
    "allowNewMarkets()": "afa9d3b0",
    "authority()": "bf7e214f",
    "callbackAuthorized(address)": "5dc4d16b",
    "closeMarket(uint256)": "ae418095",
    "createMarket(bytes)": "53c7f8e0",
    "currentCapacity(uint256)": "1c063a6c",
    "currentControlVariable(uint256)": "0a9d85eb",
    "currentDebt(uint256)": "bcb29667",
    "defaultTuneAdjustment()": "ea0aca33",
    "defaultTuneInterval()": "d9ccdc93",
    "getAggregator()": "3ad59dbc",
    "getMarketInfoForPurchase(uint256)": "acc5570c",
    "getTeller()": "9787d107",
    "isInstantSwap(uint256)": "8b098db3",
    "isLive(uint256)": "27507458",
    "marketPrice(uint256)": "3adec5a7",
    "marketScale(uint256)": "946824cd",
    "markets(uint256)": "b1283e77",
    "maxAmountAccepted(uint256,address)": "c7bf8ca0",
    "metadata(uint256)": "e3684e39",
    "minDebtBuffer()": "8973082c",
    "minDebtDecayInterval()": "e9220673",
    "minDepositInterval()": "d2040687",
    "minMarketDuration()": "d2bee323",
    "newOwners(uint256)": "6729a41e",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "payoutFor(uint256,uint256,address)": "bf48582b",
    "pullOwnership(uint256)": "10b05317",
    "purchaseBond(uint256,uint256,uint256)": "e007fa97",
    "pushOwnership(uint256,address)": "bcf6cde8",
    "setAllowNewMarkets(bool)": "5f77274e",
    "setAuthority(address)": "7a9e5e4b",
    "setCallbackAuthStatus(address,bool)": "bbbdd95a",
    "setDefaults(uint32[6])": "bd1f3a5e",
    "setIntervals(uint256,uint32[3])": "699e17d9",
    "setOwner(address)": "13af4035",
    "terms(uint256)": "c0aa0e8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"teller_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auctioneer_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_BadExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InitialPriceLessThanMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidParams\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"conclusion_\",\"type\":\"uint256\"}],\"name\":\"Auctioneer_MarketConcluded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MaxPayoutExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NewMarketsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotEnoughCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OnlyMarketOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"defaultTuneInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"defaultTuneAdjustment\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDebtDecayInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDepositInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minMarketDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDebtBuffer\",\"type\":\"uint32\"}],\"name\":\"DefaultsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"MarketClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldControlVariable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newControlVariable\",\"type\":\"uint256\"}],\"name\":\"Tuned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adjustments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"change\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"lastAdjustment\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timeToAdjusted\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowNewMarkets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callbackAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"closeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"createMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentControlVariable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTuneAdjustment\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTuneInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAggregator\",\"outputs\":[{\"internalType\":\"contract IBondAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getMarketInfoForPurchase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeller\",\"outputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isInstantSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scale\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"maxAmountAccepted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"lastTune\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastDecay\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"length\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"depositInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"tuneInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"tuneAdjustmentDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"debtDecayInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"tuneIntervalCapacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tuneBelowCapacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTuneDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDebtBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDebtDecayInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"pullOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchaseBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setAllowNewMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setCallbackAuthStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[6]\",\"name\":\"defaults_\",\"type\":\"uint32[6]\"}],\"name\":\"setDefaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint32[3]\",\"name\":\"intervals_\",\"type\":\"uint32[3]\"}],\"name\":\"setIntervals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"controlVariable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Fixed-Term Auctioneer is an implementation of the      Bond Base Auctioneer contract specific to creating bond markets where      purchases vest in a fixed amount of time after purchased (rounded to the day).\",\"kind\":\"dev\",\"methods\":{\"closeMarket(uint256)\":{\"params\":{\"id_\":\"ID of market to close\"}},\"createMarket(bytes)\":{\"details\":\"See specific auctioneer implementations for details on encoding the parameters.\",\"params\":{\"params_\":\"Configuration data needed for market creation, encoded in a bytes array\"},\"returns\":{\"_0\":\"id              ID of new bond market\"}},\"currentControlVariable(uint256)\":{\"details\":\"Accounts for control variable adjustment\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Control variable for market in payout token decimals\"}},\"currentDebt(uint256)\":{\"details\":\"Accounts for debt decay since last deposit\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Current debt for market in payout token decimals\"}},\"getMarketInfoForPurchase(uint256)\":{\"params\":{\"id_\":\"Market ID\"},\"returns\":{\"callbackAddr\":\"   Address of the callback contract to get tokens for payouts\",\"maxPayout\":\"      Maximum amount of payout tokens you can purchase in one transaction\",\"owner\":\"          Address of the market owner (tokens transferred from this address if no callback)\",\"payoutToken\":\"    Payout Token (token paid out) for the Market\",\"quoteToken\":\"     Quote Token (token received) for the Market\",\"vesting\":\"        Timestamp or duration for vesting, implementation-dependent\"}},\"isInstantSwap(uint256)\":{\"params\":{\"id_\":\"Market ID to search for\"}},\"isLive(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"marketPrice(uint256)\":{\"details\":\"Accounts for debt and control variable decay since last deposit (vs _marketPrice())\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Price for market in configured decimals (see MarketParams)\"}},\"marketScale(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Scaling factor for market in configured decimals\"}},\"maxAmountAccepted(uint256,address)\":{\"params\":{\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"}},\"ownerOf(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"payoutFor(uint256,uint256,address)\":{\"details\":\"Accounts for debt and control variable decay so it is up to date\",\"params\":{\"amount_\":\"Amount of quote tokens to spend\",\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"},\"returns\":{\"_0\":\"amount of payout tokens to be paid\"}},\"pullOwnership(uint256)\":{\"details\":\"The existing owner must call pushOwnership prior to the newOwner calling this function\",\"params\":{\"id_\":\"Market ID\"}},\"purchaseBond(uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond (after fee has been deducted)\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\"},\"returns\":{\"payout\":\"         Amount of payout token to be received from the bond\"}},\"pushOwnership(uint256,address)\":{\"details\":\"Doesn't change permissions until newOwner calls pullOwnership\",\"params\":{\"id_\":\"Market ID\",\"newOwner_\":\"New address to give ownership to\"}},\"setAllowNewMarkets(bool)\":{\"details\":\"Setting to false and allowing active markets to end will sunset the auctioneer\",\"params\":{\"status_\":\"Allow market creation (true) : Disallow market creation (false)\"}},\"setCallbackAuthStatus(address,bool)\":{\"details\":\"Callback is believed to be safe, but a whitelist is implemented to prevent abuse\",\"params\":{\"creator_\":\"Address of market creator\",\"status_\":\"Allow callback (true) : Disallow callback (false)\"}},\"setDefaults(uint32[6])\":{\"details\":\"The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change\",\"params\":{\"defaults_\":\"Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown\"}},\"setIntervals(uint256,uint32[3])\":{\"details\":\"Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay\",\"params\":{\"id_\":\"Market ID\",\"intervals_\":\"Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely\"}}},\"title\":\"Bond Fixed-Term Sequential Dutch Auctioneer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"adjustments(uint256)\":{\"notice\":\"Control variable changes\"},\"allowNewMarkets()\":{\"notice\":\"Whether or not the auctioneer allows new markets to be created\"},\"callbackAuthorized(address)\":{\"notice\":\"Whether or not the market creator is authorized to use a callback address\"},\"closeMarket(uint256)\":{\"notice\":\"Disable existing bond marketMust be market owner\"},\"createMarket(bytes)\":{\"notice\":\"Creates a new bond market\"},\"currentCapacity(uint256)\":{\"notice\":\"Returns current capacity of a market\"},\"currentControlVariable(uint256)\":{\"notice\":\"Up to date control variable\"},\"currentDebt(uint256)\":{\"notice\":\"Calculate debt factoring in decay\"},\"defaultTuneInterval()\":{\"notice\":\"Sane defaults for tuning. Can be adjusted for a specific market via setters.\"},\"getAggregator()\":{\"notice\":\"Returns the Aggregator that services the Auctioneer\"},\"getMarketInfoForPurchase(uint256)\":{\"notice\":\"Provides information for the Teller to execute purchases on a Market\"},\"getTeller()\":{\"notice\":\"Returns the Teller that services the Auctioneer\"},\"isInstantSwap(uint256)\":{\"notice\":\"Does market send payout immediately\"},\"isLive(uint256)\":{\"notice\":\"Is a given market accepting deposits\"},\"marketPrice(uint256)\":{\"notice\":\"Calculate current market price of payout token in quote tokens\"},\"marketScale(uint256)\":{\"notice\":\"Scale value to use when converting between quote token and payout token amounts with marketPrice()\"},\"markets(uint256)\":{\"notice\":\"Main information pertaining to bond market\"},\"maxAmountAccepted(uint256,address)\":{\"notice\":\"Returns maximum amount of quote token accepted by the market\"},\"metadata(uint256)\":{\"notice\":\"Data needed for tuning bond market\"},\"minDebtDecayInterval()\":{\"notice\":\"Minimum values for decay, deposit interval, market duration and debt buffer.\"},\"newOwners(uint256)\":{\"notice\":\"New address to designate as market owner. They must accept ownership to transfer permissions.\"},\"ownerOf(uint256)\":{\"notice\":\"Returns the address of the market owner\"},\"payoutFor(uint256,uint256,address)\":{\"notice\":\"Payout due for amount of quote tokens\"},\"pullOwnership(uint256)\":{\"notice\":\"Accept ownership of a marketMust be market newOwner\"},\"purchaseBond(uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified marketMust be teller\"},\"pushOwnership(uint256,address)\":{\"notice\":\"Designate a new owner of a marketMust be market owner\"},\"setAllowNewMarkets(bool)\":{\"notice\":\"Change the status of the auctioneer to allow creation of new markets\"},\"setCallbackAuthStatus(address,bool)\":{\"notice\":\"Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian\"},\"setDefaults(uint32[6])\":{\"notice\":\"Set the auctioneer defaultsMust be policy\"},\"setIntervals(uint256,uint32[3])\":{\"notice\":\"Set market intervals to different values than the defaultsMust be market owner\"},\"terms(uint256)\":{\"notice\":\"Information used to control how a bond market changes\"}},\"notice\":\"Bond Fixed-Term Sequential Dutch Auctioneer Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/policies/BondFixedTermSDA.sol\":\"BondFixedTermSDA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/policies/BondBaseSDA.sol\":{\"keccak256\":\"0x4755dbba98500664c82d92820dd26765ef03aa2c1d3cb61323384b103855b798\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://74a0ee4217be5720a2ca1f3334a05c0930ffaf8bd2fa5743c102baf272dd9ef0\",\"dweb:/ipfs/QmYhFTXnoh2ZiNETpocvZ6wF5EnodYqtc4BYz1ngoSx36P\"]},\"src/policies/BondFixedTermSDA.sol\":{\"keccak256\":\"0x196dadf14d7f2de27a5547d2c37f2adfa64f61573eb20c411f781bff69e046a0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9d1ab798a535b0ed556bbe0cdc70de41700f9a20de4e31a38139f7560a830d9\",\"dweb:/ipfs/QmdxQxpudtW4CPVzvkMeCkfL14itVowhuKZSu7EoSNsbki\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "teller_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_AmountLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_BadExpiry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InitialPriceLessThanMin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "conclusion_",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Auctioneer_MarketConcluded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MaxPayoutExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NewMarketsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotEnoughCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OnlyMarketOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "defaultTuneInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "defaultTuneAdjustment",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDebtDecayInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDepositInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minMarketDuration",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDebtBuffer",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketClosed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payoutToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "initialPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldControlVariable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newControlVariable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Tuned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "adjustments",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "change",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "lastAdjustment",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "timeToAdjusted",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowNewMarkets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "callbackAuthorized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "params_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMarket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentControlVariable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTuneAdjustment",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTuneInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAggregator",
          "outputs": [
            {
              "internalType": "contract IBondAggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketInfoForPurchase",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeller",
          "outputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInstantSwap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scale",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAmountAccepted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "metadata",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "lastTune",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "lastDecay",
              "type": "uint48"
            },
            {
              "internalType": "uint32",
              "name": "length",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "depositInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "tuneInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "tuneAdjustmentDelay",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "debtDecayInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "tuneIntervalCapacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tuneBelowCapacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastTuneDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDebtBuffer",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDebtDecayInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDepositInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minMarketDuration",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "newOwners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "payoutFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowNewMarkets"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCallbackAuthStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[6]",
              "name": "defaults_",
              "type": "uint32[6]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaults"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint32[3]",
              "name": "intervals_",
              "type": "uint32[3]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIntervals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "terms",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "controlVariable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "closeMarket(uint256)": {
            "params": {
              "id_": "ID of market to close"
            }
          },
          "createMarket(bytes)": {
            "details": "See specific auctioneer implementations for details on encoding the parameters.",
            "params": {
              "params_": "Configuration data needed for market creation, encoded in a bytes array"
            },
            "returns": {
              "_0": "id              ID of new bond market"
            }
          },
          "currentControlVariable(uint256)": {
            "details": "Accounts for control variable adjustment",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Control variable for market in payout token decimals"
            }
          },
          "currentDebt(uint256)": {
            "details": "Accounts for debt decay since last deposit",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Current debt for market in payout token decimals"
            }
          },
          "getMarketInfoForPurchase(uint256)": {
            "params": {
              "id_": "Market ID"
            },
            "returns": {
              "callbackAddr": "   Address of the callback contract to get tokens for payouts",
              "maxPayout": "      Maximum amount of payout tokens you can purchase in one transaction",
              "owner": "          Address of the market owner (tokens transferred from this address if no callback)",
              "payoutToken": "    Payout Token (token paid out) for the Market",
              "quoteToken": "     Quote Token (token received) for the Market",
              "vesting": "        Timestamp or duration for vesting, implementation-dependent"
            }
          },
          "isInstantSwap(uint256)": {
            "params": {
              "id_": "Market ID to search for"
            }
          },
          "isLive(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "marketPrice(uint256)": {
            "details": "Accounts for debt and control variable decay since last deposit (vs _marketPrice())",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Price for market in configured decimals (see MarketParams)"
            }
          },
          "marketScale(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Scaling factor for market in configured decimals"
            }
          },
          "maxAmountAccepted(uint256,address)": {
            "params": {
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            }
          },
          "ownerOf(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "payoutFor(uint256,uint256,address)": {
            "details": "Accounts for debt and control variable decay so it is up to date",
            "params": {
              "amount_": "Amount of quote tokens to spend",
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            },
            "returns": {
              "_0": "amount of payout tokens to be paid"
            }
          },
          "pullOwnership(uint256)": {
            "details": "The existing owner must call pushOwnership prior to the newOwner calling this function",
            "params": {
              "id_": "Market ID"
            }
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond (after fee has been deducted)",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning"
            },
            "returns": {
              "payout": "         Amount of payout token to be received from the bond"
            }
          },
          "pushOwnership(uint256,address)": {
            "details": "Doesn't change permissions until newOwner calls pullOwnership",
            "params": {
              "id_": "Market ID",
              "newOwner_": "New address to give ownership to"
            }
          },
          "setAllowNewMarkets(bool)": {
            "details": "Setting to false and allowing active markets to end will sunset the auctioneer",
            "params": {
              "status_": "Allow market creation (true) : Disallow market creation (false)"
            }
          },
          "setCallbackAuthStatus(address,bool)": {
            "details": "Callback is believed to be safe, but a whitelist is implemented to prevent abuse",
            "params": {
              "creator_": "Address of market creator",
              "status_": "Allow callback (true) : Disallow callback (false)"
            }
          },
          "setDefaults(uint32[6])": {
            "details": "The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change",
            "params": {
              "defaults_": "Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown"
            }
          },
          "setIntervals(uint256,uint32[3])": {
            "details": "Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay",
            "params": {
              "id_": "Market ID",
              "intervals_": "Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adjustments(uint256)": {
            "notice": "Control variable changes"
          },
          "allowNewMarkets()": {
            "notice": "Whether or not the auctioneer allows new markets to be created"
          },
          "callbackAuthorized(address)": {
            "notice": "Whether or not the market creator is authorized to use a callback address"
          },
          "closeMarket(uint256)": {
            "notice": "Disable existing bond marketMust be market owner"
          },
          "createMarket(bytes)": {
            "notice": "Creates a new bond market"
          },
          "currentCapacity(uint256)": {
            "notice": "Returns current capacity of a market"
          },
          "currentControlVariable(uint256)": {
            "notice": "Up to date control variable"
          },
          "currentDebt(uint256)": {
            "notice": "Calculate debt factoring in decay"
          },
          "defaultTuneInterval()": {
            "notice": "Sane defaults for tuning. Can be adjusted for a specific market via setters."
          },
          "getAggregator()": {
            "notice": "Returns the Aggregator that services the Auctioneer"
          },
          "getMarketInfoForPurchase(uint256)": {
            "notice": "Provides information for the Teller to execute purchases on a Market"
          },
          "getTeller()": {
            "notice": "Returns the Teller that services the Auctioneer"
          },
          "isInstantSwap(uint256)": {
            "notice": "Does market send payout immediately"
          },
          "isLive(uint256)": {
            "notice": "Is a given market accepting deposits"
          },
          "marketPrice(uint256)": {
            "notice": "Calculate current market price of payout token in quote tokens"
          },
          "marketScale(uint256)": {
            "notice": "Scale value to use when converting between quote token and payout token amounts with marketPrice()"
          },
          "markets(uint256)": {
            "notice": "Main information pertaining to bond market"
          },
          "maxAmountAccepted(uint256,address)": {
            "notice": "Returns maximum amount of quote token accepted by the market"
          },
          "metadata(uint256)": {
            "notice": "Data needed for tuning bond market"
          },
          "minDebtDecayInterval()": {
            "notice": "Minimum values for decay, deposit interval, market duration and debt buffer."
          },
          "newOwners(uint256)": {
            "notice": "New address to designate as market owner. They must accept ownership to transfer permissions."
          },
          "ownerOf(uint256)": {
            "notice": "Returns the address of the market owner"
          },
          "payoutFor(uint256,uint256,address)": {
            "notice": "Payout due for amount of quote tokens"
          },
          "pullOwnership(uint256)": {
            "notice": "Accept ownership of a marketMust be market newOwner"
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified marketMust be teller"
          },
          "pushOwnership(uint256,address)": {
            "notice": "Designate a new owner of a marketMust be market owner"
          },
          "setAllowNewMarkets(bool)": {
            "notice": "Change the status of the auctioneer to allow creation of new markets"
          },
          "setCallbackAuthStatus(address,bool)": {
            "notice": "Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian"
          },
          "setDefaults(uint32[6])": {
            "notice": "Set the auctioneer defaultsMust be policy"
          },
          "setIntervals(uint256,uint32[3])": {
            "notice": "Set market intervals to different values than the defaultsMust be market owner"
          },
          "terms(uint256)": {
            "notice": "Information used to control how a bond market changes"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/policies/BondFixedTermSDA.sol": "BondFixedTermSDA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/BondBaseSDA.sol": {
        "keccak256": "0x4755dbba98500664c82d92820dd26765ef03aa2c1d3cb61323384b103855b798",
        "urls": [
          "bzz-raw://74a0ee4217be5720a2ca1f3334a05c0930ffaf8bd2fa5743c102baf272dd9ef0",
          "dweb:/ipfs/QmYhFTXnoh2ZiNETpocvZ6wF5EnodYqtc4BYz1ngoSx36P"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/policies/BondFixedTermSDA.sol": {
        "keccak256": "0x196dadf14d7f2de27a5547d2c37f2adfa64f61573eb20c411f781bff69e046a0",
        "urls": [
          "bzz-raw://a9d1ab798a535b0ed556bbe0cdc70de41700f9a20de4e31a38139f7560a830d9",
          "dweb:/ipfs/QmdxQxpudtW4CPVzvkMeCkfL14itVowhuKZSu7EoSNsbki"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/policies/BondFixedTermSDA.sol",
    "id": 51637,
    "exportedSymbols": {
      "Authority": [
        27251
      ],
      "BondBaseSDA": [
        50798
      ],
      "BondFixedTermSDA": [
        51636
      ],
      "IBondAggregator": [
        42228
      ],
      "IBondTeller": [
        42722
      ]
    },
    "nodeType": "SourceUnit",
    "src": "47:2114:85",
    "nodes": [
      {
        "id": 51562,
        "nodeType": "PragmaDirective",
        "src": "47:23:85",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 51566,
        "nodeType": "ImportDirective",
        "src": "74:74:85",
        "nodes": [],
        "absolutePath": "src/policies/BondBaseSDA.sol",
        "file": "./BondBaseSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51637,
        "sourceUnit": 50799,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51563,
              "name": "BondBaseSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50798,
              "src": "82:11:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51564,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42228,
              "src": "95:15:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51565,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27251,
              "src": "112:9:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51568,
        "nodeType": "ImportDirective",
        "src": "150:59:85",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondTeller.sol",
        "file": "src/interfaces/IBondTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51637,
        "sourceUnit": 42723,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51567,
              "name": "IBondTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42722,
              "src": "158:11:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51636,
        "nodeType": "ContractDefinition",
        "src": "1215:946:85",
        "nodes": [
          {
            "id": 51592,
            "nodeType": "FunctionDefinition",
            "src": "1308:205:85",
            "nodes": [],
            "body": {
              "id": 51591,
              "nodeType": "Block",
              "src": "1511:2:85",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 51585,
                    "name": "teller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51574,
                    "src": "1466:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$42722",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  {
                    "id": 51586,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51577,
                    "src": "1475:11:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42228",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 51587,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51579,
                    "src": "1488:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 51588,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51582,
                    "src": "1499:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$27251",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 51589,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51584,
                  "name": "BondBaseSDA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50798,
                  "src": "1454:11:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "1454:56:85"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51574,
                  "mutability": "mutable",
                  "name": "teller_",
                  "nameLocation": "1342:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 51592,
                  "src": "1330:19:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondTeller_$42722",
                    "typeString": "contract IBondTeller"
                  },
                  "typeName": {
                    "id": 51573,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51572,
                      "name": "IBondTeller",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42722,
                      "src": "1330:11:85"
                    },
                    "referencedDeclaration": 42722,
                    "src": "1330:11:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$42722",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51577,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1376:11:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 51592,
                  "src": "1360:27:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$42228",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 51576,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51575,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42228,
                      "src": "1360:15:85"
                    },
                    "referencedDeclaration": 42228,
                    "src": "1360:15:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42228",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51579,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1406:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 51592,
                  "src": "1398:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51582,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "1436:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 51592,
                  "src": "1426:20:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$27251",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 51581,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51580,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27251,
                      "src": "1426:9:85"
                    },
                    "referencedDeclaration": 27251,
                    "src": "1426:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$27251",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:134:85"
            },
            "returnParameters": {
              "id": 51590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:0:85"
            },
            "scope": 51636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51635,
            "nodeType": "FunctionDefinition",
            "src": "1604:554:85",
            "nodes": [],
            "body": {
              "id": 51634,
              "nodeType": "Block",
              "src": "1686:472:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51603,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1792:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 51634,
                      "src": "1772:26:85",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$42637_memory_ptr",
                        "typeString": "struct IBondSDA.MarketParams"
                      },
                      "typeName": {
                        "id": 51602,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51601,
                          "name": "MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42637,
                          "src": "1772:12:85"
                        },
                        "referencedDeclaration": 42637,
                        "src": "1772:12:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$42637_storage_ptr",
                          "typeString": "struct IBondSDA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51610,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51606,
                        "name": "params_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51595,
                        "src": "1812:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 51607,
                            "name": "MarketParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42637,
                            "src": "1822:12:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_MarketParams_$42637_storage_ptr_$",
                              "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                            }
                          }
                        ],
                        "id": 51608,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1821:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$42637_storage_ptr_$",
                          "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$42637_storage_ptr_$",
                          "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 51604,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1801:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 51605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1801:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 51609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:35:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$42637_memory_ptr",
                      "typeString": "struct IBondSDA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1772:64:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 51625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 51614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 51611,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51603,
                          "src": "1931:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$42637_memory_ptr",
                            "typeString": "struct IBondSDA.MarketParams memory"
                          }
                        },
                        "id": 51612,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42630,
                        "src": "1931:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 51613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1949:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1931:19:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 51623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 51618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 51615,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51603,
                                "src": "1955:6:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$42637_memory_ptr",
                                  "typeString": "struct IBondSDA.MarketParams memory"
                                }
                              },
                              "id": 51616,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42630,
                              "src": "1955:14:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 51617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1972:6:85",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "1955:23:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 51622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 51619,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51603,
                                "src": "1982:6:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$42637_memory_ptr",
                                  "typeString": "struct IBondSDA.MarketParams memory"
                                }
                              },
                              "id": 51620,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42630,
                              "src": "1982:14:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 51621,
                              "name": "MAX_FIXED_TERM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48758,
                              "src": "1999:14:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "1982:31:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1955:58:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 51624,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1954:60:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1931:83:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51629,
                  "nodeType": "IfStatement",
                  "src": "1927:135:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51626,
                        "name": "Auctioneer_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48660,
                        "src": "2036:24:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 51627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2036:26:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51628,
                    "nodeType": "RevertStatement",
                    "src": "2029:33:85"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51631,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51603,
                        "src": "2143:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$42637_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MarketParams_$42637_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      ],
                      "id": 51630,
                      "name": "_createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49236,
                      "src": "2129:13:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParams_$42637_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct IBondSDA.MarketParams memory) returns (uint256)"
                      }
                    },
                    "id": 51632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:21:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 51600,
                  "id": 51633,
                  "nodeType": "Return",
                  "src": "2122:28:85"
                }
              ]
            },
            "baseFunctions": [
              48830
            ],
            "documentation": {
              "id": 51593,
              "nodeType": "StructuredDocumentation",
              "src": "1571:27:85",
              "text": "@inheritdoc BondBaseSDA"
            },
            "functionSelector": "53c7f8e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "1613:12:85",
            "overrides": {
              "id": 51597,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1659:8:85"
            },
            "parameters": {
              "id": 51596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51595,
                  "mutability": "mutable",
                  "name": "params_",
                  "nameLocation": "1641:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 51635,
                  "src": "1626:22:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 51594,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1625:24:85"
            },
            "returnParameters": {
              "id": 51600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51635,
                  "src": "1677:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1676:9:85"
            },
            "scope": 51636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51570,
              "name": "BondBaseSDA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50798,
              "src": "1244:11:85"
            },
            "id": 51571,
            "nodeType": "InheritanceSpecifier",
            "src": "1244:11:85"
          }
        ],
        "canonicalName": "BondFixedTermSDA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 51569,
          "nodeType": "StructuredDocumentation",
          "src": "213:1002:85",
          "text": "@title Bond Fixed-Term Sequential Dutch Auctioneer\n @notice Bond Fixed-Term Sequential Dutch Auctioneer Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Fixed-Term Auctioneer is an implementation of the\n      Bond Base Auctioneer contract specific to creating bond markets where\n      purchases vest in a fixed amount of time after purchased (rounded to the day).\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51636,
          50798,
          27238,
          42663,
          42413
        ],
        "name": "BondFixedTermSDA",
        "nameLocation": "1224:16:85",
        "scope": 51637,
        "usedErrors": [
          48642,
          48644,
          48648,
          48650,
          48652,
          48654,
          48656,
          48658,
          48660,
          48662,
          48664
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 85
}