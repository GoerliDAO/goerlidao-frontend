{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "kernel_",
          "type": "address"
        },
        {
          "internalType": "contract IOperator",
          "name": "operator_",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "rewardToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "reward_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Heart_BeatAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Heart_BeatStopped",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Heart_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Heart_OutOfCycle",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Keycode",
          "name": "keycode_",
          "type": "bytes5"
        }
      ],
      "name": "Policy_ModuleDoesNotExist",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        }
      ],
      "name": "Beat",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount_",
          "type": "uint256"
        }
      ],
      "name": "RewardIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount_",
          "type": "uint256"
        }
      ],
      "name": "RewardUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ROLES",
      "outputs": [
        {
          "internalType": "contract ROLESv1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "configureDependencies",
      "outputs": [
        {
          "internalType": "Keycode[]",
          "name": "dependencies",
          "type": "bytes5[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frequency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastBeat",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "contract IOperator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestPermissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Keycode",
              "name": "keycode",
              "type": "bytes5"
            },
            {
              "internalType": "bytes4",
              "name": "funcSelector",
              "type": "bytes4"
            }
          ],
          "internalType": "struct Permissions[]",
          "name": "permissions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetBeat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator_",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "reward_",
          "type": "uint256"
        }
      ],
      "name": "setRewardTokenAndAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "withdrawUnspentRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260016002553480156200001657600080fd5b5060405162001997380380620019978339810160408190526200003991620000a9565b600080546001600160a01b03199081166001600160a01b0396871617909155600880548216948616949094179093556003805460ff1916600117905542600455600680549093169190931617905560055562000103565b6001600160a01b0381168114620000a657600080fd5b50565b60008060008060808587031215620000c057600080fd5b8451620000cd8162000090565b6020860151909450620000e08162000090565b6040860151909350620000f38162000090565b6060959095015193969295505050565b61188480620001136000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80637a259dba116100cd578063d3a7b7d311610081578063ead50da311610066578063ead50da3146102b5578063ef68b87d146102bd578063f7c618c1146102c557600080fd5b8063d3a7b7d31461028c578063d4aae0c41461029557600080fd5b80639459b875116100b25780639459b875146102515780639ab7d7e714610266578063b3ab15fb1461027957600080fd5b80637a259dba14610229578063923cb9521461023157600080fd5b80634657b36c11610124578063570ca73511610109578063570ca735146101bc5780635924be7014610201578063633929901461021657600080fd5b80634657b36c146101a157806351b42b00146101b457600080fd5b806302fb0c5e146101565780630f15f4c014610178578063228cb7331461018257806322f3e2d414610199575b600080fd5b6003546101639060ff1681565b60405190151581526020015b60405180910390f35b6101806102e5565b005b61018b60055481565b60405190815260200161016f565b6101636103c6565b6101806101af366004611540565b61045e565b6101806104fd565b6008546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016f565b6102096105d2565b60405161016f9190611564565b6101806102243660046115f7565b610717565b610180610894565b6001546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b610259610b01565b60405161016f9190611623565b610180610274366004611540565b610ccb565b610180610287366004611540565b610e78565b61018b60045481565b6000546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b61018b610f6b565b61018061100c565b6006546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561037757600080fd5b505af115801561038b573d6000803e3d6000fd5b5050600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055506103c390506110ba565b50565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190611689565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104b6576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b5050600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055505050565b604080516001808252818301909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816105e9575050604080518082018083526007547f1ae7ec2e00000000000000000000000000000000000000000000000000000000909152915192935091829173ffffffffffffffffffffffffffffffffffffffff1690631ae7ec2e906044808501916020918187030181865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab91906116ab565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f86db7df00000000000000000000000000000000000000000000000000000000060209091015281518290600090610709576107096116ed565b602002602001018190525090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050506107c9610f6b565b6004546107d6919061174b565b421061080e576040517f2f36f8a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155600583905560408051918252602082018490527f401ccfec4c6c7ac3f3b71182750d0f8d73c0d29cc476732b0b21ab0d359da47f910160405180910390a1505050565b600254600114610900576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ad565b6002805560035460ff16610940576040517f9bf7f18000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610948610f6b565b600454610955919061174b565b42101561098e576040517f8c37770600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166386db7df06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109f857600080fd5b505af1158015610a0c573d6000803e3d6000fd5b50505050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637159a6186040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b50505050610a9a610f6b565b600454610aa79042611763565b610ab1919061177a565b610abb9042611763565b600455610ac7336110d1565b6040514281527fd5215e0661831421a9ebc79f9d2848dbfc61213cf6ae3c92b45e17ea50be19109060200160405180910390a16001600255565b60408051600280825260608083018452926020830190803683370190505090507f505249434500000000000000000000000000000000000000000000000000000081600081518110610b5557610b556116ed565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610bad7f524f4c455300000000000000000000000000000000000000000000000000000090565b81600181518110610bc057610bc06116ed565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610c2d81600081518110610c2057610c206116ed565b6020026020010151611280565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c8381600181518110610c2057610c206116ed565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b50505050610d7d610f6b565b600454610d8a919061174b565b4210610dc2576040517f2f36f8a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610e7490339073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5691906117b5565b73ffffffffffffffffffffffffffffffffffffffff851691906113ae565b5050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b5050600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9590951694909417909355505050565b600754604080517f7321f100000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691637321f1009160048083019260209291908290030181865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff91906117ce565b65ffffffffffff16905090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561109e57600080fd5b505af11580156110b2573d6000803e3d6000fd5b505050506103c35b6110c2610f6b565b6110cc9042611763565b600455565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116491906117b5565b6005541161117457600554611206565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120691906117b5565b60065490915061122d9073ffffffffffffffffffffffffffffffffffffffff1683836113ae565b6040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527ff9b6ec770c96c3a6f9225bf3a8463a8ad03e884448af07b4ecd4d19d628946ee910160405180910390a15050565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133591906117f6565b905073ffffffffffffffffffffffffffffffffffffffff81166113a8576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016104ad565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916114459190611813565b6000604051808303816000865af19150503d8060008114611482576040519150601f19603f3d011682016040523d82523d6000602084013e611487565b606091505b50915091508180156114b15750805115806114b15750808060200190518101906114b19190611689565b611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104ad565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103c357600080fd5b60006020828403121561155257600080fd5b813561155d8161151e565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156115ea57815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101611581565b5091979650505050505050565b6000806040838503121561160a57600080fd5b82356116158161151e565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561167d5783517fffffffffff000000000000000000000000000000000000000000000000000000168352928401929184019160010161163f565b50909695505050505050565b60006020828403121561169b57600080fd5b8151801515811461155d57600080fd5b6000602082840312156116bd57600080fd5b81517fffffffffff0000000000000000000000000000000000000000000000000000008116811461155d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561175e5761175e61171c565b500190565b6000828210156117755761177561171c565b500390565b6000826117b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b6000602082840312156117c757600080fd5b5051919050565b6000602082840312156117e057600080fd5b815165ffffffffffff8116811461155d57600080fd5b60006020828403121561180857600080fd5b815161155d8161151e565b6000825160005b81811015611834576020818601810151858301520161181a565b81811115611843576000828501525b50919091019291505056fea2646970667358221220bc759f00fdc336f3344153224afcbaba697c42cd6e1b07f11479d9146ede012e64736f6c634300080f0033",
    "sourceMap": "894:5388:110:-:0;;;451:1:14;426:26;;1838:299:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4341:6:55;:16;;-1:-1:-1;;;;;;4341:16:55;;;-1:-1:-1;;;;;4341:16:55;;;;;;;1988:8:110::1;:20:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2019:6:::1;:13:::0;;-1:-1:-1;;2019:13:110::1;-1:-1:-1::0;2019:13:110::1;::::0;;2053:15:::1;2042:8;:26:::0;2078:11:::1;:26:::0;;;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;2114:16:110;894:5388;;14:139:183;-1:-1:-1;;;;;97:31:183;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:655::-;305:6;313;321;329;382:3;370:9;361:7;357:23;353:33;350:53;;;399:1;396;389:12;350:53;431:9;425:16;450:39;483:5;450:39;:::i;:::-;558:2;543:18;;537:25;508:5;;-1:-1:-1;571:41:183;537:25;571:41;:::i;:::-;683:2;668:18;;662:25;631:7;;-1:-1:-1;696:41:183;662:25;696:41;:::i;:::-;803:2;788:18;;;;782:25;158:655;;;;-1:-1:-1;;;158:655:183:o;:::-;894:5388:110;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c80637a259dba116100cd578063d3a7b7d311610081578063ead50da311610066578063ead50da3146102b5578063ef68b87d146102bd578063f7c618c1146102c557600080fd5b8063d3a7b7d31461028c578063d4aae0c41461029557600080fd5b80639459b875116100b25780639459b875146102515780639ab7d7e714610266578063b3ab15fb1461027957600080fd5b80637a259dba14610229578063923cb9521461023157600080fd5b80634657b36c11610124578063570ca73511610109578063570ca735146101bc5780635924be7014610201578063633929901461021657600080fd5b80634657b36c146101a157806351b42b00146101b457600080fd5b806302fb0c5e146101565780630f15f4c014610178578063228cb7331461018257806322f3e2d414610199575b600080fd5b6003546101639060ff1681565b60405190151581526020015b60405180910390f35b6101806102e5565b005b61018b60055481565b60405190815260200161016f565b6101636103c6565b6101806101af366004611540565b61045e565b6101806104fd565b6008546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016f565b6102096105d2565b60405161016f9190611564565b6101806102243660046115f7565b610717565b610180610894565b6001546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b610259610b01565b60405161016f9190611623565b610180610274366004611540565b610ccb565b610180610287366004611540565b610e78565b61018b60045481565b6000546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b61018b610f6b565b61018061100c565b6006546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561037757600080fd5b505af115801561038b573d6000803e3d6000fd5b5050600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055506103c390506110ba565b50565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190611689565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104b6576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b5050600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055505050565b604080516001808252818301909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816105e9575050604080518082018083526007547f1ae7ec2e00000000000000000000000000000000000000000000000000000000909152915192935091829173ffffffffffffffffffffffffffffffffffffffff1690631ae7ec2e906044808501916020918187030181865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab91906116ab565b7fffffffffff0000000000000000000000000000000000000000000000000000001681527f86db7df00000000000000000000000000000000000000000000000000000000060209091015281518290600090610709576107096116ed565b602002602001018190525090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050506107c9610f6b565b6004546107d6919061174b565b421061080e576040517f2f36f8a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155600583905560408051918252602082018490527f401ccfec4c6c7ac3f3b71182750d0f8d73c0d29cc476732b0b21ab0d359da47f910160405180910390a1505050565b600254600114610900576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ad565b6002805560035460ff16610940576040517f9bf7f18000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610948610f6b565b600454610955919061174b565b42101561098e576040517f8c37770600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166386db7df06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109f857600080fd5b505af1158015610a0c573d6000803e3d6000fd5b50505050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637159a6186040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b50505050610a9a610f6b565b600454610aa79042611763565b610ab1919061177a565b610abb9042611763565b600455610ac7336110d1565b6040514281527fd5215e0661831421a9ebc79f9d2848dbfc61213cf6ae3c92b45e17ea50be19109060200160405180910390a16001600255565b60408051600280825260608083018452926020830190803683370190505090507f505249434500000000000000000000000000000000000000000000000000000081600081518110610b5557610b556116ed565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610bad7f524f4c455300000000000000000000000000000000000000000000000000000090565b81600181518110610bc057610bc06116ed565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610c2d81600081518110610c2057610c206116ed565b6020026020010151611280565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c8381600181518110610c2057610c206116ed565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b50505050610d7d610f6b565b600454610d8a919061174b565b4210610dc2576040517f2f36f8a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610e7490339073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5691906117b5565b73ffffffffffffffffffffffffffffffffffffffff851691906113ae565b5050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b5050600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9590951694909417909355505050565b600754604080517f7321f100000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691637321f1009160048083019260209291908290030181865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff91906117ce565b65ffffffffffff16905090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f68656172745f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561109e57600080fd5b505af11580156110b2573d6000803e3d6000fd5b505050506103c35b6110c2610f6b565b6110cc9042611763565b600455565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116491906117b5565b6005541161117457600554611206565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120691906117b5565b60065490915061122d9073ffffffffffffffffffffffffffffffffffffffff1683836113ae565b6040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527ff9b6ec770c96c3a6f9225bf3a8463a8ad03e884448af07b4ecd4d19d628946ee910160405180910390a15050565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133591906117f6565b905073ffffffffffffffffffffffffffffffffffffffff81166113a8576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016104ad565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916114459190611813565b6000604051808303816000865af19150503d8060008114611482576040519150601f19603f3d011682016040523d82523d6000602084013e611487565b606091505b50915091508180156114b15750805115806114b15750808060200190518101906114b19190611689565b611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104ad565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103c357600080fd5b60006020828403121561155257600080fd5b813561155d8161151e565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156115ea57815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101611581565b5091979650505050505050565b6000806040838503121561160a57600080fd5b82356116158161151e565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561167d5783517fffffffffff000000000000000000000000000000000000000000000000000000168352928401929184019160010161163f565b50909695505050505050565b60006020828403121561169b57600080fd5b8151801515811461155d57600080fd5b6000602082840312156116bd57600080fd5b81517fffffffffff0000000000000000000000000000000000000000000000000000008116811461155d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561175e5761175e61171c565b500190565b6000828210156117755761177561171c565b500390565b6000826117b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b6000602082840312156117c757600080fd5b5051919050565b6000602082840312156117e057600080fd5b815165ffffffffffff8116811461155d57600080fd5b60006020828403121561180857600080fd5b815161155d8161151e565b6000825160005b81811015611834576020818601810151858301520161181a565b81811115611843576000828501525b50919091019291505056fea2646970667358221220bc759f00fdc336f3344153224afcbaba697c42cd6e1b07f11479d9146ede012e64736f6c634300080f0033",
    "sourceMap": "894:5388:110:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:18;;;;;;;;;;;;179:14:183;;172:22;154:41;;142:2;127:18;1116::110;;;;;;;;4698:105;;;:::i;:::-;;1304:21;;;;;;;;;352:25:183;;;340:2;325:18;1304:21:110;206:177:183;6691:100:55;;;:::i;4652:97::-;;;;;;:::i;:::-;;:::i;4836:86:110:-;;;:::i;1502:25::-;;;;;;;;;;;;1026:42:183;1014:55;;;996:74;;984:2;969:18;1502:25:110;831:245:183;2555:274:110;;;:::i;:::-;;;;;;;:::i;5333:255::-;;;;;;:::i;:::-;;:::i;3166:697::-;;;:::i;332:20:98:-;;;;;;;;;2170:352:110;;;:::i;:::-;;;;;;;:::i;5621:210::-;;;;;;:::i;:::-;;:::i;4955:121::-;;;;;;:::i;:::-;;:::i;1202:23::-;;;;;;4276:20:55;;;;;;;;;6168:112:110;;;:::i;4582:83::-;;;:::i;1411:24::-;;;;;;;;;4698:105;405:5:98;;:36;;;;;361:100;405:36;;;4561:25:183;;;430:10:98;4602:18:183;;;4595:83;361:100:98;405:5;;;:17;;4534:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4761:6:110::1;:13:::0;;;::::1;4770:4;4761:13;::::0;;-1:-1:-1;4784:12:110::1;::::0;-1:-1:-1;4784:10:110::1;:12::i;:::-;4698:105:::0;:::o;6691:100:55:-;6734:4;6757:6;;:27;;;;;6779:4;6757:27;;;996:74:183;6757:6:55;;;;;:21;;969:18:183;;6757:27:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6750:34;;6691:100;:::o;4652:97::-;4504:6;;;;4482:10;:29;4478:78;;4520:36;;;;;4545:10;4520:36;;;996:74:183;969:18;;4520:36:55;;;;;;;;4478:78;4723:6:::1;:19:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4652:97::o;4836:86:110:-;405:5:98;;:36;;;;;361:100;405:36;;;4561:25:183;;;430:10:98;4602:18:183;;;4595:83;361:100:98;405:5;;;:17;;4534:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4901:6:110::1;:14:::0;;;::::1;::::0;;-1:-1:-1;;;4836:86:110:o;2555:274::-;2711:20;;;2729:1;2711:20;;;;;;;;;2649:32;;2711:20;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2711:20:110;;;;;;;;;;;;-1:-1:-1;;2758:64:110;;;;;;;;;2770:5;;:15;;;;;;2697:34;;-1:-1:-1;2758:64:110;;;2770:5;;;:13;;:15;;;;;;;;;;;;:5;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2758:64;;;;2787:34;2758:64;;;;;2741:14;;:11;;-1:-1:-1;;2741:14:110;;;;:::i;:::-;;;;;;:81;;;;2555:274;:::o;5333:255::-;405:5:98;;:36;;;;;361:100;405:36;;;4561:25:183;;;430:10:98;4602:18:183;;;4595:83;361:100:98;405:5;;;:17;;4534:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5241:11:110::1;:9;:11::i;:::-;5230:8;;:22;;;;:::i;:::-;5211:15;:41;5207:75;;5261:21;;;;;;;;;;;;;;5207:75;5490:11:::2;:20:::0;;;::::2;;::::0;::::2;::::0;;::::2;::::0;;;5520:6:::2;:16:::0;;;5551:30:::2;::::0;;6709:74:183;;;6814:2;6799:18;;6792:34;;;5551:30:110::2;::::0;6682:18:183;5551:30:110::2;;;;;;;5333:255:::0;;;:::o;3166:697::-;509:6:14;;519:1;509:11;501:34;;;;;;;7039:2:183;501:34:14;;;7021:21:183;7078:2;7058:18;;;7051:30;7117:12;7097:18;;;7090:40;7147:18;;501:34:14;6837:334:183;501:34:14;555:1;546:10;;3219:6:110::1;::::0;::::1;;3214:39;;3234:19;;;;;;;;;;;;;;3214:39;3296:11;:9;:11::i;:::-;3285:8;;:22;;;;:::i;:::-;3267:15;:40;3263:71;;;3316:18;;;;;;;;;;;;;;3263:71;3402:5;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3500:8;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3738:11;:9;:11::i;:::-;3726:8;::::0;3708:26:::1;::::0;:15:::1;:26;:::i;:::-;3707:42;;;;:::i;:::-;3688:62;::::0;:15:::1;:62;:::i;:::-;3677:8;:73:::0;3795:24:::1;3808:10;3795:12;:24::i;:::-;3835:21;::::0;3840:15:::1;352:25:183::0;;3835:21:110::1;::::0;340:2:183;325:18;3835:21:110::1;;;;;;;588:1:14::0;579:6;:10;3166:697:110:o;2170:352::-;2286:16;;;2300:1;2286:16;;;2230:29;2286:16;;;;;2230:29;2286:16;;;;;;;;;;-1:-1:-1;;2271:31:110;-1:-1:-1;2330:18:110;2312:12;2325:1;2312:15;;;;;;;;:::i;:::-;:36;;;;:15;;;;;;;;;;;:36;2376:18;;3124:8:55;3039:97;2376:18:110;2358:12;2371:1;2358:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;;;;;2421:33;2438:12;2451:1;2438:15;;;;;;;;:::i;:::-;;;;;;;2421:16;:33::i;:::-;2405:5;;:50;;;;;;;;;;;;;;;;;;2481:33;2498:12;2511:1;2498:15;;;;;;;;:::i;2481:33::-;2465:5;:50;;;;;;;;;;;;;;;2170:352;:::o;5621:210::-;405:5:98;;:36;;;;;361:100;405:36;;;4561:25:183;;;430:10:98;4602:18:183;;;4595:83;361:100:98;405:5;;;:17;;4534:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5241:11:110::1;:9;:11::i;:::-;5230:8;;:22;;;;:::i;:::-;5211:15;:41;5207:75;;5261:21;;;;;;;;;;;;;;5207:75;5792:31:::2;::::0;;;;5817:4:::2;5792:31;::::0;::::2;996:74:183::0;5760:64:110::2;::::0;5780:10:::2;::::0;5792:16:::2;::::0;::::2;::::0;::::2;::::0;969:18:183;;5792:31:110::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5760:19;::::0;::::2;::::0;:64;:19:::2;:64::i;:::-;5621:210:::0;;:::o;4955:121::-;405:5:98;;:36;;;;;361:100;405:36;;;4561:25:183;;;430:10:98;4602:18:183;;;4595:83;361:100:98;405:5;;;:17;;4534:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5038:8:110::1;:31:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;4955:121:110:o;6168:112::-;6244:5;;:28;;;;;;;;6210:7;;6244:5;;;:26;;:28;;;;;;;;;;;;;;:5;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6236:37;;6229:44;;6168:112;:::o;4582:83::-;405:5:98;;:36;;;;;361:100;405:36;;;4561:25:183;;;430:10:98;4602:18:183;;;4595:83;361:100:98;405:5;;;:17;;4534:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4646:12:110::1;4461:88:::0;4531:11;:9;:11::i;:::-;4513:29;;:15;:29;:::i;:::-;4502:8;:40;4461:88::o;3869:282::-;3949:11;;:36;;;;;3979:4;3949:36;;;996:74:183;3923:14:110;;3949:11;;;:21;;969:18:183;;3949:36:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3940:6;;:45;:117;;4051:6;;3940:117;;;4000:11;;:36;;;;;4030:4;4000:36;;;996:74:183;4000:11:110;;;;;:21;;969:18:183;;4000:36:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4067:11;;3923:134;;-1:-1:-1;4067:37:110;;:11;;4092:3;3923:134;4067:24;:37::i;:::-;4119:25;;;6739:42:183;6727:55;;6709:74;;6814:2;6799:18;;6792:34;;;4119:25:110;;6682:18:183;4119:25:110;;;;;;;3913:238;3869:282;:::o;6867:286:55:-;6934:7;6988:6;;:36;;;;;8561:66:183;8549:79;;6988:36:55;;;8531:98:183;6934:7:55;;6988:6;;;:26;;8504:18:183;;6988:36:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6953:72;-1:-1:-1;7039:30:55;;;7035:78;;7078:35;;;;;8561:66:183;8549:79;;7078:35:55;;;8531:98:183;8504:18;;7078:35:55;8357:278:183;7035:78:55;7130:16;6867:286;-1:-1:-1;;6867:286:55:o;784:353:89:-;965:59;;;932:19;6727:55:183;;;965:59:89;;;6709:74:183;6799:18;;;;6792:34;;;965:59:89;;;;;;;;;;6682:18:183;;;;965:59:89;;;;;;;;;988:23;965:59;;;932:102;;-1:-1:-1;;;;932:19:89;;;;:102;;965:59;932:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:138;;;;1053:7;:57;;;;-1:-1:-1;1065:11:89;;:16;;:44;;;1096:4;1085:24;;;;;;;;;;;;:::i;:::-;1045:85;;;;;;;9553:2:183;1045:85:89;;;9535:21:183;9592:2;9572:18;;;9565:30;9631:17;9611:18;;;9604:45;9666:18;;1045:85:89;9351:339:183;1045:85:89;886:251;;784:353;;;:::o;388:162:183:-;482:42;475:5;471:54;464:5;461:65;451:93;;540:1;537;530:12;555:271;630:6;683:2;671:9;662:7;658:23;654:32;651:52;;;699:1;696;689:12;651:52;738:9;725:23;757:39;790:5;757:39;:::i;:::-;815:5;555:271;-1:-1:-1;;;555:271:183:o;1081:944::-;1312:2;1364:21;;;1434:13;;1337:18;;;1456:22;;;1283:4;;1312:2;1497;;1515:18;;;;1556:15;;;1283:4;1599:400;1613:6;1610:1;1607:13;1599:400;;;1672:13;;1714:9;;1725:66;1710:82;1698:95;;1837:11;;1831:18;1851:66;1827:91;1813:12;;;1806:113;1939:12;;;;1974:15;;;;1635:1;1628:9;1599:400;;;-1:-1:-1;2016:3:183;;1081:944;-1:-1:-1;;;;;;;1081:944:183:o;2030:338::-;2113:6;2121;2174:2;2162:9;2153:7;2149:23;2145:32;2142:52;;;2190:1;2187;2180:12;2142:52;2229:9;2216:23;2248:39;2281:5;2248:39;:::i;:::-;2306:5;2358:2;2343:18;;;;2330:32;;-1:-1:-1;;;2030:338:183:o;2621:733::-;2820:2;2872:21;;;2942:13;;2845:18;;;2964:22;;;2791:4;;2820:2;3043:15;;;;3017:2;3002:18;;;2791:4;3086:242;3100:6;3097:1;3094:13;3086:242;;;3165:13;;3180:66;3161:86;3149:99;;3303:15;;;;3268:12;;;;3122:1;3115:9;3086:242;;;-1:-1:-1;3345:3:183;;2621:733;-1:-1:-1;;;;;;2621:733:183:o;4936:277::-;5003:6;5056:2;5044:9;5035:7;5031:23;5027:32;5024:52;;;5072:1;5069;5062:12;5024:52;5104:9;5098:16;5157:5;5150:13;5143:21;5136:5;5133:32;5123:60;;5179:1;5176;5169:12;5638:366;5737:6;5790:2;5778:9;5769:7;5765:23;5761:32;5758:52;;;5806:1;5803;5796:12;5758:52;5838:9;5832:16;5888:66;5881:5;5877:78;5870:5;5867:89;5857:117;;5970:1;5967;5960:12;6009:184;6061:77;6058:1;6051:88;6158:4;6155:1;6148:15;6182:4;6179:1;6172:15;6198:184;6250:77;6247:1;6240:88;6347:4;6344:1;6337:15;6371:4;6368:1;6361:15;6387:128;6427:3;6458:1;6454:6;6451:1;6448:13;6445:39;;;6464:18;;:::i;:::-;-1:-1:-1;6500:9:183;;6387:128::o;7176:125::-;7216:4;7244:1;7241;7238:8;7235:34;;;7249:18;;:::i;:::-;-1:-1:-1;7286:9:183;;7176:125::o;7306:266::-;7338:1;7364;7354:189;;7399:77;7396:1;7389:88;7500:4;7497:1;7490:15;7528:4;7525:1;7518:15;7354:189;-1:-1:-1;7557:9:183;;7306:266::o;7577:184::-;7647:6;7700:2;7688:9;7679:7;7675:23;7671:32;7668:52;;;7716:1;7713;7706:12;7668:52;-1:-1:-1;7739:16:183;;7577:184;-1:-1:-1;7577:184:183:o;7766:284::-;7835:6;7888:2;7876:9;7867:7;7863:23;7859:32;7856:52;;;7904:1;7901;7894:12;7856:52;7936:9;7930:16;7986:14;7979:5;7975:26;7968:5;7965:37;7955:65;;8016:1;8013;8006:12;8640:275;8726:6;8779:2;8767:9;8758:7;8754:23;8750:32;8747:52;;;8795:1;8792;8785:12;8747:52;8827:9;8821:16;8846:39;8879:5;8846:39;:::i;8920:426::-;9049:3;9087:6;9081:13;9112:1;9122:129;9136:6;9133:1;9130:13;9122:129;;;9234:4;9218:14;;;9214:25;;9208:32;9195:11;;;9188:53;9151:12;9122:129;;;9269:6;9266:1;9263:13;9260:48;;;9304:1;9295:6;9290:3;9286:16;9279:27;9260:48;-1:-1:-1;9324:16:183;;;;;8920:426;-1:-1:-1;;8920:426:183:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ROLES()": "923cb952",
    "activate()": "0f15f4c0",
    "active()": "02fb0c5e",
    "beat()": "7a259dba",
    "changeKernel(address)": "4657b36c",
    "configureDependencies()": "9459b875",
    "deactivate()": "51b42b00",
    "frequency()": "ead50da3",
    "isActive()": "22f3e2d4",
    "kernel()": "d4aae0c4",
    "lastBeat()": "d3a7b7d3",
    "operator()": "570ca735",
    "requestPermissions()": "5924be70",
    "resetBeat()": "ef68b87d",
    "reward()": "228cb733",
    "rewardToken()": "f7c618c1",
    "setOperator(address)": "b3ab15fb",
    "setRewardTokenAndAmount(address,uint256)": "63392990",
    "withdrawUnspentRewards(address)": "9ab7d7e7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"kernel_\",\"type\":\"address\"},{\"internalType\":\"contract IOperator\",\"name\":\"operator_\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"rewardToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Heart_BeatAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Heart_BeatStopped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Heart_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Heart_OutOfCycle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Keycode\",\"name\":\"keycode_\",\"type\":\"bytes5\"}],\"name\":\"Policy_ModuleDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"}],\"name\":\"Beat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount_\",\"type\":\"uint256\"}],\"name\":\"RewardIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount_\",\"type\":\"uint256\"}],\"name\":\"RewardUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ROLES\",\"outputs\":[{\"internalType\":\"contract ROLESv1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureDependencies\",\"outputs\":[{\"internalType\":\"Keycode[]\",\"name\":\"dependencies\",\"type\":\"bytes5[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBeat\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"contract IOperator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"Keycode\",\"name\":\"keycode\",\"type\":\"bytes5\"},{\"internalType\":\"bytes4\",\"name\":\"funcSelector\",\"type\":\"bytes4\"}],\"internalType\":\"struct Permissions[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetBeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward_\",\"type\":\"uint256\"}],\"name\":\"setRewardTokenAndAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"withdrawUnspentRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Olympus Heart contract provides keeper rewards to call the heart beat function which fuels         Olympus market operations. The Heart orchestrates state updates in the correct order to ensure         market operations use up to date information.\",\"kind\":\"dev\",\"methods\":{\"activate()\":{\"details\":\"This function is used to restart the heart after a pause\"},\"beat()\":{\"details\":\"Triggers price oracle update and market operations\"},\"configureDependencies()\":{\"returns\":{\"dependencies\":\"- Keycode array of module dependencies.\"}},\"deactivate()\":{\"details\":\"Emergency stop function for the heart\"},\"requestPermissions()\":{\"returns\":{\"permissions\":\"- Array of keycodes and function selectors for requested permissions.\"}},\"setOperator(address)\":{\"params\":{\"operator_\":\"The address of the new Operator contract\"}},\"setRewardTokenAndAmount(address,uint256)\":{\"params\":{\"reward_\":\"- New reward amount, in units of the reward token\",\"token_\":\"- New reward token address\"}}},\"title\":\"Olympus Heart\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activate()\":{\"notice\":\"Turns the heart on and resets the beatAccess restricted\"},\"active()\":{\"notice\":\"Status of the Heart, false = stopped, true = beating\"},\"beat()\":{\"notice\":\"Beats the heartOnly callable when enough time has passed since last beat (determined by frequency variable)This function is incentivized with a token reward (see rewardToken and reward variables).\"},\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"},\"configureDependencies()\":{\"notice\":\"Define module dependencies for this policy.\"},\"deactivate()\":{\"notice\":\"Turns the heart offAccess restricted\"},\"frequency()\":{\"notice\":\"Heart beat frequency, in seconds\"},\"isActive()\":{\"notice\":\"Easily accessible indicator for if a policy is activated or not.\"},\"lastBeat()\":{\"notice\":\"Timestamp of the last beat (UTC, in seconds)\"},\"requestPermissions()\":{\"notice\":\"Function called by kernel to set module function permissions.\"},\"resetBeat()\":{\"notice\":\"Unlocks the cycle if stuck on one side, eject functionAccess restricted\"},\"reward()\":{\"notice\":\"Reward for beating the Heart (in reward token decimals)\"},\"rewardToken()\":{\"notice\":\"Reward token address that users are sent for beating the Heart\"},\"setOperator(address)\":{\"notice\":\"Updates the Operator contract address that the Heart calls on a beatAccess restricted\"},\"setRewardTokenAndAmount(address,uint256)\":{\"notice\":\"Sets the reward token and amount for the beat functionAccess restricted\"},\"withdrawUnspentRewards(address)\":{\"notice\":\"Withdraws unspent balance of provided token to senderAccess restricted\"}},\"notice\":\"Olympus Heart (Policy) Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/policies/Heart.sol\":\"OlympusHeart\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/Heart.sol\":{\"keccak256\":\"0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a\",\"dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF\"]},\"src/policies/interfaces/IHeart.sol\":{\"keccak256\":\"0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab\",\"dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "kernel_",
              "type": "address"
            },
            {
              "internalType": "contract IOperator",
              "name": "operator_",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "rewardToken_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "reward_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_BeatAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_BeatStopped"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_OutOfCycle"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "Keycode",
              "name": "keycode_",
              "type": "bytes5"
            }
          ],
          "type": "error",
          "name": "Policy_ModuleDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Beat",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to_",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardIssued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token_",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROLES",
          "outputs": [
            {
              "internalType": "contract ROLESv1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "active",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beat"
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureDependencies",
          "outputs": [
            {
              "internalType": "Keycode[]",
              "name": "dependencies",
              "type": "bytes5[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frequency",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastBeat",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operator",
          "outputs": [
            {
              "internalType": "contract IOperator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestPermissions",
          "outputs": [
            {
              "internalType": "struct Permissions[]",
              "name": "permissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "Keycode",
                  "name": "keycode",
                  "type": "bytes5"
                },
                {
                  "internalType": "bytes4",
                  "name": "funcSelector",
                  "type": "bytes4"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetBeat"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "reward_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardTokenAndAmount"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawUnspentRewards"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate()": {
            "details": "This function is used to restart the heart after a pause"
          },
          "beat()": {
            "details": "Triggers price oracle update and market operations"
          },
          "configureDependencies()": {
            "returns": {
              "dependencies": "- Keycode array of module dependencies."
            }
          },
          "deactivate()": {
            "details": "Emergency stop function for the heart"
          },
          "requestPermissions()": {
            "returns": {
              "permissions": "- Array of keycodes and function selectors for requested permissions."
            }
          },
          "setOperator(address)": {
            "params": {
              "operator_": "The address of the new Operator contract"
            }
          },
          "setRewardTokenAndAmount(address,uint256)": {
            "params": {
              "reward_": "- New reward amount, in units of the reward token",
              "token_": "- New reward token address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activate()": {
            "notice": "Turns the heart on and resets the beatAccess restricted"
          },
          "active()": {
            "notice": "Status of the Heart, false = stopped, true = beating"
          },
          "beat()": {
            "notice": "Beats the heartOnly callable when enough time has passed since last beat (determined by frequency variable)This function is incentivized with a token reward (see rewardToken and reward variables)."
          },
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          },
          "configureDependencies()": {
            "notice": "Define module dependencies for this policy."
          },
          "deactivate()": {
            "notice": "Turns the heart offAccess restricted"
          },
          "frequency()": {
            "notice": "Heart beat frequency, in seconds"
          },
          "isActive()": {
            "notice": "Easily accessible indicator for if a policy is activated or not."
          },
          "lastBeat()": {
            "notice": "Timestamp of the last beat (UTC, in seconds)"
          },
          "requestPermissions()": {
            "notice": "Function called by kernel to set module function permissions."
          },
          "resetBeat()": {
            "notice": "Unlocks the cycle if stuck on one side, eject functionAccess restricted"
          },
          "reward()": {
            "notice": "Reward for beating the Heart (in reward token decimals)"
          },
          "rewardToken()": {
            "notice": "Reward token address that users are sent for beating the Heart"
          },
          "setOperator(address)": {
            "notice": "Updates the Operator contract address that the Heart calls on a beatAccess restricted"
          },
          "setRewardTokenAndAmount(address,uint256)": {
            "notice": "Sets the reward token and amount for the beat functionAccess restricted"
          },
          "withdrawUnspentRewards(address)": {
            "notice": "Withdraws unspent balance of provided token to senderAccess restricted"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/policies/Heart.sol": "OlympusHeart"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Heart.sol": {
        "keccak256": "0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f",
        "urls": [
          "bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a",
          "dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IHeart.sol": {
        "keccak256": "0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a",
        "urls": [
          "bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab",
          "dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/policies/Heart.sol",
    "id": 47233,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "ERC20": [
        25731
      ],
      "IHeart": [
        52055
      ],
      "IOperator": [
        52282
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "Module": [
        28577
      ],
      "OlympusHeart": [
        47232
      ],
      "PRICEv1": [
        39576
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "ROLESv1": [
        40870
      ],
      "ReentrancyGuard": [
        25876
      ],
      "RolesConsumer": [
        40599
      ],
      "TargetNotAContract": [
        28366
      ],
      "TransferHelper": [
        38101
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:6246:110",
    "nodes": [
      {
        "id": 46808,
        "nodeType": "PragmaDirective",
        "src": "37:23:110",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 46810,
        "nodeType": "ImportDirective",
        "src": "62:66:110",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/ReentrancyGuard.sol",
        "file": "solmate/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 25877,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46809,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25876,
              "src": "70:15:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46812,
        "nodeType": "ImportDirective",
        "src": "129:47:110",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 25732,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46811,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "137:5:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46814,
        "nodeType": "ImportDirective",
        "src": "178:60:110",
        "nodes": [],
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 38102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46813,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38101,
              "src": "186:14:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46816,
        "nodeType": "ImportDirective",
        "src": "240:60:110",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IOperator.sol",
        "file": "policies/interfaces/IOperator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 52283,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46815,
              "name": "IOperator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52282,
              "src": "248:9:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46818,
        "nodeType": "ImportDirective",
        "src": "301:54:110",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IHeart.sol",
        "file": "policies/interfaces/IHeart.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 52056,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46817,
              "name": "IHeart",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52055,
              "src": "309:6:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46820,
        "nodeType": "ImportDirective",
        "src": "357:63:110",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 40792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46819,
              "name": "RolesConsumer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40599,
              "src": "365:13:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46822,
        "nodeType": "ImportDirective",
        "src": "421:51:110",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 40871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46821,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40870,
              "src": "429:7:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46824,
        "nodeType": "ImportDirective",
        "src": "473:51:110",
        "nodes": [],
        "absolutePath": "src/modules/PRICE/PRICE.v1.sol",
        "file": "modules/PRICE/PRICE.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 39577,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46823,
              "name": "PRICEv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39576,
              "src": "481:7:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46825,
        "nodeType": "ImportDirective",
        "src": "526:24:110",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47233,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47232,
        "nodeType": "ContractDefinition",
        "src": "894:5388:110",
        "nodes": [
          {
            "id": 46838,
            "nodeType": "UsingForDirective",
            "src": "972:31:110",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 46835,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38101,
              "src": "978:14:110"
            },
            "typeName": {
              "id": 46837,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46836,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25731,
                "src": "997:5:110"
              },
              "referencedDeclaration": 25731,
              "src": "997:5:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25731",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 46841,
            "nodeType": "VariableDeclaration",
            "src": "1116:18:110",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46839,
              "nodeType": "StructuredDocumentation",
              "src": "1047:64:110",
              "text": "@notice Status of the Heart, false = stopped, true = beating"
            },
            "functionSelector": "02fb0c5e",
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "1128:6:110",
            "scope": 47232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 46840,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1116:4:110",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46844,
            "nodeType": "VariableDeclaration",
            "src": "1202:23:110",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46842,
              "nodeType": "StructuredDocumentation",
              "src": "1141:56:110",
              "text": "@notice Timestamp of the last beat (UTC, in seconds)"
            },
            "functionSelector": "d3a7b7d3",
            "mutability": "mutable",
            "name": "lastBeat",
            "nameLocation": "1217:8:110",
            "scope": 47232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1202:7:110",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46847,
            "nodeType": "VariableDeclaration",
            "src": "1304:21:110",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46845,
              "nodeType": "StructuredDocumentation",
              "src": "1232:67:110",
              "text": "@notice Reward for beating the Heart (in reward token decimals)"
            },
            "functionSelector": "228cb733",
            "mutability": "mutable",
            "name": "reward",
            "nameLocation": "1319:6:110",
            "scope": 47232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46846,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1304:7:110",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46851,
            "nodeType": "VariableDeclaration",
            "src": "1411:24:110",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46848,
              "nodeType": "StructuredDocumentation",
              "src": "1332:74:110",
              "text": "@notice Reward token address that users are sent for beating the Heart"
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1424:11:110",
            "scope": 47232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$25731",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 46850,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46849,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25731,
                "src": "1411:5:110"
              },
              "referencedDeclaration": 25731,
              "src": "1411:5:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25731",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46854,
            "nodeType": "VariableDeclaration",
            "src": "1457:22:110",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "PRICE",
            "nameLocation": "1474:5:110",
            "scope": 47232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PRICEv1_$39576",
              "typeString": "contract PRICEv1"
            },
            "typeName": {
              "id": 46853,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46852,
                "name": "PRICEv1",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39576,
                "src": "1457:7:110"
              },
              "referencedDeclaration": 39576,
              "src": "1457:7:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                "typeString": "contract PRICEv1"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46857,
            "nodeType": "VariableDeclaration",
            "src": "1502:25:110",
            "nodes": [],
            "constant": false,
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1519:8:110",
            "scope": 47232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOperator_$52282",
              "typeString": "contract IOperator"
            },
            "typeName": {
              "id": 46856,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46855,
                "name": "IOperator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52282,
                "src": "1502:9:110"
              },
              "referencedDeclaration": 52282,
              "src": "1502:9:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOperator_$52282",
                "typeString": "contract IOperator"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46896,
            "nodeType": "FunctionDefinition",
            "src": "1838:299:110",
            "nodes": [],
            "body": {
              "id": 46895,
              "nodeType": "Block",
              "src": "1978:159:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46874,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46857,
                      "src": "1988:8:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52282",
                        "typeString": "contract IOperator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46875,
                      "name": "operator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46863,
                      "src": "1999:9:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52282",
                        "typeString": "contract IOperator"
                      }
                    },
                    "src": "1988:20:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOperator_$52282",
                      "typeString": "contract IOperator"
                    }
                  },
                  "id": 46877,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:20:110"
                },
                {
                  "expression": {
                    "id": 46880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46878,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46841,
                      "src": "2019:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 46879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2028:4:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2019:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46881,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:13:110"
                },
                {
                  "expression": {
                    "id": 46885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46882,
                      "name": "lastBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46844,
                      "src": "2042:8:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46883,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2053:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 46884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2053:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2042:26:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46886,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:26:110"
                },
                {
                  "expression": {
                    "id": 46889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46887,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46851,
                      "src": "2078:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46888,
                      "name": "rewardToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46866,
                      "src": "2092:12:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2078:26:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 46890,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:26:110"
                },
                {
                  "expression": {
                    "id": 46893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46891,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46847,
                      "src": "2114:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46892,
                      "name": "reward_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46868,
                      "src": "2123:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2114:16:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46894,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:16:110"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46871,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46860,
                    "src": "1969:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 46872,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46870,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28659,
                  "src": "1962:6:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "1962:15:110"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46860,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "1866:7:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46896,
                  "src": "1859:14:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$29497",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 46859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46858,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29497,
                      "src": "1859:6:110"
                    },
                    "referencedDeclaration": 29497,
                    "src": "1859:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46863,
                  "mutability": "mutable",
                  "name": "operator_",
                  "nameLocation": "1893:9:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46896,
                  "src": "1883:19:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOperator_$52282",
                    "typeString": "contract IOperator"
                  },
                  "typeName": {
                    "id": 46862,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46861,
                      "name": "IOperator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52282,
                      "src": "1883:9:110"
                    },
                    "referencedDeclaration": 52282,
                    "src": "1883:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOperator_$52282",
                      "typeString": "contract IOperator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46866,
                  "mutability": "mutable",
                  "name": "rewardToken_",
                  "nameLocation": "1918:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46896,
                  "src": "1912:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 46865,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46864,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "1912:5:110"
                    },
                    "referencedDeclaration": 25731,
                    "src": "1912:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46868,
                  "mutability": "mutable",
                  "name": "reward_",
                  "nameLocation": "1948:7:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46896,
                  "src": "1940:15:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1940:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:112:110"
            },
            "returnParameters": {
              "id": 46873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1978:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46951,
            "nodeType": "FunctionDefinition",
            "src": "2170:352:110",
            "nodes": [],
            "body": {
              "id": 46950,
              "nodeType": "Block",
              "src": "2261:261:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46905,
                      "name": "dependencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46903,
                      "src": "2271:12:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 46910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2300:1:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 46909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2286:13:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (Keycode[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 46907,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 46906,
                              "name": "Keycode",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28362,
                              "src": "2290:7:110"
                            },
                            "referencedDeclaration": 28362,
                            "src": "2290:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                              "typeString": "Keycode"
                            }
                          },
                          "id": 46908,
                          "nodeType": "ArrayTypeName",
                          "src": "2290:9:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_storage_ptr",
                            "typeString": "Keycode[]"
                          }
                        }
                      },
                      "id": 46911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2286:16:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "src": "2271:31:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                      "typeString": "Keycode[] memory"
                    }
                  },
                  "id": 46913,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:31:110"
                },
                {
                  "expression": {
                    "id": 46920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46914,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46903,
                        "src": "2312:12:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 46916,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 46915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2325:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2312:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5052494345",
                          "id": 46918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2340:7:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          },
                          "value": "PRICE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          }
                        ],
                        "id": 46917,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28385,
                        "src": "2330:9:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 46919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2330:18:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "2312:36:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 46921,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:36:110"
                },
                {
                  "expression": {
                    "id": 46928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46922,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46903,
                        "src": "2358:12:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 46924,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 46923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2371:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2358:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "524f4c4553",
                          "id": 46926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2386:7:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          },
                          "value": "ROLES"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          }
                        ],
                        "id": 46925,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28385,
                        "src": "2376:9:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 46927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2376:18:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "2358:36:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 46929,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:36:110"
                },
                {
                  "expression": {
                    "id": 46938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46930,
                      "name": "PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46854,
                      "src": "2405:5:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39576",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 46933,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46903,
                                "src": "2438:12:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 46935,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 46934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2451:1:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2438:15:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 46932,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28640,
                            "src": "2421:16:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28362_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 46936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2421:33:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46931,
                        "name": "PRICEv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39576,
                        "src": "2413:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PRICEv1_$39576_$",
                          "typeString": "type(contract PRICEv1)"
                        }
                      },
                      "id": 46937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2413:42:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39576",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "src": "2405:50:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PRICEv1_$39576",
                      "typeString": "contract PRICEv1"
                    }
                  },
                  "id": 46939,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:50:110"
                },
                {
                  "expression": {
                    "id": 46948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46940,
                      "name": "ROLES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40584,
                      "src": "2465:5:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40870",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 46943,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46903,
                                "src": "2498:12:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 46945,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 46944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2511:1:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2498:15:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 46942,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28640,
                            "src": "2481:16:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28362_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 46946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2481:33:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46941,
                        "name": "ROLESv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40870,
                        "src": "2473:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                          "typeString": "type(contract ROLESv1)"
                        }
                      },
                      "id": 46947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2473:42:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40870",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "src": "2465:50:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ROLESv1_$40870",
                      "typeString": "contract ROLESv1"
                    }
                  },
                  "id": 46949,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:50:110"
                }
              ]
            },
            "baseFunctions": [
              28649
            ],
            "documentation": {
              "id": 46897,
              "nodeType": "StructuredDocumentation",
              "src": "2143:22:110",
              "text": "@inheritdoc Policy"
            },
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "2179:21:110",
            "overrides": {
              "id": 46899,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2212:8:110"
            },
            "parameters": {
              "id": 46898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2200:2:110"
            },
            "returnParameters": {
              "id": 46904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46903,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "2247:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46951,
                  "src": "2230:29:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46901,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 46900,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28362,
                        "src": "2230:7:110"
                      },
                      "referencedDeclaration": 28362,
                      "src": "2230:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 46902,
                    "nodeType": "ArrayTypeName",
                    "src": "2230:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2229:31:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46983,
            "nodeType": "FunctionDefinition",
            "src": "2555:274:110",
            "nodes": [],
            "body": {
              "id": 46982,
              "nodeType": "Block",
              "src": "2687:142:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46960,
                      "name": "permissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46958,
                      "src": "2697:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 46965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2729:1:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 46964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2711:17:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Permissions memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 46962,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 46961,
                              "name": "Permissions",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28360,
                              "src": "2715:11:110"
                            },
                            "referencedDeclaration": 28360,
                            "src": "2715:11:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Permissions_$28360_storage_ptr",
                              "typeString": "struct Permissions"
                            }
                          },
                          "id": 46963,
                          "nodeType": "ArrayTypeName",
                          "src": "2715:13:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_storage_$dyn_storage_ptr",
                            "typeString": "struct Permissions[]"
                          }
                        }
                      },
                      "id": 46966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2711:20:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "src": "2697:34:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Permissions memory[] memory"
                    }
                  },
                  "id": 46968,
                  "nodeType": "ExpressionStatement",
                  "src": "2697:34:110"
                },
                {
                  "expression": {
                    "id": 46980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46969,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46958,
                        "src": "2741:11:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 46971,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 46970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2753:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2741:14:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46973,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46854,
                              "src": "2770:5:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 46974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "KEYCODE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28560,
                            "src": "2770:13:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                              "typeString": "function () pure external returns (Keycode)"
                            }
                          },
                          "id": 46975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2770:15:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 46976,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46854,
                              "src": "2787:5:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 46977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateMovingAverage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39516,
                            "src": "2787:25:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 46978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "2787:34:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 46972,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28360,
                        "src": "2758:11:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28360_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 46979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2758:64:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "2741:81:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 46981,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:81:110"
                }
              ]
            },
            "baseFunctions": [
              28658
            ],
            "documentation": {
              "id": 46952,
              "nodeType": "StructuredDocumentation",
              "src": "2528:22:110",
              "text": "@inheritdoc Policy"
            },
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "2564:18:110",
            "overrides": {
              "id": 46954,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2623:8:110"
            },
            "parameters": {
              "id": 46953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2582:2:110"
            },
            "returnParameters": {
              "id": 46959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46958,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "2670:11:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46983,
                  "src": "2649:32:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46956,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 46955,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28360,
                        "src": "2649:11:110"
                      },
                      "referencedDeclaration": 28360,
                      "src": "2649:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 46957,
                    "nodeType": "ArrayTypeName",
                    "src": "2649:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2648:34:110"
            },
            "scope": 47232,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47042,
            "nodeType": "FunctionDefinition",
            "src": "3166:697:110",
            "nodes": [],
            "body": {
              "id": 47041,
              "nodeType": "Block",
              "src": "3204:659:110",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 46990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3218:7:110",
                    "subExpression": {
                      "id": 46989,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46841,
                      "src": "3219:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46994,
                  "nodeType": "IfStatement",
                  "src": "3214:39:110",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46991,
                        "name": "Heart_BeatStopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52006,
                        "src": "3234:17:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3234:19:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46993,
                    "nodeType": "RevertStatement",
                    "src": "3227:26:110"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46995,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3267:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 46996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3267:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 46997,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46844,
                        "src": "3285:8:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 46998,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47231,
                          "src": "3296:9:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 46999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3296:11:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3285:22:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3267:40:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47005,
                  "nodeType": "IfStatement",
                  "src": "3263:71:110",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47002,
                        "name": "Heart_OutOfCycle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52004,
                        "src": "3316:16:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3316:18:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47004,
                    "nodeType": "RevertStatement",
                    "src": "3309:25:110"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47006,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46854,
                        "src": "3402:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39576",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 47008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateMovingAverage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "3402:25:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3402:27:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47010,
                  "nodeType": "ExpressionStatement",
                  "src": "3402:27:110"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47011,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46857,
                        "src": "3500:8:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOperator_$52282",
                          "typeString": "contract IOperator"
                        }
                      },
                      "id": 47013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52155,
                      "src": "3500:16:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:18:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47015,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:18:110"
                },
                {
                  "expression": {
                    "id": 47029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47016,
                      "name": "lastBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46844,
                      "src": "3677:8:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 47017,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3688:5:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 47018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3688:15:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 47026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 47022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 47019,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3708:5:110",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 47020,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3708:15:110",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 47021,
                                    "name": "lastBeat",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46844,
                                    "src": "3726:8:110",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3708:26:110",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 47023,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3707:28:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 47024,
                                "name": "frequency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47231,
                                "src": "3738:9:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 47025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3738:11:110",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3707:42:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 47027,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3706:44:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3688:62:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3677:73:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47030,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:73:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47032,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3808:3:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3808:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47031,
                      "name": "_issueReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47081,
                      "src": "3795:12:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:24:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47035,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:24:110"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47037,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3840:5:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 47038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3840:15:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47036,
                      "name": "Beat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51989,
                      "src": "3835:4:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 47039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3835:21:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47040,
                  "nodeType": "EmitStatement",
                  "src": "3830:26:110"
                }
              ]
            },
            "baseFunctions": [
              52014
            ],
            "documentation": {
              "id": 46984,
              "nodeType": "StructuredDocumentation",
              "src": "3139:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "7a259dba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46986,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "3191:12:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "3191:12:110"
              }
            ],
            "name": "beat",
            "nameLocation": "3175:4:110",
            "parameters": {
              "id": 46985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3179:2:110"
            },
            "returnParameters": {
              "id": 46988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3204:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47081,
            "nodeType": "FunctionDefinition",
            "src": "3869:282:110",
            "nodes": [],
            "body": {
              "id": 47080,
              "nodeType": "Block",
              "src": "3913:238:110",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47048,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3931:6:110",
                      "nodeType": "VariableDeclaration",
                      "scope": 47080,
                      "src": "3923:14:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47047,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3923:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47067,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47049,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46847,
                        "src": "3940:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47054,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3979:4:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 47053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3971:7:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47052,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3971:7:110",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3971:13:110",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47050,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46851,
                            "src": "3949:11:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25731",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 47051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "3949:21:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 47056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3949:36:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3940:45:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 47065,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46847,
                      "src": "4051:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 47066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3940:117:110",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 47062,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4030:4:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            ],
                            "id": 47061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4022:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47060,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4022:7:110",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4022:13:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 47058,
                          "name": "rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46851,
                          "src": "4000:11:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 47059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "4000:21:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 47064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4000:36:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:134:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47071,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47044,
                        "src": "4092:3:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47072,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47048,
                        "src": "4097:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47068,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46851,
                        "src": "4067:11:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 47070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38051,
                      "src": "4067:24:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 47073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:37:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47074,
                  "nodeType": "ExpressionStatement",
                  "src": "4067:37:110"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47076,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47044,
                        "src": "4132:3:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47077,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47048,
                        "src": "4137:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47075,
                      "name": "RewardIssued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51995,
                      "src": "4119:12:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4119:25:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47079,
                  "nodeType": "EmitStatement",
                  "src": "4114:30:110"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_issueReward",
            "nameLocation": "3878:12:110",
            "parameters": {
              "id": 47045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47044,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "3899:3:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 47081,
                  "src": "3891:11:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3891:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3890:13:110"
            },
            "returnParameters": {
              "id": 47046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3913:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47093,
            "nodeType": "FunctionDefinition",
            "src": "4461:88:110",
            "nodes": [],
            "body": {
              "id": 47092,
              "nodeType": "Block",
              "src": "4492:57:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47084,
                      "name": "lastBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46844,
                      "src": "4502:8:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 47085,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4513:5:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 47086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4513:15:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 47087,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47231,
                          "src": "4531:9:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 47088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4531:11:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4513:29:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4502:40:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47091,
                  "nodeType": "ExpressionStatement",
                  "src": "4502:40:110"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resetBeat",
            "nameLocation": "4470:10:110",
            "parameters": {
              "id": 47082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4480:2:110"
            },
            "returnParameters": {
              "id": 47083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4492:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47104,
            "nodeType": "FunctionDefinition",
            "src": "4582:83:110",
            "nodes": [],
            "body": {
              "id": 47103,
              "nodeType": "Block",
              "src": "4636:29:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47100,
                      "name": "_resetBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47093,
                      "src": "4646:10:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:12:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47102,
                  "nodeType": "ExpressionStatement",
                  "src": "4646:12:110"
                }
              ]
            },
            "baseFunctions": [
              52018
            ],
            "documentation": {
              "id": 47094,
              "nodeType": "StructuredDocumentation",
              "src": "4555:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "ef68b87d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4621:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47098,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47096,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "4612:8:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "4612:23:110"
              }
            ],
            "name": "resetBeat",
            "nameLocation": "4591:9:110",
            "parameters": {
              "id": 47095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4600:2:110"
            },
            "returnParameters": {
              "id": 47099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4636:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47119,
            "nodeType": "FunctionDefinition",
            "src": "4698:105:110",
            "nodes": [],
            "body": {
              "id": 47118,
              "nodeType": "Block",
              "src": "4751:52:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47111,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46841,
                      "src": "4761:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 47112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4770:4:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4761:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47114,
                  "nodeType": "ExpressionStatement",
                  "src": "4761:13:110"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47115,
                      "name": "_resetBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47093,
                      "src": "4784:10:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4784:12:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47117,
                  "nodeType": "ExpressionStatement",
                  "src": "4784:12:110"
                }
              ]
            },
            "baseFunctions": [
              52022
            ],
            "documentation": {
              "id": 47105,
              "nodeType": "StructuredDocumentation",
              "src": "4671:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "0f15f4c0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4736:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47109,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47107,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "4727:8:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "4727:23:110"
              }
            ],
            "name": "activate",
            "nameLocation": "4707:8:110",
            "parameters": {
              "id": 47106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4715:2:110"
            },
            "returnParameters": {
              "id": 47110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4751:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47131,
            "nodeType": "FunctionDefinition",
            "src": "4836:86:110",
            "nodes": [],
            "body": {
              "id": 47130,
              "nodeType": "Block",
              "src": "4891:31:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47126,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46841,
                      "src": "4901:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 47127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4910:5:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4901:14:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47129,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:14:110"
                }
              ]
            },
            "baseFunctions": [
              52026
            ],
            "documentation": {
              "id": 47120,
              "nodeType": "StructuredDocumentation",
              "src": "4809:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "51b42b00",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4876:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47122,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "4867:8:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "4867:23:110"
              }
            ],
            "name": "deactivate",
            "nameLocation": "4845:10:110",
            "parameters": {
              "id": 47121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4855:2:110"
            },
            "returnParameters": {
              "id": 47125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4891:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47147,
            "nodeType": "FunctionDefinition",
            "src": "4955:121:110",
            "nodes": [],
            "body": {
              "id": 47146,
              "nodeType": "Block",
              "src": "5028:48:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47140,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46857,
                      "src": "5038:8:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52282",
                        "typeString": "contract IOperator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47142,
                          "name": "operator_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47134,
                          "src": "5059:9:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47141,
                        "name": "IOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52282,
                        "src": "5049:9:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOperator_$52282_$",
                          "typeString": "type(contract IOperator)"
                        }
                      },
                      "id": 47143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5049:20:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52282",
                        "typeString": "contract IOperator"
                      }
                    },
                    "src": "5038:31:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOperator_$52282",
                      "typeString": "contract IOperator"
                    }
                  },
                  "id": 47145,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:31:110"
                }
              ]
            },
            "baseFunctions": [
              52032
            ],
            "documentation": {
              "id": 47132,
              "nodeType": "StructuredDocumentation",
              "src": "4928:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "b3ab15fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5013:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47136,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "5004:8:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "5004:23:110"
              }
            ],
            "name": "setOperator",
            "nameLocation": "4964:11:110",
            "parameters": {
              "id": 47135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47134,
                  "mutability": "mutable",
                  "name": "operator_",
                  "nameLocation": "4984:9:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 47147,
                  "src": "4976:17:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:19:110"
            },
            "returnParameters": {
              "id": 47139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47162,
            "nodeType": "ModifierDefinition",
            "src": "5082:218:110",
            "nodes": [],
            "body": {
              "id": 47161,
              "nodeType": "Block",
              "src": "5115:185:110",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 47149,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5211:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 47150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5211:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47151,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46844,
                        "src": "5230:8:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 47152,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47231,
                          "src": "5241:9:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 47153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5241:11:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5230:22:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5211:41:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47159,
                  "nodeType": "IfStatement",
                  "src": "5207:75:110",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47156,
                        "name": "Heart_BeatAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52010,
                        "src": "5261:19:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5261:21:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47158,
                    "nodeType": "RevertStatement",
                    "src": "5254:28:110"
                  }
                },
                {
                  "id": 47160,
                  "nodeType": "PlaceholderStatement",
                  "src": "5292:1:110"
                }
              ]
            },
            "name": "notWhileBeatAvailable",
            "nameLocation": "5091:21:110",
            "parameters": {
              "id": 47148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5112:2:110"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47190,
            "nodeType": "FunctionDefinition",
            "src": "5333:255:110",
            "nodes": [],
            "body": {
              "id": 47189,
              "nodeType": "Block",
              "src": "5480:108:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47176,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46851,
                      "src": "5490:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47177,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47166,
                      "src": "5504:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "5490:20:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 47179,
                  "nodeType": "ExpressionStatement",
                  "src": "5490:20:110"
                },
                {
                  "expression": {
                    "id": 47182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47180,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46847,
                      "src": "5520:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47181,
                      "name": "reward_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47168,
                      "src": "5529:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5520:16:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47183,
                  "nodeType": "ExpressionStatement",
                  "src": "5520:16:110"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47185,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47166,
                        "src": "5565:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 47186,
                        "name": "reward_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47168,
                        "src": "5573:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47184,
                      "name": "RewardUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52002,
                      "src": "5551:13:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256)"
                      }
                    },
                    "id": 47187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5551:30:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47188,
                  "nodeType": "EmitStatement",
                  "src": "5546:35:110"
                }
              ]
            },
            "baseFunctions": [
              52041
            ],
            "documentation": {
              "id": 47163,
              "nodeType": "StructuredDocumentation",
              "src": "5306:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "63392990",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5431:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47170,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "5422:8:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "5422:23:110"
              },
              {
                "id": 47174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47173,
                  "name": "notWhileBeatAvailable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47162,
                  "src": "5454:21:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "5454:21:110"
              }
            ],
            "name": "setRewardTokenAndAmount",
            "nameLocation": "5342:23:110",
            "parameters": {
              "id": 47169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47166,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "5372:6:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 47190,
                  "src": "5366:12:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 47165,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47164,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "5366:5:110"
                    },
                    "referencedDeclaration": 25731,
                    "src": "5366:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47168,
                  "mutability": "mutable",
                  "name": "reward_",
                  "nameLocation": "5388:7:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 47190,
                  "src": "5380:15:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5380:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5365:31:110"
            },
            "returnParameters": {
              "id": 47175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5480:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47217,
            "nodeType": "FunctionDefinition",
            "src": "5621:210:110",
            "nodes": [],
            "body": {
              "id": 47216,
              "nodeType": "Block",
              "src": "5750:81:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5780:3:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5780:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47211,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5817:4:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 47210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5809:7:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47209,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5809:7:110",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5809:13:110",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47207,
                            "name": "token_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47194,
                            "src": "5792:6:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25731",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 47208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "5792:16:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 47213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5792:31:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47202,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47194,
                        "src": "5760:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 47204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38051,
                      "src": "5760:19:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 47214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5760:64:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47215,
                  "nodeType": "ExpressionStatement",
                  "src": "5760:64:110"
                }
              ]
            },
            "baseFunctions": [
              52048
            ],
            "documentation": {
              "id": 47191,
              "nodeType": "StructuredDocumentation",
              "src": "5594:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "9ab7d7e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5701:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47198,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47196,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "5692:8:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "5692:23:110"
              },
              {
                "id": 47200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47199,
                  "name": "notWhileBeatAvailable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47162,
                  "src": "5724:21:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "5724:21:110"
              }
            ],
            "name": "withdrawUnspentRewards",
            "nameLocation": "5630:22:110",
            "parameters": {
              "id": 47195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47194,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "5659:6:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 47217,
                  "src": "5653:12:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 47193,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47192,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "5653:5:110"
                    },
                    "referencedDeclaration": 25731,
                    "src": "5653:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5652:14:110"
            },
            "returnParameters": {
              "id": 47201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5750:0:110"
            },
            "scope": 47232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47231,
            "nodeType": "FunctionDefinition",
            "src": "6168:112:110",
            "nodes": [],
            "body": {
              "id": 47230,
              "nodeType": "Block",
              "src": "6219:61:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 47225,
                            "name": "PRICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46854,
                            "src": "6244:5:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PRICEv1_$39576",
                              "typeString": "contract PRICEv1"
                            }
                          },
                          "id": 47226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "observationFrequency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39496,
                          "src": "6244:26:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint48_$",
                            "typeString": "function () view external returns (uint48)"
                          }
                        },
                        "id": 47227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6244:28:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 47224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6236:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 47223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6236:7:110",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 47228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6236:37:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 47222,
                  "id": 47229,
                  "nodeType": "Return",
                  "src": "6229:44:110"
                }
              ]
            },
            "baseFunctions": [
              52054
            ],
            "documentation": {
              "id": 47218,
              "nodeType": "StructuredDocumentation",
              "src": "6141:22:110",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "ead50da3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "frequency",
            "nameLocation": "6177:9:110",
            "parameters": {
              "id": 47219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6186:2:110"
            },
            "returnParameters": {
              "id": 47222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47231,
                  "src": "6210:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6210:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6209:9:110"
            },
            "scope": 47232,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46827,
              "name": "IHeart",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52055,
              "src": "919:6:110"
            },
            "id": 46828,
            "nodeType": "InheritanceSpecifier",
            "src": "919:6:110"
          },
          {
            "baseName": {
              "id": 46829,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28659,
              "src": "927:6:110"
            },
            "id": 46830,
            "nodeType": "InheritanceSpecifier",
            "src": "927:6:110"
          },
          {
            "baseName": {
              "id": 46831,
              "name": "RolesConsumer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40599,
              "src": "935:13:110"
            },
            "id": 46832,
            "nodeType": "InheritanceSpecifier",
            "src": "935:13:110"
          },
          {
            "baseName": {
              "id": 46833,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25876,
              "src": "950:15:110"
            },
            "id": 46834,
            "nodeType": "InheritanceSpecifier",
            "src": "950:15:110"
          }
        ],
        "canonicalName": "OlympusHeart",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46826,
          "nodeType": "StructuredDocumentation",
          "src": "552:342:110",
          "text": "@title  Olympus Heart\n @notice Olympus Heart (Policy) Contract\n @dev    The Olympus Heart contract provides keeper rewards to call the heart beat function which fuels\n         Olympus market operations. The Heart orchestrates state updates in the correct order to ensure\n         market operations use up to date information."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47232,
          25876,
          40599,
          28659,
          28512,
          52055
        ],
        "name": "OlympusHeart",
        "nameLocation": "903:12:110",
        "scope": 47233,
        "usedErrors": [
          28465,
          28585,
          52004,
          52006,
          52008,
          52010
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 110
}