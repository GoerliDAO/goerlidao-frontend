{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "kernel_",
          "type": "address"
        },
        {
          "internalType": "contract IOperator",
          "name": "operator_",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "rewardToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "reward_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Heart_BeatAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Heart_BeatStopped",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Heart_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Heart_OutOfCycle",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Keycode",
          "name": "keycode_",
          "type": "bytes5"
        }
      ],
      "name": "Policy_ModuleDoesNotExist",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        }
      ],
      "name": "Beat",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount_",
          "type": "uint256"
        }
      ],
      "name": "RewardIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount_",
          "type": "uint256"
        }
      ],
      "name": "RewardUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ROLES",
      "outputs": [
        {
          "internalType": "contract ROLESv1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "configureDependencies",
      "outputs": [
        {
          "internalType": "Keycode[]",
          "name": "dependencies",
          "type": "bytes5[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frequency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastBeat",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "contract IOperator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestPermissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Keycode",
              "name": "keycode",
              "type": "bytes5"
            },
            {
              "internalType": "bytes4",
              "name": "funcSelector",
              "type": "bytes4"
            }
          ],
          "internalType": "struct Permissions[]",
          "name": "permissions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetBeat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator_",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "reward_",
          "type": "uint256"
        }
      ],
      "name": "setRewardTokenAndAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "withdrawUnspentRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "894:5388:111:-:0;;;451:1:14;426:26;;1838:299:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4341:6:55;:16;;-1:-1:-1;;;;;;4341:16:55;;;-1:-1:-1;;;;;4341:16:55;;;;;;;1988:8:111::1;:20:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2019:6:::1;:13:::0;;-1:-1:-1;;2019:13:111::1;-1:-1:-1::0;2019:13:111::1;::::0;;2053:15:::1;2042:8;:26:::0;2078:11:::1;:26:::0;;;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;2114:16:111;894:5388;;14:139:184;-1:-1:-1;;;;;97:31:184;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:655::-;305:6;313;321;329;382:3;370:9;361:7;357:23;353:33;350:53;;;399:1;396;389:12;350:53;431:9;425:16;450:39;483:5;450:39;:::i;:::-;558:2;543:18;;537:25;508:5;;-1:-1:-1;571:41:184;537:25;571:41;:::i;:::-;683:2;668:18;;662:25;631:7;;-1:-1:-1;696:41:184;662:25;696:41;:::i;:::-;803:2;788:18;;;;782:25;158:655;;;;-1:-1:-1;;;158:655:184:o;:::-;894:5388:111;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "894:5388:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:18;;;;;;;;;;;;179:14:184;;172:22;154:41;;142:2;127:18;1116::111;;;;;;;;4698:105;;;:::i;:::-;;1304:21;;;;;;;;;352:25:184;;;340:2;325:18;1304:21:111;206:177:184;6691:100:55;;;:::i;4652:97::-;;;;;;:::i;:::-;;:::i;4836:86:111:-;;;:::i;1502:25::-;;;;;-1:-1:-1;;;;;1502:25:111;;;;;;;;;;:::i;2555:274::-;;;:::i;:::-;;;;;;;:::i;5333:255::-;;;;;;:::i;:::-;;:::i;3166:697::-;;;:::i;332:20:99:-;;;;;-1:-1:-1;;;;;332:20:99;;;2170:352:111;;;:::i;:::-;;;;;;;:::i;5621:210::-;;;;;;:::i;:::-;;:::i;4955:121::-;;;;;;:::i;:::-;;:::i;1202:23::-;;;;;;4276:20:55;;;;;-1:-1:-1;;;;;4276:20:55;;;6168:112:111;;;:::i;4582:83::-;;;:::i;1411:24::-;;;;;-1:-1:-1;;;;;1411:24:111;;;4698:105;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4761:6:111::1;:13:::0;;-1:-1:-1;;4761:13:111::1;4770:4;4761:13;::::0;;-1:-1:-1;4784:12:111::1;::::0;-1:-1:-1;4784:10:111::1;:12::i;:::-;4698:105:::0;:::o;6691:100:55:-;6734:4;6757:6;;:27;;-1:-1:-1;;;6757:27:55;;-1:-1:-1;;;;;6757:6:55;;;;:21;;:27;;6779:4;;6757:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6750:34;;6691:100;:::o;4652:97::-;4504:6;;-1:-1:-1;;;;;4504:6:55;4482:10;:29;4478:78;;4545:10;4520:36;;-1:-1:-1;;;4520:36:55;;;;;;;;:::i;:::-;;;;;;;;4478:78;4723:6:::1;:19:::0;;-1:-1:-1;;;;;;4723:19:55::1;-1:-1:-1::0;;;;;4723:19:55;;;::::1;::::0;;;::::1;::::0;;4652:97::o;4836:86:111:-;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4901:6:111::1;:14:::0;;-1:-1:-1;;4901:14:111::1;::::0;;-1:-1:-1;;;4836:86:111:o;2555:274::-;2711:20;;;2729:1;2711:20;;;;;;;;;2649:32;;2711:20;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2711:20:111;;;;;;;;;;;;-1:-1:-1;;2758:64:111;;;;;;;;;2770:5;;-1:-1:-1;;;2770:15:111;;;;;2697:34;;-1:-1:-1;2758:64:111;;;-1:-1:-1;;;;;2770:5:111;;:13;;:15;;;;;;;;;;;;:5;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2758:64:111;;;-1:-1:-1;;;2758:64:111;;;;;2741:14;;:11;;-1:-1:-1;;2741:14:111;;;;:::i;:::-;;;;;;:81;;;;2555:274;:::o;5333:255::-;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5241:11:111::1;:9;:11::i;:::-;5230:8;;:22;;;;:::i;:::-;5211:15;:41;5207:75;;5261:21;;-1:-1:-1::0;;;5261:21:111::1;;;;;;;;;;;5207:75;5490:11:::2;:20:::0;;-1:-1:-1;;;;;;5490:20:111::2;-1:-1:-1::0;;;;;5490:20:111;::::2;;::::0;;5520:6:::2;:16:::0;;;5551:30:::2;::::0;::::2;::::0;::::2;::::0;5490:20;;5520:16;;5551:30:::2;:::i;:::-;;;;;;;;5333:255:::0;;;:::o;3166:697::-;509:6:14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;6483:2:184;501:34:14;;;6465:21:184;6522:2;6502:18;;;6495:30;-1:-1:-1;;;6541:18:184;;;6534:40;6591:18;;501:34:14;6281:334:184;501:34:14;555:1;546:10;;3219:6:111::1;::::0;::::1;;3214:39;;3234:19;;-1:-1:-1::0;;;3234:19:111::1;;;;;;;;;;;3214:39;3296:11;:9;:11::i;:::-;3285:8;;:22;;;;:::i;:::-;3267:15;:40;3263:71;;;3316:18;;-1:-1:-1::0;;;3316:18:111::1;;;;;;;;;;;3263:71;3402:5;;;;;;;;;-1:-1:-1::0;;;;;3402:5:111::1;-1:-1:-1::0;;;;;3402:25:111::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3500:8;;;;;;;;;-1:-1:-1::0;;;;;3500:8:111::1;-1:-1:-1::0;;;;;3500:16:111::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3738:11;:9;:11::i;:::-;3726:8;::::0;3708:26:::1;::::0;:15:::1;:26;:::i;:::-;3707:42;;;;:::i;:::-;3688:62;::::0;:15:::1;:62;:::i;:::-;3677:8;:73:::0;3795:24:::1;3808:10;3795:12;:24::i;:::-;3835:21;::::0;3840:15:::1;352:25:184::0;;3835:21:111::1;::::0;340:2:184;325:18;3835:21:111::1;;;;;;;588:1:14::0;579:6;:10;3166:697:111:o;2170:352::-;2286:16;;;2300:1;2286:16;;;2230:29;2286:16;;;;;2230:29;2286:16;;;;;;;;;;-1:-1:-1;;2271:31:111;-1:-1:-1;;;;2312:12:111;2325:1;2312:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2312:36:111;;;:15;;;;;;;;;;;:36;2376:18;-1:-1:-1;;;3124:8:55;3039:97;2376:18:111;2358:12;2371:1;2358:15;;;;;;;;:::i;:::-;;;;;;:36;-1:-1:-1;;;;;2358:36:111;;;;-1:-1:-1;;;;;2358:36:111;;;;;;2421:33;2438:12;2451:1;2438:15;;;;;;;;:::i;:::-;;;;;;;2421:16;:33::i;:::-;2405:5;;:50;;;;;-1:-1:-1;;;;;2405:50:111;;;;;-1:-1:-1;;;;;2405:50:111;;;;;;2481:33;2498:12;2511:1;2498:15;;;;;;;;:::i;2481:33::-;2465:5;:50;;-1:-1:-1;;;;;;2465:50:111;-1:-1:-1;;;;;2465:50:111;;;;;;;;;;2170:352;:::o;5621:210::-;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5241:11:111::1;:9;:11::i;:::-;5230:8;;:22;;;;:::i;:::-;5211:15;:41;5207:75;;5261:21;;-1:-1:-1::0;;;5261:21:111::1;;;;;;;;;;;5207:75;5760:64:::2;5780:10;5792:6;-1:-1:-1::0;;;;;5792:16:111::2;;5817:4;5792:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5760:19:111;::::2;::::0;:64;:19:::2;:64::i;:::-;5621:210:::0;;:::o;4955:121::-;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5038:8:111::1;:31:::0;;-1:-1:-1;;;;;;5038:31:111::1;-1:-1:-1::0;;;;;5038:31:111;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;4955:121:111:o;6168:112::-;6244:5;;:28;;;-1:-1:-1;;;6244:28:111;;;;6210:7;;-1:-1:-1;;;;;6244:5:111;;:26;;:28;;;;;;;;;;;;;;:5;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6236:37;;6229:44;;6168:112;:::o;4582:83::-;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4646:12:111::1;4461:88:::0;4531:11;:9;:11::i;:::-;4513:29;;:15;:29;:::i;:::-;4502:8;:40;4461:88::o;3869:282::-;3949:11;;:36;;-1:-1:-1;;;3949:36:111;;3923:14;;-1:-1:-1;;;;;3949:11:111;;:21;;:36;;3979:4;;3949:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3940:6;;:45;:117;;4051:6;;3940:117;;;4000:11;;:36;;-1:-1:-1;;;4000:36:111;;-1:-1:-1;;;;;4000:11:111;;;;:21;;:36;;4030:4;;4000:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4067:11;;3923:134;;-1:-1:-1;4067:37:111;;-1:-1:-1;;;;;4067:11:111;4092:3;3923:134;4067:24;:37::i;:::-;4119:25;4132:3;4137:6;4119:25;;;;;;;:::i;:::-;;;;;;;;3913:238;3869:282;:::o;6867:286:55:-;6934:7;6988:6;;:36;;-1:-1:-1;;;6988:36:55;;6934:7;;-1:-1:-1;;;;;6988:6:55;;:26;;:36;;7015:8;;6988:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6953:72;-1:-1:-1;;;;;;7039:30:55;;7035:78;;7104:8;7078:35;;-1:-1:-1;;;7078:35:55;;;;;;;;:::i;7035:78::-;7130:16;6867:286;-1:-1:-1;;6867:286:55:o;784:353:90:-;897:12;911:17;940:5;-1:-1:-1;;;;;932:19:90;988:23;;;1013:2;1017:6;965:59;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;965:59:90;;;;;;;;;;;;;;-1:-1:-1;;;;;965:59:90;-1:-1:-1;;;;;;965:59:90;;;;;;;;;;932:102;;;;965:59;932:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:138;;;;1053:7;:57;;;;-1:-1:-1;1065:11:90;;:16;;:44;;;1096:4;1085:24;;;;;;;;;;;;:::i;:::-;1045:85;;;;-1:-1:-1;;;1045:85:90;;8873:2:184;1045:85:90;;;8855:21:184;8912:2;8892:18;;;8885:30;-1:-1:-1;;;8931:18:184;;;8924:45;8986:18;;1045:85:90;8671:339:184;1045:85:90;886:251;;784:353;;;:::o;388:139:184:-;-1:-1:-1;;;;;471:31:184;;461:42;;451:70;;517:1;514;507:12;532:271;607:6;660:2;648:9;639:7;635:23;631:32;628:52;;;676:1;673;666:12;628:52;715:9;702:23;734:39;767:5;734:39;:::i;:::-;792:5;532:271;-1:-1:-1;;;532:271:184:o;808:222::-;-1:-1:-1;;;;;991:32:184;;;;973:51;;961:2;946:18;;808:222::o;1035:854::-;1266:2;1318:21;;;1388:13;;1291:18;;;1410:22;;;1237:4;;1266:2;1451;;1469:18;;;;1510:15;;;1237:4;1553:310;1567:6;1564:1;1561:13;1553:310;;;1626:13;;1668:9;;-1:-1:-1;;;;;;1664:38:184;1652:51;;1747:11;;1741:18;-1:-1:-1;;;;;;1737:45:184;1723:12;;;1716:67;1803:12;;;;1838:15;;;;1589:1;1582:9;1553:310;;;-1:-1:-1;1880:3:184;;1035:854;-1:-1:-1;;;;;;;1035:854:184:o;1894:338::-;1977:6;1985;2038:2;2026:9;2017:7;2013:23;2009:32;2006:52;;;2054:1;2051;2044:12;2006:52;2093:9;2080:23;2112:39;2145:5;2112:39;:::i;:::-;2170:5;2222:2;2207:18;;;;2194:32;;-1:-1:-1;;;1894:338:184:o;2462:689::-;2661:2;2713:21;;;2783:13;;2686:18;;;2805:22;;;2632:4;;2661:2;2884:15;;;;2858:2;2843:18;;;2632:4;2927:198;2941:6;2938:1;2935:13;2927:198;;;3006:13;;-1:-1:-1;;;;;;3002:42:184;2990:55;;3100:15;;;;3065:12;;;;2963:1;2956:9;2927:198;;;-1:-1:-1;3142:3:184;;2462:689;-1:-1:-1;;;;;;2462:689:184:o;4138:274::-;4312:25;;;-1:-1:-1;;;;;4373:32:184;4368:2;4353:18;;4346:60;4300:2;4285:18;;4138:274::o;4641:277::-;4708:6;4761:2;4749:9;4740:7;4736:23;4732:32;4729:52;;;4777:1;4774;4767:12;4729:52;4809:9;4803:16;4862:5;4855:13;4848:21;4841:5;4838:32;4828:60;;4884:1;4881;4874:12;5263:322;5362:6;5415:2;5403:9;5394:7;5390:23;5386:32;5383:52;;;5431:1;5428;5421:12;5383:52;5457:16;;-1:-1:-1;;;;;;5502:34:184;;5492:45;;5482:73;;5551:1;5548;5541:12;5590:127;5651:10;5646:3;5642:20;5639:1;5632:31;5682:4;5679:1;5672:15;5706:4;5703:1;5696:15;5722:127;5783:10;5778:3;5774:20;5771:1;5764:31;5814:4;5811:1;5804:15;5838:4;5835:1;5828:15;5854:128;5894:3;5925:1;5921:6;5918:1;5915:13;5912:39;;;5931:18;;:::i;:::-;-1:-1:-1;5967:9:184;;5854:128::o;5987:289::-;-1:-1:-1;;;;;6194:32:184;;;;6176:51;;6258:2;6243:18;;6236:34;6164:2;6149:18;;5987:289::o;6620:125::-;6660:4;6688:1;6685;6682:8;6679:34;;;6693:18;;:::i;:::-;-1:-1:-1;6730:9:184;;6620:125::o;6750:209::-;6782:1;6808;6798:132;;6852:10;6847:3;6843:20;6840:1;6833:31;6887:4;6884:1;6877:15;6915:4;6912:1;6905:15;6798:132;-1:-1:-1;6944:9:184;;6750:209::o;6964:184::-;7034:6;7087:2;7075:9;7066:7;7062:23;7058:32;7055:52;;;7103:1;7100;7093:12;7055:52;-1:-1:-1;7126:16:184;;6964:184;-1:-1:-1;6964:184:184:o;7153:284::-;7222:6;7275:2;7263:9;7254:7;7250:23;7246:32;7243:52;;;7291:1;7288;7281:12;7243:52;7323:9;7317:16;7373:14;7366:5;7362:26;7355:5;7352:37;7342:65;;7403:1;7400;7393:12;7721:234;-1:-1:-1;;;;;;7913:35:184;;;;7895:54;;7883:2;7868:18;;7721:234::o;7960:275::-;8046:6;8099:2;8087:9;8078:7;8074:23;8070:32;8067:52;;;8115:1;8112;8105:12;8067:52;8147:9;8141:16;8166:39;8199:5;8166:39;:::i;8240:426::-;8369:3;8407:6;8401:13;8432:1;8442:129;8456:6;8453:1;8450:13;8442:129;;;8554:4;8538:14;;;8534:25;;8528:32;8515:11;;;8508:53;8471:12;8442:129;;;8589:6;8586:1;8583:13;8580:48;;;8624:1;8615:6;8610:3;8606:16;8599:27;8580:48;-1:-1:-1;8644:16:184;;;;;8240:426;-1:-1:-1;;8240:426:184:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ROLES()": "923cb952",
    "activate()": "0f15f4c0",
    "active()": "02fb0c5e",
    "beat()": "7a259dba",
    "changeKernel(address)": "4657b36c",
    "configureDependencies()": "9459b875",
    "deactivate()": "51b42b00",
    "frequency()": "ead50da3",
    "isActive()": "22f3e2d4",
    "kernel()": "d4aae0c4",
    "lastBeat()": "d3a7b7d3",
    "operator()": "570ca735",
    "requestPermissions()": "5924be70",
    "resetBeat()": "ef68b87d",
    "reward()": "228cb733",
    "rewardToken()": "f7c618c1",
    "setOperator(address)": "b3ab15fb",
    "setRewardTokenAndAmount(address,uint256)": "63392990",
    "withdrawUnspentRewards(address)": "9ab7d7e7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"kernel_\",\"type\":\"address\"},{\"internalType\":\"contract IOperator\",\"name\":\"operator_\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"rewardToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Heart_BeatAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Heart_BeatStopped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Heart_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Heart_OutOfCycle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Keycode\",\"name\":\"keycode_\",\"type\":\"bytes5\"}],\"name\":\"Policy_ModuleDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"}],\"name\":\"Beat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount_\",\"type\":\"uint256\"}],\"name\":\"RewardIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount_\",\"type\":\"uint256\"}],\"name\":\"RewardUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ROLES\",\"outputs\":[{\"internalType\":\"contract ROLESv1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureDependencies\",\"outputs\":[{\"internalType\":\"Keycode[]\",\"name\":\"dependencies\",\"type\":\"bytes5[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBeat\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"contract IOperator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"Keycode\",\"name\":\"keycode\",\"type\":\"bytes5\"},{\"internalType\":\"bytes4\",\"name\":\"funcSelector\",\"type\":\"bytes4\"}],\"internalType\":\"struct Permissions[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetBeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward_\",\"type\":\"uint256\"}],\"name\":\"setRewardTokenAndAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"withdrawUnspentRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Olympus Heart contract provides keeper rewards to call the heart beat function which fuels         Olympus market operations. The Heart orchestrates state updates in the correct order to ensure         market operations use up to date information.\",\"kind\":\"dev\",\"methods\":{\"activate()\":{\"details\":\"This function is used to restart the heart after a pause\"},\"beat()\":{\"details\":\"Triggers price oracle update and market operations\"},\"configureDependencies()\":{\"returns\":{\"dependencies\":\"- Keycode array of module dependencies.\"}},\"deactivate()\":{\"details\":\"Emergency stop function for the heart\"},\"requestPermissions()\":{\"returns\":{\"permissions\":\"- Array of keycodes and function selectors for requested permissions.\"}},\"setOperator(address)\":{\"params\":{\"operator_\":\"The address of the new Operator contract\"}},\"setRewardTokenAndAmount(address,uint256)\":{\"params\":{\"reward_\":\"- New reward amount, in units of the reward token\",\"token_\":\"- New reward token address\"}}},\"title\":\"Olympus Heart\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activate()\":{\"notice\":\"Turns the heart on and resets the beatAccess restricted\"},\"active()\":{\"notice\":\"Status of the Heart, false = stopped, true = beating\"},\"beat()\":{\"notice\":\"Beats the heartOnly callable when enough time has passed since last beat (determined by frequency variable)This function is incentivized with a token reward (see rewardToken and reward variables).\"},\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"},\"configureDependencies()\":{\"notice\":\"Define module dependencies for this policy.\"},\"deactivate()\":{\"notice\":\"Turns the heart offAccess restricted\"},\"frequency()\":{\"notice\":\"Heart beat frequency, in seconds\"},\"isActive()\":{\"notice\":\"Easily accessible indicator for if a policy is activated or not.\"},\"lastBeat()\":{\"notice\":\"Timestamp of the last beat (UTC, in seconds)\"},\"requestPermissions()\":{\"notice\":\"Function called by kernel to set module function permissions.\"},\"resetBeat()\":{\"notice\":\"Unlocks the cycle if stuck on one side, eject functionAccess restricted\"},\"reward()\":{\"notice\":\"Reward for beating the Heart (in reward token decimals)\"},\"rewardToken()\":{\"notice\":\"Reward token address that users are sent for beating the Heart\"},\"setOperator(address)\":{\"notice\":\"Updates the Operator contract address that the Heart calls on a beatAccess restricted\"},\"setRewardTokenAndAmount(address,uint256)\":{\"notice\":\"Sets the reward token and amount for the beat functionAccess restricted\"},\"withdrawUnspentRewards(address)\":{\"notice\":\"Withdraws unspent balance of provided token to senderAccess restricted\"}},\"notice\":\"Olympus Heart (Policy) Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/policies/Heart.sol\":\"OlympusHeart\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":balancer-v2/=lib/balancer-v2/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/Heart.sol\":{\"keccak256\":\"0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a\",\"dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF\"]},\"src/policies/interfaces/IHeart.sol\":{\"keccak256\":\"0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab\",\"dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "kernel_",
              "type": "address"
            },
            {
              "internalType": "contract IOperator",
              "name": "operator_",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "rewardToken_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "reward_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_BeatAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_BeatStopped"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Heart_OutOfCycle"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "Keycode",
              "name": "keycode_",
              "type": "bytes5"
            }
          ],
          "type": "error",
          "name": "Policy_ModuleDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Beat",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to_",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardIssued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token_",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROLES",
          "outputs": [
            {
              "internalType": "contract ROLESv1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "active",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beat"
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureDependencies",
          "outputs": [
            {
              "internalType": "Keycode[]",
              "name": "dependencies",
              "type": "bytes5[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frequency",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastBeat",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operator",
          "outputs": [
            {
              "internalType": "contract IOperator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestPermissions",
          "outputs": [
            {
              "internalType": "struct Permissions[]",
              "name": "permissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "Keycode",
                  "name": "keycode",
                  "type": "bytes5"
                },
                {
                  "internalType": "bytes4",
                  "name": "funcSelector",
                  "type": "bytes4"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetBeat"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "reward_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardTokenAndAmount"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawUnspentRewards"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate()": {
            "details": "This function is used to restart the heart after a pause"
          },
          "beat()": {
            "details": "Triggers price oracle update and market operations"
          },
          "configureDependencies()": {
            "returns": {
              "dependencies": "- Keycode array of module dependencies."
            }
          },
          "deactivate()": {
            "details": "Emergency stop function for the heart"
          },
          "requestPermissions()": {
            "returns": {
              "permissions": "- Array of keycodes and function selectors for requested permissions."
            }
          },
          "setOperator(address)": {
            "params": {
              "operator_": "The address of the new Operator contract"
            }
          },
          "setRewardTokenAndAmount(address,uint256)": {
            "params": {
              "reward_": "- New reward amount, in units of the reward token",
              "token_": "- New reward token address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activate()": {
            "notice": "Turns the heart on and resets the beatAccess restricted"
          },
          "active()": {
            "notice": "Status of the Heart, false = stopped, true = beating"
          },
          "beat()": {
            "notice": "Beats the heartOnly callable when enough time has passed since last beat (determined by frequency variable)This function is incentivized with a token reward (see rewardToken and reward variables)."
          },
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          },
          "configureDependencies()": {
            "notice": "Define module dependencies for this policy."
          },
          "deactivate()": {
            "notice": "Turns the heart offAccess restricted"
          },
          "frequency()": {
            "notice": "Heart beat frequency, in seconds"
          },
          "isActive()": {
            "notice": "Easily accessible indicator for if a policy is activated or not."
          },
          "lastBeat()": {
            "notice": "Timestamp of the last beat (UTC, in seconds)"
          },
          "requestPermissions()": {
            "notice": "Function called by kernel to set module function permissions."
          },
          "resetBeat()": {
            "notice": "Unlocks the cycle if stuck on one side, eject functionAccess restricted"
          },
          "reward()": {
            "notice": "Reward for beating the Heart (in reward token decimals)"
          },
          "rewardToken()": {
            "notice": "Reward token address that users are sent for beating the Heart"
          },
          "setOperator(address)": {
            "notice": "Updates the Operator contract address that the Heart calls on a beatAccess restricted"
          },
          "setRewardTokenAndAmount(address,uint256)": {
            "notice": "Sets the reward token and amount for the beat functionAccess restricted"
          },
          "withdrawUnspentRewards(address)": {
            "notice": "Withdraws unspent balance of provided token to senderAccess restricted"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":balancer-v2/=lib/balancer-v2/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/policies/Heart.sol": "OlympusHeart"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Heart.sol": {
        "keccak256": "0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f",
        "urls": [
          "bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a",
          "dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IHeart.sol": {
        "keccak256": "0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a",
        "urls": [
          "bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab",
          "dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/policies/Heart.sol",
    "id": 47123,
    "exportedSymbols": {
      "Actions": [
        28076
      ],
      "ERC20": [
        25226
      ],
      "IHeart": [
        51945
      ],
      "IOperator": [
        52172
      ],
      "Instruction": [
        28082
      ],
      "InvalidKeycode": [
        28099
      ],
      "Kernel": [
        29225
      ],
      "KernelAdapter": [
        28240
      ],
      "Keycode": [
        28090
      ],
      "Module": [
        28305
      ],
      "OlympusHeart": [
        47122
      ],
      "PRICEv1": [
        39466
      ],
      "Permissions": [
        28088
      ],
      "Policy": [
        28387
      ],
      "ROLESv1": [
        40760
      ],
      "ReentrancyGuard": [
        25371
      ],
      "RolesConsumer": [
        40489
      ],
      "TargetNotAContract": [
        28094
      ],
      "TransferHelper": [
        37991
      ],
      "ensureContract": [
        28143
      ],
      "ensureValidKeycode": [
        28188
      ],
      "fromKeycode": [
        28127
      ],
      "toKeycode": [
        28113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:6246:111",
    "nodes": [
      {
        "id": 46698,
        "nodeType": "PragmaDirective",
        "src": "37:23:111",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 46700,
        "nodeType": "ImportDirective",
        "src": "62:66:111",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/ReentrancyGuard.sol",
        "file": "solmate/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 25372,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46699,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25371,
              "src": "70:15:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46702,
        "nodeType": "ImportDirective",
        "src": "129:47:111",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 25227,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46701,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25226,
              "src": "137:5:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46704,
        "nodeType": "ImportDirective",
        "src": "178:60:111",
        "nodes": [],
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 37992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46703,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37991,
              "src": "186:14:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46706,
        "nodeType": "ImportDirective",
        "src": "240:60:111",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IOperator.sol",
        "file": "policies/interfaces/IOperator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 52173,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46705,
              "name": "IOperator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52172,
              "src": "248:9:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46708,
        "nodeType": "ImportDirective",
        "src": "301:54:111",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IHeart.sol",
        "file": "policies/interfaces/IHeart.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 51946,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46707,
              "name": "IHeart",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51945,
              "src": "309:6:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46710,
        "nodeType": "ImportDirective",
        "src": "357:63:111",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 40682,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46709,
              "name": "RolesConsumer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40489,
              "src": "365:13:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46712,
        "nodeType": "ImportDirective",
        "src": "421:51:111",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 40761,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46711,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40760,
              "src": "429:7:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46714,
        "nodeType": "ImportDirective",
        "src": "473:51:111",
        "nodes": [],
        "absolutePath": "src/modules/PRICE/PRICE.v1.sol",
        "file": "modules/PRICE/PRICE.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 39467,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46713,
              "name": "PRICEv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39466,
              "src": "481:7:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46715,
        "nodeType": "ImportDirective",
        "src": "526:24:111",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47123,
        "sourceUnit": 29226,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47122,
        "nodeType": "ContractDefinition",
        "src": "894:5388:111",
        "nodes": [
          {
            "id": 46728,
            "nodeType": "UsingForDirective",
            "src": "972:31:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 46725,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37991,
              "src": "978:14:111"
            },
            "typeName": {
              "id": 46727,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46726,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25226,
                "src": "997:5:111"
              },
              "referencedDeclaration": 25226,
              "src": "997:5:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25226",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 46731,
            "nodeType": "VariableDeclaration",
            "src": "1116:18:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46729,
              "nodeType": "StructuredDocumentation",
              "src": "1047:64:111",
              "text": "@notice Status of the Heart, false = stopped, true = beating"
            },
            "functionSelector": "02fb0c5e",
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "1128:6:111",
            "scope": 47122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 46730,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1116:4:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46734,
            "nodeType": "VariableDeclaration",
            "src": "1202:23:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46732,
              "nodeType": "StructuredDocumentation",
              "src": "1141:56:111",
              "text": "@notice Timestamp of the last beat (UTC, in seconds)"
            },
            "functionSelector": "d3a7b7d3",
            "mutability": "mutable",
            "name": "lastBeat",
            "nameLocation": "1217:8:111",
            "scope": 47122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46733,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1202:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46737,
            "nodeType": "VariableDeclaration",
            "src": "1304:21:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46735,
              "nodeType": "StructuredDocumentation",
              "src": "1232:67:111",
              "text": "@notice Reward for beating the Heart (in reward token decimals)"
            },
            "functionSelector": "228cb733",
            "mutability": "mutable",
            "name": "reward",
            "nameLocation": "1319:6:111",
            "scope": 47122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46736,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1304:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46741,
            "nodeType": "VariableDeclaration",
            "src": "1411:24:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46738,
              "nodeType": "StructuredDocumentation",
              "src": "1332:74:111",
              "text": "@notice Reward token address that users are sent for beating the Heart"
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1424:11:111",
            "scope": 47122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$25226",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 46740,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46739,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25226,
                "src": "1411:5:111"
              },
              "referencedDeclaration": 25226,
              "src": "1411:5:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25226",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46744,
            "nodeType": "VariableDeclaration",
            "src": "1457:22:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "PRICE",
            "nameLocation": "1474:5:111",
            "scope": 47122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PRICEv1_$39466",
              "typeString": "contract PRICEv1"
            },
            "typeName": {
              "id": 46743,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46742,
                "name": "PRICEv1",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39466,
                "src": "1457:7:111"
              },
              "referencedDeclaration": 39466,
              "src": "1457:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                "typeString": "contract PRICEv1"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46747,
            "nodeType": "VariableDeclaration",
            "src": "1502:25:111",
            "nodes": [],
            "constant": false,
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1519:8:111",
            "scope": 47122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOperator_$52172",
              "typeString": "contract IOperator"
            },
            "typeName": {
              "id": 46746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46745,
                "name": "IOperator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52172,
                "src": "1502:9:111"
              },
              "referencedDeclaration": 52172,
              "src": "1502:9:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOperator_$52172",
                "typeString": "contract IOperator"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46786,
            "nodeType": "FunctionDefinition",
            "src": "1838:299:111",
            "nodes": [],
            "body": {
              "id": 46785,
              "nodeType": "Block",
              "src": "1978:159:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46764,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46747,
                      "src": "1988:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52172",
                        "typeString": "contract IOperator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46765,
                      "name": "operator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46753,
                      "src": "1999:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52172",
                        "typeString": "contract IOperator"
                      }
                    },
                    "src": "1988:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOperator_$52172",
                      "typeString": "contract IOperator"
                    }
                  },
                  "id": 46767,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:20:111"
                },
                {
                  "expression": {
                    "id": 46770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46768,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46731,
                      "src": "2019:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 46769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2028:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2019:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46771,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:13:111"
                },
                {
                  "expression": {
                    "id": 46775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46772,
                      "name": "lastBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46734,
                      "src": "2042:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46773,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2053:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 46774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2053:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2042:26:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46776,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:26:111"
                },
                {
                  "expression": {
                    "id": 46779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46777,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46741,
                      "src": "2078:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46778,
                      "name": "rewardToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46756,
                      "src": "2092:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2078:26:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 46780,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:26:111"
                },
                {
                  "expression": {
                    "id": 46783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46781,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46737,
                      "src": "2114:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46782,
                      "name": "reward_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46758,
                      "src": "2123:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2114:16:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46784,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:16:111"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46761,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46750,
                    "src": "1969:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29225",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 46762,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46760,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28387,
                  "src": "1962:6:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1962:15:111"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46750,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "1866:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 46786,
                  "src": "1859:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$29225",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 46749,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46748,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29225,
                      "src": "1859:6:111"
                    },
                    "referencedDeclaration": 29225,
                    "src": "1859:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29225",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46753,
                  "mutability": "mutable",
                  "name": "operator_",
                  "nameLocation": "1893:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 46786,
                  "src": "1883:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOperator_$52172",
                    "typeString": "contract IOperator"
                  },
                  "typeName": {
                    "id": 46752,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46751,
                      "name": "IOperator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52172,
                      "src": "1883:9:111"
                    },
                    "referencedDeclaration": 52172,
                    "src": "1883:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOperator_$52172",
                      "typeString": "contract IOperator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46756,
                  "mutability": "mutable",
                  "name": "rewardToken_",
                  "nameLocation": "1918:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 46786,
                  "src": "1912:18:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 46755,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46754,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "1912:5:111"
                    },
                    "referencedDeclaration": 25226,
                    "src": "1912:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46758,
                  "mutability": "mutable",
                  "name": "reward_",
                  "nameLocation": "1948:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 46786,
                  "src": "1940:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1940:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:112:111"
            },
            "returnParameters": {
              "id": 46763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1978:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46841,
            "nodeType": "FunctionDefinition",
            "src": "2170:352:111",
            "nodes": [],
            "body": {
              "id": 46840,
              "nodeType": "Block",
              "src": "2261:261:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46795,
                      "name": "dependencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46793,
                      "src": "2271:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 46800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2300:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 46799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2286:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (Keycode[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 46797,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 46796,
                              "name": "Keycode",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28090,
                              "src": "2290:7:111"
                            },
                            "referencedDeclaration": 28090,
                            "src": "2290:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                              "typeString": "Keycode"
                            }
                          },
                          "id": 46798,
                          "nodeType": "ArrayTypeName",
                          "src": "2290:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_storage_ptr",
                            "typeString": "Keycode[]"
                          }
                        }
                      },
                      "id": 46801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2286:16:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "src": "2271:31:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                      "typeString": "Keycode[] memory"
                    }
                  },
                  "id": 46803,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:31:111"
                },
                {
                  "expression": {
                    "id": 46810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46804,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46793,
                        "src": "2312:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 46806,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 46805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2325:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2312:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5052494345",
                          "id": 46808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2340:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          },
                          "value": "PRICE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          }
                        ],
                        "id": 46807,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28113,
                        "src": "2330:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28090_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 46809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2330:18:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "2312:36:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 46811,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:36:111"
                },
                {
                  "expression": {
                    "id": 46818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46812,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46793,
                        "src": "2358:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 46814,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 46813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2371:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2358:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "524f4c4553",
                          "id": 46816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2386:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          },
                          "value": "ROLES"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          }
                        ],
                        "id": 46815,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28113,
                        "src": "2376:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28090_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 46817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2376:18:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "2358:36:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 46819,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:36:111"
                },
                {
                  "expression": {
                    "id": 46828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46820,
                      "name": "PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46744,
                      "src": "2405:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39466",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 46823,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46793,
                                "src": "2438:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 46825,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 46824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2451:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2438:15:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 46822,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28368,
                            "src": "2421:16:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28090_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 46826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2421:33:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46821,
                        "name": "PRICEv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39466,
                        "src": "2413:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PRICEv1_$39466_$",
                          "typeString": "type(contract PRICEv1)"
                        }
                      },
                      "id": 46827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2413:42:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39466",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "src": "2405:50:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PRICEv1_$39466",
                      "typeString": "contract PRICEv1"
                    }
                  },
                  "id": 46829,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:50:111"
                },
                {
                  "expression": {
                    "id": 46838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46830,
                      "name": "ROLES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40474,
                      "src": "2465:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40760",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 46833,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46793,
                                "src": "2498:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 46835,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 46834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2511:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2498:15:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 46832,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28368,
                            "src": "2481:16:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28090_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 46836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2481:33:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46831,
                        "name": "ROLESv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40760,
                        "src": "2473:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40760_$",
                          "typeString": "type(contract ROLESv1)"
                        }
                      },
                      "id": 46837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2473:42:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40760",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "src": "2465:50:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ROLESv1_$40760",
                      "typeString": "contract ROLESv1"
                    }
                  },
                  "id": 46839,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:50:111"
                }
              ]
            },
            "baseFunctions": [
              28377
            ],
            "documentation": {
              "id": 46787,
              "nodeType": "StructuredDocumentation",
              "src": "2143:22:111",
              "text": "@inheritdoc Policy"
            },
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "2179:21:111",
            "overrides": {
              "id": 46789,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2212:8:111"
            },
            "parameters": {
              "id": 46788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2200:2:111"
            },
            "returnParameters": {
              "id": 46794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46793,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "2247:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 46841,
                  "src": "2230:29:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46791,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 46790,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28090,
                        "src": "2230:7:111"
                      },
                      "referencedDeclaration": 28090,
                      "src": "2230:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 46792,
                    "nodeType": "ArrayTypeName",
                    "src": "2230:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2229:31:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46873,
            "nodeType": "FunctionDefinition",
            "src": "2555:274:111",
            "nodes": [],
            "body": {
              "id": 46872,
              "nodeType": "Block",
              "src": "2687:142:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46850,
                      "name": "permissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46848,
                      "src": "2697:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 46855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2729:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 46854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2711:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Permissions memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 46852,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 46851,
                              "name": "Permissions",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28088,
                              "src": "2715:11:111"
                            },
                            "referencedDeclaration": 28088,
                            "src": "2715:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Permissions_$28088_storage_ptr",
                              "typeString": "struct Permissions"
                            }
                          },
                          "id": 46853,
                          "nodeType": "ArrayTypeName",
                          "src": "2715:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_storage_$dyn_storage_ptr",
                            "typeString": "struct Permissions[]"
                          }
                        }
                      },
                      "id": 46856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2711:20:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "src": "2697:34:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Permissions memory[] memory"
                    }
                  },
                  "id": 46858,
                  "nodeType": "ExpressionStatement",
                  "src": "2697:34:111"
                },
                {
                  "expression": {
                    "id": 46870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46859,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46848,
                        "src": "2741:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 46861,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 46860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2753:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2741:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46863,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46744,
                              "src": "2770:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 46864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "KEYCODE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28288,
                            "src": "2770:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_userDefinedValueType$_Keycode_$28090_$",
                              "typeString": "function () pure external returns (Keycode)"
                            }
                          },
                          "id": 46865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2770:15:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 46866,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46744,
                              "src": "2787:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 46867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateMovingAverage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39406,
                            "src": "2787:25:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 46868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "2787:34:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 46862,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28088,
                        "src": "2758:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28088_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 46869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2758:64:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "2741:81:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 46871,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:81:111"
                }
              ]
            },
            "baseFunctions": [
              28386
            ],
            "documentation": {
              "id": 46842,
              "nodeType": "StructuredDocumentation",
              "src": "2528:22:111",
              "text": "@inheritdoc Policy"
            },
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "2564:18:111",
            "overrides": {
              "id": 46844,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2623:8:111"
            },
            "parameters": {
              "id": 46843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2582:2:111"
            },
            "returnParameters": {
              "id": 46849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46848,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "2670:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 46873,
                  "src": "2649:32:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46846,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 46845,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28088,
                        "src": "2649:11:111"
                      },
                      "referencedDeclaration": 28088,
                      "src": "2649:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 46847,
                    "nodeType": "ArrayTypeName",
                    "src": "2649:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2648:34:111"
            },
            "scope": 47122,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46932,
            "nodeType": "FunctionDefinition",
            "src": "3166:697:111",
            "nodes": [],
            "body": {
              "id": 46931,
              "nodeType": "Block",
              "src": "3204:659:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 46880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3218:7:111",
                    "subExpression": {
                      "id": 46879,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46731,
                      "src": "3219:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46884,
                  "nodeType": "IfStatement",
                  "src": "3214:39:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46881,
                        "name": "Heart_BeatStopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51896,
                        "src": "3234:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3234:19:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46883,
                    "nodeType": "RevertStatement",
                    "src": "3227:26:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46885,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3267:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 46886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3267:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 46890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 46887,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46734,
                        "src": "3285:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 46888,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47121,
                          "src": "3296:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 46889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3296:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3285:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3267:40:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46895,
                  "nodeType": "IfStatement",
                  "src": "3263:71:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46892,
                        "name": "Heart_OutOfCycle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51894,
                        "src": "3316:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3316:18:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46894,
                    "nodeType": "RevertStatement",
                    "src": "3309:25:111"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46896,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46744,
                        "src": "3402:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39466",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 46898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateMovingAverage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39406,
                      "src": "3402:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3402:27:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46900,
                  "nodeType": "ExpressionStatement",
                  "src": "3402:27:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46901,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46747,
                        "src": "3500:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOperator_$52172",
                          "typeString": "contract IOperator"
                        }
                      },
                      "id": 46903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52045,
                      "src": "3500:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:18:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46905,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:18:111"
                },
                {
                  "expression": {
                    "id": 46919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46906,
                      "name": "lastBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46734,
                      "src": "3677:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 46918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 46907,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3688:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 46908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3688:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 46916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 46912,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 46909,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3708:5:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 46910,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3708:15:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 46911,
                                    "name": "lastBeat",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46734,
                                    "src": "3726:8:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3708:26:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 46913,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3707:28:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 46914,
                                "name": "frequency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47121,
                                "src": "3738:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 46915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3738:11:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3707:42:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46917,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3706:44:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3688:62:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3677:73:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46920,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:73:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46922,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3808:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3808:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46921,
                      "name": "_issueReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46971,
                      "src": "3795:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:24:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46925,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:24:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46927,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3840:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 46928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3840:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46926,
                      "name": "Beat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51879,
                      "src": "3835:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3835:21:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46930,
                  "nodeType": "EmitStatement",
                  "src": "3830:26:111"
                }
              ]
            },
            "baseFunctions": [
              51904
            ],
            "documentation": {
              "id": 46874,
              "nodeType": "StructuredDocumentation",
              "src": "3139:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "7a259dba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46876,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25370,
                  "src": "3191:12:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "3191:12:111"
              }
            ],
            "name": "beat",
            "nameLocation": "3175:4:111",
            "parameters": {
              "id": 46875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3179:2:111"
            },
            "returnParameters": {
              "id": 46878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3204:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46971,
            "nodeType": "FunctionDefinition",
            "src": "3869:282:111",
            "nodes": [],
            "body": {
              "id": 46970,
              "nodeType": "Block",
              "src": "3913:238:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46938,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3931:6:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 46970,
                      "src": "3923:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46937,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3923:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46957,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 46947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 46939,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46737,
                        "src": "3940:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46944,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3979:4:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 46943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3971:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46942,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3971:7:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3971:13:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46940,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46741,
                            "src": "3949:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25226",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 46941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "3949:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3949:36:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3940:45:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 46955,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46737,
                      "src": "4051:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 46956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3940:117:111",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46952,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4030:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            ],
                            "id": 46951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4022:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46950,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4022:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4022:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46948,
                          "name": "rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46741,
                          "src": "4000:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 46949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "4000:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4000:36:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:134:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46961,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46934,
                        "src": "4092:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46962,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46938,
                        "src": "4097:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46958,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46741,
                        "src": "4067:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 46960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37941,
                      "src": "4067:24:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25226_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 46963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46964,
                  "nodeType": "ExpressionStatement",
                  "src": "4067:37:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46966,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46934,
                        "src": "4132:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46967,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46938,
                        "src": "4137:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46965,
                      "name": "RewardIssued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51885,
                      "src": "4119:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4119:25:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46969,
                  "nodeType": "EmitStatement",
                  "src": "4114:30:111"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_issueReward",
            "nameLocation": "3878:12:111",
            "parameters": {
              "id": 46935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46934,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "3899:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 46971,
                  "src": "3891:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3891:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3890:13:111"
            },
            "returnParameters": {
              "id": 46936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3913:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46983,
            "nodeType": "FunctionDefinition",
            "src": "4461:88:111",
            "nodes": [],
            "body": {
              "id": 46982,
              "nodeType": "Block",
              "src": "4492:57:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46974,
                      "name": "lastBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46734,
                      "src": "4502:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 46979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 46975,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4513:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 46976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4513:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 46977,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47121,
                          "src": "4531:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 46978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4531:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4513:29:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4502:40:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46981,
                  "nodeType": "ExpressionStatement",
                  "src": "4502:40:111"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resetBeat",
            "nameLocation": "4470:10:111",
            "parameters": {
              "id": 46972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4480:2:111"
            },
            "returnParameters": {
              "id": 46973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4492:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46994,
            "nodeType": "FunctionDefinition",
            "src": "4582:83:111",
            "nodes": [],
            "body": {
              "id": 46993,
              "nodeType": "Block",
              "src": "4636:29:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46990,
                      "name": "_resetBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46983,
                      "src": "4646:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:12:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46992,
                  "nodeType": "ExpressionStatement",
                  "src": "4646:12:111"
                }
              ]
            },
            "baseFunctions": [
              51908
            ],
            "documentation": {
              "id": 46984,
              "nodeType": "StructuredDocumentation",
              "src": "4555:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "ef68b87d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 46987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4621:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 46988,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46986,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "4612:8:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "4612:23:111"
              }
            ],
            "name": "resetBeat",
            "nameLocation": "4591:9:111",
            "parameters": {
              "id": 46985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4600:2:111"
            },
            "returnParameters": {
              "id": 46989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4636:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47009,
            "nodeType": "FunctionDefinition",
            "src": "4698:105:111",
            "nodes": [],
            "body": {
              "id": 47008,
              "nodeType": "Block",
              "src": "4751:52:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47001,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46731,
                      "src": "4761:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 47002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4770:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4761:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47004,
                  "nodeType": "ExpressionStatement",
                  "src": "4761:13:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47005,
                      "name": "_resetBeat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46983,
                      "src": "4784:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4784:12:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47007,
                  "nodeType": "ExpressionStatement",
                  "src": "4784:12:111"
                }
              ]
            },
            "baseFunctions": [
              51912
            ],
            "documentation": {
              "id": 46995,
              "nodeType": "StructuredDocumentation",
              "src": "4671:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "0f15f4c0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 46998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4736:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 46999,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46997,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "4727:8:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "4727:23:111"
              }
            ],
            "name": "activate",
            "nameLocation": "4707:8:111",
            "parameters": {
              "id": 46996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4715:2:111"
            },
            "returnParameters": {
              "id": 47000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4751:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47021,
            "nodeType": "FunctionDefinition",
            "src": "4836:86:111",
            "nodes": [],
            "body": {
              "id": 47020,
              "nodeType": "Block",
              "src": "4891:31:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47016,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46731,
                      "src": "4901:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 47017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4910:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4901:14:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47019,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:14:111"
                }
              ]
            },
            "baseFunctions": [
              51916
            ],
            "documentation": {
              "id": 47010,
              "nodeType": "StructuredDocumentation",
              "src": "4809:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "51b42b00",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4876:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47014,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47012,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "4867:8:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "4867:23:111"
              }
            ],
            "name": "deactivate",
            "nameLocation": "4845:10:111",
            "parameters": {
              "id": 47011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4855:2:111"
            },
            "returnParameters": {
              "id": 47015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4891:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47037,
            "nodeType": "FunctionDefinition",
            "src": "4955:121:111",
            "nodes": [],
            "body": {
              "id": 47036,
              "nodeType": "Block",
              "src": "5028:48:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47030,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46747,
                      "src": "5038:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52172",
                        "typeString": "contract IOperator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47032,
                          "name": "operator_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47024,
                          "src": "5059:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47031,
                        "name": "IOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52172,
                        "src": "5049:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOperator_$52172_$",
                          "typeString": "type(contract IOperator)"
                        }
                      },
                      "id": 47033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5049:20:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOperator_$52172",
                        "typeString": "contract IOperator"
                      }
                    },
                    "src": "5038:31:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOperator_$52172",
                      "typeString": "contract IOperator"
                    }
                  },
                  "id": 47035,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:31:111"
                }
              ]
            },
            "baseFunctions": [
              51922
            ],
            "documentation": {
              "id": 47022,
              "nodeType": "StructuredDocumentation",
              "src": "4928:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "b3ab15fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5013:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47028,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47026,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "5004:8:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "5004:23:111"
              }
            ],
            "name": "setOperator",
            "nameLocation": "4964:11:111",
            "parameters": {
              "id": 47025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47024,
                  "mutability": "mutable",
                  "name": "operator_",
                  "nameLocation": "4984:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47037,
                  "src": "4976:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:19:111"
            },
            "returnParameters": {
              "id": 47029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47052,
            "nodeType": "ModifierDefinition",
            "src": "5082:218:111",
            "nodes": [],
            "body": {
              "id": 47051,
              "nodeType": "Block",
              "src": "5115:185:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 47039,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5211:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 47040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5211:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47041,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46734,
                        "src": "5230:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 47042,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47121,
                          "src": "5241:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 47043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5241:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5230:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5211:41:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47049,
                  "nodeType": "IfStatement",
                  "src": "5207:75:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47046,
                        "name": "Heart_BeatAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51900,
                        "src": "5261:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5261:21:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47048,
                    "nodeType": "RevertStatement",
                    "src": "5254:28:111"
                  }
                },
                {
                  "id": 47050,
                  "nodeType": "PlaceholderStatement",
                  "src": "5292:1:111"
                }
              ]
            },
            "name": "notWhileBeatAvailable",
            "nameLocation": "5091:21:111",
            "parameters": {
              "id": 47038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5112:2:111"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47080,
            "nodeType": "FunctionDefinition",
            "src": "5333:255:111",
            "nodes": [],
            "body": {
              "id": 47079,
              "nodeType": "Block",
              "src": "5480:108:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47066,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46741,
                      "src": "5490:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47067,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47056,
                      "src": "5504:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "5490:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 47069,
                  "nodeType": "ExpressionStatement",
                  "src": "5490:20:111"
                },
                {
                  "expression": {
                    "id": 47072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47070,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46737,
                      "src": "5520:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47071,
                      "name": "reward_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47058,
                      "src": "5529:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5520:16:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47073,
                  "nodeType": "ExpressionStatement",
                  "src": "5520:16:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47075,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47056,
                        "src": "5565:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 47076,
                        "name": "reward_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47058,
                        "src": "5573:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47074,
                      "name": "RewardUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51892,
                      "src": "5551:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$25226_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256)"
                      }
                    },
                    "id": 47077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5551:30:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47078,
                  "nodeType": "EmitStatement",
                  "src": "5546:35:111"
                }
              ]
            },
            "baseFunctions": [
              51931
            ],
            "documentation": {
              "id": 47053,
              "nodeType": "StructuredDocumentation",
              "src": "5306:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "63392990",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5431:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47062,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47060,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "5422:8:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "5422:23:111"
              },
              {
                "id": 47064,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47063,
                  "name": "notWhileBeatAvailable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47052,
                  "src": "5454:21:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "5454:21:111"
              }
            ],
            "name": "setRewardTokenAndAmount",
            "nameLocation": "5342:23:111",
            "parameters": {
              "id": 47059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47056,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "5372:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47080,
                  "src": "5366:12:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 47055,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47054,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "5366:5:111"
                    },
                    "referencedDeclaration": 25226,
                    "src": "5366:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47058,
                  "mutability": "mutable",
                  "name": "reward_",
                  "nameLocation": "5388:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47080,
                  "src": "5380:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5380:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5365:31:111"
            },
            "returnParameters": {
              "id": 47065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5480:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47107,
            "nodeType": "FunctionDefinition",
            "src": "5621:210:111",
            "nodes": [],
            "body": {
              "id": 47106,
              "nodeType": "Block",
              "src": "5750:81:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47095,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5780:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5780:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47101,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5817:4:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 47100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5809:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47099,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5809:7:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5809:13:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47097,
                            "name": "token_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47084,
                            "src": "5792:6:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25226",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 47098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "5792:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 47103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5792:31:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47092,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47084,
                        "src": "5760:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 47094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37941,
                      "src": "5760:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25226_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 47104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5760:64:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47105,
                  "nodeType": "ExpressionStatement",
                  "src": "5760:64:111"
                }
              ]
            },
            "baseFunctions": [
              51938
            ],
            "documentation": {
              "id": 47081,
              "nodeType": "StructuredDocumentation",
              "src": "5594:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "9ab7d7e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68656172745f61646d696e",
                    "id": 47087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5701:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                      "typeString": "literal_string \"heart_admin\""
                    },
                    "value": "heart_admin"
                  }
                ],
                "id": 47088,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47086,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "5692:8:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "5692:23:111"
              },
              {
                "id": 47090,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47089,
                  "name": "notWhileBeatAvailable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47052,
                  "src": "5724:21:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "5724:21:111"
              }
            ],
            "name": "withdrawUnspentRewards",
            "nameLocation": "5630:22:111",
            "parameters": {
              "id": 47085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47084,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "5659:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47107,
                  "src": "5653:12:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 47083,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47082,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "5653:5:111"
                    },
                    "referencedDeclaration": 25226,
                    "src": "5653:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5652:14:111"
            },
            "returnParameters": {
              "id": 47091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5750:0:111"
            },
            "scope": 47122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47121,
            "nodeType": "FunctionDefinition",
            "src": "6168:112:111",
            "nodes": [],
            "body": {
              "id": 47120,
              "nodeType": "Block",
              "src": "6219:61:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 47115,
                            "name": "PRICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46744,
                            "src": "6244:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PRICEv1_$39466",
                              "typeString": "contract PRICEv1"
                            }
                          },
                          "id": 47116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "observationFrequency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39386,
                          "src": "6244:26:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint48_$",
                            "typeString": "function () view external returns (uint48)"
                          }
                        },
                        "id": 47117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6244:28:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 47114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6236:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 47113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6236:7:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 47118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6236:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 47112,
                  "id": 47119,
                  "nodeType": "Return",
                  "src": "6229:44:111"
                }
              ]
            },
            "baseFunctions": [
              51944
            ],
            "documentation": {
              "id": 47108,
              "nodeType": "StructuredDocumentation",
              "src": "6141:22:111",
              "text": "@inheritdoc IHeart"
            },
            "functionSelector": "ead50da3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "frequency",
            "nameLocation": "6177:9:111",
            "parameters": {
              "id": 47109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6186:2:111"
            },
            "returnParameters": {
              "id": 47112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47121,
                  "src": "6210:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6210:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6209:9:111"
            },
            "scope": 47122,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46717,
              "name": "IHeart",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51945,
              "src": "919:6:111"
            },
            "id": 46718,
            "nodeType": "InheritanceSpecifier",
            "src": "919:6:111"
          },
          {
            "baseName": {
              "id": 46719,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28387,
              "src": "927:6:111"
            },
            "id": 46720,
            "nodeType": "InheritanceSpecifier",
            "src": "927:6:111"
          },
          {
            "baseName": {
              "id": 46721,
              "name": "RolesConsumer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40489,
              "src": "935:13:111"
            },
            "id": 46722,
            "nodeType": "InheritanceSpecifier",
            "src": "935:13:111"
          },
          {
            "baseName": {
              "id": 46723,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25371,
              "src": "950:15:111"
            },
            "id": 46724,
            "nodeType": "InheritanceSpecifier",
            "src": "950:15:111"
          }
        ],
        "canonicalName": "OlympusHeart",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46716,
          "nodeType": "StructuredDocumentation",
          "src": "552:342:111",
          "text": "@title  Olympus Heart\n @notice Olympus Heart (Policy) Contract\n @dev    The Olympus Heart contract provides keeper rewards to call the heart beat function which fuels\n         Olympus market operations. The Heart orchestrates state updates in the correct order to ensure\n         market operations use up to date information."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47122,
          25371,
          40489,
          28387,
          28240,
          51945
        ],
        "name": "OlympusHeart",
        "nameLocation": "903:12:111",
        "scope": 47123,
        "usedErrors": [
          28193,
          28313,
          51894,
          51896,
          51898,
          51900
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 111
}