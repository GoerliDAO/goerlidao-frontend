{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "policy_",
          "type": "address"
        }
      ],
      "name": "Module_PolicyNotPermitted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RANGE_InvalidParams",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        }
      ],
      "name": "CushionDown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "CushionUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wallLowPrice_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cushionLowPrice_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cushionHighPrice_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wallHighPrice_",
          "type": "uint256"
        }
      ],
      "name": "PricesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cushionSpread_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wallSpread_",
          "type": "uint256"
        }
      ],
      "name": "SpreadsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thresholdFactor_",
          "type": "uint256"
        }
      ],
      "name": "ThresholdFactorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "WallDown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "WallUp",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "KEYCODE",
      "outputs": [
        {
          "internalType": "Keycode",
          "name": "",
          "type": "bytes5"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "major",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "minor",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "capacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gdao",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "lastActive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "market",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "wall_",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "range",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                },
                {
                  "internalType": "uint48",
                  "name": "lastActive",
                  "type": "uint48"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "market",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Side",
              "name": "low",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                },
                {
                  "internalType": "uint48",
                  "name": "lastActive",
                  "type": "uint48"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "market",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Side",
              "name": "high",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "high",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "low",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "spread",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Band",
              "name": "cushion",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "high",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "low",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "spread",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Band",
              "name": "wall",
              "type": "tuple"
            }
          ],
          "internalType": "struct RANGEv1.Range",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "regenerate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cushionSpread_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wallSpread_",
          "type": "uint256"
        }
      ],
      "name": "setSpreads",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "thresholdFactor_",
          "type": "uint256"
        }
      ],
      "name": "setThresholdFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "wall_",
          "type": "bool"
        }
      ],
      "name": "spread",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thresholdFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "updateCapacity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "market_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "marketCapacity_",
          "type": "uint256"
        }
      ],
      "name": "updateMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "movingAverage_",
          "type": "uint256"
        }
      ],
      "name": "updatePrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "KEYCODE()": "1ae7ec2e",
    "VERSION()": "ffa1ad74",
    "active(bool)": "59d236e6",
    "capacity(bool)": "bf30142b",
    "changeKernel(address)": "4657b36c",
    "gdao()": "a29a0d90",
    "kernel()": "d4aae0c4",
    "lastActive(bool)": "e69f3c4e",
    "market(bool)": "c45e91d6",
    "price(bool,bool)": "3778c2b2",
    "range()": "e97206a9",
    "regenerate(bool,uint256)": "00d16739",
    "reserve()": "cd3293de",
    "setSpreads(uint256,uint256)": "41f19a46",
    "setThresholdFactor(uint256)": "33bd33b4",
    "spread(bool)": "8c3f914a",
    "thresholdFactor()": "c21e6652",
    "updateCapacity(bool,uint256)": "6d9a9a62",
    "updateMarket(bool,uint256,uint256)": "3e56993a",
    "updatePrices(uint256)": "ae7e8d81"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy_\",\"type\":\"address\"}],\"name\":\"Module_PolicyNotPermitted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RANGE_InvalidParams\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"}],\"name\":\"CushionDown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"CushionUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wallLowPrice_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cushionLowPrice_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cushionHighPrice_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wallHighPrice_\",\"type\":\"uint256\"}],\"name\":\"PricesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cushionSpread_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wallSpread_\",\"type\":\"uint256\"}],\"name\":\"SpreadsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thresholdFactor_\",\"type\":\"uint256\"}],\"name\":\"ThresholdFactorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"WallDown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"WallUp\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KEYCODE\",\"outputs\":[{\"internalType\":\"Keycode\",\"name\":\"\",\"type\":\"bytes5\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"major\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"minor\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"capacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gdao\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"lastActive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"market\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"wall_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"range\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"lastActive\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"market\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Side\",\"name\":\"low\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"lastActive\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"market\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Side\",\"name\":\"high\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"high\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"low\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spread\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Band\",\"name\":\"cushion\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"high\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"low\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spread\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Band\",\"name\":\"wall\",\"type\":\"tuple\"}],\"internalType\":\"struct RANGEv1.Range\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"regenerate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cushionSpread_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wallSpread_\",\"type\":\"uint256\"}],\"name\":\"setSpreads\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"thresholdFactor_\",\"type\":\"uint256\"}],\"name\":\"setThresholdFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"wall_\",\"type\":\"bool\"}],\"name\":\"spread\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thresholdFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"updateCapacity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"market_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketCapacity_\",\"type\":\"uint256\"}],\"name\":\"updateMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"movingAverage_\",\"type\":\"uint256\"}],\"name\":\"updatePrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic.\"},\"VERSION()\":{\"returns\":{\"major\":\"- Major version upgrade indicates breaking change to the interface.\",\"minor\":\"- Minor version change retains backward-compatible interface.\"}},\"active(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get status for (true = high side, false = low side).\"}},\"capacity(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get capacity for (true = high side, false = low side).\"}},\"lastActive(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get timestamp for (true = high side, false = low side).\"}},\"market(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get market for (true = high side, false = low side).\"}},\"price(bool,bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get the price for (true = high side, false = low side).\",\"wall_\":\"- Specifies the band to get the price for (true = wall, false = cushion).\"}},\"regenerate(bool,uint256)\":{\"params\":{\"capacity_\":\"- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).\",\"high_\":\"- Specifies the side of the range to regenerate (true = high side, false = low side).\"}},\"setSpreads(uint256,uint256)\":{\"details\":\"The new spreads will not go into effect until the next time updatePrices() is called.\",\"params\":{\"cushionSpread_\":\"- Percent spread to set the cushions at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\",\"wallSpread_\":\"- Percent spread to set the walls at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\"}},\"setThresholdFactor(uint256)\":{\"details\":\"The new threshold factor will not go into effect until the next time regenerate() is called for each side of the wall.\",\"params\":{\"thresholdFactor_\":\"- Percent of capacity that the wall should close below, assumes 2 decimals (i.e. 1000 = 10%).\"}},\"spread(bool)\":{\"params\":{\"wall_\":\"- Specifies the band to get the spread for (true = wall, false = cushion).\"}},\"updateCapacity(bool,uint256)\":{\"params\":{\"capacity_\":\"- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).\",\"high_\":\"- Specifies the side of the range to update capacity for (true = high side, false = low side).\"}},\"updateMarket(bool,uint256,uint256)\":{\"params\":{\"high_\":\"- Specifies the side of the range to update market for (true = high side, false = low side).\",\"marketCapacity_\":\"- Amount to set the last market capacity to (GDAO tokens for high side, Reserve tokens for low side).\",\"market_\":\"- Market ID to set for the side.\"}},\"updatePrices(uint256)\":{\"params\":{\"movingAverage_\":\"- Current moving average price to set range prices from.\"}}},\"stateVariables\":{\"thresholdFactor\":{\"details\":\"A threshold is required so that a wall is not \\\"active\\\" with a capacity near zero, but unable to be depleted practically (dust).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"KEYCODE()\":{\"notice\":\"5 byte identifier for a module.\"},\"VERSION()\":{\"notice\":\"Returns which semantic version of a module is being implemented.\"},\"active(bool)\":{\"notice\":\"Get the status of a side of the range (whether it is active or not).\"},\"capacity(bool)\":{\"notice\":\"Get the capacity for a side of the range.\"},\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"},\"gdao()\":{\"notice\":\"GDAO token contract address\"},\"lastActive(bool)\":{\"notice\":\"Get the timestamp when the range was last active.\"},\"market(bool)\":{\"notice\":\"Get the market ID for a side of the range.\"},\"price(bool,bool)\":{\"notice\":\"Get the price for the wall or cushion for a side of the range.\"},\"range()\":{\"notice\":\"Get the full Range data in a struct.\"},\"regenerate(bool,uint256)\":{\"notice\":\"Regenerate a side of the range to a specific capacity.Access restricted to activated policies.\"},\"reserve()\":{\"notice\":\"Reserve token contract address\"},\"setSpreads(uint256,uint256)\":{\"notice\":\"Set the wall and cushion spreads.Access restricted to activated policies.\"},\"setThresholdFactor(uint256)\":{\"notice\":\"Set the threshold factor for when a wall is considered \\\"down\\\".Access restricted to activated policies.\"},\"spread(bool)\":{\"notice\":\"Get the spread for the wall or cushion band.\"},\"thresholdFactor()\":{\"notice\":\"Threshold factor for the change, a percent in 2 decimals (i.e. 1000 = 10%). Determines how much of the capacity must be spent before the side is taken down.\"},\"updateCapacity(bool,uint256)\":{\"notice\":\"Update the capacity for a side of the range.Access restricted to activated policies.\"},\"updateMarket(bool,uint256,uint256)\":{\"notice\":\"Update the market ID (cushion) for a side of the range.Access restricted to activated policies.\"},\"updatePrices(uint256)\":{\"notice\":\"Update the prices for the low and high sides.Access restricted to activated policies.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/RANGE/RANGE.v1.sol\":\"RANGEv1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/modules/RANGE/RANGE.v1.sol\":{\"keccak256\":\"0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85\",\"dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "policy_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module_PolicyNotPermitted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RANGE_InvalidParams"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CushionDown",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CushionUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "wallLowPrice_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "cushionLowPrice_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "cushionHighPrice_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "wallHighPrice_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PricesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cushionSpread_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "wallSpread_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpreadsChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "thresholdFactor_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ThresholdFactorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WallDown",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WallUp",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "KEYCODE",
          "outputs": [
            {
              "internalType": "Keycode",
              "name": "",
              "type": "bytes5"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "major",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "minor",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "active",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "capacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gdao",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastActive",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "market",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "wall_",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "price",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "range",
          "outputs": [
            {
              "internalType": "struct RANGEv1.Range",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct RANGEv1.Side",
                  "name": "low",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint48",
                      "name": "lastActive",
                      "type": "uint48"
                    },
                    {
                      "internalType": "uint256",
                      "name": "capacity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "market",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct RANGEv1.Side",
                  "name": "high",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint48",
                      "name": "lastActive",
                      "type": "uint48"
                    },
                    {
                      "internalType": "uint256",
                      "name": "capacity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "market",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct RANGEv1.Band",
                  "name": "cushion",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "high",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "low",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "spread",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct RANGEv1.Band",
                  "name": "wall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "high",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "low",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "spread",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "regenerate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserve",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cushionSpread_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wallSpread_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSpreads"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "thresholdFactor_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setThresholdFactor"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "wall_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "spread",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "thresholdFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCapacity"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "market_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marketCapacity_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMarket"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "movingAverage_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePrices"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic."
          },
          "VERSION()": {
            "returns": {
              "major": "- Major version upgrade indicates breaking change to the interface.",
              "minor": "- Minor version change retains backward-compatible interface."
            }
          },
          "active(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get status for (true = high side, false = low side)."
            }
          },
          "capacity(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get capacity for (true = high side, false = low side)."
            }
          },
          "lastActive(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get timestamp for (true = high side, false = low side)."
            }
          },
          "market(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get market for (true = high side, false = low side)."
            }
          },
          "price(bool,bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get the price for (true = high side, false = low side).",
              "wall_": "- Specifies the band to get the price for (true = wall, false = cushion)."
            }
          },
          "regenerate(bool,uint256)": {
            "params": {
              "capacity_": "- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).",
              "high_": "- Specifies the side of the range to regenerate (true = high side, false = low side)."
            }
          },
          "setSpreads(uint256,uint256)": {
            "details": "The new spreads will not go into effect until the next time updatePrices() is called.",
            "params": {
              "cushionSpread_": "- Percent spread to set the cushions at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).",
              "wallSpread_": "- Percent spread to set the walls at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%)."
            }
          },
          "setThresholdFactor(uint256)": {
            "details": "The new threshold factor will not go into effect until the next time regenerate() is called for each side of the wall.",
            "params": {
              "thresholdFactor_": "- Percent of capacity that the wall should close below, assumes 2 decimals (i.e. 1000 = 10%)."
            }
          },
          "spread(bool)": {
            "params": {
              "wall_": "- Specifies the band to get the spread for (true = wall, false = cushion)."
            }
          },
          "updateCapacity(bool,uint256)": {
            "params": {
              "capacity_": "- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).",
              "high_": "- Specifies the side of the range to update capacity for (true = high side, false = low side)."
            }
          },
          "updateMarket(bool,uint256,uint256)": {
            "params": {
              "high_": "- Specifies the side of the range to update market for (true = high side, false = low side).",
              "marketCapacity_": "- Amount to set the last market capacity to (GDAO tokens for high side, Reserve tokens for low side).",
              "market_": "- Market ID to set for the side."
            }
          },
          "updatePrices(uint256)": {
            "params": {
              "movingAverage_": "- Current moving average price to set range prices from."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": {
            "notice": "Initialization function for the module"
          },
          "KEYCODE()": {
            "notice": "5 byte identifier for a module."
          },
          "VERSION()": {
            "notice": "Returns which semantic version of a module is being implemented."
          },
          "active(bool)": {
            "notice": "Get the status of a side of the range (whether it is active or not)."
          },
          "capacity(bool)": {
            "notice": "Get the capacity for a side of the range."
          },
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          },
          "gdao()": {
            "notice": "GDAO token contract address"
          },
          "lastActive(bool)": {
            "notice": "Get the timestamp when the range was last active."
          },
          "market(bool)": {
            "notice": "Get the market ID for a side of the range."
          },
          "price(bool,bool)": {
            "notice": "Get the price for the wall or cushion for a side of the range."
          },
          "range()": {
            "notice": "Get the full Range data in a struct."
          },
          "regenerate(bool,uint256)": {
            "notice": "Regenerate a side of the range to a specific capacity.Access restricted to activated policies."
          },
          "reserve()": {
            "notice": "Reserve token contract address"
          },
          "setSpreads(uint256,uint256)": {
            "notice": "Set the wall and cushion spreads.Access restricted to activated policies."
          },
          "setThresholdFactor(uint256)": {
            "notice": "Set the threshold factor for when a wall is considered \"down\".Access restricted to activated policies."
          },
          "spread(bool)": {
            "notice": "Get the spread for the wall or cushion band."
          },
          "thresholdFactor()": {
            "notice": "Threshold factor for the change, a percent in 2 decimals (i.e. 1000 = 10%). Determines how much of the capacity must be spent before the side is taken down."
          },
          "updateCapacity(bool,uint256)": {
            "notice": "Update the capacity for a side of the range.Access restricted to activated policies."
          },
          "updateMarket(bool,uint256,uint256)": {
            "notice": "Update the market ID (cushion) for a side of the range.Access restricted to activated policies."
          },
          "updatePrices(uint256)": {
            "notice": "Update the prices for the low and high sides.Access restricted to activated policies."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/RANGE/RANGE.v1.sol": "RANGEv1"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/RANGE/RANGE.v1.sol": {
        "keccak256": "0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb",
        "urls": [
          "bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85",
          "dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/RANGE/RANGE.v1.sol",
    "id": 46279,
    "exportedSymbols": {
      "Actions": [
        29387
      ],
      "ERC20": [
        29147
      ],
      "Instruction": [
        29393
      ],
      "InvalidKeycode": [
        29410
      ],
      "Kernel": [
        30536
      ],
      "KernelAdapter": [
        29551
      ],
      "Keycode": [
        29401
      ],
      "Module": [
        29616
      ],
      "Permissions": [
        29399
      ],
      "Policy": [
        29698
      ],
      "RANGEv1": [
        46278
      ],
      "TargetNotAContract": [
        29405
      ],
      "ensureContract": [
        29454
      ],
      "ensureValidKeycode": [
        29499
      ],
      "fromKeycode": [
        29438
      ],
      "toKeycode": [
        29424
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:7412:75",
    "nodes": [
      {
        "id": 46067,
        "nodeType": "PragmaDirective",
        "src": "37:23:75",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 46069,
        "nodeType": "ImportDirective",
        "src": "62:47:75",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46279,
        "sourceUnit": 29148,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46068,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29147,
              "src": "70:5:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46070,
        "nodeType": "ImportDirective",
        "src": "110:24:75",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46279,
        "sourceUnit": 30537,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46278,
        "nodeType": "ContractDefinition",
        "src": "136:7312:75",
        "nodes": [
          {
            "id": 46080,
            "nodeType": "EventDefinition",
            "src": "217:64:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "518b1eea6c42d5d25b8983db58076556c4eb12d0f58f403100e037bbdf629cc3",
            "name": "WallUp",
            "nameLocation": "223:6:75",
            "parameters": {
              "id": 46079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46074,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "235:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46080,
                  "src": "230:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46073,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "230:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46076,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "250:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46080,
                  "src": "242:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46078,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "270:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46080,
                  "src": "262:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "229:51:75"
            }
          },
          {
            "id": 46088,
            "nodeType": "EventDefinition",
            "src": "286:66:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c897c3dfa8334f335974948095373e499dbc757ce1133f2980bcfca098c736bf",
            "name": "WallDown",
            "nameLocation": "292:8:75",
            "parameters": {
              "id": 46087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "306:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46088,
                  "src": "301:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "321:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46088,
                  "src": "313:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46086,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "341:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46088,
                  "src": "333:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:51:75"
            }
          },
          {
            "id": 46096,
            "nodeType": "EventDefinition",
            "src": "357:67:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6addeb12ca5495dd878280b56a2ebcc0c18eda83a3d30ea01f9c661b03209001",
            "name": "CushionUp",
            "nameLocation": "363:9:75",
            "parameters": {
              "id": 46095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46090,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "378:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46096,
                  "src": "373:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46092,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "393:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46096,
                  "src": "385:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46094,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "413:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46096,
                  "src": "405:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "372:51:75"
            }
          },
          {
            "id": 46102,
            "nodeType": "EventDefinition",
            "src": "429:50:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c0be2d89ec6f4d478c644e7dcb37ec5372fb158563c955066b91b5650e37e327",
            "name": "CushionDown",
            "nameLocation": "435:11:75",
            "parameters": {
              "id": 46101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46098,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "452:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46102,
                  "src": "447:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46097,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "467:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46102,
                  "src": "459:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "446:32:75"
            }
          },
          {
            "id": 46112,
            "nodeType": "EventDefinition",
            "src": "484:158:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7f3eb23042093bdf239802495c60dece3a6249a51e7d0830afa71dc7bb184da9",
            "name": "PricesChanged",
            "nameLocation": "490:13:75",
            "parameters": {
              "id": 46111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46104,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wallLowPrice_",
                  "nameLocation": "521:13:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46112,
                  "src": "513:21:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46106,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cushionLowPrice_",
                  "nameLocation": "552:16:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46112,
                  "src": "544:24:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cushionHighPrice_",
                  "nameLocation": "586:17:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46112,
                  "src": "578:25:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wallHighPrice_",
                  "nameLocation": "621:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46112,
                  "src": "613:22:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "503:138:75"
            }
          },
          {
            "id": 46118,
            "nodeType": "EventDefinition",
            "src": "647:66:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f9f6bac7789241c1f8bc37f72defbdc6b5482ec2c96cb91f7ebf917c7ef7ff98",
            "name": "SpreadsChanged",
            "nameLocation": "653:14:75",
            "parameters": {
              "id": 46117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46114,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cushionSpread_",
                  "nameLocation": "676:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46118,
                  "src": "668:22:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46116,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wallSpread_",
                  "nameLocation": "700:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46118,
                  "src": "692:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "667:45:75"
            }
          },
          {
            "id": 46122,
            "nodeType": "EventDefinition",
            "src": "718:55:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "66df6e0040d88b0d9e6e482ec0ef8983562d1186b0b94f9747f64f3c7e386335",
            "name": "ThresholdFactorChanged",
            "nameLocation": "724:22:75",
            "parameters": {
              "id": 46121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thresholdFactor_",
                  "nameLocation": "755:16:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46122,
                  "src": "747:24:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:26:75"
            }
          },
          {
            "id": 46124,
            "nodeType": "ErrorDefinition",
            "src": "818:28:75",
            "nodes": [],
            "errorSelector": "c51f44ab",
            "name": "RANGE_InvalidParams",
            "nameLocation": "824:19:75",
            "parameters": {
              "id": 46123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:2:75"
            }
          },
          {
            "id": 46127,
            "nodeType": "StructDefinition",
            "src": "890:75:75",
            "nodes": [],
            "canonicalName": "RANGEv1.Line",
            "members": [
              {
                "constant": false,
                "id": 46126,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "920:5:75",
                "nodeType": "VariableDeclaration",
                "scope": 46127,
                "src": "912:13:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46125,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "912:7:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Line",
            "nameLocation": "897:4:75",
            "scope": 46278,
            "visibility": "public"
          },
          {
            "id": 46136,
            "nodeType": "StructDefinition",
            "src": "971:300:75",
            "nodes": [],
            "canonicalName": "RANGEv1.Band",
            "members": [
              {
                "constant": false,
                "id": 46130,
                "mutability": "mutable",
                "name": "high",
                "nameLocation": "998:4:75",
                "nodeType": "VariableDeclaration",
                "scope": 46136,
                "src": "993:9:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Line_$46127_storage_ptr",
                  "typeString": "struct RANGEv1.Line"
                },
                "typeName": {
                  "id": 46129,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46128,
                    "name": "Line",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46127,
                    "src": "993:4:75"
                  },
                  "referencedDeclaration": 46127,
                  "src": "993:4:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Line_$46127_storage_ptr",
                    "typeString": "struct RANGEv1.Line"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46133,
                "mutability": "mutable",
                "name": "low",
                "nameLocation": "1055:3:75",
                "nodeType": "VariableDeclaration",
                "scope": 46136,
                "src": "1050:8:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Line_$46127_storage_ptr",
                  "typeString": "struct RANGEv1.Line"
                },
                "typeName": {
                  "id": 46132,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46131,
                    "name": "Line",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46127,
                    "src": "1050:4:75"
                  },
                  "referencedDeclaration": 46127,
                  "src": "1050:4:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Line_$46127_storage_ptr",
                    "typeString": "struct RANGEv1.Line"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46135,
                "mutability": "mutable",
                "name": "spread",
                "nameLocation": "1113:6:75",
                "nodeType": "VariableDeclaration",
                "scope": 46136,
                "src": "1105:14:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46134,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1105:7:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Band",
            "nameLocation": "978:4:75",
            "scope": 46278,
            "visibility": "public"
          },
          {
            "id": 46147,
            "nodeType": "StructDefinition",
            "src": "1277:764:75",
            "nodes": [],
            "canonicalName": "RANGEv1.Side",
            "members": [
              {
                "constant": false,
                "id": 46138,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1304:6:75",
                "nodeType": "VariableDeclaration",
                "scope": 46147,
                "src": "1299:11:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 46137,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1299:4:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46140,
                "mutability": "mutable",
                "name": "lastActive",
                "nameLocation": "1462:10:75",
                "nodeType": "VariableDeclaration",
                "scope": 46147,
                "src": "1455:17:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 46139,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "1455:6:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46142,
                "mutability": "mutable",
                "name": "capacity",
                "nameLocation": "1551:8:75",
                "nodeType": "VariableDeclaration",
                "scope": 46147,
                "src": "1543:16:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46141,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1543:7:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46144,
                "mutability": "mutable",
                "name": "threshold",
                "nameLocation": "1725:9:75",
                "nodeType": "VariableDeclaration",
                "scope": 46147,
                "src": "1717:17:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46143,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1717:7:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46146,
                "mutability": "mutable",
                "name": "market",
                "nameLocation": "1907:6:75",
                "nodeType": "VariableDeclaration",
                "scope": 46147,
                "src": "1899:14:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46145,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1899:7:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Side",
            "nameLocation": "1284:4:75",
            "scope": 46278,
            "visibility": "public"
          },
          {
            "id": 46160,
            "nodeType": "StructDefinition",
            "src": "2047:300:75",
            "nodes": [],
            "canonicalName": "RANGEv1.Range",
            "members": [
              {
                "constant": false,
                "id": 46150,
                "mutability": "mutable",
                "name": "low",
                "nameLocation": "2075:3:75",
                "nodeType": "VariableDeclaration",
                "scope": 46160,
                "src": "2070:8:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Side_$46147_storage_ptr",
                  "typeString": "struct RANGEv1.Side"
                },
                "typeName": {
                  "id": 46149,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46148,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46147,
                    "src": "2070:4:75"
                  },
                  "referencedDeclaration": 46147,
                  "src": "2070:4:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Side_$46147_storage_ptr",
                    "typeString": "struct RANGEv1.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46153,
                "mutability": "mutable",
                "name": "high",
                "nameLocation": "2139:4:75",
                "nodeType": "VariableDeclaration",
                "scope": 46160,
                "src": "2134:9:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Side_$46147_storage_ptr",
                  "typeString": "struct RANGEv1.Side"
                },
                "typeName": {
                  "id": 46152,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46151,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46147,
                    "src": "2134:4:75"
                  },
                  "referencedDeclaration": 46147,
                  "src": "2134:4:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Side_$46147_storage_ptr",
                    "typeString": "struct RANGEv1.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46156,
                "mutability": "mutable",
                "name": "cushion",
                "nameLocation": "2205:7:75",
                "nodeType": "VariableDeclaration",
                "scope": 46160,
                "src": "2200:12:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Band_$46136_storage_ptr",
                  "typeString": "struct RANGEv1.Band"
                },
                "typeName": {
                  "id": 46155,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46154,
                    "name": "Band",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46136,
                    "src": "2200:4:75"
                  },
                  "referencedDeclaration": 46136,
                  "src": "2200:4:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Band_$46136_storage_ptr",
                    "typeString": "struct RANGEv1.Band"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46159,
                "mutability": "mutable",
                "name": "wall",
                "nameLocation": "2283:4:75",
                "nodeType": "VariableDeclaration",
                "scope": 46160,
                "src": "2278:9:75",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Band_$46136_storage_ptr",
                  "typeString": "struct RANGEv1.Band"
                },
                "typeName": {
                  "id": 46158,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46157,
                    "name": "Band",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46136,
                    "src": "2278:4:75"
                  },
                  "referencedDeclaration": 46136,
                  "src": "2278:4:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Band_$46136_storage_ptr",
                    "typeString": "struct RANGEv1.Band"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Range",
            "nameLocation": "2054:5:75",
            "scope": 46278,
            "visibility": "public"
          },
          {
            "id": 46163,
            "nodeType": "VariableDeclaration",
            "src": "2395:21:75",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_range",
            "nameLocation": "2410:6:75",
            "scope": 46278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Range_$46160_storage",
              "typeString": "struct RANGEv1.Range"
            },
            "typeName": {
              "id": 46162,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46161,
                "name": "Range",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46160,
                "src": "2395:5:75"
              },
              "referencedDeclaration": 46160,
              "src": "2395:5:75",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Range_$46160_storage_ptr",
                "typeString": "struct RANGEv1.Range"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46166,
            "nodeType": "VariableDeclaration",
            "src": "2740:30:75",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46164,
              "nodeType": "StructuredDocumentation",
              "src": "2423:312:75",
              "text": "@notice Threshold factor for the change, a percent in 2 decimals (i.e. 1000 = 10%). Determines how much of the capacity must be spent before the side is taken down.\n @dev    A threshold is required so that a wall is not \"active\" with a capacity near zero, but unable to be depleted practically (dust)."
            },
            "functionSelector": "c21e6652",
            "mutability": "mutable",
            "name": "thresholdFactor",
            "nameLocation": "2755:15:75",
            "scope": 46278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46165,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2740:7:75",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46170,
            "nodeType": "VariableDeclaration",
            "src": "2821:17:75",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46167,
              "nodeType": "StructuredDocumentation",
              "src": "2777:39:75",
              "text": "@notice GDAO token contract address"
            },
            "functionSelector": "a29a0d90",
            "mutability": "mutable",
            "name": "gdao",
            "nameLocation": "2834:4:75",
            "scope": 46278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$29147",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 46169,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46168,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29147,
                "src": "2821:5:75"
              },
              "referencedDeclaration": 29147,
              "src": "2821:5:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$29147",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46174,
            "nodeType": "VariableDeclaration",
            "src": "2892:20:75",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46171,
              "nodeType": "StructuredDocumentation",
              "src": "2845:42:75",
              "text": "@notice Reserve token contract address"
            },
            "functionSelector": "cd3293de",
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "2905:7:75",
            "scope": 46278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$29147",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 46173,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46172,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29147,
                "src": "2892:5:75"
              },
              "referencedDeclaration": 29147,
              "src": "2892:5:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$29147",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46182,
            "nodeType": "FunctionDefinition",
            "src": "3312:72:75",
            "nodes": [],
            "documentation": {
              "id": 46175,
              "nodeType": "StructuredDocumentation",
              "src": "2961:346:75",
              "text": "@notice Update the capacity for a side of the range.\n @notice Access restricted to activated policies.\n @param  high_ - Specifies the side of the range to update capacity for (true = high side, false = low side).\n @param  capacity_ - Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side)."
            },
            "functionSelector": "6d9a9a62",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCapacity",
            "nameLocation": "3321:14:75",
            "parameters": {
              "id": 46180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46177,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "3341:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46182,
                  "src": "3336:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46179,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "3356:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46182,
                  "src": "3348:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3335:31:75"
            },
            "returnParameters": {
              "id": 46181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3383:0:75"
            },
            "scope": 46278,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46188,
            "nodeType": "FunctionDefinition",
            "src": "3597:63:75",
            "nodes": [],
            "documentation": {
              "id": 46183,
              "nodeType": "StructuredDocumentation",
              "src": "3390:202:75",
              "text": "@notice Update the prices for the low and high sides.\n @notice Access restricted to activated policies.\n @param  movingAverage_ - Current moving average price to set range prices from."
            },
            "functionSelector": "ae7e8d81",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updatePrices",
            "nameLocation": "3606:12:75",
            "parameters": {
              "id": 46186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46185,
                  "mutability": "mutable",
                  "name": "movingAverage_",
                  "nameLocation": "3627:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46188,
                  "src": "3619:22:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3619:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3618:24:75"
            },
            "returnParameters": {
              "id": 46187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3659:0:75"
            },
            "scope": 46278,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46196,
            "nodeType": "FunctionDefinition",
            "src": "4018:68:75",
            "nodes": [],
            "documentation": {
              "id": 46189,
              "nodeType": "StructuredDocumentation",
              "src": "3666:347:75",
              "text": "@notice Regenerate a side of the range to a specific capacity.\n @notice Access restricted to activated policies.\n @param  high_ - Specifies the side of the range to regenerate (true = high side, false = low side).\n @param  capacity_ - Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side)."
            },
            "functionSelector": "00d16739",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "regenerate",
            "nameLocation": "4027:10:75",
            "parameters": {
              "id": 46194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46191,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "4043:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46196,
                  "src": "4038:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4038:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46193,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "4058:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46196,
                  "src": "4050:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4050:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4037:31:75"
            },
            "returnParameters": {
              "id": 46195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4085:0:75"
            },
            "scope": 46278,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46206,
            "nodeType": "FunctionDefinition",
            "src": "4527:123:75",
            "nodes": [],
            "documentation": {
              "id": 46197,
              "nodeType": "StructuredDocumentation",
              "src": "4092:430:75",
              "text": "@notice Update the market ID (cushion) for a side of the range.\n @notice Access restricted to activated policies.\n @param  high_ - Specifies the side of the range to update market for (true = high side, false = low side).\n @param  market_ - Market ID to set for the side.\n @param  marketCapacity_ - Amount to set the last market capacity to (GDAO tokens for high side, Reserve tokens for low side)."
            },
            "functionSelector": "3e56993a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateMarket",
            "nameLocation": "4536:12:75",
            "parameters": {
              "id": 46204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46199,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "4563:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46206,
                  "src": "4558:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46198,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46201,
                  "mutability": "mutable",
                  "name": "market_",
                  "nameLocation": "4586:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46206,
                  "src": "4578:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4578:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46203,
                  "mutability": "mutable",
                  "name": "marketCapacity_",
                  "nameLocation": "4611:15:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46206,
                  "src": "4603:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4603:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4548:84:75"
            },
            "returnParameters": {
              "id": 46205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4649:0:75"
            },
            "scope": 46278,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46214,
            "nodeType": "FunctionDefinition",
            "src": "5141:82:75",
            "nodes": [],
            "documentation": {
              "id": 46207,
              "nodeType": "StructuredDocumentation",
              "src": "4656:480:75",
              "text": "@notice Set the wall and cushion spreads.\n @notice Access restricted to activated policies.\n @param  cushionSpread_ - Percent spread to set the cushions at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\n @param  wallSpread_ - Percent spread to set the walls at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\n @dev    The new spreads will not go into effect until the next time updatePrices() is called."
            },
            "functionSelector": "41f19a46",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSpreads",
            "nameLocation": "5150:10:75",
            "parameters": {
              "id": 46212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46209,
                  "mutability": "mutable",
                  "name": "cushionSpread_",
                  "nameLocation": "5169:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46214,
                  "src": "5161:22:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5161:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46211,
                  "mutability": "mutable",
                  "name": "wallSpread_",
                  "nameLocation": "5193:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46214,
                  "src": "5185:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5185:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5160:45:75"
            },
            "returnParameters": {
              "id": 46213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5222:0:75"
            },
            "scope": 46278,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46220,
            "nodeType": "FunctionDefinition",
            "src": "5627:71:75",
            "nodes": [],
            "documentation": {
              "id": 46215,
              "nodeType": "StructuredDocumentation",
              "src": "5229:393:75",
              "text": "@notice Set the threshold factor for when a wall is considered \"down\".\n @notice Access restricted to activated policies.\n @param  thresholdFactor_ - Percent of capacity that the wall should close below, assumes 2 decimals (i.e. 1000 = 10%).\n @dev    The new threshold factor will not go into effect until the next time regenerate() is called for each side of the wall."
            },
            "functionSelector": "33bd33b4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setThresholdFactor",
            "nameLocation": "5636:18:75",
            "parameters": {
              "id": 46218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46217,
                  "mutability": "mutable",
                  "name": "thresholdFactor_",
                  "nameLocation": "5663:16:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46220,
                  "src": "5655:24:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5654:26:75"
            },
            "returnParameters": {
              "id": 46219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:75"
            },
            "scope": 46278,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46227,
            "nodeType": "FunctionDefinition",
            "src": "5757:62:75",
            "nodes": [],
            "documentation": {
              "id": 46221,
              "nodeType": "StructuredDocumentation",
              "src": "5704:48:75",
              "text": "@notice Get the full Range data in a struct."
            },
            "functionSelector": "e97206a9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "range",
            "nameLocation": "5766:5:75",
            "parameters": {
              "id": 46222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5771:2:75"
            },
            "returnParameters": {
              "id": 46226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46227,
                  "src": "5805:12:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Range_$46160_memory_ptr",
                    "typeString": "struct RANGEv1.Range"
                  },
                  "typeName": {
                    "id": 46224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46223,
                      "name": "Range",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46160,
                      "src": "5805:5:75"
                    },
                    "referencedDeclaration": 46160,
                    "src": "5805:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$46160_storage_ptr",
                      "typeString": "struct RANGEv1.Range"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5804:14:75"
            },
            "scope": 46278,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46235,
            "nodeType": "FunctionDefinition",
            "src": "5997:70:75",
            "nodes": [],
            "documentation": {
              "id": 46228,
              "nodeType": "StructuredDocumentation",
              "src": "5825:167:75",
              "text": "@notice Get the capacity for a side of the range.\n @param  high_ - Specifies the side of the range to get capacity for (true = high side, false = low side)."
            },
            "functionSelector": "bf30142b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "capacity",
            "nameLocation": "6006:8:75",
            "parameters": {
              "id": 46231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46230,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "6020:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46235,
                  "src": "6015:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46229,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6015:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6014:12:75"
            },
            "returnParameters": {
              "id": 46234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46235,
                  "src": "6058:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6058:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6057:9:75"
            },
            "scope": 46278,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46243,
            "nodeType": "FunctionDefinition",
            "src": "6270:65:75",
            "nodes": [],
            "documentation": {
              "id": 46236,
              "nodeType": "StructuredDocumentation",
              "src": "6073:192:75",
              "text": "@notice Get the status of a side of the range (whether it is active or not).\n @param  high_ - Specifies the side of the range to get status for (true = high side, false = low side)."
            },
            "functionSelector": "59d236e6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "active",
            "nameLocation": "6279:6:75",
            "parameters": {
              "id": 46239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46238,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "6291:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46243,
                  "src": "6286:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6286:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6285:12:75"
            },
            "returnParameters": {
              "id": 46242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46243,
                  "src": "6329:4:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6329:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6328:6:75"
            },
            "scope": 46278,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46253,
            "nodeType": "FunctionDefinition",
            "src": "6631:79:75",
            "nodes": [],
            "documentation": {
              "id": 46244,
              "nodeType": "StructuredDocumentation",
              "src": "6341:285:75",
              "text": "@notice Get the price for the wall or cushion for a side of the range.\n @param  wall_ - Specifies the band to get the price for (true = wall, false = cushion).\n @param  high_ - Specifies the side of the range to get the price for (true = high side, false = low side)."
            },
            "functionSelector": "3778c2b2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "price",
            "nameLocation": "6640:5:75",
            "parameters": {
              "id": 46249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46246,
                  "mutability": "mutable",
                  "name": "wall_",
                  "nameLocation": "6651:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46253,
                  "src": "6646:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46245,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6646:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46248,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "6663:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46253,
                  "src": "6658:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46247,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6658:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6645:24:75"
            },
            "returnParameters": {
              "id": 46252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46253,
                  "src": "6701:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6700:9:75"
            },
            "scope": 46278,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46261,
            "nodeType": "FunctionDefinition",
            "src": "6874:68:75",
            "nodes": [],
            "documentation": {
              "id": 46254,
              "nodeType": "StructuredDocumentation",
              "src": "6716:153:75",
              "text": "@notice Get the spread for the wall or cushion band.\n @param  wall_ - Specifies the band to get the spread for (true = wall, false = cushion)."
            },
            "functionSelector": "8c3f914a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "spread",
            "nameLocation": "6883:6:75",
            "parameters": {
              "id": 46257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46256,
                  "mutability": "mutable",
                  "name": "wall_",
                  "nameLocation": "6895:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46261,
                  "src": "6890:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6890:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6889:12:75"
            },
            "returnParameters": {
              "id": 46260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46261,
                  "src": "6933:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6933:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6932:9:75"
            },
            "scope": 46278,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46269,
            "nodeType": "FunctionDefinition",
            "src": "7119:68:75",
            "nodes": [],
            "documentation": {
              "id": 46262,
              "nodeType": "StructuredDocumentation",
              "src": "6948:166:75",
              "text": "@notice Get the market ID for a side of the range.\n @param  high_ - Specifies the side of the range to get market for (true = high side, false = low side)."
            },
            "functionSelector": "c45e91d6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "market",
            "nameLocation": "7128:6:75",
            "parameters": {
              "id": 46265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46264,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "7140:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46269,
                  "src": "7135:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7135:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7134:12:75"
            },
            "returnParameters": {
              "id": 46268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46269,
                  "src": "7178:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7177:9:75"
            },
            "scope": 46278,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46277,
            "nodeType": "FunctionDefinition",
            "src": "7374:72:75",
            "nodes": [],
            "documentation": {
              "id": 46270,
              "nodeType": "StructuredDocumentation",
              "src": "7193:176:75",
              "text": "@notice Get the timestamp when the range was last active.\n @param  high_ - Specifies the side of the range to get timestamp for (true = high side, false = low side)."
            },
            "functionSelector": "e69f3c4e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lastActive",
            "nameLocation": "7383:10:75",
            "parameters": {
              "id": 46273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46272,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "7399:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46277,
                  "src": "7394:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46271,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7394:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7393:12:75"
            },
            "returnParameters": {
              "id": 46276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46277,
                  "src": "7437:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7437:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7436:9:75"
            },
            "scope": 46278,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 46071,
              "name": "Module",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29616,
              "src": "165:6:75"
            },
            "id": 46072,
            "nodeType": "InheritanceSpecifier",
            "src": "165:6:75"
          }
        ],
        "canonicalName": "RANGEv1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          46278,
          29616,
          29551
        ],
        "name": "RANGEv1",
        "nameLocation": "154:7:75",
        "scope": 46279,
        "usedErrors": [
          29504,
          29558,
          46124
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 75
}