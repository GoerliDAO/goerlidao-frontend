{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "policy_",
          "type": "address"
        }
      ],
      "name": "Module_PolicyNotPermitted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RANGE_InvalidParams",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        }
      ],
      "name": "CushionDown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "CushionUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wallLowPrice_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cushionLowPrice_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cushionHighPrice_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wallHighPrice_",
          "type": "uint256"
        }
      ],
      "name": "PricesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cushionSpread_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wallSpread_",
          "type": "uint256"
        }
      ],
      "name": "SpreadsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thresholdFactor_",
          "type": "uint256"
        }
      ],
      "name": "ThresholdFactorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "WallDown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "WallUp",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "KEYCODE",
      "outputs": [
        {
          "internalType": "Keycode",
          "name": "",
          "type": "bytes5"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "major",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "minor",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "capacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gdao",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "lastActive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "market",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "wall_",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "range",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                },
                {
                  "internalType": "uint48",
                  "name": "lastActive",
                  "type": "uint48"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "market",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Side",
              "name": "low",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                },
                {
                  "internalType": "uint48",
                  "name": "lastActive",
                  "type": "uint48"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "market",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Side",
              "name": "high",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "high",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "low",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "spread",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Band",
              "name": "cushion",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "high",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct RANGEv1.Line",
                  "name": "low",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "spread",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RANGEv1.Band",
              "name": "wall",
              "type": "tuple"
            }
          ],
          "internalType": "struct RANGEv1.Range",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "regenerate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cushionSpread_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wallSpread_",
          "type": "uint256"
        }
      ],
      "name": "setSpreads",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "thresholdFactor_",
          "type": "uint256"
        }
      ],
      "name": "setThresholdFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "wall_",
          "type": "bool"
        }
      ],
      "name": "spread",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thresholdFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity_",
          "type": "uint256"
        }
      ],
      "name": "updateCapacity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "high_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "market_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "marketCapacity_",
          "type": "uint256"
        }
      ],
      "name": "updateMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "movingAverage_",
          "type": "uint256"
        }
      ],
      "name": "updatePrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "KEYCODE()": "1ae7ec2e",
    "VERSION()": "ffa1ad74",
    "active(bool)": "59d236e6",
    "capacity(bool)": "bf30142b",
    "changeKernel(address)": "4657b36c",
    "gdao()": "a29a0d90",
    "kernel()": "d4aae0c4",
    "lastActive(bool)": "e69f3c4e",
    "market(bool)": "c45e91d6",
    "price(bool,bool)": "3778c2b2",
    "range()": "e97206a9",
    "regenerate(bool,uint256)": "00d16739",
    "reserve()": "cd3293de",
    "setSpreads(uint256,uint256)": "41f19a46",
    "setThresholdFactor(uint256)": "33bd33b4",
    "spread(bool)": "8c3f914a",
    "thresholdFactor()": "c21e6652",
    "updateCapacity(bool,uint256)": "6d9a9a62",
    "updateMarket(bool,uint256,uint256)": "3e56993a",
    "updatePrices(uint256)": "ae7e8d81"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy_\",\"type\":\"address\"}],\"name\":\"Module_PolicyNotPermitted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RANGE_InvalidParams\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"}],\"name\":\"CushionDown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"CushionUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wallLowPrice_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cushionLowPrice_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cushionHighPrice_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wallHighPrice_\",\"type\":\"uint256\"}],\"name\":\"PricesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cushionSpread_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wallSpread_\",\"type\":\"uint256\"}],\"name\":\"SpreadsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thresholdFactor_\",\"type\":\"uint256\"}],\"name\":\"ThresholdFactorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"WallDown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"WallUp\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KEYCODE\",\"outputs\":[{\"internalType\":\"Keycode\",\"name\":\"\",\"type\":\"bytes5\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"major\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"minor\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"capacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gdao\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"lastActive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"market\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"wall_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"range\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"lastActive\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"market\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Side\",\"name\":\"low\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"lastActive\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"market\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Side\",\"name\":\"high\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"high\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"low\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spread\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Band\",\"name\":\"cushion\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"high\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Line\",\"name\":\"low\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spread\",\"type\":\"uint256\"}],\"internalType\":\"struct RANGEv1.Band\",\"name\":\"wall\",\"type\":\"tuple\"}],\"internalType\":\"struct RANGEv1.Range\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"regenerate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cushionSpread_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wallSpread_\",\"type\":\"uint256\"}],\"name\":\"setSpreads\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"thresholdFactor_\",\"type\":\"uint256\"}],\"name\":\"setThresholdFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"wall_\",\"type\":\"bool\"}],\"name\":\"spread\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thresholdFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"}],\"name\":\"updateCapacity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"high_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"market_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketCapacity_\",\"type\":\"uint256\"}],\"name\":\"updateMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"movingAverage_\",\"type\":\"uint256\"}],\"name\":\"updatePrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic.\"},\"VERSION()\":{\"returns\":{\"major\":\"- Major version upgrade indicates breaking change to the interface.\",\"minor\":\"- Minor version change retains backward-compatible interface.\"}},\"active(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get status for (true = high side, false = low side).\"}},\"capacity(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get capacity for (true = high side, false = low side).\"}},\"lastActive(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get timestamp for (true = high side, false = low side).\"}},\"market(bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get market for (true = high side, false = low side).\"}},\"price(bool,bool)\":{\"params\":{\"high_\":\"- Specifies the side of the range to get the price for (true = high side, false = low side).\",\"wall_\":\"- Specifies the band to get the price for (true = wall, false = cushion).\"}},\"regenerate(bool,uint256)\":{\"params\":{\"capacity_\":\"- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).\",\"high_\":\"- Specifies the side of the range to regenerate (true = high side, false = low side).\"}},\"setSpreads(uint256,uint256)\":{\"details\":\"The new spreads will not go into effect until the next time updatePrices() is called.\",\"params\":{\"cushionSpread_\":\"- Percent spread to set the cushions at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\",\"wallSpread_\":\"- Percent spread to set the walls at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\"}},\"setThresholdFactor(uint256)\":{\"details\":\"The new threshold factor will not go into effect until the next time regenerate() is called for each side of the wall.\",\"params\":{\"thresholdFactor_\":\"- Percent of capacity that the wall should close below, assumes 2 decimals (i.e. 1000 = 10%).\"}},\"spread(bool)\":{\"params\":{\"wall_\":\"- Specifies the band to get the spread for (true = wall, false = cushion).\"}},\"updateCapacity(bool,uint256)\":{\"params\":{\"capacity_\":\"- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).\",\"high_\":\"- Specifies the side of the range to update capacity for (true = high side, false = low side).\"}},\"updateMarket(bool,uint256,uint256)\":{\"params\":{\"high_\":\"- Specifies the side of the range to update market for (true = high side, false = low side).\",\"marketCapacity_\":\"- Amount to set the last market capacity to (GDAO tokens for high side, Reserve tokens for low side).\",\"market_\":\"- Market ID to set for the side.\"}},\"updatePrices(uint256)\":{\"params\":{\"movingAverage_\":\"- Current moving average price to set range prices from.\"}}},\"stateVariables\":{\"thresholdFactor\":{\"details\":\"A threshold is required so that a wall is not \\\"active\\\" with a capacity near zero, but unable to be depleted practically (dust).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"KEYCODE()\":{\"notice\":\"5 byte identifier for a module.\"},\"VERSION()\":{\"notice\":\"Returns which semantic version of a module is being implemented.\"},\"active(bool)\":{\"notice\":\"Get the status of a side of the range (whether it is active or not).\"},\"capacity(bool)\":{\"notice\":\"Get the capacity for a side of the range.\"},\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"},\"gdao()\":{\"notice\":\"GDAO token contract address\"},\"lastActive(bool)\":{\"notice\":\"Get the timestamp when the range was last active.\"},\"market(bool)\":{\"notice\":\"Get the market ID for a side of the range.\"},\"price(bool,bool)\":{\"notice\":\"Get the price for the wall or cushion for a side of the range.\"},\"range()\":{\"notice\":\"Get the full Range data in a struct.\"},\"regenerate(bool,uint256)\":{\"notice\":\"Regenerate a side of the range to a specific capacity.Access restricted to activated policies.\"},\"reserve()\":{\"notice\":\"Reserve token contract address\"},\"setSpreads(uint256,uint256)\":{\"notice\":\"Set the wall and cushion spreads.Access restricted to activated policies.\"},\"setThresholdFactor(uint256)\":{\"notice\":\"Set the threshold factor for when a wall is considered \\\"down\\\".Access restricted to activated policies.\"},\"spread(bool)\":{\"notice\":\"Get the spread for the wall or cushion band.\"},\"thresholdFactor()\":{\"notice\":\"Threshold factor for the change, a percent in 2 decimals (i.e. 1000 = 10%). Determines how much of the capacity must be spent before the side is taken down.\"},\"updateCapacity(bool,uint256)\":{\"notice\":\"Update the capacity for a side of the range.Access restricted to activated policies.\"},\"updateMarket(bool,uint256,uint256)\":{\"notice\":\"Update the market ID (cushion) for a side of the range.Access restricted to activated policies.\"},\"updatePrices(uint256)\":{\"notice\":\"Update the prices for the low and high sides.Access restricted to activated policies.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/RANGE/RANGE.v1.sol\":\"RANGEv1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":balancer-v2/=lib/balancer-v2/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/modules/RANGE/RANGE.v1.sol\":{\"keccak256\":\"0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85\",\"dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "policy_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module_PolicyNotPermitted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RANGE_InvalidParams"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CushionDown",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CushionUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "wallLowPrice_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "cushionLowPrice_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "cushionHighPrice_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "wallHighPrice_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PricesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cushionSpread_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "wallSpread_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpreadsChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "thresholdFactor_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ThresholdFactorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WallDown",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp_",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WallUp",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "KEYCODE",
          "outputs": [
            {
              "internalType": "Keycode",
              "name": "",
              "type": "bytes5"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "major",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "minor",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "active",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "capacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gdao",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastActive",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "market",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "wall_",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "price",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "range",
          "outputs": [
            {
              "internalType": "struct RANGEv1.Range",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct RANGEv1.Side",
                  "name": "low",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint48",
                      "name": "lastActive",
                      "type": "uint48"
                    },
                    {
                      "internalType": "uint256",
                      "name": "capacity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "market",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct RANGEv1.Side",
                  "name": "high",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint48",
                      "name": "lastActive",
                      "type": "uint48"
                    },
                    {
                      "internalType": "uint256",
                      "name": "capacity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "market",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct RANGEv1.Band",
                  "name": "cushion",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "high",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "low",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "spread",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct RANGEv1.Band",
                  "name": "wall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "high",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RANGEv1.Line",
                      "name": "low",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "spread",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "regenerate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserve",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cushionSpread_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wallSpread_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSpreads"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "thresholdFactor_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setThresholdFactor"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "wall_",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "spread",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "thresholdFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCapacity"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "high_",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "market_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marketCapacity_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMarket"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "movingAverage_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePrices"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic."
          },
          "VERSION()": {
            "returns": {
              "major": "- Major version upgrade indicates breaking change to the interface.",
              "minor": "- Minor version change retains backward-compatible interface."
            }
          },
          "active(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get status for (true = high side, false = low side)."
            }
          },
          "capacity(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get capacity for (true = high side, false = low side)."
            }
          },
          "lastActive(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get timestamp for (true = high side, false = low side)."
            }
          },
          "market(bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get market for (true = high side, false = low side)."
            }
          },
          "price(bool,bool)": {
            "params": {
              "high_": "- Specifies the side of the range to get the price for (true = high side, false = low side).",
              "wall_": "- Specifies the band to get the price for (true = wall, false = cushion)."
            }
          },
          "regenerate(bool,uint256)": {
            "params": {
              "capacity_": "- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).",
              "high_": "- Specifies the side of the range to regenerate (true = high side, false = low side)."
            }
          },
          "setSpreads(uint256,uint256)": {
            "details": "The new spreads will not go into effect until the next time updatePrices() is called.",
            "params": {
              "cushionSpread_": "- Percent spread to set the cushions at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).",
              "wallSpread_": "- Percent spread to set the walls at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%)."
            }
          },
          "setThresholdFactor(uint256)": {
            "details": "The new threshold factor will not go into effect until the next time regenerate() is called for each side of the wall.",
            "params": {
              "thresholdFactor_": "- Percent of capacity that the wall should close below, assumes 2 decimals (i.e. 1000 = 10%)."
            }
          },
          "spread(bool)": {
            "params": {
              "wall_": "- Specifies the band to get the spread for (true = wall, false = cushion)."
            }
          },
          "updateCapacity(bool,uint256)": {
            "params": {
              "capacity_": "- Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side).",
              "high_": "- Specifies the side of the range to update capacity for (true = high side, false = low side)."
            }
          },
          "updateMarket(bool,uint256,uint256)": {
            "params": {
              "high_": "- Specifies the side of the range to update market for (true = high side, false = low side).",
              "marketCapacity_": "- Amount to set the last market capacity to (GDAO tokens for high side, Reserve tokens for low side).",
              "market_": "- Market ID to set for the side."
            }
          },
          "updatePrices(uint256)": {
            "params": {
              "movingAverage_": "- Current moving average price to set range prices from."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": {
            "notice": "Initialization function for the module"
          },
          "KEYCODE()": {
            "notice": "5 byte identifier for a module."
          },
          "VERSION()": {
            "notice": "Returns which semantic version of a module is being implemented."
          },
          "active(bool)": {
            "notice": "Get the status of a side of the range (whether it is active or not)."
          },
          "capacity(bool)": {
            "notice": "Get the capacity for a side of the range."
          },
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          },
          "gdao()": {
            "notice": "GDAO token contract address"
          },
          "lastActive(bool)": {
            "notice": "Get the timestamp when the range was last active."
          },
          "market(bool)": {
            "notice": "Get the market ID for a side of the range."
          },
          "price(bool,bool)": {
            "notice": "Get the price for the wall or cushion for a side of the range."
          },
          "range()": {
            "notice": "Get the full Range data in a struct."
          },
          "regenerate(bool,uint256)": {
            "notice": "Regenerate a side of the range to a specific capacity.Access restricted to activated policies."
          },
          "reserve()": {
            "notice": "Reserve token contract address"
          },
          "setSpreads(uint256,uint256)": {
            "notice": "Set the wall and cushion spreads.Access restricted to activated policies."
          },
          "setThresholdFactor(uint256)": {
            "notice": "Set the threshold factor for when a wall is considered \"down\".Access restricted to activated policies."
          },
          "spread(bool)": {
            "notice": "Get the spread for the wall or cushion band."
          },
          "thresholdFactor()": {
            "notice": "Threshold factor for the change, a percent in 2 decimals (i.e. 1000 = 10%). Determines how much of the capacity must be spent before the side is taken down."
          },
          "updateCapacity(bool,uint256)": {
            "notice": "Update the capacity for a side of the range.Access restricted to activated policies."
          },
          "updateMarket(bool,uint256,uint256)": {
            "notice": "Update the market ID (cushion) for a side of the range.Access restricted to activated policies."
          },
          "updatePrices(uint256)": {
            "notice": "Update the prices for the low and high sides.Access restricted to activated policies."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":balancer-v2/=lib/balancer-v2/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/RANGE/RANGE.v1.sol": "RANGEv1"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/RANGE/RANGE.v1.sol": {
        "keccak256": "0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb",
        "urls": [
          "bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85",
          "dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/RANGE/RANGE.v1.sol",
    "id": 40466,
    "exportedSymbols": {
      "Actions": [
        28076
      ],
      "ERC20": [
        25226
      ],
      "Instruction": [
        28082
      ],
      "InvalidKeycode": [
        28099
      ],
      "Kernel": [
        29225
      ],
      "KernelAdapter": [
        28240
      ],
      "Keycode": [
        28090
      ],
      "Module": [
        28305
      ],
      "Permissions": [
        28088
      ],
      "Policy": [
        28387
      ],
      "RANGEv1": [
        40465
      ],
      "TargetNotAContract": [
        28094
      ],
      "ensureContract": [
        28143
      ],
      "ensureValidKeycode": [
        28188
      ],
      "fromKeycode": [
        28127
      ],
      "toKeycode": [
        28113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:7412:98",
    "nodes": [
      {
        "id": 40254,
        "nodeType": "PragmaDirective",
        "src": "37:23:98",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 40256,
        "nodeType": "ImportDirective",
        "src": "62:47:98",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40466,
        "sourceUnit": 25227,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40255,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25226,
              "src": "70:5:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40257,
        "nodeType": "ImportDirective",
        "src": "110:24:98",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40466,
        "sourceUnit": 29226,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40465,
        "nodeType": "ContractDefinition",
        "src": "136:7312:98",
        "nodes": [
          {
            "id": 40267,
            "nodeType": "EventDefinition",
            "src": "217:64:98",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "518b1eea6c42d5d25b8983db58076556c4eb12d0f58f403100e037bbdf629cc3",
            "name": "WallUp",
            "nameLocation": "223:6:98",
            "parameters": {
              "id": 40266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40261,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "235:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40267,
                  "src": "230:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "230:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40263,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "250:10:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40267,
                  "src": "242:18:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "270:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40267,
                  "src": "262:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "229:51:98"
            }
          },
          {
            "id": 40275,
            "nodeType": "EventDefinition",
            "src": "286:66:98",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c897c3dfa8334f335974948095373e499dbc757ce1133f2980bcfca098c736bf",
            "name": "WallDown",
            "nameLocation": "292:8:98",
            "parameters": {
              "id": 40274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40269,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "306:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40275,
                  "src": "301:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40268,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40271,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "321:10:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40275,
                  "src": "313:18:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40273,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "341:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40275,
                  "src": "333:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:51:98"
            }
          },
          {
            "id": 40283,
            "nodeType": "EventDefinition",
            "src": "357:67:98",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6addeb12ca5495dd878280b56a2ebcc0c18eda83a3d30ea01f9c661b03209001",
            "name": "CushionUp",
            "nameLocation": "363:9:98",
            "parameters": {
              "id": 40282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40277,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "378:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40283,
                  "src": "373:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40276,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40279,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "393:10:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40283,
                  "src": "385:18:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40281,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "413:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40283,
                  "src": "405:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "372:51:98"
            }
          },
          {
            "id": 40289,
            "nodeType": "EventDefinition",
            "src": "429:50:98",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c0be2d89ec6f4d478c644e7dcb37ec5372fb158563c955066b91b5650e37e327",
            "name": "CushionDown",
            "nameLocation": "435:11:98",
            "parameters": {
              "id": 40288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40285,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "452:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40289,
                  "src": "447:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40284,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40287,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp_",
                  "nameLocation": "467:10:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40289,
                  "src": "459:18:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "446:32:98"
            }
          },
          {
            "id": 40299,
            "nodeType": "EventDefinition",
            "src": "484:158:98",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7f3eb23042093bdf239802495c60dece3a6249a51e7d0830afa71dc7bb184da9",
            "name": "PricesChanged",
            "nameLocation": "490:13:98",
            "parameters": {
              "id": 40298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40291,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wallLowPrice_",
                  "nameLocation": "521:13:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40299,
                  "src": "513:21:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40293,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cushionLowPrice_",
                  "nameLocation": "552:16:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40299,
                  "src": "544:24:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40295,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cushionHighPrice_",
                  "nameLocation": "586:17:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40299,
                  "src": "578:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wallHighPrice_",
                  "nameLocation": "621:14:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40299,
                  "src": "613:22:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "503:138:98"
            }
          },
          {
            "id": 40305,
            "nodeType": "EventDefinition",
            "src": "647:66:98",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f9f6bac7789241c1f8bc37f72defbdc6b5482ec2c96cb91f7ebf917c7ef7ff98",
            "name": "SpreadsChanged",
            "nameLocation": "653:14:98",
            "parameters": {
              "id": 40304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40301,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cushionSpread_",
                  "nameLocation": "676:14:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40305,
                  "src": "668:22:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40303,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wallSpread_",
                  "nameLocation": "700:11:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40305,
                  "src": "692:19:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "667:45:98"
            }
          },
          {
            "id": 40309,
            "nodeType": "EventDefinition",
            "src": "718:55:98",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "66df6e0040d88b0d9e6e482ec0ef8983562d1186b0b94f9747f64f3c7e386335",
            "name": "ThresholdFactorChanged",
            "nameLocation": "724:22:98",
            "parameters": {
              "id": 40308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40307,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thresholdFactor_",
                  "nameLocation": "755:16:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40309,
                  "src": "747:24:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:26:98"
            }
          },
          {
            "id": 40311,
            "nodeType": "ErrorDefinition",
            "src": "818:28:98",
            "nodes": [],
            "errorSelector": "c51f44ab",
            "name": "RANGE_InvalidParams",
            "nameLocation": "824:19:98",
            "parameters": {
              "id": 40310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:2:98"
            }
          },
          {
            "id": 40314,
            "nodeType": "StructDefinition",
            "src": "890:75:98",
            "nodes": [],
            "canonicalName": "RANGEv1.Line",
            "members": [
              {
                "constant": false,
                "id": 40313,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "920:5:98",
                "nodeType": "VariableDeclaration",
                "scope": 40314,
                "src": "912:13:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40312,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "912:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Line",
            "nameLocation": "897:4:98",
            "scope": 40465,
            "visibility": "public"
          },
          {
            "id": 40323,
            "nodeType": "StructDefinition",
            "src": "971:300:98",
            "nodes": [],
            "canonicalName": "RANGEv1.Band",
            "members": [
              {
                "constant": false,
                "id": 40317,
                "mutability": "mutable",
                "name": "high",
                "nameLocation": "998:4:98",
                "nodeType": "VariableDeclaration",
                "scope": 40323,
                "src": "993:9:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Line_$40314_storage_ptr",
                  "typeString": "struct RANGEv1.Line"
                },
                "typeName": {
                  "id": 40316,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 40315,
                    "name": "Line",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 40314,
                    "src": "993:4:98"
                  },
                  "referencedDeclaration": 40314,
                  "src": "993:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Line_$40314_storage_ptr",
                    "typeString": "struct RANGEv1.Line"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40320,
                "mutability": "mutable",
                "name": "low",
                "nameLocation": "1055:3:98",
                "nodeType": "VariableDeclaration",
                "scope": 40323,
                "src": "1050:8:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Line_$40314_storage_ptr",
                  "typeString": "struct RANGEv1.Line"
                },
                "typeName": {
                  "id": 40319,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 40318,
                    "name": "Line",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 40314,
                    "src": "1050:4:98"
                  },
                  "referencedDeclaration": 40314,
                  "src": "1050:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Line_$40314_storage_ptr",
                    "typeString": "struct RANGEv1.Line"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40322,
                "mutability": "mutable",
                "name": "spread",
                "nameLocation": "1113:6:98",
                "nodeType": "VariableDeclaration",
                "scope": 40323,
                "src": "1105:14:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40321,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1105:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Band",
            "nameLocation": "978:4:98",
            "scope": 40465,
            "visibility": "public"
          },
          {
            "id": 40334,
            "nodeType": "StructDefinition",
            "src": "1277:764:98",
            "nodes": [],
            "canonicalName": "RANGEv1.Side",
            "members": [
              {
                "constant": false,
                "id": 40325,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1304:6:98",
                "nodeType": "VariableDeclaration",
                "scope": 40334,
                "src": "1299:11:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 40324,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1299:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40327,
                "mutability": "mutable",
                "name": "lastActive",
                "nameLocation": "1462:10:98",
                "nodeType": "VariableDeclaration",
                "scope": 40334,
                "src": "1455:17:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 40326,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "1455:6:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40329,
                "mutability": "mutable",
                "name": "capacity",
                "nameLocation": "1551:8:98",
                "nodeType": "VariableDeclaration",
                "scope": 40334,
                "src": "1543:16:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40328,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1543:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40331,
                "mutability": "mutable",
                "name": "threshold",
                "nameLocation": "1725:9:98",
                "nodeType": "VariableDeclaration",
                "scope": 40334,
                "src": "1717:17:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40330,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1717:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40333,
                "mutability": "mutable",
                "name": "market",
                "nameLocation": "1907:6:98",
                "nodeType": "VariableDeclaration",
                "scope": 40334,
                "src": "1899:14:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40332,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1899:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Side",
            "nameLocation": "1284:4:98",
            "scope": 40465,
            "visibility": "public"
          },
          {
            "id": 40347,
            "nodeType": "StructDefinition",
            "src": "2047:300:98",
            "nodes": [],
            "canonicalName": "RANGEv1.Range",
            "members": [
              {
                "constant": false,
                "id": 40337,
                "mutability": "mutable",
                "name": "low",
                "nameLocation": "2075:3:98",
                "nodeType": "VariableDeclaration",
                "scope": 40347,
                "src": "2070:8:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Side_$40334_storage_ptr",
                  "typeString": "struct RANGEv1.Side"
                },
                "typeName": {
                  "id": 40336,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 40335,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 40334,
                    "src": "2070:4:98"
                  },
                  "referencedDeclaration": 40334,
                  "src": "2070:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Side_$40334_storage_ptr",
                    "typeString": "struct RANGEv1.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40340,
                "mutability": "mutable",
                "name": "high",
                "nameLocation": "2139:4:98",
                "nodeType": "VariableDeclaration",
                "scope": 40347,
                "src": "2134:9:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Side_$40334_storage_ptr",
                  "typeString": "struct RANGEv1.Side"
                },
                "typeName": {
                  "id": 40339,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 40338,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 40334,
                    "src": "2134:4:98"
                  },
                  "referencedDeclaration": 40334,
                  "src": "2134:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Side_$40334_storage_ptr",
                    "typeString": "struct RANGEv1.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40343,
                "mutability": "mutable",
                "name": "cushion",
                "nameLocation": "2205:7:98",
                "nodeType": "VariableDeclaration",
                "scope": 40347,
                "src": "2200:12:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Band_$40323_storage_ptr",
                  "typeString": "struct RANGEv1.Band"
                },
                "typeName": {
                  "id": 40342,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 40341,
                    "name": "Band",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 40323,
                    "src": "2200:4:98"
                  },
                  "referencedDeclaration": 40323,
                  "src": "2200:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Band_$40323_storage_ptr",
                    "typeString": "struct RANGEv1.Band"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40346,
                "mutability": "mutable",
                "name": "wall",
                "nameLocation": "2283:4:98",
                "nodeType": "VariableDeclaration",
                "scope": 40347,
                "src": "2278:9:98",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Band_$40323_storage_ptr",
                  "typeString": "struct RANGEv1.Band"
                },
                "typeName": {
                  "id": 40345,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 40344,
                    "name": "Band",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 40323,
                    "src": "2278:4:98"
                  },
                  "referencedDeclaration": 40323,
                  "src": "2278:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Band_$40323_storage_ptr",
                    "typeString": "struct RANGEv1.Band"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Range",
            "nameLocation": "2054:5:98",
            "scope": 40465,
            "visibility": "public"
          },
          {
            "id": 40350,
            "nodeType": "VariableDeclaration",
            "src": "2395:21:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_range",
            "nameLocation": "2410:6:98",
            "scope": 40465,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Range_$40347_storage",
              "typeString": "struct RANGEv1.Range"
            },
            "typeName": {
              "id": 40349,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40348,
                "name": "Range",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40347,
                "src": "2395:5:98"
              },
              "referencedDeclaration": 40347,
              "src": "2395:5:98",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Range_$40347_storage_ptr",
                "typeString": "struct RANGEv1.Range"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40353,
            "nodeType": "VariableDeclaration",
            "src": "2740:30:98",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 40351,
              "nodeType": "StructuredDocumentation",
              "src": "2423:312:98",
              "text": "@notice Threshold factor for the change, a percent in 2 decimals (i.e. 1000 = 10%). Determines how much of the capacity must be spent before the side is taken down.\n @dev    A threshold is required so that a wall is not \"active\" with a capacity near zero, but unable to be depleted practically (dust)."
            },
            "functionSelector": "c21e6652",
            "mutability": "mutable",
            "name": "thresholdFactor",
            "nameLocation": "2755:15:98",
            "scope": 40465,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2740:7:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40357,
            "nodeType": "VariableDeclaration",
            "src": "2821:17:98",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 40354,
              "nodeType": "StructuredDocumentation",
              "src": "2777:39:98",
              "text": "@notice GDAO token contract address"
            },
            "functionSelector": "a29a0d90",
            "mutability": "mutable",
            "name": "gdao",
            "nameLocation": "2834:4:98",
            "scope": 40465,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$25226",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 40356,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40355,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25226,
                "src": "2821:5:98"
              },
              "referencedDeclaration": 25226,
              "src": "2821:5:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25226",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40361,
            "nodeType": "VariableDeclaration",
            "src": "2892:20:98",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 40358,
              "nodeType": "StructuredDocumentation",
              "src": "2845:42:98",
              "text": "@notice Reserve token contract address"
            },
            "functionSelector": "cd3293de",
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "2905:7:98",
            "scope": 40465,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$25226",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 40360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40359,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25226,
                "src": "2892:5:98"
              },
              "referencedDeclaration": 25226,
              "src": "2892:5:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25226",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40369,
            "nodeType": "FunctionDefinition",
            "src": "3312:72:98",
            "nodes": [],
            "documentation": {
              "id": 40362,
              "nodeType": "StructuredDocumentation",
              "src": "2961:346:98",
              "text": "@notice Update the capacity for a side of the range.\n @notice Access restricted to activated policies.\n @param  high_ - Specifies the side of the range to update capacity for (true = high side, false = low side).\n @param  capacity_ - Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side)."
            },
            "functionSelector": "6d9a9a62",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCapacity",
            "nameLocation": "3321:14:98",
            "parameters": {
              "id": 40367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40364,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "3341:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40369,
                  "src": "3336:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40363,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40366,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "3356:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40369,
                  "src": "3348:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3335:31:98"
            },
            "returnParameters": {
              "id": 40368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3383:0:98"
            },
            "scope": 40465,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40375,
            "nodeType": "FunctionDefinition",
            "src": "3597:63:98",
            "nodes": [],
            "documentation": {
              "id": 40370,
              "nodeType": "StructuredDocumentation",
              "src": "3390:202:98",
              "text": "@notice Update the prices for the low and high sides.\n @notice Access restricted to activated policies.\n @param  movingAverage_ - Current moving average price to set range prices from."
            },
            "functionSelector": "ae7e8d81",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updatePrices",
            "nameLocation": "3606:12:98",
            "parameters": {
              "id": 40373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40372,
                  "mutability": "mutable",
                  "name": "movingAverage_",
                  "nameLocation": "3627:14:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40375,
                  "src": "3619:22:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3619:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3618:24:98"
            },
            "returnParameters": {
              "id": 40374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3659:0:98"
            },
            "scope": 40465,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40383,
            "nodeType": "FunctionDefinition",
            "src": "4018:68:98",
            "nodes": [],
            "documentation": {
              "id": 40376,
              "nodeType": "StructuredDocumentation",
              "src": "3666:347:98",
              "text": "@notice Regenerate a side of the range to a specific capacity.\n @notice Access restricted to activated policies.\n @param  high_ - Specifies the side of the range to regenerate (true = high side, false = low side).\n @param  capacity_ - Amount to set the capacity to (GDAO tokens for high side, Reserve tokens for low side)."
            },
            "functionSelector": "00d16739",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "regenerate",
            "nameLocation": "4027:10:98",
            "parameters": {
              "id": 40381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40378,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "4043:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40383,
                  "src": "4038:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40377,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4038:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40380,
                  "mutability": "mutable",
                  "name": "capacity_",
                  "nameLocation": "4058:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40383,
                  "src": "4050:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4050:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4037:31:98"
            },
            "returnParameters": {
              "id": 40382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4085:0:98"
            },
            "scope": 40465,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40393,
            "nodeType": "FunctionDefinition",
            "src": "4527:123:98",
            "nodes": [],
            "documentation": {
              "id": 40384,
              "nodeType": "StructuredDocumentation",
              "src": "4092:430:98",
              "text": "@notice Update the market ID (cushion) for a side of the range.\n @notice Access restricted to activated policies.\n @param  high_ - Specifies the side of the range to update market for (true = high side, false = low side).\n @param  market_ - Market ID to set for the side.\n @param  marketCapacity_ - Amount to set the last market capacity to (GDAO tokens for high side, Reserve tokens for low side)."
            },
            "functionSelector": "3e56993a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateMarket",
            "nameLocation": "4536:12:98",
            "parameters": {
              "id": 40391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40386,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "4563:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40393,
                  "src": "4558:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40388,
                  "mutability": "mutable",
                  "name": "market_",
                  "nameLocation": "4586:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40393,
                  "src": "4578:15:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4578:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40390,
                  "mutability": "mutable",
                  "name": "marketCapacity_",
                  "nameLocation": "4611:15:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40393,
                  "src": "4603:23:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4603:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4548:84:98"
            },
            "returnParameters": {
              "id": 40392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4649:0:98"
            },
            "scope": 40465,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40401,
            "nodeType": "FunctionDefinition",
            "src": "5141:82:98",
            "nodes": [],
            "documentation": {
              "id": 40394,
              "nodeType": "StructuredDocumentation",
              "src": "4656:480:98",
              "text": "@notice Set the wall and cushion spreads.\n @notice Access restricted to activated policies.\n @param  cushionSpread_ - Percent spread to set the cushions at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\n @param  wallSpread_ - Percent spread to set the walls at above/below the moving average, assumes 2 decimals (i.e. 1000 = 10%).\n @dev    The new spreads will not go into effect until the next time updatePrices() is called."
            },
            "functionSelector": "41f19a46",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSpreads",
            "nameLocation": "5150:10:98",
            "parameters": {
              "id": 40399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40396,
                  "mutability": "mutable",
                  "name": "cushionSpread_",
                  "nameLocation": "5169:14:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40401,
                  "src": "5161:22:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5161:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40398,
                  "mutability": "mutable",
                  "name": "wallSpread_",
                  "nameLocation": "5193:11:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40401,
                  "src": "5185:19:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5185:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5160:45:98"
            },
            "returnParameters": {
              "id": 40400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5222:0:98"
            },
            "scope": 40465,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40407,
            "nodeType": "FunctionDefinition",
            "src": "5627:71:98",
            "nodes": [],
            "documentation": {
              "id": 40402,
              "nodeType": "StructuredDocumentation",
              "src": "5229:393:98",
              "text": "@notice Set the threshold factor for when a wall is considered \"down\".\n @notice Access restricted to activated policies.\n @param  thresholdFactor_ - Percent of capacity that the wall should close below, assumes 2 decimals (i.e. 1000 = 10%).\n @dev    The new threshold factor will not go into effect until the next time regenerate() is called for each side of the wall."
            },
            "functionSelector": "33bd33b4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setThresholdFactor",
            "nameLocation": "5636:18:98",
            "parameters": {
              "id": 40405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40404,
                  "mutability": "mutable",
                  "name": "thresholdFactor_",
                  "nameLocation": "5663:16:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40407,
                  "src": "5655:24:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5654:26:98"
            },
            "returnParameters": {
              "id": 40406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:98"
            },
            "scope": 40465,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40414,
            "nodeType": "FunctionDefinition",
            "src": "5757:62:98",
            "nodes": [],
            "documentation": {
              "id": 40408,
              "nodeType": "StructuredDocumentation",
              "src": "5704:48:98",
              "text": "@notice Get the full Range data in a struct."
            },
            "functionSelector": "e97206a9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "range",
            "nameLocation": "5766:5:98",
            "parameters": {
              "id": 40409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5771:2:98"
            },
            "returnParameters": {
              "id": 40413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40414,
                  "src": "5805:12:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Range_$40347_memory_ptr",
                    "typeString": "struct RANGEv1.Range"
                  },
                  "typeName": {
                    "id": 40411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40410,
                      "name": "Range",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40347,
                      "src": "5805:5:98"
                    },
                    "referencedDeclaration": 40347,
                    "src": "5805:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$40347_storage_ptr",
                      "typeString": "struct RANGEv1.Range"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5804:14:98"
            },
            "scope": 40465,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40422,
            "nodeType": "FunctionDefinition",
            "src": "5997:70:98",
            "nodes": [],
            "documentation": {
              "id": 40415,
              "nodeType": "StructuredDocumentation",
              "src": "5825:167:98",
              "text": "@notice Get the capacity for a side of the range.\n @param  high_ - Specifies the side of the range to get capacity for (true = high side, false = low side)."
            },
            "functionSelector": "bf30142b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "capacity",
            "nameLocation": "6006:8:98",
            "parameters": {
              "id": 40418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40417,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "6020:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40422,
                  "src": "6015:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40416,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6015:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6014:12:98"
            },
            "returnParameters": {
              "id": 40421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40422,
                  "src": "6058:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6058:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6057:9:98"
            },
            "scope": 40465,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40430,
            "nodeType": "FunctionDefinition",
            "src": "6270:65:98",
            "nodes": [],
            "documentation": {
              "id": 40423,
              "nodeType": "StructuredDocumentation",
              "src": "6073:192:98",
              "text": "@notice Get the status of a side of the range (whether it is active or not).\n @param  high_ - Specifies the side of the range to get status for (true = high side, false = low side)."
            },
            "functionSelector": "59d236e6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "active",
            "nameLocation": "6279:6:98",
            "parameters": {
              "id": 40426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40425,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "6291:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40430,
                  "src": "6286:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40424,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6286:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6285:12:98"
            },
            "returnParameters": {
              "id": 40429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40428,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40430,
                  "src": "6329:4:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40427,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6329:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6328:6:98"
            },
            "scope": 40465,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40440,
            "nodeType": "FunctionDefinition",
            "src": "6631:79:98",
            "nodes": [],
            "documentation": {
              "id": 40431,
              "nodeType": "StructuredDocumentation",
              "src": "6341:285:98",
              "text": "@notice Get the price for the wall or cushion for a side of the range.\n @param  wall_ - Specifies the band to get the price for (true = wall, false = cushion).\n @param  high_ - Specifies the side of the range to get the price for (true = high side, false = low side)."
            },
            "functionSelector": "3778c2b2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "price",
            "nameLocation": "6640:5:98",
            "parameters": {
              "id": 40436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40433,
                  "mutability": "mutable",
                  "name": "wall_",
                  "nameLocation": "6651:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40440,
                  "src": "6646:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40432,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6646:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40435,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "6663:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40440,
                  "src": "6658:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40434,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6658:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6645:24:98"
            },
            "returnParameters": {
              "id": 40439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40440,
                  "src": "6701:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6700:9:98"
            },
            "scope": 40465,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40448,
            "nodeType": "FunctionDefinition",
            "src": "6874:68:98",
            "nodes": [],
            "documentation": {
              "id": 40441,
              "nodeType": "StructuredDocumentation",
              "src": "6716:153:98",
              "text": "@notice Get the spread for the wall or cushion band.\n @param  wall_ - Specifies the band to get the spread for (true = wall, false = cushion)."
            },
            "functionSelector": "8c3f914a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "spread",
            "nameLocation": "6883:6:98",
            "parameters": {
              "id": 40444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40443,
                  "mutability": "mutable",
                  "name": "wall_",
                  "nameLocation": "6895:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40448,
                  "src": "6890:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40442,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6890:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6889:12:98"
            },
            "returnParameters": {
              "id": 40447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40448,
                  "src": "6933:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6933:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6932:9:98"
            },
            "scope": 40465,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40456,
            "nodeType": "FunctionDefinition",
            "src": "7119:68:98",
            "nodes": [],
            "documentation": {
              "id": 40449,
              "nodeType": "StructuredDocumentation",
              "src": "6948:166:98",
              "text": "@notice Get the market ID for a side of the range.\n @param  high_ - Specifies the side of the range to get market for (true = high side, false = low side)."
            },
            "functionSelector": "c45e91d6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "market",
            "nameLocation": "7128:6:98",
            "parameters": {
              "id": 40452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40451,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "7140:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40456,
                  "src": "7135:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7135:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7134:12:98"
            },
            "returnParameters": {
              "id": 40455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40454,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40456,
                  "src": "7178:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7177:9:98"
            },
            "scope": 40465,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 40464,
            "nodeType": "FunctionDefinition",
            "src": "7374:72:98",
            "nodes": [],
            "documentation": {
              "id": 40457,
              "nodeType": "StructuredDocumentation",
              "src": "7193:176:98",
              "text": "@notice Get the timestamp when the range was last active.\n @param  high_ - Specifies the side of the range to get timestamp for (true = high side, false = low side)."
            },
            "functionSelector": "e69f3c4e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lastActive",
            "nameLocation": "7383:10:98",
            "parameters": {
              "id": 40460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40459,
                  "mutability": "mutable",
                  "name": "high_",
                  "nameLocation": "7399:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 40464,
                  "src": "7394:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40458,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7394:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7393:12:98"
            },
            "returnParameters": {
              "id": 40463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40462,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40464,
                  "src": "7437:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7437:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7436:9:98"
            },
            "scope": 40465,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 40258,
              "name": "Module",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28305,
              "src": "165:6:98"
            },
            "id": 40259,
            "nodeType": "InheritanceSpecifier",
            "src": "165:6:98"
          }
        ],
        "canonicalName": "RANGEv1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          40465,
          28305,
          28240
        ],
        "name": "RANGEv1",
        "nameLocation": "154:7:98",
        "scope": 40466,
        "usedErrors": [
          28193,
          28247,
          40311
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 98
}