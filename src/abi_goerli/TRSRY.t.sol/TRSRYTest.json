{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRSRY",
      "outputs": [
        {
          "internalType": "contract GoerliDaoTreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debtor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "godmode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ngmi",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_ApprovedCanWithdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_ClearDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_DecreaseWithdrawApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_GetReserveBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_IncreaseWithdrawApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_IncurDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_KEYCODE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_RepayDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_SetDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_Shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_AddressWithPermCannotShutdownOrRestart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testRevert_UnauthorizedCannotIncurDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testRevert_UnauthorizedCannotWithdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_UnauthorizedPolicyCannotSetDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b5061a7c680620000326000396000f3fe60806040523480156200001157600080fd5b5060043610620001b95760003560e01c806382e3ea4411620000f5578063c5c680f31162000097578063f8ccbf47116200006e578063f8ccbf471462000362578063fa7626d41462000376578063fb223f18146200038457600080fd5b8063c5c680f3146200032d578063cee397551462000341578063cf18f8d3146200035857600080fd5b8063a785dfa811620000cc578063a785dfa814620002e4578063ba414fa614620002fb578063bcf643cd146200031657600080fd5b806382e3ea4414620002bc5780639cb64a2d14620002c6578063a1fbc67314620002da57600080fd5b8063437e7dfd116200015f57806362e12a7d116200013657806362e12a7d146200027a5780636411193d146200029157806380cee4ab14620002a857600080fd5b8063437e7dfd146200024f5780635bdb8b041462000259578063628a7987146200027057600080fd5b806318b9d8c8116200019457806318b9d8c814620002125780632ba22b18146200021c5780633a768463146200023357600080fd5b80630a9254e414620001be5780630e375e4014620001ca5780630fa89a3b14620001fb575b600080fd5b620001c862000398565b005b600c54620001de906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620001c86200020c366004620051e3565b62000ac6565b620001c862000e43565b620001c86200022d366004620051e3565b62001349565b620001de737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b620001c8620014a8565b620001c86200026a366004620051e3565b620018d7565b620001c862001d36565b620001c86200028b366004620051e3565b62001dfd565b620001c8620002a2366004620051e3565b62002055565b600954620001de906001600160a01b031681565b620001c862002619565b600d54620001de906001600160a01b031681565b620001c862002a58565b620001c8620002f5366004620051e3565b62002aad565b6200030562002d0d565b6040519015158152602001620001f2565b620001c862000327366004620051e3565b62002e77565b600b54620001de906001600160a01b031681565b620001c862000352366004620051e3565b62003eac565b620001c8620042a6565b600054620003059062010000900460ff1681565b600054620003059060ff1681565b600a54620001de906001600160a01b031681565b604051620003a690620051b9565b604051809103906000f080158015620003c3573d6000803e3d6000fd5b50600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040516200040990620051c7565b6001600160a01b039091168152602001604051809103906000f08015801562000436573d6000803e3d6000fd5b50600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790556040516012906200048090620051d5565b60608082526011908201527f6e6f7420676f6e6e61206d616b65206974000000000000000000000000000000608082015260a0602082018190526004908201527f4e474d490000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000510573d6000803e3d6000fd5b50600a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283161790556008546009546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081529183169263c4d1f8f1926200058e926000921690600401620051fd565b600060405180830381600087803b158015620005a957600080fd5b505af1158015620005be573d6000803e3d6000fd5b5050600954604080518082018252601181527f476f65726c6944616f5472656173757279000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$__94506390499579935062000652926001600160a01b03169190600401620052cc565b602060405180830381865af415801562000670573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006969190620052f8565b600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556008546040517fc4d1f8f100000000000000000000000000000000000000000000000000000000815292169163c4d1f8f191620007119160029190600401620051fd565b600060405180830381600087803b1580156200072c57600080fd5b505af115801562000741573d6000803e3d6000fd5b50506009546040517f9c2ed15e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201527f2f42aef500000000000000000000000000000000000000000000000000000000602482015273__$6a18d296e27eadcc0fe82d65240272eaa9$__9250639c2ed15e9150604401602060405180830381865af4158015620007e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008079190620052f8565b600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556008546040517fc4d1f8f100000000000000000000000000000000000000000000000000000000815292169163c4d1f8f191620008829160029190600401620051fd565b600060405180830381600087803b1580156200089d57600080fd5b505af1158015620008b2573d6000803e3d6000fd5b5050600954604080518082018252601181527f476f65726c6944616f5472656173757279000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$",
    "sourceMap": "637:9588:164:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;637:9588:164;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "ModuleTestFixtureGenerator": [
          {
            "start": 1615,
            "length": 20
          },
          {
            "start": 2006,
            "length": 20
          },
          {
            "start": 2371,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001b95760003560e01c806382e3ea4411620000f5578063c5c680f31162000097578063f8ccbf47116200006e578063f8ccbf471462000362578063fa7626d41462000376578063fb223f18146200038457600080fd5b8063c5c680f3146200032d578063cee397551462000341578063cf18f8d3146200035857600080fd5b8063a785dfa811620000cc578063a785dfa814620002e4578063ba414fa614620002fb578063bcf643cd146200031657600080fd5b806382e3ea4414620002bc5780639cb64a2d14620002c6578063a1fbc67314620002da57600080fd5b8063437e7dfd116200015f57806362e12a7d116200013657806362e12a7d146200027a5780636411193d146200029157806380cee4ab14620002a857600080fd5b8063437e7dfd146200024f5780635bdb8b041462000259578063628a7987146200027057600080fd5b806318b9d8c8116200019457806318b9d8c814620002125780632ba22b18146200021c5780633a768463146200023357600080fd5b80630a9254e414620001be5780630e375e4014620001ca5780630fa89a3b14620001fb575b600080fd5b620001c862000398565b005b600c54620001de906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620001c86200020c366004620051e3565b62000ac6565b620001c862000e43565b620001c86200022d366004620051e3565b62001349565b620001de737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b620001c8620014a8565b620001c86200026a366004620051e3565b620018d7565b620001c862001d36565b620001c86200028b366004620051e3565b62001dfd565b620001c8620002a2366004620051e3565b62002055565b600954620001de906001600160a01b031681565b620001c862002619565b600d54620001de906001600160a01b031681565b620001c862002a58565b620001c8620002f5366004620051e3565b62002aad565b6200030562002d0d565b6040519015158152602001620001f2565b620001c862000327366004620051e3565b62002e77565b600b54620001de906001600160a01b031681565b620001c862000352366004620051e3565b62003eac565b620001c8620042a6565b600054620003059062010000900460ff1681565b600054620003059060ff1681565b600a54620001de906001600160a01b031681565b604051620003a690620051b9565b604051809103906000f080158015620003c3573d6000803e3d6000fd5b50600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040516200040990620051c7565b6001600160a01b039091168152602001604051809103906000f08015801562000436573d6000803e3d6000fd5b50600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790556040516012906200048090620051d5565b60608082526011908201527f6e6f7420676f6e6e61206d616b65206974000000000000000000000000000000608082015260a0602082018190526004908201527f4e474d490000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000510573d6000803e3d6000fd5b50600a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283161790556008546009546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081529183169263c4d1f8f1926200058e926000921690600401620051fd565b600060405180830381600087803b158015620005a957600080fd5b505af1158015620005be573d6000803e3d6000fd5b5050600954604080518082018252601181527f476f65726c6944616f5472656173757279000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$__94506390499579935062000652926001600160a01b03169190600401620052cc565b602060405180830381865af415801562000670573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006969190620052f8565b600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556008546040517fc4d1f8f100000000000000000000000000000000000000000000000000000000815292169163c4d1f8f191620007119160029190600401620051fd565b600060405180830381600087803b1580156200072c57600080fd5b505af115801562000741573d6000803e3d6000fd5b50506009546040517f9c2ed15e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201527f2f42aef500000000000000000000000000000000000000000000000000000000602482015273__$6a18d296e27eadcc0fe82d65240272eaa9$__9250639c2ed15e9150604401602060405180830381865af4158015620007e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008079190620052f8565b600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556008546040517fc4d1f8f100000000000000000000000000000000000000000000000000000000815292169163c4d1f8f191620008829160029190600401620051fd565b600060405180830381600087803b1580156200089d57600080fd5b505af1158015620008b2573d6000803e3d6000fd5b5050600954604080518082018252601181527f476f65726c6944616f5472656173757279000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$",
    "sourceMap": "637:9588:164:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:843;;;:::i;:::-;;851:22;;;;;-1:-1:-1;;;;;851:22:164;;;;;;-1:-1:-1;;;;;178:55:183;;;160:74;;148:2;133:18;851:22:164;;;;;;;;2652:443;;;;;;:::i;:::-;;:::i;6533:536::-;;;:::i;1935:241::-;;;;;;:::i;:::-;;:::i;321:38:1:-;;250:64;321:38;;5930:597:164;;;:::i;3594:616::-;;;;;;:::i;:::-;;:::i;1818:111::-;;;:::i;3238:350::-;;;;;;:::i;:::-;;:::i;4786:610::-;;;;;;:::i;:::-;;:::i;759:30::-;;;;;-1:-1:-1;;;;;759:30:164;;;5402:522;;;:::i;879:21::-;;;;;-1:-1:-1;;;;;879:21:164;;;2516:130;;;:::i;2182:328::-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;1095:14:183;;1088:22;1070:41;;1058:2;1043:18;1819:584:0;930:187:183;7075:1847:164;;;;;;:::i;:::-;;:::i;822:23::-;;;;;-1:-1:-1;;;;;822:23:164;;;4216:564;;;;;;:::i;:::-;;:::i;8928:1295::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;795:21:164;;;;;-1:-1:-1;;;;;795:21:164;;;969:843;1012:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1003:6:164;:21;;;;-1:-1:-1;;;;;1003:21:164;;;;;;;;;1042:29;;;;;:::i;:::-;-1:-1:-1;;;;;178:55:183;;;160:74;;148:2;133:18;1042:29:164;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1034:5:164;:37;;;;-1:-1:-1;;;;;1034:37:164;;;;;;;;;;1088:46;;1131:2;;1088:46;;;:::i;:::-;1957:2:183;1939:21;;;1996:2;1976:18;;;1969:30;2036:19;2030:3;2015:19;;2008:48;2094:3;2087:4;2072:20;;2065:33;;;2135:1;2114:19;;;2107:30;2174:6;2168:3;2153:19;;2146:35;2265:4;2253:17;;;-1:-1:-1;2233:18:183;;2226:45;2213:3;2198:19;1088:46:164;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1081:4:164;:53;;;;-1:-1:-1;;;;;1081:53:164;;;;;;1144:6;;1196:5;;1144:59;;;;;:6;;;;:20;;:59;;-1:-1:-1;;1196:5:164;;1144:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1304:5:164;;1333:28;;;;;;;;;;;;;;;;1304:58;;;;;:28;;-1:-1:-1;1304:28:164;;-1:-1:-1;1304:58:164;;-1:-1:-1;;;;;1304:5:164;;1333:28;1304:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1294:7;:68;;;;-1:-1:-1;;;;;1294:68:164;;;;;;;;;1372:6;;:53;;;;;:6;;;:20;;:53;;1393:22;;1294:68;1372:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1447:5:164;;:62;;;;;-1:-1:-1;;;;;1447:5:164;;;:62;;;4273:74:183;1477:31:164;4363:18:183;;;4356:107;1447:29:164;;-1:-1:-1;1447:29:164;;-1:-1:-1;4246:18:183;;1447:62:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1436:8;:73;;;;-1:-1:-1;;;;;1436:73:164;;;;;;;;;1519:6;;:54;;;;;:6;;;:20;;:54;;1540:22;;1436:73;1519:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1593:5:164;;1622:28;;;;;;;;;;;;;;;;1593:58;;;;;:28;;-1:-1:-1;1593:28:164;;-1:-1:-1;1593:58:164;;-1:-1:-1;;;;;1593:5:164;;1622:28;1593:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1584:6;:67;;;;-1:-1:-1;;;;;1584:67:164;;;;;;;;;1661:6;;:52;;;;;:6;;;:20;;:52;;1682:22;;1584:67;1661:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1758:4:164;;1776:5;;1758:47;;;;;-1:-1:-1;;;;;1776:5:164;;;1758:47;;;4648:74:183;956:6:164;4738:18:183;;;4731:34;1758:4:164;;;-1:-1:-1;1758:9:164;;-1:-1:-1;4621:18:183;;1758:47:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:843::o;2652:443::-;2736:41;;;;;956:6;2746:30;;2736:41;;;1070::183;250:64:1;;2736:9:164;;1043:18:183;;2736:41:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2797:7:164;;2788:17;;-1:-1:-1;;;2788:17:164;;-1:-1:-1;;;;;2797:7:164;;;2788:17;;;160:74:183;250:64:1;;-1:-1:-1;2788:8:164;;-1:-1:-1;133:18:183;;2788:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2815:5:164;;2846:8;;2856:4;;2815:55;;;;;-1:-1:-1;;;;;2846:8:164;;;2815:55;;;5058:34:183;2856:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;2815:5:164;;;-1:-1:-1;2815:30:164;;-1:-1:-1;4970:18:183;;2815:55:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2890:5:164;;2913:8;;2923:4;;2890:38;;;;;-1:-1:-1;;;;;2913:8:164;;;2890:38;;;5452:34:183;2923:4:164;;;5502:18:183;;;5495:43;2881:57:164;;-1:-1:-1;2890:5:164;;;-1:-1:-1;2890:22:164;;5364:18:183;;2890:38:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2930:7;2881:8;:57::i;:::-;2958:8;;2949:18;;-1:-1:-1;;;2949:18:164;;-1:-1:-1;;;;;2958:8:164;;;2949:18;;;160:74:183;250:64:1;;2949:8:164;;133:18:183;;2949::164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2977:5:164;;3015:4;;2977:52;;;;;3008:4;2977:52;;;5058:34:183;-1:-1:-1;;;;;3015:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;2977:5:164;;;-1:-1:-1;2977:22:164;;-1:-1:-1;4970:18:183;;2977:52:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3049:4:164;;:29;;;;;3072:4;3049:29;;;160:74:183;3040:48:164;;-1:-1:-1;;;;;;3049:4:164;;;;-1:-1:-1;3049:14:164;;133:18:183;;3049:29:164;14:226:183;3040:48:164;2652:443;:::o;6533:536::-;6596:7;;6587:17;;-1:-1:-1;;;6587:17:164;;-1:-1:-1;;;;;6596:7:164;;;6587:17;;;160:74:183;250:64:1;;6587:8:164;;133:18:183;;6587:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6614:5:164;;6643:6;;6651:4;;6614:64;;;;;-1:-1:-1;;;;;6643:6:164;;;6614:64;;;5058:34:183;6651:4:164;;;5108:18:183;;;5101:43;956:6:164;5160:18:183;;;5153:34;6614:5:164;;;-1:-1:-1;6614:28:164;;-1:-1:-1;4970:18:183;;6614:64:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6698:6:164;;6689:16;;-1:-1:-1;;;6689:16:164;;-1:-1:-1;;;;;6698:6:164;;;6689:16;;;160:74:183;250:64:1;;-1:-1:-1;6689:8:164;;-1:-1:-1;133:18:183;;6689:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6715:5:164;;6731:4;;6715:43;;;;;-1:-1:-1;;;;;6731:4:164;;;6715:43;;;4648:74:183;956:6:164;4738:18:183;;;4731:34;6715:5:164;;;-1:-1:-1;6715:15:164;;-1:-1:-1;4621:18:183;;6715:43:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6778:5:164;;6796:4;;6802:6;;6778:31;;;;;-1:-1:-1;;;;;6796:4:164;;;6778:31;;;5452:34:183;6802:6:164;;;5502:18:183;;;5495:43;6769:63:164;;-1:-1:-1;6778:5:164;;;-1:-1:-1;6778:17:164;;5364:18:183;;6778:31:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;956:6;6769:8;:63::i;:::-;6851:5;;6867:4;;6851:21;;;;;-1:-1:-1;;;;;6867:4:164;;;6851:21;;;160:74:183;6842:53:164;;6851:5;;;;;:15;;133:18:183;;6851:21:164;14:226:183;6842:53:164;6915:7;;6906:17;;-1:-1:-1;;;6906:17:164;;-1:-1:-1;;;;;6915:7:164;;;6906:17;;;160:74:183;250:64:1;;6906:8:164;;133:18:183;;6906:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6933:5:164;;6947:6;;6955:4;;6933:30;;;;;-1:-1:-1;;;;;6947:6:164;;;6933:30;;;5058:34:183;6955:4:164;;;5108:18:183;;;5101:43;6933:5:164;5160:18:183;;;5153:34;6933:5:164;;;-1:-1:-1;6933:13:164;;-1:-1:-1;4970:18:183;;6933:30:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6983:5:164;;7001:4;;7007:6;;6983:31;;;;;-1:-1:-1;;;;;7001:4:164;;;6983:31;;;5452:34:183;7007:6:164;;;5502:18:183;;;5495:43;6974:44:164;;-1:-1:-1;6983:5:164;;;-1:-1:-1;6983:17:164;;5364:18:183;;6983:31:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7016:1;6974:8;:44::i;:::-;7037:5;;7053:4;;7037:21;;;;;-1:-1:-1;;;;;7053:4:164;;;7037:21;;;160:74:183;7028:34:164;;7037:5;;;;;:15;;133:18:183;;7037:21:164;14:226:183;7028:34:164;6533:536::o;1935:241::-;2028:7;;2019:17;;-1:-1:-1;;;2019:17:164;;-1:-1:-1;;;;;2028:7:164;;;2019:17;;;160:74:183;250:64:1;;2019:8:164;;133:18:183;;2019:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2046:5:164;;2077:8;;2087:4;;2046:55;;;;;-1:-1:-1;;;;;2077:8:164;;;2046:55;;;5058:34:183;2087:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;2046:5:164;;;-1:-1:-1;2046:30:164;;-1:-1:-1;4970:18:183;;2046:55:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2121:5:164;;2144:8;;2154:4;;2121:38;;;;;-1:-1:-1;;;;;2144:8:164;;;2121:38;;;5452:34:183;2154:4:164;;;5502:18:183;;;5495:43;2112:57:164;;-1:-1:-1;2121:5:164;;;-1:-1:-1;2121:22:164;;5364:18:183;;2121:38:164;5198:346:183;5930:597:164;6010:7;;6001:17;;-1:-1:-1;;;6001:17:164;;-1:-1:-1;;;;;6010:7:164;;;6001:17;;;160:74:183;250:64:1;;6001:8:164;;133:18:183;;6001:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6028:5:164;;6057:6;;6065:4;;6028:64;;;;;-1:-1:-1;;;;;6057:6:164;;;6028:64;;;5058:34:183;6065:4:164;;;5108:18:183;;;5101:43;956:6:164;5160:18:183;;;5153:34;6028:5:164;;;-1:-1:-1;6028:28:164;;-1:-1:-1;4970:18:183;;6028:64:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6112:6:164;;6103:16;;-1:-1:-1;;;6103:16:164;;-1:-1:-1;;;;;6112:6:164;;;6103:16;;;160:74:183;250:64:1;;-1:-1:-1;6103:8:164;;-1:-1:-1;133:18:183;;6103:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6129:5:164;;6145:4;;6129:43;;;;;-1:-1:-1;;;;;6145:4:164;;;6129:43;;;4648:74:183;956:6:164;4738:18:183;;;4731:34;6129:5:164;;;-1:-1:-1;6129:15:164;;-1:-1:-1;4621:18:183;;6129:43:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6381:8:164;;6290:109;;;-1:-1:-1;;;;;6381:8:164;;;6290:109;;;;160:74:183;;;;6290:109:164;;;;;;;;;;133:18:183;;;;6290:109:164;;;;;;;;;6326:41;6290:109;;;6409:20;;;;6290:109;;-1:-1:-1;250:64:1;;-1:-1:-1;6409:15:164;;:20;;6290:109;;6409:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6448:8:164;;6439:18;;-1:-1:-1;;;6439:18:164;;-1:-1:-1;;;;;6448:8:164;;;6439:18;;;160:74:183;250:64:1;;-1:-1:-1;6439:8:164;;-1:-1:-1;133:18:183;;6439::164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6467:5:164;;6481:6;;6489:4;;-1:-1:-1;;;;;6467:5:164;;;;-1:-1:-1;6467:13:164;;-1:-1:-1;6481:6:164;;;;6489:4;6495:24;6518:1;956:6;6495:24;:::i;:::-;6467:53;;;;;;;;;;-1:-1:-1;;;;;5076:15:183;;;6467:53:164;;;5058:34:183;5128:15;;;;5108:18;;;5101:43;5160:18;;;5153:34;4970:18;;6467:53:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5991:536;5930:597::o;3594:616::-;3663:41;;;;;956:6;3673:30;;3663:41;;;1070::183;250:64:1;;3663:9:164;;1043:18:183;;3663:41:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3714:22:164;;;;;3724:11;;;3714:22;;;1070:41:183;250:64:1;;-1:-1:-1;3714:9:164;;-1:-1:-1;1043:18:183;;3714:22:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3756:7:164;;3747:17;;-1:-1:-1;;;3747:17:164;;-1:-1:-1;;;;;3756:7:164;;;3747:17;;;160:74:183;250:64:1;;-1:-1:-1;3747:8:164;;-1:-1:-1;133:18:183;;3747:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3774:5:164;;3803:6;;3811:4;;3774:51;;;;;-1:-1:-1;;;;;3803:6:164;;;3774:51;;;5058:34:183;3811:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;3774:5:164;;;-1:-1:-1;3774:28:164;;-1:-1:-1;4970:18:183;;3774:51:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3845:6:164;;3836:16;;-1:-1:-1;;;3836:16:164;;-1:-1:-1;;;;;3845:6:164;;;3836:16;;;160:74:183;250:64:1;;-1:-1:-1;3836:8:164;;-1:-1:-1;133:18:183;;3836:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3862:5:164;;3878:4;;3862:30;;;;;-1:-1:-1;;;;;3878:4:164;;;3862:30;;;4648:74:183;4738:18;;;4731:34;;;3862:5:164;;;-1:-1:-1;3862:15:164;;-1:-1:-1;4621:18:183;;3862:30:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3912:4:164;;3927:6;;3912:22;;;;;-1:-1:-1;;;;;3927:6:164;;;3912:22;;;160:74:183;3903:41:164;;-1:-1:-1;3912:4:164;;;-1:-1:-1;3912:14:164;;133:18:183;;3912:22:164;14:226:183;3903:41:164;3963:5;;3981:4;;3987:6;;3963:31;;;;;-1:-1:-1;;;;;3981:4:164;;;3963:31;;;5452:34:183;3987:6:164;;;5502:18:183;;;5495:43;3954:50:164;;3963:5;;;;;:17;;5364:18:183;;3963:31:164;5198:346:183;3954:50:164;4023:5;;4039:4;;4023:21;;;;;-1:-1:-1;;;;;4039:4:164;;;4023:21;;;160:74:183;4014:40:164;;4023:5;;;;;:15;;133:18:183;;4023:21:164;14:226:183;4014:40:164;4151:5;;4175:4;;4151:29;;;;;-1:-1:-1;;;;;4175:4:164;;;4151:29;;;160:74:183;4142:61:164;;4151:5;;;;;:23;;133:18:183;;4151:29:164;14:226:183;1818:111:164;1870:52;;1905:5;;;;;;;;;-1:-1:-1;;;;;1905:5:164;-1:-1:-1;;;;;1905:13:164;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1870:52;;:10;:52::i;3238:350::-;3324:41;;;;;956:6;3334:30;;3324:41;;;1070::183;250:64:1;;3324:9:164;;1043:18:183;;3324:41:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3375:22:164;;;;;3385:11;;;3375:22;;;1070:41:183;250:64:1;;-1:-1:-1;3375:9:164;;-1:-1:-1;1043:18:183;;3375:22:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3474:17:164;;;;;;;;250:64:1;;-1:-1:-1;3474:15:164;;-1:-1:-1;3474:17:164;;;;;274:37:1;;3474:17:164;;;;;;;274:37:1;250:64;3474:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3510:8:164;;3501:18;;-1:-1:-1;;;3501:18:164;;-1:-1:-1;;;;;3510:8:164;;;3501:18;;;160:74:183;250:64:1;;-1:-1:-1;3501:8:164;;-1:-1:-1;133:18:183;;3501::164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3529:5:164;;3567:4;;3529:52;;;;;3560:4;3529:52;;;5058:34:183;-1:-1:-1;;;;;3567:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;3529:5:164;;;-1:-1:-1;3529:22:164;;-1:-1:-1;4970:18:183;;3529:52:164;4776:417:183;4786:610:164;4855:22;;;;;4865:11;;;4855:22;;;1070:41:183;250:64:1;;4855:9:164;;1043:18:183;;4855:22:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4887:41:164;;;;;956:6;4897:30;;4887:41;;;1070::183;250:64:1;;-1:-1:-1;4887:9:164;;-1:-1:-1;1043:18:183;;4887:41:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4948:7:164;;4939:17;;-1:-1:-1;;;4939:17:164;;-1:-1:-1;;;;;4948:7:164;;;4939:17;;;160:74:183;250:64:1;;-1:-1:-1;4939:8:164;;-1:-1:-1;133:18:183;;4939:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4966:5:164;;4995:6;;5003:4;;4966:51;;;;;-1:-1:-1;;;;;4995:6:164;;;4966:51;;;5058:34:183;5003:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;4966:5:164;;;-1:-1:-1;4966:28:164;;-1:-1:-1;4970:18:183;;4966:51:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5042:6:164;;5028:21;;;;;-1:-1:-1;;;;;5042:6:164;;;5028:21;;;160:74:183;250:64:1;;-1:-1:-1;5028:13:164;;-1:-1:-1;133:18:183;;5028:21:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5059:5:164;;5075:4;;5059:30;;;;;-1:-1:-1;;;;;5075:4:164;;;5059:30;;;4648:74:183;4738:18;;;4731:34;;;5059:5:164;;;-1:-1:-1;5059:15:164;;-1:-1:-1;4621:18:183;;5059:30:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5109:4:164;;5124:6;;5109:22;;;;;-1:-1:-1;;;;;5124:6:164;;;5109:22;;;160:74:183;5100:41:164;;-1:-1:-1;5109:4:164;;;-1:-1:-1;5109:14:164;;133:18:183;;5109:22:164;14:226:183;5100:41:164;5160:5;;5178:4;;5184:6;;5160:31;;;;;-1:-1:-1;;;;;5178:4:164;;;5160:31;;;5452:34:183;5184:6:164;;;5502:18:183;;;5495:43;5151:50:164;;5160:5;;;;;:17;;5364:18:183;;5160:31:164;5198:346:183;5151:50:164;5234:4;;5255:5;;5234:37;;;;;-1:-1:-1;;;;;5255:5:164;;;5234:37;;;4648:74:183;4738:18;;;4731:34;;;5234:4:164;;;:12;;4621:18:183;;5234:37:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5281:5:164;;5297:6;;5305:4;;5281:38;;;;;-1:-1:-1;;;;;5297:6:164;;;5281:38;;;5058:34:183;5305:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;5281:5:164;;;:15;;4970:18:183;;5281:38:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5329:14:164;;;;;;;;250:64:1;;-1:-1:-1;5329:12:164;;-1:-1:-1;5329:14:164;;;;;274:37:1;;5329:14:164;;;;;;;274:37:1;250:64;5329:14:164;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5363:4:164;;5378:6;;5363:22;;;;;-1:-1:-1;;;;;5378:6:164;;;5363:22;;;160:74:183;5354:35:164;;-1:-1:-1;5363:4:164;;;-1:-1:-1;5363:14:164;;133:18:183;;5363:22:164;14:226:183;5402:522:164;5463:7;;5454:17;;-1:-1:-1;;;5454:17:164;;-1:-1:-1;;;;;5463:7:164;;;5454:17;;;160:74:183;250:64:1;;5454:8:164;;133:18:183;;5454:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5481:5:164;;5510:6;;5518:4;;5481:64;;;;;-1:-1:-1;;;;;5510:6:164;;;5481:64;;;5058:34:183;5518:4:164;;;5108:18:183;;;5101:43;956:6:164;5160:18:183;;;5153:34;5481:5:164;;;-1:-1:-1;5481:28:164;;-1:-1:-1;4970:18:183;;5481:64:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5565:6:164;;5556:16;;-1:-1:-1;;;5556:16:164;;-1:-1:-1;;;;;5565:6:164;;;5556:16;;;160:74:183;250:64:1;;-1:-1:-1;5556:8:164;;-1:-1:-1;133:18:183;;5556:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5582:5:164;;5598:4;;5582:43;;;;;-1:-1:-1;;;;;5598:4:164;;;5582:43;;;4648:74:183;956:6:164;4738:18:183;;;4731:34;5582:5:164;;;-1:-1:-1;5582:15:164;;-1:-1:-1;4621:18:183;;5582:43:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5701:7:164;;5692:17;;-1:-1:-1;;;5692:17:164;;-1:-1:-1;;;;;5701:7:164;;;5692:17;;;160:74:183;250:64:1;;-1:-1:-1;5692:8:164;;-1:-1:-1;133:18:183;;5692:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5719:5:164;;5733:6;;5741:4;;-1:-1:-1;;;;;5719:5:164;;;;-1:-1:-1;5719:13:164;;-1:-1:-1;5733:6:164;;;;5741:4;5747:24;5770:1;956:6;5747:24;:::i;:::-;5719:53;;;;;;;;;;-1:-1:-1;;;;;5076:15:183;;;5719:53:164;;;5058:34:183;5128:15;;;;5108:18;;;5101:43;5160:18;;;5153:34;4970:18;;5719:53:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5792:5:164;;5810:4;;5816:6;;5792:31;;;;;-1:-1:-1;;;;;5810:4:164;;;5792:31;;;5452:34:183;5816:6:164;;;5502:18:183;;;5495:43;5783:67:164;;-1:-1:-1;5792:5:164;;;-1:-1:-1;5792:17:164;;5364:18:183;;5792:31:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5825:24;5848:1;956:6;5825:24;:::i;:::-;5783:8;:67::i;:::-;5869:5;;5885:4;;5869:21;;;;;-1:-1:-1;;;;;5885:4:164;;;5869:21;;;160:74:183;5860:57:164;;5869:5;;;;;:15;;133:18:183;;5869:21:164;14:226:183;2516:130:164;2587:5;;2611:4;;2587:29;;;;;-1:-1:-1;;;;;2611:4:164;;;2587:29;;;160:74:183;2578:61:164;;2587:5;;;;;:23;;133:18:183;;2587:29:164;14:226:183;2182:328:164;2275:7;;2266:17;;-1:-1:-1;;;2266:17:164;;-1:-1:-1;;;;;2275:7:164;;;2266:17;;;160:74:183;250:64:1;;2266:8:164;;133:18:183;;2266:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2293:5:164;;2324:8;;2334:4;;2293:55;;;;;-1:-1:-1;;;;;2324:8:164;;;2293:55;;;5058:34:183;2334:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;2293:5:164;;;-1:-1:-1;2293:30:164;;-1:-1:-1;4970:18:183;;2293:55:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2368:7:164;;2359:17;;-1:-1:-1;;;2359:17:164;;-1:-1:-1;;;;;2368:7:164;;;2359:17;;;160:74:183;250:64:1;;-1:-1:-1;2359:8:164;;-1:-1:-1;133:18:183;;2359:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2386:5:164;;2417:8;;2427:4;;2386:55;;;;;-1:-1:-1;;;;;2417:8:164;;;2386:55;;;5058:34:183;2427:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;2386:5:164;;;-1:-1:-1;2386:30:164;;-1:-1:-1;4970:18:183;;2386:55:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2461:5:164;;2484:8;;2494:4;;2461:38;;;;;-1:-1:-1;;;;;2484:8:164;;;2461:38;;;5452:34:183;2494:4:164;;;5502:18:183;;;5495:43;2452:51:164;;-1:-1:-1;2461:5:164;;;-1:-1:-1;2461:22:164;;5364:18:183;;2461:38:164;5198:346:183;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;4648:74:183;;;2221:17:0;4738:18:183;;;4731:34;2196:43:0;;;;;;;;;4621:18:183;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;7075:1847:164:-;7143:23;;;;;7153:12;;;7143:23;;;1070:41:183;250:64:1;;7143:9:164;;1043:18:183;;7143:23:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7176:41:164;;;;;956:6;7186:30;;7176:41;;;1070::183;250:64:1;;-1:-1:-1;7176:9:164;;-1:-1:-1;1043:18:183;;7176:41:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7307:7:164;;7298:17;;-1:-1:-1;;;7298:17:164;;-1:-1:-1;;;;;7307:7:164;;;7298:17;;;160:74:183;250:64:1;;-1:-1:-1;7298:8:164;;-1:-1:-1;133:18:183;;7298:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7325:5:164;;7356:7;;7365:4;;7325:54;;;;;-1:-1:-1;;;;;7356:7:164;;;7325:54;;;5058:34:183;7365:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;7325:5:164;;;-1:-1:-1;7325:30:164;;-1:-1:-1;4970:18:183;;7325:54:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7399:7:164;;7390:17;;-1:-1:-1;;;7390:17:164;;-1:-1:-1;;;;;7399:7:164;;;7390:17;;;160:74:183;250:64:1;;-1:-1:-1;7390:8:164;;-1:-1:-1;133:18:183;;7390:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7417:5:164;;7446:6;;7454:4;;7417:51;;;;;-1:-1:-1;;;;;7446:6:164;;;7417:51;;;5058:34:183;7454:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;7417:5:164;;;-1:-1:-1;7417:28:164;;-1:-1:-1;4970:18:183;;7417:51:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7518:7:164;;7509:17;;-1:-1:-1;;;7509:17:164;;-1:-1:-1;;;;;7518:7:164;;;7509:17;;;160:74:183;250:64:1;;-1:-1:-1;7509:8:164;;-1:-1:-1;133:18:183;;7509:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7536:5;;;;;;;;;-1:-1:-1;;;;;7536:5:164;-1:-1:-1;;;;;7536:16:164;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7637:44:164;;;;;;;;;;;;;;;;;;;;;;;7691:20;;;;;7637:44;;-1:-1:-1;250:64:1;;-1:-1:-1;7691:15:164;;:20;;7637:44;;7691:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7730:7:164;;7721:17;;-1:-1:-1;;;7721:17:164;;-1:-1:-1;;;;;7730:7:164;;;7721:17;;;160:74:183;250:64:1;;-1:-1:-1;7721:8:164;;-1:-1:-1;133:18:183;;7721:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7748:5:164;;7771:7;;7780:4;;7748:46;;;;;-1:-1:-1;;;;;7771:7:164;;;7748:46;;;5058:34:183;7780:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;7748:5:164;;;-1:-1:-1;7748:22:164;;-1:-1:-1;4970:18:183;;7748:46:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7852:20:164;;;;;250:64:1;;-1:-1:-1;7852:15:164;;-1:-1:-1;7852:20:164;;7868:3;;7852:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7891:6:164;;7882:16;;-1:-1:-1;;;7882:16:164;;-1:-1:-1;;;;;7891:6:164;;;7882:16;;;160:74:183;250:64:1;;-1:-1:-1;7882:8:164;;-1:-1:-1;133:18:183;;7882:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7908:5:164;;7924:4;;7908:30;;;;;-1:-1:-1;;;;;7924:4:164;;;7908:30;;;4648:74:183;4738:18;;;4731:34;;;7908:5:164;;;-1:-1:-1;7908:15:164;;-1:-1:-1;4621:18:183;;7908:30:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7958:4:164;;7973:7;;7958:23;;;;;-1:-1:-1;;;;;7973:7:164;;;7958:23;;;160:74:183;7949:36:164;;-1:-1:-1;7958:4:164;;;-1:-1:-1;7958:14:164;;133:18:183;;7958:23:164;14:226:183;7949:36:164;8004:5;;8022:4;;8028:6;;8004:31;;;;;-1:-1:-1;;;;;8022:4:164;;;8004:31;;;5452:34:183;8028:6:164;;;5502:18:183;;;5495:43;7995:44:164;;8004:5;;;;;:17;;5364:18:183;;8004:31:164;5198:346:183;7995:44:164;8058:4;;8073:6;;8058:22;;;;;-1:-1:-1;;;;;8073:6:164;;;8058:22;;;160:74:183;8049:35:164;;8058:4;;;;;:14;;133:18:183;;8058:22:164;14:226:183;8049:35:164;8137:7;;8128:17;;-1:-1:-1;;;8128:17:164;;-1:-1:-1;;;;;8137:7:164;;;8128:17;;;160:74:183;250:64:1;;8128:8:164;;133:18:183;;8128:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8155:5;;;;;;;;;-1:-1:-1;;;;;8155:5:164;-1:-1:-1;;;;;8155:14:164;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8219:7:164;;8210:17;;-1:-1:-1;;;8210:17:164;;-1:-1:-1;;;;;8219:7:164;;;8210:17;;;160:74:183;250:64:1;;-1:-1:-1;8210:8:164;;-1:-1:-1;133:18:183;;8210:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8237:5:164;;8260:7;;8269:4;;8237:46;;;;;-1:-1:-1;;;;;8260:7:164;;;8237:46;;;5058:34:183;8269:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;8237:5:164;;;-1:-1:-1;8237:22:164;;-1:-1:-1;4970:18:183;;8237:46:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8302:4:164;;8317:7;;8302:23;;;;;-1:-1:-1;;;;;8317:7:164;;;8302:23;;;160:74:183;8293:42:164;;-1:-1:-1;8302:4:164;;;-1:-1:-1;8302:14:164;;133:18:183;;8302:23:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8327:7;8293:8;:42::i;:::-;8411:7;;8402:17;;-1:-1:-1;;;8402:17:164;;-1:-1:-1;;;;;8411:7:164;;;8402:17;;;160:74:183;250:64:1;;8402:8:164;;133:18:183;;8402:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8429:4:164;;8451:5;;8429:38;;;;;-1:-1:-1;;;;;8451:5:164;;;8429:38;;;4648:74:183;4738:18;;;4731:34;;;8429:4:164;;;-1:-1:-1;8429:13:164;;-1:-1:-1;4621:18:183;;8429:38:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8487:6:164;;8478:16;;-1:-1:-1;;;8478:16:164;;-1:-1:-1;;;;;8487:6:164;;;8478:16;;;160:74:183;250:64:1;;8478:8:164;;133:18:183;;8478:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8504:5:164;;8520:4;;8504:30;;;;;-1:-1:-1;;;;;8520:4:164;;;8504:30;;;4648:74:183;4738:18;;;4731:34;;;8504:5:164;;;-1:-1:-1;8504:15:164;;-1:-1:-1;4621:18:183;;8504:30:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8553:4:164;;8568:6;;8553:22;;;;;-1:-1:-1;;;;;8568:6:164;;;8553:22;;;160:74:183;8544:41:164;;-1:-1:-1;8553:4:164;;;-1:-1:-1;8553:14:164;;133:18:183;;8553:22:164;14:226:183;8544:41:164;8604:5;;8622:4;;8628:6;;8604:31;;;;;-1:-1:-1;;;;;8622:4:164;;;8604:31;;;5452:34:183;8628:6:164;;;5502:18:183;;;5495:43;8595:50:164;;8604:5;;;;;:17;;5364:18:183;;8604:31:164;5198:346:183;8595:50:164;8687:6;;8678:16;;-1:-1:-1;;;8678:16:164;;-1:-1:-1;;;;;8687:6:164;;;8678:16;;;160:74:183;250:64:1;;8678:8:164;;133:18:183;;8678:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8704:4:164;;8725:5;;8704:37;;;;;-1:-1:-1;;;;;8725:5:164;;;8704:37;;;4648:74:183;4738:18;;;4731:34;;;8704:4:164;;;-1:-1:-1;8704:12:164;;-1:-1:-1;4621:18:183;;8704:37:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8760:6:164;;8751:16;;-1:-1:-1;;;8751:16:164;;-1:-1:-1;;;;;8760:6:164;;;8751:16;;;160:74:183;250:64:1;;8751:8:164;;133:18:183;;8751:16:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8777:5:164;;8793:6;;8801:4;;8777:38;;;;;-1:-1:-1;;;;;8793:6:164;;;8777:38;;;5058:34:183;8801:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;8777:5:164;;;-1:-1:-1;8777:15:164;;-1:-1:-1;4970:18:183;;8777:38:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8835:4:164;;8850:6;;8835:22;;;;;-1:-1:-1;;;;;8850:6:164;;;8835:22;;;160:74:183;8826:35:164;;-1:-1:-1;8835:4:164;;;-1:-1:-1;8835:14:164;;133:18:183;;8835:22:164;14:226:183;8826:35:164;8880:5;;8898:4;;8904:6;;8880:31;;;;;-1:-1:-1;;;;;8898:4:164;;;8880:31;;;5452:34:183;8904:6:164;;;5502:18:183;;;5495:43;8871:44:164;;8880:5;;;;;:17;;5364:18:183;;8880:31:164;5198:346:183;8871:44:164;7133:1789;7075:1847;:::o;4216:564::-;4298:41;;;;;956:6;4308:30;;4298:41;;;1070::183;250:64:1;;4298:9:164;;1043:18:183;;4298:41:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4349:22:164;;;;;4359:11;;;4349:22;;;1070:41:183;250:64:1;;-1:-1:-1;4349:9:164;;-1:-1:-1;1043:18:183;;4349:22:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4441:7:164;;4432:17;;-1:-1:-1;;;4432:17:164;;-1:-1:-1;;;;;4441:7:164;;;4432:17;;;160:74:183;4382:24:164;;-1:-1:-1;250:64:1;;-1:-1:-1;4432:8:164;;133:18:183;;4432:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4459:5:164;;4506:4;;4459:61;;;;;-1:-1:-1;;;;;5076:15:183;;;4459:61:164;;;5058:34:183;4506:4:164;;;5108:18:183;;;5101:43;5160:18;;;5153:34;;;4459:5:164;;;-1:-1:-1;4459:28:164;;-1:-1:-1;4970:18:183;;4459:61:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4550:117:164;;;-1:-1:-1;;;;;178:55:183;;4550:117:164;;;;160:74:183;;;;4550:117:164;;;;;;;;;;133:18:183;;;;4550:117:164;;;;;;;;;4586:41;4550:117;;;4677:20;;;;;4550:117;;-1:-1:-1;250:64:1;;-1:-1:-1;4677:15:164;;:20;;4550:117;;4677:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4707:26:164;;-1:-1:-1;;;4707:26:164;;-1:-1:-1;;;;;178:55:183;;4707:26:164;;;160:74:183;250:64:1;;-1:-1:-1;4707:8:164;;-1:-1:-1;133:18:183;;4707:26:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4743:5:164;;4759:4;;4743:30;;;;;-1:-1:-1;;;;;4759:4:164;;;4743:30;;;4648:74:183;4738:18;;;4731:34;;;4743:5:164;;;-1:-1:-1;4743:15:164;;-1:-1:-1;4621:18:183;;4743:30:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4288:492;;4216:564;:::o;8928:1295::-;9048:5;;:14;;;;;;;;9039:30;;-1:-1:-1;;;;;9048:5:164;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9064:4;9039:8;:30::i;:::-;9242:8;;9151:109;;;-1:-1:-1;;;;;9242:8:164;;;9151:109;;;;160:74:183;;;;9151:109:164;;;;;;;;;;133:18:183;;;;9151:109:164;;;;;;;;;9187:41;9151:109;;;9270:20;;;;250:64:1;;9270:15:164;;:20;;9151:109;;9270:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9309:8:164;;9300:18;;-1:-1:-1;;;9300:18:164;;-1:-1:-1;;;;;9309:8:164;;;9300:18;;;160:74:183;250:64:1;;-1:-1:-1;9300:8:164;;-1:-1:-1;133:18:183;;9300::164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9328:5;;;;;;;;;-1:-1:-1;;;;;9328:5:164;-1:-1:-1;;;;;9328:16:164;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9357:30;9366:5;;;;;;;;;-1:-1:-1;;;;;9366:5:164;-1:-1:-1;;;;;9366:12:164;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9357:30;9448:7;;9439:17;;-1:-1:-1;;;9439:17:164;;-1:-1:-1;;;;;9448:7:164;;;9439:17;;;160:74:183;250:64:1;;9439:8:164;;133:18:183;;9439:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9466:5;;;;;;;;;-1:-1:-1;;;;;9466:5:164;-1:-1:-1;;;;;9466:16:164;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9495:31;9504:5;;;;;;;;;-1:-1:-1;;;;;9504:5:164;-1:-1:-1;;;;;9504:12:164;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9520:5;9495:8;:31::i;:::-;9639:7;;9630:17;;-1:-1:-1;;;9630:17:164;;-1:-1:-1;;;;;9639:7:164;;;9630:17;;;160:74:183;250:64:1;;9630:8:164;;133:18:183;;9630:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9657:5;;;;;;;;;-1:-1:-1;;;;;9657:5:164;-1:-1:-1;;;;;9657:16:164;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9686:31;9695:5;;;;;;;;;-1:-1:-1;;;;;9695:5:164;-1:-1:-1;;;;;9695:12:164;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9686:31;9780:20;;;;;250:64:1;;9780:15:164;;:20;;9796:3;;9780:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9819:8:164;;9810:18;;-1:-1:-1;;;9810:18:164;;-1:-1:-1;;;;;9819:8:164;;;9810:18;;;160:74:183;250:64:1;;-1:-1:-1;9810:8:164;;-1:-1:-1;133:18:183;;9810::164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9838:5;;;;;;;;;-1:-1:-1;;;;;9838:5:164;-1:-1:-1;;;;;9838:14:164;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9865:31;9874:5;;;;;;;;;-1:-1:-1;;;;;9874:5:164;-1:-1:-1;;;;;9874:12:164;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9865:31;9957:7;;9948:17;;-1:-1:-1;;;9948:17:164;;-1:-1:-1;;;;;9957:7:164;;;9948:17;;;160:74:183;250:64:1;;9948:8:164;;133:18:183;;9948:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9975:5;;;;;;;;;-1:-1:-1;;;;;9975:5:164;-1:-1:-1;;;;;9975:14:164;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10002:30;10011:5;;;;;;;;;-1:-1:-1;;;;;10011:5:164;-1:-1:-1;;;;;10011:12:164;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10002:30;10141:7;;10132:17;;-1:-1:-1;;;10132:17:164;;-1:-1:-1;;;;;10141:7:164;;;10132:17;;;160:74:183;250:64:1;;10132:8:164;;133:18:183;;10132:17:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10159:5;;;;;;;;;-1:-1:-1;;;;;10159:5:164;-1:-1:-1;;;;;10159:14:164;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10186:30;10195:5;;;;;;;;;-1:-1:-1;;;;;10195:5:164;-1:-1:-1;;;;;10195:12:164;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5209:262:0;5271:1;5266;:6;5262:203;;5293:41;;;;;9200:2:183;9182:21;;;9239:2;9219:18;;;9212:30;9278:34;9273:2;9258:18;;9251:62;9349:4;9344:2;9329:18;;9322:32;9386:3;9371:19;;8998:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;4567:82::-;4628:14;4637:1;4640;4628:8;:14::i;8050:326:3:-;8112:1;8107:6;;:1;:6;;;8103:267;;8134:57;;;;;10637:2:183;10619:21;;;10676:2;10656:18;;;10649:30;10715:34;10710:2;10695:18;;10688:62;10786:4;10781:2;10766:18;;10759:32;10823:3;10808:19;;10435:398;8134:57:3;;;;;;;;8210:55;8244:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8210:55;;;;;;:::i;:::-;;;;;;;;8284;8318:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8284:55;;;;;;:::i;2409:432:0:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;11954:74:183;;;2677:17:0;12044:18:183;;;12037:34;;;;2712:4:0;12087:18:183;;;12080:34;2489:11:0;;1671:64;2586:43;;11927:18:183;;2652:67:0;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;;;;;;;2409:432::o;4095:277::-;4163:1;4158;:6;4154:212;;4185:44;;;;;12327:2:183;12309:21;;;12366:2;12346:18;;;12339:30;12405:34;12400:2;12385:18;;12378:62;12476:7;12471:2;12456:18;;12449:35;12516:3;12501:19;;12125:401;4185:44:0;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;245:180:183:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;-1:-1:-1;396:23:183;;245:180;-1:-1:-1;245:180:183:o;2282:518::-;2455:2;2440:18;;2488:1;2477:13;;2467:201;;2524:77;2521:1;2514:88;2625:4;2622:1;2615:15;2653:4;2650:1;2643:15;2467:201;2677:25;;;-1:-1:-1;;;;;2738:55:183;;;;2733:2;2718:18;;;2711:83;2282:518;:::o;2805:258::-;2877:1;2887:113;2901:6;2898:1;2895:13;2887:113;;;2977:11;;;2971:18;2958:11;;;2951:39;2923:2;2916:10;2887:113;;;3018:6;3015:1;3012:13;3009:48;;;-1:-1:-1;;3053:1:183;3035:16;;3028:27;2805:258::o;3068:317::-;3110:3;3148:5;3142:12;3175:6;3170:3;3163:19;3191:63;3247:6;3240:4;3235:3;3231:14;3224:4;3217:5;3213:16;3191:63;:::i;:::-;3299:2;3287:15;3304:66;3283:88;3274:98;;;;3374:4;3270:109;;3068:317;-1:-1:-1;;3068:317:183:o;3390:364::-;-1:-1:-1;;;;;3595:6:183;3591:55;3580:9;3573:74;3683:2;3678;3667:9;3663:18;3656:30;3554:4;3703:45;3744:2;3733:9;3729:18;3721:6;3703:45;:::i;:::-;3695:53;3390:364;-1:-1:-1;;;;3390:364:183:o;3759:313::-;3829:6;3882:2;3870:9;3861:7;3857:23;3853:32;3850:52;;;3898:1;3895;3888:12;3850:52;3930:9;3924:16;-1:-1:-1;;;;;3973:5:183;3969:54;3962:5;3959:65;3949:93;;4038:1;4035;4028:12;3949:93;4061:5;3759:313;-1:-1:-1;;;3759:313:183:o;5549:184::-;5619:6;5672:2;5660:9;5651:7;5647:23;5643:32;5640:52;;;5688:1;5685;5678:12;5640:52;-1:-1:-1;5711:16:183;;5549:184;-1:-1:-1;5549:184:183:o;6840:218::-;6987:2;6976:9;6969:21;6950:4;7007:45;7048:2;7037:9;7033:18;7025:6;7007:45;:::i;7063:274::-;7103:1;7129;7119:189;;7164:77;7161:1;7154:88;7265:4;7262:1;7255:15;7293:4;7290:1;7283:15;7119:189;-1:-1:-1;7322:9:183;;7063:274::o;7342:366::-;7441:6;7494:2;7482:9;7473:7;7469:23;7465:32;7462:52;;;7510:1;7507;7500:12;7462:52;7542:9;7536:16;7592:66;7585:5;7581:78;7574:5;7571:89;7561:117;;7674:1;7671;7664:12;7713:277;7780:6;7833:2;7821:9;7812:7;7808:23;7804:32;7801:52;;;7849:1;7846;7839:12;7801:52;7881:9;7875:16;7934:5;7927:13;7920:21;7913:5;7910:32;7900:60;;7956:1;7953;7946:12;8297:417;8494:66;8486:6;8482:79;8477:3;8470:92;8452:3;8591:6;8585:13;8607:61;8661:6;8657:1;8652:3;8648:11;8641:4;8633:6;8629:17;8607:61;:::i;:::-;8688:16;;;;8706:1;8684:24;;8297:417;-1:-1:-1;;;8297:417:183:o;8719:274::-;8848:3;8886:6;8880:13;8902:53;8948:6;8943:3;8936:4;8928:6;8924:17;8902:53;:::i;:::-;8971:16;;;;;8719:274;-1:-1:-1;;8719:274:183:o;9565:348::-;9795:2;9784:9;9777:21;9758:4;9815:49;9860:2;9849:9;9845:18;9478:2;9466:15;;9513:12;9506:4;9497:14;;9490:36;9551:2;9542:12;;9401:159;9815:49;9807:57;;9900:6;9895:2;9884:9;9880:18;9873:34;9565:348;;;;:::o;10082:::-;10312:2;10301:9;10294:21;10275:4;10332:49;10377:2;10366:9;10362:18;9995:2;9983:15;;10030:12;10023:4;10014:14;;10007:36;10068:2;10059:12;;9918:159;10838:452;11088:2;11077:9;11070:21;11127:2;11122;11111:9;11107:18;11100:30;11166:12;11161:2;11150:9;11146:18;11139:40;11217:3;11210:4;11199:9;11195:20;11188:33;11051:4;11238:46;11279:3;11268:9;11264:19;11256:6;11238:46;:::i;11295:452::-;11545:2;11534:9;11527:21;11584:2;11579;11568:9;11564:18;11557:30;11623:12;11618:2;11607:9;11603:18;11596:40;11674:3;11667:4;11656:9;11652:20;11645:33;11508:4;11695:46;11736:3;11725:9;11721:19;11713:6;11695:46;:::i",
    "linkReferences": {
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "ModuleTestFixtureGenerator": [
          {
            "start": 1565,
            "length": 20
          },
          {
            "start": 1956,
            "length": 20
          },
          {
            "start": 2321,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "TRSRY()": "80cee4ab",
    "debtor()": "9cb64a2d",
    "failed()": "ba414fa6",
    "godmode()": "0e375e40",
    "ngmi()": "fb223f18",
    "setUp()": "0a9254e4",
    "testCorrectness_ApprovedCanWithdrawToken(uint256)": "0fa89a3b",
    "testCorrectness_ClearDebt()": "18b9d8c8",
    "testCorrectness_DecreaseWithdrawApproval(uint256)": "a785dfa8",
    "testCorrectness_GetReserveBalance()": "a1fbc673",
    "testCorrectness_IncreaseWithdrawApproval(uint256)": "2ba22b18",
    "testCorrectness_IncurDebt(uint256)": "5bdb8b04",
    "testCorrectness_KEYCODE()": "628a7987",
    "testCorrectness_RepayDebt(uint256)": "6411193d",
    "testCorrectness_SetDebt()": "82e3ea44",
    "testCorrectness_Shutdown(uint256)": "bcf643cd",
    "testRevert_AddressWithPermCannotShutdownOrRestart()": "cf18f8d3",
    "testRevert_UnauthorizedCannotIncurDebt(uint256)": "cee39755",
    "testRevert_UnauthorizedCannotWithdrawToken(uint256)": "62e12a7d",
    "testRevert_UnauthorizedPolicyCannotSetDebt()": "437e7dfd",
    "testUser()": "c5c680f3",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRSRY\",\"outputs\":[{\"internalType\":\"contract GoerliDaoTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"godmode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ngmi\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_ApprovedCanWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_ClearDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_DecreaseWithdrawApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_GetReserveBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_IncreaseWithdrawApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_IncurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_KEYCODE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_RepayDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_SetDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_Shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRevert_AddressWithPermCannotShutdownOrRestart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testRevert_UnauthorizedCannotIncurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testRevert_UnauthorizedCannotWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRevert_UnauthorizedPolicyCannotSetDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/modules/TRSRY.t.sol\":\"TRSRYTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/external/GDAO.sol\":{\"keccak256\":\"0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230\",\"dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18\",\"dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU\"]},\"src/interfaces/IGDAO.sol\":{\"keccak256\":\"0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58\",\"dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj\"]},\"src/interfaces/IOlympusAuthority.sol\":{\"keccak256\":\"0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737\",\"dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ\"]},\"src/libraries/Counters.sol\":{\"keccak256\":\"0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0\",\"dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC\"]},\"src/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05\",\"dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/TRSRY/GoerliDaoTreasury.sol\":{\"keccak256\":\"0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471\",\"dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c\"]},\"src/modules/TRSRY/TRSRY.v1.sol\":{\"keccak256\":\"0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2\",\"dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC\"]},\"src/test/lib/ModuleTestFixtureGenerator.sol\":{\"keccak256\":\"0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619\",\"dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/lib/quabi/Quabi.sol\":{\"keccak256\":\"0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751\",\"dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm\"]},\"src/test/modules/TRSRY.t.sol\":{\"keccak256\":\"0x0fc150657dda09fa7a4e283d13e091d15294905048f99fad96b385e66945ea27\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://02af253f4e732cac935b71d088f8dc823ccdc07a7587482b96a9e2ded9db3882\",\"dweb:/ipfs/QmZtJYzRcPGGxKefRzLSAWfHxgFToUYhMVjfyh5UVH5nXC\"]},\"src/types/OlympusAccessControlled.sol\":{\"keccak256\":\"0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1\",\"dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRSRY",
          "outputs": [
            {
              "internalType": "contract GoerliDaoTreasury",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "debtor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "godmode",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ngmi",
          "outputs": [
            {
              "internalType": "contract MockERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_ApprovedCanWithdrawToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_ClearDebt"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_DecreaseWithdrawApproval"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_GetReserveBalance"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_IncreaseWithdrawApproval"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_IncurDebt"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_KEYCODE"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_RepayDebt"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_SetDebt"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_Shutdown"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_AddressWithPermCannotShutdownOrRestart"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_UnauthorizedCannotIncurDebt"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_UnauthorizedCannotWithdrawToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_UnauthorizedPolicyCannotSetDebt"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/modules/TRSRY.t.sol": "TRSRYTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/GDAO.sol": {
        "keccak256": "0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd",
        "urls": [
          "bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230",
          "dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c",
        "urls": [
          "bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18",
          "dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IGDAO.sol": {
        "keccak256": "0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2",
        "urls": [
          "bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58",
          "dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOlympusAuthority.sol": {
        "keccak256": "0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25",
        "urls": [
          "bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737",
          "dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/Counters.sol": {
        "keccak256": "0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c",
        "urls": [
          "bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0",
          "dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/SafeMath.sol": {
        "keccak256": "0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed",
        "urls": [
          "bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05",
          "dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/GoerliDaoTreasury.sol": {
        "keccak256": "0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc",
        "urls": [
          "bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471",
          "dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/TRSRY.v1.sol": {
        "keccak256": "0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1",
        "urls": [
          "bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2",
          "dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "keccak256": "0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a",
        "urls": [
          "bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619",
          "dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/lib/quabi/Quabi.sol": {
        "keccak256": "0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9",
        "urls": [
          "bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751",
          "dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/modules/TRSRY.t.sol": {
        "keccak256": "0x0fc150657dda09fa7a4e283d13e091d15294905048f99fad96b385e66945ea27",
        "urls": [
          "bzz-raw://02af253f4e732cac935b71d088f8dc823ccdc07a7587482b96a9e2ded9db3882",
          "dweb:/ipfs/QmZtJYzRcPGGxKefRzLSAWfHxgFToUYhMVjfyh5UVH5nXC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/types/OlympusAccessControlled.sol": {
        "keccak256": "0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf",
        "urls": [
          "bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1",
          "dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/modules/TRSRY.t.sol",
    "id": 75112,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "GDAO": [
        31138
      ],
      "GoerliDaoTreasury": [
        41409
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "MockERC20": [
        24679
      ],
      "Module": [
        28577
      ],
      "ModuleTestFixtureGenerator": [
        53884
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "TRSRYTest": [
        75111
      ],
      "TRSRYv1": [
        41642
      ],
      "TargetNotAContract": [
        28366
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        54005
      ],
      "console": [
        23663
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:10184:164",
    "nodes": [
      {
        "id": 73899,
        "nodeType": "PragmaDirective",
        "src": "42:23:164",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 73901,
        "nodeType": "ImportDirective",
        "src": "67:40:164",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73900,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "75:4:164",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73903,
        "nodeType": "ImportDirective",
        "src": "108:53:164",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 54006,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73902,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54005,
              "src": "116:11:164",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73905,
        "nodeType": "ImportDirective",
        "src": "162:59:164",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73904,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "170:8:164",
              "typeDescriptions": {}
            },
            "local": "console",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73907,
        "nodeType": "ImportDirective",
        "src": "222:83:164",
        "nodes": [],
        "absolutePath": "src/test/lib/ModuleTestFixtureGenerator.sol",
        "file": "test/lib/ModuleTestFixtureGenerator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 53885,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73906,
              "name": "ModuleTestFixtureGenerator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53884,
              "src": "230:26:164",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73909,
        "nodeType": "ImportDirective",
        "src": "307:65:164",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 24680,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73908,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24679,
              "src": "315:9:164",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73911,
        "nodeType": "ImportDirective",
        "src": "373:43:164",
        "nodes": [],
        "absolutePath": "src/external/GDAO.sol",
        "file": "src/external/GDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 31139,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73910,
              "name": "GDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31138,
              "src": "381:4:164",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73913,
        "nodeType": "ImportDirective",
        "src": "479:74:164",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "file": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 41410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73912,
              "name": "GoerliDaoTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41409,
              "src": "487:17:164",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73915,
        "nodeType": "ImportDirective",
        "src": "554:55:164",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/TRSRY.v1.sol",
        "file": "src/modules/TRSRY/TRSRY.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 41643,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73914,
              "name": "TRSRYv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41642,
              "src": "562:7:164",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73916,
        "nodeType": "ImportDirective",
        "src": "611:24:164",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75112,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75111,
        "nodeType": "ContractDefinition",
        "src": "637:9588:164",
        "nodes": [
          {
            "id": 73922,
            "nodeType": "UsingForDirective",
            "src": "670:55:164",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73919,
              "name": "ModuleTestFixtureGenerator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53884,
              "src": "676:26:164"
            },
            "typeName": {
              "id": 73921,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73920,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41409,
                "src": "707:17:164"
              },
              "referencedDeclaration": 41409,
              "src": "707:17:164",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                "typeString": "contract GoerliDaoTreasury"
              }
            }
          },
          {
            "id": 73925,
            "nodeType": "VariableDeclaration",
            "src": "731:22:164",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "747:6:164",
            "scope": 75111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$29497",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 73924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73923,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29497,
                "src": "731:6:164"
              },
              "referencedDeclaration": 29497,
              "src": "731:6:164",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$29497",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 73928,
            "nodeType": "VariableDeclaration",
            "src": "759:30:164",
            "nodes": [],
            "constant": false,
            "functionSelector": "80cee4ab",
            "mutability": "mutable",
            "name": "TRSRY",
            "nameLocation": "784:5:164",
            "scope": 75111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
              "typeString": "contract GoerliDaoTreasury"
            },
            "typeName": {
              "id": 73927,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73926,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41409,
                "src": "759:17:164"
              },
              "referencedDeclaration": 41409,
              "src": "759:17:164",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                "typeString": "contract GoerliDaoTreasury"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73931,
            "nodeType": "VariableDeclaration",
            "src": "795:21:164",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb223f18",
            "mutability": "mutable",
            "name": "ngmi",
            "nameLocation": "812:4:164",
            "scope": 75111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 73930,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73929,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "795:9:164"
              },
              "referencedDeclaration": 24679,
              "src": "795:9:164",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73933,
            "nodeType": "VariableDeclaration",
            "src": "822:23:164",
            "nodes": [],
            "constant": false,
            "functionSelector": "c5c680f3",
            "mutability": "mutable",
            "name": "testUser",
            "nameLocation": "837:8:164",
            "scope": 75111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 73932,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "822:7:164",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73935,
            "nodeType": "VariableDeclaration",
            "src": "851:22:164",
            "nodes": [],
            "constant": false,
            "functionSelector": "0e375e40",
            "mutability": "mutable",
            "name": "godmode",
            "nameLocation": "866:7:164",
            "scope": 75111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 73934,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "851:7:164",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73937,
            "nodeType": "VariableDeclaration",
            "src": "879:21:164",
            "nodes": [],
            "constant": false,
            "functionSelector": "9cb64a2d",
            "mutability": "mutable",
            "name": "debtor",
            "nameLocation": "894:6:164",
            "scope": 75111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 73936,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "879:7:164",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73940,
            "nodeType": "VariableDeclaration",
            "src": "907:55:164",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "INITIAL_TOKEN_AMOUNT",
            "nameLocation": "933:20:164",
            "scope": 75111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73938,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:164",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030653138",
              "id": 73939,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "956:6:164",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100e18"
            },
            "visibility": "internal"
          },
          {
            "id": 74043,
            "nodeType": "FunctionDefinition",
            "src": "969:843:164",
            "nodes": [],
            "body": {
              "id": 74042,
              "nodeType": "Block",
              "src": "993:819:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73943,
                      "name": "kernel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73925,
                      "src": "1003:6:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Kernel_$29497",
                        "typeString": "contract Kernel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 73946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1012:10:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$29497_$",
                          "typeString": "function () returns (contract Kernel)"
                        },
                        "typeName": {
                          "id": 73945,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 73944,
                            "name": "Kernel",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 29497,
                            "src": "1016:6:164"
                          },
                          "referencedDeclaration": 29497,
                          "src": "1016:6:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        }
                      },
                      "id": 73947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1012:12:164",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Kernel_$29497",
                        "typeString": "contract Kernel"
                      }
                    },
                    "src": "1003:21:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  },
                  "id": 73949,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:21:164"
                },
                {
                  "expression": {
                    "id": 73956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73950,
                      "name": "TRSRY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73928,
                      "src": "1034:5:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                        "typeString": "contract GoerliDaoTreasury"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73954,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73925,
                          "src": "1064:6:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        ],
                        "id": 73953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1042:21:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoTreasury_$41409_$",
                          "typeString": "function (contract Kernel) returns (contract GoerliDaoTreasury)"
                        },
                        "typeName": {
                          "id": 73952,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 73951,
                            "name": "GoerliDaoTreasury",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41409,
                            "src": "1046:17:164"
                          },
                          "referencedDeclaration": 41409,
                          "src": "1046:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        }
                      },
                      "id": 73955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1042:29:164",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                        "typeString": "contract GoerliDaoTreasury"
                      }
                    },
                    "src": "1034:37:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                      "typeString": "contract GoerliDaoTreasury"
                    }
                  },
                  "id": 73957,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:37:164"
                },
                {
                  "expression": {
                    "id": 73966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73958,
                      "name": "ngmi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73931,
                      "src": "1081:4:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6e6f7420676f6e6e61206d616b65206974",
                          "id": 73962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1102:19:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0c47861d48f25a2a7c8e92029e95a6ee2d7345881fa2ba8aa46ded3318b11333",
                            "typeString": "literal_string \"not gonna make it\""
                          },
                          "value": "not gonna make it"
                        },
                        {
                          "hexValue": "4e474d49",
                          "id": 73963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1123:6:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_623ce23a6ca9529b6f6b1cc5e6641bb77bf579711c58bd36735620075a4bc116",
                            "typeString": "literal_string \"NGMI\""
                          },
                          "value": "NGMI"
                        },
                        {
                          "hexValue": "3138",
                          "id": 73964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1131:2:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_0c47861d48f25a2a7c8e92029e95a6ee2d7345881fa2ba8aa46ded3318b11333",
                            "typeString": "literal_string \"not gonna make it\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_623ce23a6ca9529b6f6b1cc5e6641bb77bf579711c58bd36735620075a4bc116",
                            "typeString": "literal_string \"NGMI\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 73961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1088:13:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 73960,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 73959,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24679,
                            "src": "1092:9:164"
                          },
                          "referencedDeclaration": 24679,
                          "src": "1092:9:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 73965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1088:46:164",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1081:53:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$24679",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 73967,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:53:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73971,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28348,
                          "src": "1165:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 73972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "InstallModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28342,
                        "src": "1165:21:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 73975,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "1196:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 73974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1188:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73973,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1188:7:164",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 73968,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73925,
                        "src": "1144:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 73970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28931,
                      "src": "1144:20:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 73977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:59:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73978,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:59:164"
                },
                {
                  "expression": {
                    "id": 73987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73979,
                      "name": "godmode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73935,
                      "src": "1294:7:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 73983,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41409,
                                "src": "1338:17:164",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$41409_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$41409_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              ],
                              "id": 73982,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1333:4:164",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 73984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1333:23:164",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "type(contract GoerliDaoTreasury)"
                            }
                          },
                          "id": 73985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "src": "1333:28:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 73980,
                          "name": "TRSRY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73928,
                          "src": "1304:5:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "id": 73981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generateGodmodeFixture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53755,
                        "src": "1304:28:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$28577_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_contract$_Module_$28577_$",
                          "typeString": "function (contract Module,string memory) returns (address)"
                        }
                      },
                      "id": 73986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1304:58:164",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1294:68:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73988,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:68:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73992,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28348,
                          "src": "1393:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 73993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ActivatePolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28344,
                        "src": "1393:22:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "id": 73994,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "1417:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 73989,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73925,
                        "src": "1372:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 73991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28931,
                      "src": "1372:20:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 73995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:53:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73996,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:53:164"
                },
                {
                  "expression": {
                    "id": 74004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73997,
                      "name": "testUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73933,
                      "src": "1436:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 74000,
                              "name": "TRSRY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73928,
                              "src": "1477:5:164",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 74001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41082,
                            "src": "1477:22:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                              "typeString": "function (address,contract ERC20,uint256) external"
                            }
                          },
                          "id": 74002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1477:31:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 73998,
                          "name": "TRSRY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73928,
                          "src": "1447:5:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "id": 73999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generateFunctionFixture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53857,
                        "src": "1447:29:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$28577_$_t_bytes4_$returns$_t_address_$bound_to$_t_contract$_Module_$28577_$",
                          "typeString": "function (contract Module,bytes4) returns (address)"
                        }
                      },
                      "id": 74003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1447:62:164",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1436:73:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74005,
                  "nodeType": "ExpressionStatement",
                  "src": "1436:73:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74009,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28348,
                          "src": "1540:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 74010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ActivatePolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28344,
                        "src": "1540:22:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "id": 74011,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "1564:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74006,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73925,
                        "src": "1519:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 74008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28931,
                      "src": "1519:20:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 74012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:54:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74013,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:54:164"
                },
                {
                  "expression": {
                    "id": 74022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74014,
                      "name": "debtor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73937,
                      "src": "1584:6:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 74018,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41409,
                                "src": "1627:17:164",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$41409_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$41409_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              ],
                              "id": 74017,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1622:4:164",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 74019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1622:23:164",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "type(contract GoerliDaoTreasury)"
                            }
                          },
                          "id": 74020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "src": "1622:28:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 74015,
                          "name": "TRSRY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73928,
                          "src": "1593:5:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "id": 74016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generateGodmodeFixture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53755,
                        "src": "1593:28:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$28577_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_contract$_Module_$28577_$",
                          "typeString": "function (contract Module,string memory) returns (address)"
                        }
                      },
                      "id": 74021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1593:58:164",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:67:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74023,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:67:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74027,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28348,
                          "src": "1682:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 74028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ActivatePolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28344,
                        "src": "1682:22:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "id": 74029,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "1706:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$28348",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74024,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73925,
                        "src": "1661:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 74026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28931,
                      "src": "1661:20:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 74030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:52:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74031,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:52:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74037,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "1776:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 74036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1768:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1768:7:164",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1768:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74039,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "1784:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74032,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "1758:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 74034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "1758:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 74040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:47:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74041,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:47:164"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "978:5:164",
            "parameters": {
              "id": 73941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:2:164"
            },
            "returnParameters": {
              "id": 73942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74057,
            "nodeType": "FunctionDefinition",
            "src": "1818:111:164",
            "nodes": [],
            "body": {
              "id": 74056,
              "nodeType": "Block",
              "src": "1860:69:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5452535259",
                        "id": 74047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1881:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f6ea785a4ed24cdb38dd7c064320cd877af51c02f3a8cc7f179e714b8fd1f08",
                          "typeString": "literal_string \"TRSRY\""
                        },
                        "value": "TRSRY"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 74050,
                                "name": "TRSRY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73928,
                                "src": "1905:5:164",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              },
                              "id": 74051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "KEYCODE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40917,
                              "src": "1905:13:164",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                                "typeString": "function () pure external returns (Keycode)"
                              }
                            },
                            "id": 74052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1905:15:164",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                              "typeString": "Keycode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                              "typeString": "Keycode"
                            }
                          ],
                          "expression": {
                            "id": 74048,
                            "name": "Keycode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28362,
                            "src": "1890:7:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Keycode_$28362_$",
                              "typeString": "type(Keycode)"
                            }
                          },
                          "id": 74049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "1890:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Keycode_$28362_$returns$_t_bytes5_$",
                            "typeString": "function (Keycode) pure returns (bytes5)"
                          }
                        },
                        "id": 74053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1890:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes5",
                          "typeString": "bytes5"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1f6ea785a4ed24cdb38dd7c064320cd877af51c02f3a8cc7f179e714b8fd1f08",
                          "typeString": "literal_string \"TRSRY\""
                        },
                        {
                          "typeIdentifier": "t_bytes5",
                          "typeString": "bytes5"
                        }
                      ],
                      "id": 74046,
                      "name": "assertEq32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        413,
                        429
                      ],
                      "referencedDeclaration": 413,
                      "src": "1870:10:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 74054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1870:52:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74055,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:52:164"
                }
              ]
            },
            "functionSelector": "628a7987",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_KEYCODE",
            "nameLocation": "1827:23:164",
            "parameters": {
              "id": 74044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:164"
            },
            "returnParameters": {
              "id": 74045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74086,
            "nodeType": "FunctionDefinition",
            "src": "1935:241:164",
            "nodes": [],
            "body": {
              "id": 74085,
              "nodeType": "Block",
              "src": "2009:167:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74065,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "2028:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74062,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2019:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2019:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74067,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74071,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "2077:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74072,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "2087:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74073,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74059,
                        "src": "2093:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74068,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "2046:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40993,
                      "src": "2046:30:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:55:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74075,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:55:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74079,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73933,
                            "src": "2144:8:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 74080,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "2154:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74077,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "2121:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawApproval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41506,
                          "src": "2121:22:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (address,contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2121:38:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74082,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74059,
                        "src": "2161:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74076,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2112:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:57:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74084,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:57:164"
                }
              ]
            },
            "functionSelector": "2ba22b18",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_IncreaseWithdrawApproval",
            "nameLocation": "1944:40:164",
            "parameters": {
              "id": 74060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74059,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1993:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74086,
                  "src": "1985:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:17:164"
            },
            "returnParameters": {
              "id": 74061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74129,
            "nodeType": "FunctionDefinition",
            "src": "2182:328:164",
            "nodes": [],
            "body": {
              "id": 74128,
              "nodeType": "Block",
              "src": "2256:254:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74094,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "2275:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74091,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2266:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2266:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74096,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74100,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "2324:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74101,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "2334:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74102,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74088,
                        "src": "2340:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74097,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "2293:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40993,
                      "src": "2293:30:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:55:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74104,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:55:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74108,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "2368:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74105,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2359:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2359:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74110,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74114,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "2417:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74115,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "2427:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74116,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74088,
                        "src": "2433:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74111,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "2386:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41041,
                      "src": "2386:30:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2386:55:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74118,
                  "nodeType": "ExpressionStatement",
                  "src": "2386:55:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74122,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73933,
                            "src": "2484:8:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 74123,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "2494:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74120,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "2461:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawApproval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41506,
                          "src": "2461:22:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (address,contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2461:38:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2501:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74119,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2452:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2452:51:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74127,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:51:164"
                }
              ]
            },
            "functionSelector": "a785dfa8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_DecreaseWithdrawApproval",
            "nameLocation": "2191:40:164",
            "parameters": {
              "id": 74089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74088,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "2240:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74129,
                  "src": "2232:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2232:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2231:17:164"
            },
            "returnParameters": {
              "id": 74090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2256:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74141,
            "nodeType": "FunctionDefinition",
            "src": "2516:130:164",
            "nodes": [],
            "body": {
              "id": 74140,
              "nodeType": "Block",
              "src": "2568:78:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74135,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "2611:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74133,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "2587:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41408,
                          "src": "2587:23:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2587:29:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74137,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "2618:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74132,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2578:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2578:61:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74139,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:61:164"
                }
              ]
            },
            "functionSelector": "a1fbc673",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_GetReserveBalance",
            "nameLocation": "2525:33:164",
            "parameters": {
              "id": 74130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2558:2:164"
            },
            "returnParameters": {
              "id": 74131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74206,
            "nodeType": "FunctionDefinition",
            "src": "2652:443:164",
            "nodes": [],
            "body": {
              "id": 74205,
              "nodeType": "Block",
              "src": "2726:369:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74149,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74143,
                          "src": "2746:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 74150,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "2756:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2746:30:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74146,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2736:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "2736:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74153,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74157,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "2797:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74154,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2788:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2788:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74159,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74163,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "2846:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74164,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "2856:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74165,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74143,
                        "src": "2862:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74160,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "2815:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40993,
                      "src": "2815:30:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:55:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74167,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:55:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74171,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73933,
                            "src": "2913:8:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 74172,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "2923:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74169,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "2890:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawApproval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41506,
                          "src": "2890:22:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (address,contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2890:38:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74174,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74143,
                        "src": "2930:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74168,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2881:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:57:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74176,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:57:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74180,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "2958:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74177,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2949:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2949:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2949:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74182,
                  "nodeType": "ExpressionStatement",
                  "src": "2949:18:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74188,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3008:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TRSRYTest_$75111",
                              "typeString": "contract TRSRYTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TRSRYTest_$75111",
                              "typeString": "contract TRSRYTest"
                            }
                          ],
                          "id": 74187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3000:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3000:7:164",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3000:13:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74190,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "3015:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74191,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74143,
                        "src": "3021:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74183,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "2977:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "2977:22:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:52:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74193,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:52:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 74199,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3072:4:164",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TRSRYTest_$75111",
                                  "typeString": "contract TRSRYTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TRSRYTest_$75111",
                                  "typeString": "contract TRSRYTest"
                                }
                              ],
                              "id": 74198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3064:7:164",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 74197,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3064:7:164",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 74200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3064:13:164",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74195,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "3049:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "3049:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3049:29:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74202,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74143,
                        "src": "3080:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74194,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3040:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:48:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74204,
                  "nodeType": "ExpressionStatement",
                  "src": "3040:48:164"
                }
              ]
            },
            "functionSelector": "0fa89a3b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_ApprovedCanWithdrawToken",
            "nameLocation": "2661:40:164",
            "parameters": {
              "id": 74144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74143,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "2710:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74206,
                  "src": "2702:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2701:17:164"
            },
            "returnParameters": {
              "id": 74145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74250,
            "nodeType": "FunctionDefinition",
            "src": "3238:350:164",
            "nodes": [],
            "body": {
              "id": 74249,
              "nodeType": "Block",
              "src": "3314:274:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74214,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74208,
                          "src": "3334:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 74215,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "3344:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3334:30:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74211,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3324:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3324:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74218,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74222,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74208,
                          "src": "3385:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3395:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3385:11:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74219,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3375:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3375:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:22:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74226,
                  "nodeType": "ExpressionStatement",
                  "src": "3375:22:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74227,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3474:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7097,
                      "src": "3474:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 74230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3474:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74231,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74235,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "3510:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74232,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3501:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "3501:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74237,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:18:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74243,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3560:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TRSRYTest_$75111",
                              "typeString": "contract TRSRYTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TRSRYTest_$75111",
                              "typeString": "contract TRSRYTest"
                            }
                          ],
                          "id": 74242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3552:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3552:7:164",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3552:13:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74245,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "3567:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74246,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74208,
                        "src": "3573:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74238,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "3529:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "3529:22:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3529:52:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74248,
                  "nodeType": "ExpressionStatement",
                  "src": "3529:52:164"
                }
              ]
            },
            "functionSelector": "62e12a7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_UnauthorizedCannotWithdrawToken",
            "nameLocation": "3247:42:164",
            "parameters": {
              "id": 74209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74208,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3298:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74250,
                  "src": "3290:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3289:17:164"
            },
            "returnParameters": {
              "id": 74210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3314:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74332,
            "nodeType": "FunctionDefinition",
            "src": "3594:616:164",
            "nodes": [],
            "body": {
              "id": 74331,
              "nodeType": "Block",
              "src": "3653:557:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74258,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74252,
                          "src": "3673:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 74259,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "3683:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3673:30:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74255,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3663:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3663:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3663:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74262,
                  "nodeType": "ExpressionStatement",
                  "src": "3663:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74266,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74252,
                          "src": "3724:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3734:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3724:11:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74263,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3714:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3714:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3714:22:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74270,
                  "nodeType": "ExpressionStatement",
                  "src": "3714:22:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74274,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "3756:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74271,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3747:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "3747:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3747:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74276,
                  "nodeType": "ExpressionStatement",
                  "src": "3747:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74280,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "3803:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74281,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "3811:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74282,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74252,
                        "src": "3817:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74277,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "3774:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "3774:28:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3774:51:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74284,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:51:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74288,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "3845:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74285,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3836:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "3836:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74290,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74294,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "3878:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74295,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74252,
                        "src": "3884:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74291,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "3862:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "3862:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74297,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:30:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74301,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "3927:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74299,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "3912:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "3912:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3912:22:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74303,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74252,
                        "src": "3936:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74298,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3903:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3903:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74305,
                  "nodeType": "ExpressionStatement",
                  "src": "3903:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74309,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "3981:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74310,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "3987:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74307,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "3963:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "3963:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3963:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74312,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74252,
                        "src": "3996:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74306,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3954:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:50:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74314,
                  "nodeType": "ExpressionStatement",
                  "src": "3954:50:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74318,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "4039:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74316,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "4023:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41520,
                          "src": "4023:15:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4023:21:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74320,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74252,
                        "src": "4046:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74315,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4014:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:40:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74322,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:40:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74326,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "4175:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74324,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "4151:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41408,
                          "src": "4151:23:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4151:29:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74328,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "4182:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74323,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4142:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4142:61:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74330,
                  "nodeType": "ExpressionStatement",
                  "src": "4142:61:164"
                }
              ]
            },
            "functionSelector": "5bdb8b04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_IncurDebt",
            "nameLocation": "3603:25:164",
            "parameters": {
              "id": 74253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74252,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3637:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74332,
                  "src": "3629:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3628:17:164"
            },
            "returnParameters": {
              "id": 74254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3653:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74404,
            "nodeType": "FunctionDefinition",
            "src": "4216:564:164",
            "nodes": [],
            "body": {
              "id": 74403,
              "nodeType": "Block",
              "src": "4288:492:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74340,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74334,
                          "src": "4308:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 74341,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "4318:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4308:30:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74337,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4298:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4298:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4298:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74344,
                  "nodeType": "ExpressionStatement",
                  "src": "4298:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74348,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74334,
                          "src": "4359:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4369:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4359:11:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74345,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4349:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4349:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4349:22:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74352,
                  "nodeType": "ExpressionStatement",
                  "src": "4349:22:164"
                },
                {
                  "assignments": [
                    74354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74354,
                      "mutability": "mutable",
                      "name": "unapprovedPolicy",
                      "nameLocation": "4390:16:164",
                      "nodeType": "VariableDeclaration",
                      "scope": 74403,
                      "src": "4382:24:164",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74353,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4382:7:164",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74359,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307830",
                        "id": 74357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4417:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4409:7:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 74355,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4409:7:164",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 74358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4409:12:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4382:39:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74363,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "4441:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74360,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4432:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4432:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74365,
                  "nodeType": "ExpressionStatement",
                  "src": "4432:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74369,
                        "name": "unapprovedPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74354,
                        "src": "4488:16:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74370,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "4506:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74371,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74334,
                        "src": "4512:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74366,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "4459:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "4459:28:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:61:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74373,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:61:164"
                },
                {
                  "assignments": [
                    74375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74375,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "4544:3:164",
                      "nodeType": "VariableDeclaration",
                      "scope": 74403,
                      "src": "4531:16:164",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 74374,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74383,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 74378,
                            "name": "Module",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28577,
                            "src": "4586:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Module_$28577_$",
                              "typeString": "type(contract Module)"
                            }
                          },
                          "id": 74379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Module_PolicyNotPermitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28519,
                          "src": "4586:32:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                            "typeString": "function (address) pure"
                          }
                        },
                        "id": 74380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4586:41:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 74381,
                        "name": "unapprovedPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74354,
                        "src": "4641:16:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74376,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4550:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 74377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "4550:22:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 74382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:117:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:136:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74387,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74375,
                        "src": "4693:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 74384,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4677:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "4677:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 74388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4677:20:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74389,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:20:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74393,
                        "name": "unapprovedPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74354,
                        "src": "4716:16:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74390,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4707:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4707:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4707:26:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74395,
                  "nodeType": "ExpressionStatement",
                  "src": "4707:26:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74399,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "4759:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74400,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74334,
                        "src": "4765:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74396,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "4743:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "4743:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74402,
                  "nodeType": "ExpressionStatement",
                  "src": "4743:30:164"
                }
              ]
            },
            "functionSelector": "cee39755",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_UnauthorizedCannotIncurDebt",
            "nameLocation": "4225:38:164",
            "parameters": {
              "id": 74335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74334,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4272:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74404,
                  "src": "4264:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:17:164"
            },
            "returnParameters": {
              "id": 74336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4288:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74501,
            "nodeType": "FunctionDefinition",
            "src": "4786:610:164",
            "nodes": [],
            "body": {
              "id": 74500,
              "nodeType": "Block",
              "src": "4845:551:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74412,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74406,
                          "src": "4865:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4875:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4865:11:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74409,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4855:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4855:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:22:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74416,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:22:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74420,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74406,
                          "src": "4897:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 74421,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "4907:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4897:30:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74417,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4887:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4887:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74424,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74428,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "4948:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74425,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4939:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4939:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74430,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74434,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "4995:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74435,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "5003:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74436,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74406,
                        "src": "5009:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74431,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "4966:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "4966:28:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:51:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74438,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:51:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74442,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "5042:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74439,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5028:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7053,
                      "src": "5028:13:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:21:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74444,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:21:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74448,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "5075:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74449,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74406,
                        "src": "5081:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74445,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "5059:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "5059:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5059:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74451,
                  "nodeType": "ExpressionStatement",
                  "src": "5059:30:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74455,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "5124:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74453,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "5109:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "5109:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5109:22:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74457,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74406,
                        "src": "5133:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74452,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5100:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74459,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74463,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "5178:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74464,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "5184:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74461,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "5160:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "5160:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5160:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74466,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74406,
                        "src": "5193:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74460,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5151:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:50:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74468,
                  "nodeType": "ExpressionStatement",
                  "src": "5151:50:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74474,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "5255:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 74473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5247:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5247:7:164",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5247:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74476,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74406,
                        "src": "5263:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74469,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "5234:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 74471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25452,
                      "src": "5234:12:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5234:37:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74478,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:37:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74482,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "5297:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74483,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "5305:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74484,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74406,
                        "src": "5311:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74479,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "5281:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "repayDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41304,
                      "src": "5281:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:38:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74486,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:38:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74487,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5329:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7070,
                      "src": "5329:12:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 74490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5329:14:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74491,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:14:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74495,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "5378:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74493,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "5363:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "5363:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5363:22:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5387:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74492,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5354:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5354:35:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74499,
                  "nodeType": "ExpressionStatement",
                  "src": "5354:35:164"
                }
              ]
            },
            "functionSelector": "6411193d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_RepayDebt",
            "nameLocation": "4795:25:164",
            "parameters": {
              "id": 74407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74406,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4829:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74501,
                  "src": "4821:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4821:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4820:17:164"
            },
            "returnParameters": {
              "id": 74408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4845:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74569,
            "nodeType": "FunctionDefinition",
            "src": "5402:522:164",
            "nodes": [],
            "body": {
              "id": 74568,
              "nodeType": "Block",
              "src": "5444:480:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74507,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "5463:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74504,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5454:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5454:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74509,
                  "nodeType": "ExpressionStatement",
                  "src": "5454:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74513,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "5510:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74514,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "5518:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74515,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "5524:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74510,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "5481:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "5481:28:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5481:64:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74517,
                  "nodeType": "ExpressionStatement",
                  "src": "5481:64:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74521,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "5565:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74518,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5556:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5556:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5556:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74523,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74527,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "5598:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74528,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "5604:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74524,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "5582:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "5582:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5582:43:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74530,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:43:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74534,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "5701:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74531,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5692:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5692:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5692:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74536,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74540,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "5733:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74541,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "5741:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74542,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "5747:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 74543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5770:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5747:24:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74537,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "5719:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41361,
                      "src": "5719:13:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5719:53:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74546,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:53:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74550,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "5810:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74551,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "5816:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74548,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "5792:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "5792:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5792:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74553,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "5825:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 74554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5848:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5825:24:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74547,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5783:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:67:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74557,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:67:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74561,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "5885:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74559,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "5869:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41520,
                          "src": "5869:15:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5869:21:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74563,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "5892:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 74564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5915:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5892:24:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74558,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5860:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5860:57:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74567,
                  "nodeType": "ExpressionStatement",
                  "src": "5860:57:164"
                }
              ]
            },
            "functionSelector": "82e3ea44",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_SetDebt",
            "nameLocation": "5411:23:164",
            "parameters": {
              "id": 74502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5434:2:164"
            },
            "returnParameters": {
              "id": 74503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5444:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74632,
            "nodeType": "FunctionDefinition",
            "src": "5930:597:164",
            "nodes": [],
            "body": {
              "id": 74631,
              "nodeType": "Block",
              "src": "5991:536:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74575,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "6010:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74572,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6001:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6001:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6001:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74577,
                  "nodeType": "ExpressionStatement",
                  "src": "6001:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74581,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "6057:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74582,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "6065:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74583,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "6071:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74578,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "6028:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "6028:28:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6028:64:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74585,
                  "nodeType": "ExpressionStatement",
                  "src": "6028:64:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74589,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "6112:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74586,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6103:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6103:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6103:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74591,
                  "nodeType": "ExpressionStatement",
                  "src": "6103:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74595,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "6145:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74596,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "6151:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74592,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "6129:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "6129:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6129:43:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74598,
                  "nodeType": "ExpressionStatement",
                  "src": "6129:43:164"
                },
                {
                  "assignments": [
                    74600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74600,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "6284:3:164",
                      "nodeType": "VariableDeclaration",
                      "scope": 74631,
                      "src": "6271:16:164",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 74599,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6271:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74608,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 74603,
                            "name": "Module",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28577,
                            "src": "6326:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Module_$28577_$",
                              "typeString": "type(contract Module)"
                            }
                          },
                          "id": 74604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Module_PolicyNotPermitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28519,
                          "src": "6326:32:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                            "typeString": "function (address) pure"
                          }
                        },
                        "id": 74605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "6326:41:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 74606,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "6381:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74601,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6290:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 74602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "6290:22:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 74607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:109:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6271:128:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74612,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74600,
                        "src": "6425:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 74609,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6409:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "6409:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 74613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6409:20:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74614,
                  "nodeType": "ExpressionStatement",
                  "src": "6409:20:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74618,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "6448:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74615,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6439:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6439:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6439:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74620,
                  "nodeType": "ExpressionStatement",
                  "src": "6439:18:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74624,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "6481:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74625,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "6489:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74626,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "6495:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 74627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6518:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6495:24:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74621,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "6467:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41361,
                      "src": "6467:13:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6467:53:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74630,
                  "nodeType": "ExpressionStatement",
                  "src": "6467:53:164"
                }
              ]
            },
            "functionSelector": "437e7dfd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_UnauthorizedPolicyCannotSetDebt",
            "nameLocation": "5939:42:164",
            "parameters": {
              "id": 74570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5981:2:164"
            },
            "returnParameters": {
              "id": 74571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5991:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74711,
            "nodeType": "FunctionDefinition",
            "src": "6533:536:164",
            "nodes": [],
            "body": {
              "id": 74710,
              "nodeType": "Block",
              "src": "6577:492:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74638,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "6596:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74635,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6587:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6587:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6587:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74640,
                  "nodeType": "ExpressionStatement",
                  "src": "6587:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74644,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "6643:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74645,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "6651:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74646,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "6657:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74641,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "6614:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "6614:28:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6614:64:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74648,
                  "nodeType": "ExpressionStatement",
                  "src": "6614:64:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74652,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "6698:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74649,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6689:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6689:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74654,
                  "nodeType": "ExpressionStatement",
                  "src": "6689:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74658,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "6731:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74659,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "6737:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74655,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "6715:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "6715:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6715:43:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74661,
                  "nodeType": "ExpressionStatement",
                  "src": "6715:43:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74665,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "6796:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74666,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "6802:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74663,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "6778:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "6778:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6778:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74668,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "6811:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74662,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6769:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6769:63:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74670,
                  "nodeType": "ExpressionStatement",
                  "src": "6769:63:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74674,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "6867:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74672,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "6851:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41520,
                          "src": "6851:15:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6851:21:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74676,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73940,
                        "src": "6874:20:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74671,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6842:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6842:53:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74678,
                  "nodeType": "ExpressionStatement",
                  "src": "6842:53:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74682,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "6915:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74679,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6906:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6906:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6906:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74684,
                  "nodeType": "ExpressionStatement",
                  "src": "6906:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74688,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "6947:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74689,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "6955:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6961:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 74685,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "6933:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41361,
                      "src": "6933:13:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6933:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74692,
                  "nodeType": "ExpressionStatement",
                  "src": "6933:30:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74696,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "7001:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74697,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "7007:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74694,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "6983:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "6983:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6983:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7016:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74693,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6974:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6974:44:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74701,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:44:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74705,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "7053:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 74703,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "7037:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41520,
                          "src": "7037:15:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 74706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7037:21:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7060:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74702,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7028:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7028:34:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74709,
                  "nodeType": "ExpressionStatement",
                  "src": "7028:34:164"
                }
              ]
            },
            "functionSelector": "18b9d8c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_ClearDebt",
            "nameLocation": "6542:25:164",
            "parameters": {
              "id": 74633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6567:2:164"
            },
            "returnParameters": {
              "id": 74634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6577:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74969,
            "nodeType": "FunctionDefinition",
            "src": "7075:1847:164",
            "nodes": [],
            "body": {
              "id": 74968,
              "nodeType": "Block",
              "src": "7133:1789:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74719,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74713,
                          "src": "7153:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7164:1:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7153:12:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74716,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7143:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "7143:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7143:23:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74723,
                  "nodeType": "ExpressionStatement",
                  "src": "7143:23:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74727,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74713,
                          "src": "7186:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 74728,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73940,
                          "src": "7196:20:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7186:30:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 74724,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7176:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "7176:9:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 74730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7176:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74731,
                  "nodeType": "ExpressionStatement",
                  "src": "7176:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74735,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "7307:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74732,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7298:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7298:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7298:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74737,
                  "nodeType": "ExpressionStatement",
                  "src": "7298:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74741,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "7356:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74742,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "7365:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74743,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "7371:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74738,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "7325:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40993,
                      "src": "7325:30:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7325:54:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74745,
                  "nodeType": "ExpressionStatement",
                  "src": "7325:54:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74749,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "7399:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74746,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7390:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7390:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7390:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74751,
                  "nodeType": "ExpressionStatement",
                  "src": "7390:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74755,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "7446:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74756,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "7454:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74757,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "7460:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74752,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "7417:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "7417:28:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:51:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74759,
                  "nodeType": "ExpressionStatement",
                  "src": "7417:51:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74763,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "7518:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74760,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7509:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7509:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7509:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74765,
                  "nodeType": "ExpressionStatement",
                  "src": "7509:17:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74766,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "7536:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41373,
                      "src": "7536:16:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 74769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7536:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74770,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:18:164"
                },
                {
                  "assignments": [
                    74772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74772,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7631:3:164",
                      "nodeType": "VariableDeclaration",
                      "scope": 74968,
                      "src": "7618:16:164",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 74771,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7618:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74777,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "54525352595f4e6f744163746976652829",
                        "id": 74775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7661:19:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        },
                        "value": "TRSRY_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 74773,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7637:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 74774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7637:23:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 74776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7637:44:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7618:63:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74781,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74772,
                        "src": "7707:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 74778,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7691:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7691:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 74782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7691:20:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74783,
                  "nodeType": "ExpressionStatement",
                  "src": "7691:20:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74787,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "7730:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74784,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7721:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7721:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7721:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74789,
                  "nodeType": "ExpressionStatement",
                  "src": "7721:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74793,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "7771:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74794,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "7780:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74795,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "7786:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74790,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "7748:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "7748:22:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:46:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74797,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:46:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74801,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74772,
                        "src": "7868:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 74798,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7852:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7852:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 74802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7852:20:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74803,
                  "nodeType": "ExpressionStatement",
                  "src": "7852:20:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74807,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "7891:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74804,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7882:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7882:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7882:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74809,
                  "nodeType": "ExpressionStatement",
                  "src": "7882:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74813,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "7924:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74814,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "7930:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74810,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "7908:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "7908:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7908:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74816,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:30:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74820,
                            "name": "godmode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73935,
                            "src": "7973:7:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74818,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "7958:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "7958:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7958:23:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7983:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74817,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7949:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7949:36:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74824,
                  "nodeType": "ExpressionStatement",
                  "src": "7949:36:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74828,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "8022:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74829,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "8028:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74826,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "8004:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "8004:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8004:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8037:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74825,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7995:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7995:44:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74833,
                  "nodeType": "ExpressionStatement",
                  "src": "7995:44:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74837,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "8073:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74835,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "8058:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "8058:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8058:22:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8082:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74834,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8049:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8049:35:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74841,
                  "nodeType": "ExpressionStatement",
                  "src": "8049:35:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74845,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "8137:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74842,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8128:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8128:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8128:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74847,
                  "nodeType": "ExpressionStatement",
                  "src": "8128:17:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74848,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "8155:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41385,
                      "src": "8155:14:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 74851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8155:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74852,
                  "nodeType": "ExpressionStatement",
                  "src": "8155:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74856,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "8219:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74853,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8210:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8210:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74858,
                  "nodeType": "ExpressionStatement",
                  "src": "8210:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74862,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "8260:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74863,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "8269:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74864,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8275:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74859,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "8237:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "8237:22:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8237:46:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74866,
                  "nodeType": "ExpressionStatement",
                  "src": "8237:46:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74870,
                            "name": "godmode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73935,
                            "src": "8317:7:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74868,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "8302:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "8302:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8302:23:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74872,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8327:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74867,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8293:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8293:42:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74874,
                  "nodeType": "ExpressionStatement",
                  "src": "8293:42:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74878,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "8411:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74875,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8402:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8402:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8402:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74880,
                  "nodeType": "ExpressionStatement",
                  "src": "8402:17:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74886,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "8451:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 74885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8443:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8443:7:164",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8443:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74888,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8459:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74881,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "8429:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 74883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25485,
                      "src": "8429:13:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8429:38:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74890,
                  "nodeType": "ExpressionStatement",
                  "src": "8429:38:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74894,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "8487:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74891,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8478:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8478:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8478:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74896,
                  "nodeType": "ExpressionStatement",
                  "src": "8478:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74900,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "8520:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74901,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8526:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74897,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "8504:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "8504:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 74902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8504:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74903,
                  "nodeType": "ExpressionStatement",
                  "src": "8504:30:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74907,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "8568:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74905,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "8553:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "8553:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8553:22:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74909,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8577:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74904,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8544:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8544:41:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74911,
                  "nodeType": "ExpressionStatement",
                  "src": "8544:41:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74915,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "8622:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74916,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "8628:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74913,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "8604:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "8604:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8604:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74918,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8637:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74912,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8595:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8595:50:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74920,
                  "nodeType": "ExpressionStatement",
                  "src": "8595:50:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74924,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "8687:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74921,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8678:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8678:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8678:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74926,
                  "nodeType": "ExpressionStatement",
                  "src": "8678:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74932,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "8725:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 74931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8717:7:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74930,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8717:7:164",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8717:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74934,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8733:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74927,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "8704:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 74929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25452,
                      "src": "8704:12:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8704:37:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74936,
                  "nodeType": "ExpressionStatement",
                  "src": "8704:37:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74940,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "8760:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74937,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8751:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8751:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8751:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74942,
                  "nodeType": "ExpressionStatement",
                  "src": "8751:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74946,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73937,
                        "src": "8793:6:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74947,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73931,
                        "src": "8801:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 74948,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74713,
                        "src": "8807:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74943,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "8777:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 74945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "repayDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41304,
                      "src": "8777:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 74949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8777:38:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74950,
                  "nodeType": "ExpressionStatement",
                  "src": "8777:38:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74954,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "8850:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74952,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "8835:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 74953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "8835:14:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 74955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8835:22:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8859:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74951,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8826:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8826:35:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74958,
                  "nodeType": "ExpressionStatement",
                  "src": "8826:35:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74962,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73931,
                            "src": "8898:4:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 74963,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73937,
                            "src": "8904:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 74960,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "8880:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "8880:17:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 74964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8880:31:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 74965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8913:1:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74959,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8871:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 74966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8871:44:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74967,
                  "nodeType": "ExpressionStatement",
                  "src": "8871:44:164"
                }
              ]
            },
            "functionSelector": "bcf643cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_Shutdown",
            "nameLocation": "7084:24:164",
            "parameters": {
              "id": 74714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74713,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "7117:7:164",
                  "nodeType": "VariableDeclaration",
                  "scope": 74969,
                  "src": "7109:15:164",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7109:7:164",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7108:17:164"
            },
            "returnParameters": {
              "id": 74715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7133:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75110,
            "nodeType": "FunctionDefinition",
            "src": "8928:1295:164",
            "nodes": [],
            "body": {
              "id": 75109,
              "nodeType": "Block",
              "src": "8996:1227:164",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 74973,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "9048:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 74974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "9048:12:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 74975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9048:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 74976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9064:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 74972,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9039:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 74977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9039:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74978,
                  "nodeType": "ExpressionStatement",
                  "src": "9039:30:164"
                },
                {
                  "assignments": [
                    74980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74980,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "9145:3:164",
                      "nodeType": "VariableDeclaration",
                      "scope": 75109,
                      "src": "9132:16:164",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 74979,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9132:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74988,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 74983,
                            "name": "Module",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28577,
                            "src": "9187:6:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Module_$28577_$",
                              "typeString": "type(contract Module)"
                            }
                          },
                          "id": 74984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Module_PolicyNotPermitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28519,
                          "src": "9187:32:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                            "typeString": "function (address) pure"
                          }
                        },
                        "id": 74985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "9187:41:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 74986,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "9242:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74981,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9151:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 74982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "9151:22:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 74987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9151:109:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9132:128:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74992,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74980,
                        "src": "9286:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 74989,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9270:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "9270:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 74993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9270:20:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74994,
                  "nodeType": "ExpressionStatement",
                  "src": "9270:20:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74998,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "9309:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74995,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9300:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 74997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9300:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 74999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9300:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75000,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:18:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75001,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "9328:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 75003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41373,
                      "src": "9328:16:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9328:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75005,
                  "nodeType": "ExpressionStatement",
                  "src": "9328:18:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 75007,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "9366:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 75008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "9366:12:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 75009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9366:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9382:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75006,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9357:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 75011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9357:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75012,
                  "nodeType": "ExpressionStatement",
                  "src": "9357:30:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75016,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "9448:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 75013,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9439:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 75015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9439:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9439:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75018,
                  "nodeType": "ExpressionStatement",
                  "src": "9439:17:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75019,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "9466:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 75021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41373,
                      "src": "9466:16:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9466:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75023,
                  "nodeType": "ExpressionStatement",
                  "src": "9466:18:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 75025,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "9504:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 75026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "9504:12:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 75027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9504:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9520:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75024,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9495:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 75029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9495:31:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75030,
                  "nodeType": "ExpressionStatement",
                  "src": "9495:31:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75034,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "9639:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 75031,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9630:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 75033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9630:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9630:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75036,
                  "nodeType": "ExpressionStatement",
                  "src": "9630:17:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75037,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "9657:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 75039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41373,
                      "src": "9657:16:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9657:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75041,
                  "nodeType": "ExpressionStatement",
                  "src": "9657:18:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 75043,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "9695:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 75044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "9695:12:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 75045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9695:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9711:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75042,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9686:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 75047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9686:31:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75048,
                  "nodeType": "ExpressionStatement",
                  "src": "9686:31:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75052,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74980,
                        "src": "9796:3:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 75049,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9780:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 75051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "9780:15:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 75053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9780:20:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75054,
                  "nodeType": "ExpressionStatement",
                  "src": "9780:20:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75058,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73933,
                        "src": "9819:8:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 75055,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9810:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 75057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9810:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9810:18:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75060,
                  "nodeType": "ExpressionStatement",
                  "src": "9810:18:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75061,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "9838:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 75063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41385,
                      "src": "9838:14:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9838:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75065,
                  "nodeType": "ExpressionStatement",
                  "src": "9838:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 75067,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "9874:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 75068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "9874:12:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 75069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9874:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9890:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75066,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9865:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 75071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:31:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75072,
                  "nodeType": "ExpressionStatement",
                  "src": "9865:31:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75076,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "9957:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 75073,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9948:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 75075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9948:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9948:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75078,
                  "nodeType": "ExpressionStatement",
                  "src": "9948:17:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75079,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "9975:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 75081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41385,
                      "src": "9975:14:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9975:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75083,
                  "nodeType": "ExpressionStatement",
                  "src": "9975:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 75085,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "10011:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 75086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "10011:12:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 75087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10011:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10027:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75084,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "10002:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 75089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10002:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75090,
                  "nodeType": "ExpressionStatement",
                  "src": "10002:30:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75094,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73935,
                        "src": "10141:7:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 75091,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10132:2:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 75093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10132:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10132:17:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75096,
                  "nodeType": "ExpressionStatement",
                  "src": "10132:17:164"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75097,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73928,
                        "src": "10159:5:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 75099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41385,
                      "src": "10159:14:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10159:16:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75101,
                  "nodeType": "ExpressionStatement",
                  "src": "10159:16:164"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 75103,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73928,
                            "src": "10195:5:164",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 75104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "10195:12:164",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 75105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10195:14:164",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10211:4:164",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75102,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "10186:8:164",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 75107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:30:164",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75108,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:30:164"
                }
              ]
            },
            "functionSelector": "cf18f8d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_AddressWithPermCannotShutdownOrRestart",
            "nameLocation": "8937:49:164",
            "parameters": {
              "id": 74970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8986:2:164"
            },
            "returnParameters": {
              "id": 74971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8996:0:164"
            },
            "scope": 75111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 73917,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "659:4:164"
            },
            "id": 73918,
            "nodeType": "InheritanceSpecifier",
            "src": "659:4:164"
          }
        ],
        "canonicalName": "TRSRYTest",
        "contractDependencies": [
          24679,
          29497,
          41409
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75111,
          5484,
          2554,
          2291
        ],
        "name": "TRSRYTest",
        "nameLocation": "646:9:164",
        "scope": 75112,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 164
}