{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRSRY",
      "outputs": [
        {
          "internalType": "contract GoerliDaoTreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debtor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "godmode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ngmi",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_ApprovedCanWithdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_ClearDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_DecreaseWithdrawApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_GetReserveBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_IncreaseWithdrawApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_IncurDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_KEYCODE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_RepayDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_SetDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_Shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_AddressWithPermCannotShutdownOrRestart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testRevert_UnauthorizedCannotIncurDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testRevert_UnauthorizedCannotWithdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_UnauthorizedPolicyCannotSetDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b5061867980620000326000396000f3fe60806040523480156200001157600080fd5b5060043610620001425760003560e01c80630a9254e414620001475780630e375e4014620001535780630fa89a3b146200017f57806318b9d8c814620001965780632ba22b1814620001a05780633a76846314620001b7578063437e7dfd14620001ce5780635bdb8b0414620001d8578063628a798714620001ef57806362e12a7d14620001f95780636411193d146200021057806380cee4ab146200022757806382e3ea44146200023b5780639cb64a2d1462000245578063a1fbc6731462000259578063a785dfa81462000263578063ba414fa6146200027a578063bcf643cd1462000295578063c5c680f314620002ac578063cee3975514620002c0578063cf18f8d314620002d7578063f8ccbf4714620002e1578063fa7626d414620002f5578063fb223f181462000303575b600080fd5b6200015162000317565b005b600c5462000167906001600160a01b031681565b604051620001769190620044b0565b60405180910390f35b6200015162000190366004620044c4565b62000897565b6200015162000b8f565b62000151620001b1366004620044c4565b62000fe9565b62000167600080516020620085c483398151915281565b6200015162001110565b62000151620001e9366004620044c4565b620014ae565b6200015162001836565b620001516200020a366004620044c4565b620018cd565b6200015162000221366004620044c4565b62001aa9565b60095462000167906001600160a01b031681565b6200015162001f46565b600d5462000167906001600160a01b031681565b62000151620022f7565b6200015162000274366004620044c4565b62002333565b6200028462002541565b604051901515815260200162000176565b62000151620002a6366004620044c4565b6200266b565b600b5462000167906001600160a01b031681565b62000151620002d1366004620044c4565b6200344a565b6200015162003790565b600054620002849062010000900460ff1681565b600054620002849060ff1681565b600a5462000167906001600160a01b031681565b604051620003259062004486565b604051809103906000f08015801562000342573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051620003709062004494565b6200037c9190620044b0565b604051809103906000f08015801562000399573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055604051601290620003cb90620044a2565b6060808252601190820152701b9bdd0819dbdb9b98481b585ad9481a5d607a1b608082015260a060208201819052600490820152634e474d4960e01b60c082015260ff909116604082015260e001604051809103906000f08015801562000436573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b0392831617905560085460095460405163c4d1f8f160e01b81529183169263c4d1f8f19262000483926000921690600401620044de565b600060405180830381600087803b1580156200049e57600080fd5b505af1158015620004b3573d6000803e3d6000fd5b50506009546040805180820182526011815270476f65726c6944616f547265617375727960781b60208201529051639049957960e01b815273__$6a18d296e27eadcc0fe82d65240272eaa9$__94506390499579935062000522926001600160a01b0316919060040162004576565b602060405180830381865af415801562000540573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005669190620045a4565b600c80546001600160a01b0319166001600160a01b0392831690811790915560085460405163c4d1f8f160e01b815292169163c4d1f8f191620005b09160029190600401620044de565b600060405180830381600087803b158015620005cb57600080fd5b505af1158015620005e0573d6000803e3d6000fd5b5050600954604051634e1768af60e11b81526001600160a01b039091166004820152632f42aef560e01b602482015273__$6a18d296e27eadcc0fe82d65240272eaa9$__9250639c2ed15e9150604401602060405180830381865af41580156200064e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006749190620045a4565b600b80546001600160a01b0319166001600160a01b0392831690811790915560085460405163c4d1f8f160e01b815292169163c4d1f8f191620006be9160029190600401620044de565b600060405180830381600087803b158015620006d957600080fd5b505af1158015620006ee573d6000803e3d6000fd5b50506009546040805180820182526011815270476f65726c6944616f547265617375727960781b60208201529051639049957960e01b815273__$6a18d296e27eadcc0fe82d65240272eaa9$__9450639049957993506200075d926001600160a01b0316919060040162004576565b602060405180830381865af41580156200077b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a19190620045a4565b600d80546001600160a01b0319166001600160a01b0392831690811790915560085460405163c4d1f8f160e01b815292169163c4d1f8f191620007eb9160029190600401620044de565b600060405180830381600087803b1580156200080657600080fd5b505af11580156200081b573d6000803e3d6000fd5b5050600a546009546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062000861929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b1580156200087c57600080fd5b505af115801562000891573d6000803e3d6000fd5b50505050565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b158015620008ea57600080fd5b505af1158015620008ff573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062000942916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200095d57600080fd5b505af115801562000972573d6000803e3d6000fd5b5050600954600b54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a9450620009b69392831692909116908690600401620045ef565b600060405180830381600087803b158015620009d157600080fd5b505af1158015620009e6573d6000803e3d6000fd5b5050600954600b54600a54604051635f0736a160e01b815262000a7595506001600160a01b039384169450635f0736a19362000a2a93811692169060040162004613565b602060405180830381865afa15801562000a48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a6e91906200462d565b82620040a5565b600b5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162000ab4916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000acf57600080fd5b505af115801562000ae4573d6000803e3d6000fd5b5050600954600a54604051632f42aef560e01b81526001600160a01b039283169450632f42aef5935062000b2192309216908690600401620045ef565b600060405180830381600087803b15801562000b3c57600080fd5b505af115801562000b51573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815262000b8c93506001600160a01b0390911691506370a082319062000a2a903090600401620044b0565b50565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162000bce916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000be957600080fd5b505af115801562000bfe573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c945062000c4a93928316929091169068056bc75e2d6310000090600401620045ef565b600060405180830381600087803b15801562000c6557600080fd5b505af115801562000c7a573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062000cbd916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000cd857600080fd5b505af115801562000ced573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c1935062000d33929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b15801562000d4e57600080fd5b505af115801562000d63573d6000803e3d6000fd5b5050600954600a54600d546040516328a4ace560e01b815262000dfb95506001600160a01b0393841694506328a4ace59362000da793811692169060040162004613565b602060405180830381865afa15801562000dc5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000deb91906200462d565b68056bc75e2d63100000620040a5565b600954600a54604051631ff517ff60e01b815262000e37926001600160a01b0390811692631ff517ff9262000da79290911690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162000e76916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000e9157600080fd5b505af115801562000ea6573d6000803e3d6000fd5b5050600954600d54600a54604051634aae164b60e01b81526001600160a01b039384169550634aae164b945062000eeb939283169290911690600090600401620045ef565b600060405180830381600087803b15801562000f0657600080fd5b505af115801562000f1b573d6000803e3d6000fd5b5050600954600a54600d546040516328a4ace560e01b815262000fab95506001600160a01b0393841694506328a4ace59362000f5f93811692169060040162004613565b602060405180830381865afa15801562000f7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa391906200462d565b6000620040a5565b600954600a54604051631ff517ff60e01b815262000fe7926001600160a01b0390811692631ff517ff9262000f5f9290911690600401620044b0565b565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162001028916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200104357600080fd5b505af115801562001058573d6000803e3d6000fd5b5050600954600b54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a94506200109c9392831692909116908690600401620045ef565b600060405180830381600087803b158015620010b757600080fd5b505af1158015620010cc573d6000803e3d6000fd5b5050600954600b54600a54604051635f0736a160e01b815262000b8c95506001600160a01b039384169450635f0736a19362000a2a93811692169060040162004613565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa7916200114f916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200116a57600080fd5b505af11580156200117f573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c9450620011cb93928316929091169068056bc75e2d6310000090600401620045ef565b600060405180830381600087803b158015620011e657600080fd5b505af1158015620011fb573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa792506200123e916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200125957600080fd5b505af11580156200126e573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c19350620012b4929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b158015620012cf57600080fd5b505af1158015620012e4573d6000803e3d6000fd5b5050600b54604051600093506311bf00c960e01b925062001312916001600160a01b031690602401620044b0565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905163f28dceb360e01b8152909150600080516020620085c48339815191529063f28dceb3906200137a90849060040162004647565b600060405180830381600087803b1580156200139557600080fd5b505af1158015620013aa573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa79250620013ed916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200140857600080fd5b505af11580156200141d573d6000803e3d6000fd5b5050600954600d54600a546001600160a01b039283169450634aae164b9350908216911662001457600268056bc75e2d631000006200465c565b6040518463ffffffff1660e01b81526004016200147793929190620045ef565b600060405180830381600087803b1580156200149257600080fd5b505af1158015620014a7573d6000803e3d6000fd5b5050505050565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b1580156200150157600080fd5b505af115801562001516573d6000803e3d6000fd5b5050604051632631f2b160e11b81528315156004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200156457600080fd5b505af115801562001579573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa79250620015bc916001600160a01b031690600401620044b0565b600060405180830381600087803b158015620015d757600080fd5b505af1158015620015ec573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c94506200162f9392831692909116908690600401620045ef565b600060405180830381600087803b1580156200164a57600080fd5b505af11580156200165f573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa79250620016a2916001600160a01b031690600401620044b0565b600060405180830381600087803b158015620016bd57600080fd5b505af1158015620016d2573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c193506200170f92909116908590600401620045d6565b600060405180830381600087803b1580156200172a57600080fd5b505af11580156200173f573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b81526200177d94506001600160a01b0392831693506370a082319262000a2a921690600401620044b0565b600954600a54600d546040516328a4ace560e01b8152620017be936001600160a01b03908116936328a4ace59362000a2a9391831692169060040162004613565b600954600a54604051631ff517ff60e01b8152620017fa926001600160a01b0390811692631ff517ff9262000a2a9290911690600401620044b0565b600954600a546040516305489ad560e21b815262000b8c926001600160a01b03908116926315226b549262000da79290911690600401620044b0565b62000fe764545253525960d81b600960009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001897573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018bd91906200467f565b6001600160d81b03191662004169565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b1580156200192057600080fd5b505af115801562001935573d6000803e3d6000fd5b5050604051632631f2b160e11b81528315156004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200198357600080fd5b505af115801562001998573d6000803e3d6000fd5b505060408051633d21120560e21b81529051600080516020620085c4833981519152935063f48448149250600480830192600092919082900301818387803b158015620019e457600080fd5b505af1158015620019f9573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062001a3c916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001a5757600080fd5b505af115801562001a6c573d6000803e3d6000fd5b5050600954600a54604051632f42aef560e01b81526001600160a01b039283169450632f42aef593506200147792309216908690600401620045ef565b604051632631f2b160e11b81528115156004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b15801562001af357600080fd5b505af115801562001b08573d6000803e3d6000fd5b5050604051632631f2b160e11b815268056bc75e2d6310000084106004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b15801562001b5f57600080fd5b505af115801562001b74573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062001bb7916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001bd257600080fd5b505af115801562001be7573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c945062001c2a9392831692909116908690600401620045ef565b600060405180830381600087803b15801562001c4557600080fd5b505af115801562001c5a573d6000803e3d6000fd5b5050600d546040516303223eab60e11b8152600080516020620085c483398151915293506306447d56925062001c9d916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001cb857600080fd5b505af115801562001ccd573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c1935062001d0a92909116908590600401620045d6565b600060405180830381600087803b15801562001d2557600080fd5b505af115801562001d3a573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b815262001d7894506001600160a01b0392831693506370a082319262000a2a921690600401620044b0565b600954600a54600d546040516328a4ace560e01b815262001db9936001600160a01b03908116936328a4ace59362000a2a9391831692169060040162004613565b600a5460095460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001df1929116908590600401620045d6565b6020604051808303816000875af115801562001e11573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e379190620046ab565b50600954600d54600a5460405163f5b92c7360e01b81526001600160a01b039384169363f5b92c739362001e7793908216929116908690600401620045ef565b600060405180830381600087803b15801562001e9257600080fd5b505af115801562001ea7573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620085c483398151915293506390c5013b9250600480830192600092919082900301818387803b15801562001ef357600080fd5b505af115801562001f08573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b815262000b8c94506001600160a01b0392831693506370a082319262000f5f921690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162001f85916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001fa057600080fd5b505af115801562001fb5573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c94506200200193928316929091169068056bc75e2d6310000090600401620045ef565b600060405180830381600087803b1580156200201c57600080fd5b505af115801562002031573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002074916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200208f57600080fd5b505af1158015620020a4573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c19350620020ea929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b1580156200210557600080fd5b505af11580156200211a573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa792506200215d916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200217857600080fd5b505af11580156200218d573d6000803e3d6000fd5b5050600954600d54600a546001600160a01b039283169450634aae164b93509082169116620021c7600268056bc75e2d631000006200465c565b6040518463ffffffff1660e01b8152600401620021e793929190620045ef565b600060405180830381600087803b1580156200220257600080fd5b505af115801562002217573d6000803e3d6000fd5b5050600954600a54600d546040516328a4ace560e01b8152620022bb95506001600160a01b0393841694506328a4ace5936200225b93811692169060040162004613565b602060405180830381865afa15801562002279573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200229f91906200462d565b620022b5600268056bc75e2d631000006200465c565b620040a5565b600954600a54604051631ff517ff60e01b815262000fe7926001600160a01b0390811692631ff517ff926200225b9290911690600401620044b0565b600954600a546040516305489ad560e21b815262000fe7926001600160a01b03908116926315226b549262000da79290911690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162002372916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200238d57600080fd5b505af1158015620023a2573d6000803e3d6000fd5b5050600954600b54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a9450620023e69392831692909116908690600401620045ef565b600060405180830381600087803b1580156200240157600080fd5b505af115801562002416573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002459916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200247457600080fd5b505af115801562002489573d6000803e3d6000fd5b5050600954600b54600a54604051638b7f3fb960e01b81526001600160a01b039384169550638b7f3fb99450620024cd9392831692909116908690600401620045ef565b600060405180830381600087803b158015620024e857600080fd5b505af1158015620024fd573d6000803e3d6000fd5b5050600954600b54600a54604051635f0736a160e01b815262000b8c95506001600160a01b039384169450635f0736a19362000f5f93811692169060040162004613565b60008054610100900460ff1615620025625750600054610100900460ff1690565b60006200256e62004175565b156200266657604051600090600080516020620085c4833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620025c89083906519985a5b195960d21b90602001620045d6565b60408051601f1981840301815290829052620025e89291602001620046cf565b60408051601f1981840301815290829052620026049162004702565b6000604051808303816000865af19150503d806000811462002643576040519150601f19603f3d011682016040523d82523d6000602084013e62002648565b606091505b5091505080806020019051810190620026629190620046ab565b9150505b919050565b604051632631f2b160e11b81528115156004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b158015620026b557600080fd5b505af1158015620026ca573d6000803e3d6000fd5b5050604051632631f2b160e11b815268056bc75e2d6310000084106004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200272157600080fd5b505af115801562002736573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002779916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200279457600080fd5b505af1158015620027a9573d6000803e3d6000fd5b5050600954600c54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a9450620027ed9392831692909116908690600401620045ef565b600060405180830381600087803b1580156200280857600080fd5b505af11580156200281d573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002860916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200287b57600080fd5b505af115801562002890573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c9450620028d39392831692909116908690600401620045ef565b600060405180830381600087803b158015620028ee57600080fd5b505af115801562002903573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002946916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200296157600080fd5b505af115801562002976573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620029cb57600080fd5b505af1158015620029e0573d6000803e3d6000fd5b50506040805160048082526024820183526020820180516001600160e01b031663473b682f60e11b179052915163f28dceb360e01b8152909350600080516020620085c4833981519152925063f28dceb39162002a409185910162004647565b600060405180830381600087803b15801562002a5b57600080fd5b505af115801562002a70573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002ab3916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002ace57600080fd5b505af115801562002ae3573d6000803e3d6000fd5b5050600954600c54600a54604051632f42aef560e01b81526001600160a01b039384169550632f42aef5945062002b279392831692909116908790600401620045ef565b600060405180830381600087803b15801562002b4257600080fd5b505af115801562002b57573d6000803e3d6000fd5b505060405163f28dceb360e01b8152600080516020620085c4833981519152925063f28dceb3915062002b8f90849060040162004647565b600060405180830381600087803b15801562002baa57600080fd5b505af115801562002bbf573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002c02916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002c1d57600080fd5b505af115801562002c32573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c1935062002c6f92909116908690600401620045d6565b600060405180830381600087803b15801562002c8a57600080fd5b505af115801562002c9f573d6000803e3d6000fd5b5050600a54600c546040516370a0823160e01b815262002cdd94506001600160a01b0392831693506370a082319262000f5f921690600401620044b0565b600954600a54600d546040516328a4ace560e01b815262002d1e936001600160a01b03908116936328a4ace59362000f5f9391831692169060040162004613565b600a54600d546040516370a0823160e01b815262002d5a926001600160a01b03908116926370a082319262000f5f9290911690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162002d99916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002db457600080fd5b505af115801562002dc9573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002e1e57600080fd5b505af115801562002e33573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002e76916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002e9157600080fd5b505af115801562002ea6573d6000803e3d6000fd5b5050600954600c54600a54604051632f42aef560e01b81526001600160a01b039384169550632f42aef5945062002eea9392831692909116908790600401620045ef565b600060405180830381600087803b15801562002f0557600080fd5b505af115801562002f1a573d6000803e3d6000fd5b5050600a54600c546040516370a0823160e01b815262002fa394506001600160a01b0392831693506370a082319262002f58921690600401620044b0565b602060405180830381865afa15801562002f76573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f9c91906200462d565b83620040a5565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162002fe2916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002ffd57600080fd5b505af115801562003012573d6000803e3d6000fd5b5050600a5460095460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb93506200304f92909116908690600401620045d6565b6020604051808303816000875af11580156200306f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030959190620046ab565b50600d5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa791620030d5916001600160a01b031690600401620044b0565b600060405180830381600087803b158015620030f057600080fd5b505af115801562003105573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c193506200314292909116908690600401620045d6565b600060405180830381600087803b1580156200315d57600080fd5b505af115801562003172573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b8152620031b094506001600160a01b0392831693506370a082319262002f58921690600401620044b0565b600954600a54600d546040516328a4ace560e01b8152620031f1936001600160a01b03908116936328a4ace59362002f589391831692169060040162004613565b600d5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003230916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200324b57600080fd5b505af115801562003260573d6000803e3d6000fd5b5050600a5460095460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200329d92909116908690600401620045d6565b6020604051808303816000875af1158015620032bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032e39190620046ab565b50600d5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003323916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200333e57600080fd5b505af115801562003353573d6000803e3d6000fd5b5050600954600d54600a5460405163f5b92c7360e01b81526001600160a01b03938416955063f5b92c739450620033979392831692909116908790600401620045ef565b600060405180830381600087803b158015620033b257600080fd5b505af1158015620033c7573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b81526200340594506001600160a01b0392831693506370a082319262000f5f921690600401620044b0565b600954600a54600d546040516328a4ace560e01b815262003446936001600160a01b03908116936328a4ace59362000f5f9391831692169060040162004613565b5050565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b1580156200349d57600080fd5b505af1158015620034b2573d6000803e3d6000fd5b5050604051632631f2b160e11b81528315156004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200350057600080fd5b505af115801562003515573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b815260009350600080516020620085c4833981519152925063ca669fa7916200355d916001600160a01b0390911690600401620044b0565b600060405180830381600087803b1580156200357857600080fd5b505af11580156200358d573d6000803e3d6000fd5b5050600954600a54604051626a479760e21b81526001600160a01b0392831694506301a91e5c9350620035c992869216908790600401620045ef565b600060405180830381600087803b158015620035e457600080fd5b505af1158015620035f9573d6000803e3d6000fd5b5050505060006311bf00c960e01b826040516024016200361a9190620044b0565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905163f28dceb360e01b8152909150600080516020620085c48339815191529063f28dceb3906200368290849060040162004647565b600060405180830381600087803b1580156200369d57600080fd5b505af1158015620036b2573d6000803e3d6000fd5b505060405163ca669fa760e01b8152600080516020620085c4833981519152925063ca669fa79150620036ea908590600401620044b0565b600060405180830381600087803b1580156200370557600080fd5b505af11580156200371a573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c193506200375792909116908790600401620045d6565b600060405180830381600087803b1580156200377257600080fd5b505af115801562003787573d6000803e3d6000fd5b50505050505050565b6009546040805163017d862f60e11b815290516200380b926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620037dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620038039190620046ab565b60016200418b565b600b546040516000916311bf00c960e01b9162003835916001600160a01b031690602401620044b0565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905163f28dceb360e01b8152909150600080516020620085c48339815191529063f28dceb3906200389d90849060040162004647565b600060405180830381600087803b158015620038b857600080fd5b505af1158015620038cd573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062003910916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200392b57600080fd5b505af115801562003940573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200399557600080fd5b505af1158015620039aa573d6000803e3d6000fd5b5050505062003a06600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620037dd573d6000803e3d6000fd5b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003a45916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003a6057600080fd5b505af115801562003a75573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003aca57600080fd5b505af115801562003adf573d6000803e3d6000fd5b5050505062003b69600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003b3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b619190620046ab565b60006200418b565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003ba8916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003bc357600080fd5b505af115801562003bd8573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003c2d57600080fd5b505af115801562003c42573d6000803e3d6000fd5b5050505062003c9e600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003b3b573d6000803e3d6000fd5b60405163f28dceb360e01b8152600080516020620085c48339815191529063f28dceb39062003cd290849060040162004647565b600060405180830381600087803b15801562003ced57600080fd5b505af115801562003d02573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062003d45916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003d6057600080fd5b505af115801562003d75573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003dca57600080fd5b505af115801562003ddf573d6000803e3d6000fd5b5050505062003e3b600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003b3b573d6000803e3d6000fd5b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003e7a916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003e9557600080fd5b505af115801562003eaa573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003eff57600080fd5b505af115801562003f14573d6000803e3d6000fd5b5050505062003f70600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620037dd573d6000803e3d6000fd5b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003faf916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003fca57600080fd5b505af115801562003fdf573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200403457600080fd5b505af115801562004049573d6000803e3d6000fd5b5050505062000b8c600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620037dd573d6000803e3d6000fd5b8082146200344657600080516020620085a4833981519152604051620041079060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160008051602062008624833981519152826040516200412f919062004720565b60405180910390a1600080516020620086248339815191528160405162004157919062004759565b60405180910390a162003446620042cf565b620034468282620043d1565b600080516020620085c48339815191523b151590565b801515821515146200344657600080516020620085a4833981519152604051620041f19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a1600080516020620085e48339815191528162004233576040518060400160405280600581526020016466616c736560d81b81525062004251565b604051806040016040528060048152602001637472756560e01b8152505b60405162004260919062004784565b60405180910390a1600080516020620085e483398151915282620042a2576040518060400160405280600581526020016466616c736560d81b815250620042c0565b604051806040016040528060048152602001637472756560e01b8152505b604051620041579190620047ba565b620042d962004175565b15620043c05760408051600080516020620085c4833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200435b9291602001620046cf565b60408051601f1981840301815290829052620043779162004702565b6000604051808303816000865af19150503d8060008114620043b6576040519150601f19603f3d011682016040523d82523d6000602084013e620043bb565b606091505b505050505b6000805461ff001916610100179055565b8082146200344657600080516020620085a4833981519152604051620044369060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160008051602062008604833981519152826040516200445e919062004720565b60405180910390a1600080516020620086048339815191528160405162004157919062004759565b61168080620047f183390190565b6117758062005e7183390190565b610fbe80620075e683390190565b6001600160a01b0391909116815260200190565b600060208284031215620044d757600080fd5b5035919050565b60408101600684106200450157634e487b7160e01b600052602160045260246000fd5b9281526001600160a01b039190911660209091015290565b60005b83811015620045365781810151838201526020016200451c565b83811115620008915750506000910152565b600081518084526200456281602086016020860162004519565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200459c9083018462004548565b949350505050565b600060208284031215620045b757600080fd5b81516001600160a01b0381168114620045cf57600080fd5b9392505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156200464057600080fd5b5051919050565b602081526000620045cf602083018462004548565b6000826200467a57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200469257600080fd5b81516001600160d81b031981168114620045cf57600080fd5b600060208284031215620046be57600080fd5b81518015158114620045cf57600080fd5b6001600160e01b0319831681528151600090620046f481600485016020870162004519565b919091016004019392505050565b600082516200471681846020870162004519565b9190910192915050565b6040815260006200474b60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200474b60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600a6040820152690808115e1c1958dd195960b21b6060820152608060208201526000620045cf608083018462004548565b60408152600a604082015269080808081058dd1d585b60b21b6060820152608060208201526000620045cf60808301846200454856fe608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561164e806100326000396000f3fe608060405234801561001057600080fd5b50600436106100985760003560e01c80620dd95d1461009d57806303c02f42146100c65780635af099c9146100ff57806363a6e3b514610112578063ae5f76fa14610132578063b4dc00b414610162578063c34c08e51461018b578063c4d1f8f11461019e578063dbb61ee7146101b3578063e52223bb146101c6578063f166d9eb146101e9575b600080fd5b6100b06100ab366004611228565b61021d565b6040516100bd9190611254565b60405180910390f35b6100f16100d436600461127d565b600560209081526000928352604080842090915290825290205481565b6040519081526020016100bd565b6100b061010d3660046112b6565b610255565b6100f16101203660046112cf565b60086020526000908152604090205481565b6101556101403660046112cf565b60036020526000908152604090205460d81b81565b6040516100bd91906112f3565b6100b0610170366004611308565b6002602052600090815260409020546001600160a01b031681565b6000546100b0906001600160a01b031681565b6101b16101ac366004611325565b61027f565b005b6101556101c13660046112b6565b6104bd565b6101d96101d43660046112cf565b6104f4565b60405190151581526020016100bd565b6101d96101f736600461135d565b600660209081526000938452604080852082529284528284209052825290205460ff1681565b6004602052816000526040600020818154811061023957600080fd5b6000918252602090912001546001600160a01b03169150829050565b6007818154811061026557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102b457336040516237c7b360e01b81526004016102ab9190611254565b60405180910390fd5b60008260058111156102c8576102c86113a8565b0361034e576102d68161054e565b610340816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906113be565b61057e565b610349816105fc565b610474565b6001826005811115610362576103626113a8565b036103ba576103708161054e565b6103b1816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d6000803e3d6000fd5b610349816107a3565b60028260058111156103ce576103ce6113a8565b036103e5576103dc8161054e565b61034981610925565b60038260058111156103f9576103f96113a8565b03610410576104078161054e565b61034981610b5c565b6004826005811115610424576104246113a8565b0361044957600080546001600160a01b0319166001600160a01b038316179055610474565b600582600581111561045d5761045d6113a8565b036104745761046b8161054e565b61047481610cf5565b806001600160a01b0316826005811115610490576104906113a8565b6040517f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c9090600090a35050565b600181815481106104cd57600080fd5b9060005260206000209060069182820401919006600502915054906101000a900460d81b81565b6007546000901580159061054857506001600160a01b038216600081815260086020526040902054600780549091908110610531576105316113db565b6000918252602090912001546001600160a01b0316145b92915050565b806001600160a01b03163b60000361057b5780604051631bd1ba9d60e21b81526004016102ab9190611254565b50565b8060005b60058110156105f757600082826005811061059f5761059f6113db565b1a60f81b9050604160f81b6001600160f81b0319821610806105ce5750602d60f91b6001600160f81b03198216115b156105ee578360405163075f770560e31b81526004016102ab91906112f3565b50600101610582565b505050565b6000816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066091906113be565b6001600160d81b031981166000908152600260205260409020549091506001600160a01b0316156106a65780604051634403633360e11b81526004016102ab91906112f3565b6001600160d81b03198116600090815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558084526003909252808320805464ffffffffff191660d886901c9081179091556001805480820182559085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600680830491909101805464ffffffffff929093066005026101000a9182021990921692029190911790558051633a990e4560e21b81529051919263ea6439149260048084019382900301818387803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050505050565b6000816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080791906113be565b6001600160d81b031981166000908152600260205260409020549091506001600160a01b031680158061084b5750826001600160a01b0316816001600160a01b0316145b1561086b578160405163073e073160e01b81526004016102ab91906112f3565b6001600160a01b038181166000908152600360209081526040808320805464ffffffffff19908116909155938716808452818420805490951660d888901c179094556001600160d81b031986168352600290915280822080546001600160a01b031916841790558051633a990e4560e21b8152905163ea6439149260048084019391929182900301818387803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b505050506105f782610e64565b61092e816104f4565b1561094e578060405163224b187760e01b81526004016102ab9190611254565b600780546001808201835560008390527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180546001600160a01b0319166001600160a01b03851617905590546109a791906113f1565b6001600160a01b038216600081815260086020526040808220939093558251639459b87560e01b815292519092639459b8759160048083019286929190829003018183875af11580156109fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a2691908101906114a7565b805190915060005b81811015610adf576000838281518110610a4a57610a4a6113db565b6020908102919091018101516001600160d81b03198116600081815260048452604081208054600180820183558284529583200180546001600160a01b0319166001600160a01b038c1617905591905254909250610aa891906113f1565b6001600160d81b031990911660009081526005602090815260408083206001600160a01b0389168452909152902055600101610a2e565b506000836001600160a01b0316635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b489190810190611545565b9050610b5684826001610f6f565b50505050565b610b65816104f4565b610b8457806040516322cd55c560e01b81526004016102ab9190611254565b6000816001600160a01b0316635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610bc4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bec9190810190611545565b9050610bfa82826000610f6f565b6001600160a01b03821660009081526008602052604081205460078054919291610c26906001906113f1565b81548110610c3657610c366113db565b600091825260209091200154600780546001600160a01b039092169250829184908110610c6557610c656113db565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610ca457610ca4611602565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038381168352600890915260408083208590559086168252812055610b5684611048565b60015460005b81811015610dc65760006002600060018481548110610d1c57610d1c6113db565b6000918252602080832060068084049091015492066005026101000a90910460d81b6001600160d81b03191683528201929092526040908101909120549051631195ecdb60e21b81526001600160a01b0390911691508190634657b36c90610d88908790600401611254565b600060405180830381600087803b158015610da257600080fd5b505af1158015610db6573d6000803e3d6000fd5b5050505081600101915050610cfb565b5060075460005b81811015610b5657600060078281548110610dea57610dea6113db565b600091825260209091200154604051631195ecdb60e21b81526001600160a01b0390911691508190634657b36c90610e26908890600401611254565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b5050505081600101915050610dcd565b6001600160d81b03198116600090815260046020908152604080832080548251818502810185019093528083529192909190830182828015610ecf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610eb1575b505083519394506000925050505b81811015610b5657828181518110610ef757610ef76113db565b60200260200101516001600160a01b0316639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af1158015610f3e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f6691908101906114a7565b50600101610edd565b815160005b81811015611041576000848281518110610f9057610f906113db565b60209081029190910181015180516001600160d81b031990811660009081526006845260408082206001600160a01b038c1680845290865281832085870180516001600160e01b0319908116865291885293839020805460ff19168c1515908117909155865194518451921682529681019690965293955092939116917ff3cdd20c5574ce87c347ea71e37b8fa7a095894be4b7f2bb1533e8d2342965f1910160405180910390a350600101610f74565b5050505050565b6000816001600160a01b0316639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561108a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b291908101906114a7565b805190915060005b81811015610b565760008382815181106110d6576110d66113db565b6020908102919091018101516001600160d81b031981166000908152600483526040808220600585528183206001600160a01b038b1684529094528120548354929450918390611128906001906113f1565b81548110611138576111386113db565b9060005260206000200160009054906101000a90046001600160a01b031690508083838154811061116b5761116b6113db565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828054806111a9576111a9611602565b60008281526020808220600019908401810180546001600160a01b03191690559092019092556001600160d81b03199590951681526005855260408082206001600160a01b039384168352909552848120929092558716815291822091909155506001016110ba565b6001600160d81b03198116811461057b57600080fd5b6000806040838503121561123b57600080fd5b823561124681611212565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461057b57600080fd5b6000806040838503121561129057600080fd5b823561129b81611212565b915060208301356112ab81611268565b809150509250929050565b6000602082840312156112c857600080fd5b5035919050565b6000602082840312156112e157600080fd5b81356112ec81611268565b9392505050565b6001600160d81b031991909116815260200190565b60006020828403121561131a57600080fd5b81356112ec81611212565b6000806040838503121561133857600080fd5b82356006811061129b57600080fd5b6001600160e01b03198116811461057b57600080fd5b60008060006060848603121561137257600080fd5b833561137d81611212565b9250602084013561138d81611268565b9150604084013561139d81611347565b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156113d057600080fd5b81516112ec81611212565b634e487b7160e01b600052603260045260246000fd5b60008282101561141157634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561144e5761144e611416565b60405290565b604051601f8201601f191681016001600160401b038111828210171561147c5761147c611416565b604052919050565b60006001600160401b0382111561149d5761149d611416565b5060051b60200190565b600060208083850312156114ba57600080fd5b82516001600160401b038111156114d057600080fd5b8301601f810185136114e157600080fd5b80516114f46114ef82611484565b611454565b81815260059190911b8201830190838101908783111561151357600080fd5b928401925b8284101561153a57835161152b81611212565b82529284019290840190611518565b979650505050505050565b6000602080838503121561155857600080fd5b82516001600160401b0381111561156e57600080fd5b8301601f8101851361157f57600080fd5b805161158d6114ef82611484565b81815260069190911b820183019083810190878311156115ac57600080fd5b928401925b8284101561153a57604084890312156115ca5760008081fd5b6115d261142c565b84516115dd81611212565b8152848601516115ec81611347565b81870152825260409390930192908401906115b1565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a72e84c92701fcd62e8d96b0d5f7fc8892dd4d1536ec088a995235488c064ab64736f6c634300080f00336080604052600160055534801561001557600080fd5b506040516117753803806117758339810160408190526100349161005e565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b17905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b6116d88061009d6000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806301a91e5c1461010c57806302fb0c5e146101215780630f15f4c01461014a57806315226b54146101525780631ae7ec2e146101735780631ff517ff1461019457806328a4ace5146101b45780632f42aef5146101df57806332b43ad2146101f25780634657b36c1461021d5780634aae164b1461023057806351b42b00146102435780635f0736a11461024b578063724000c1146102765780638b7f3fb914610289578063d4aae0c41461029c578063e6eb207a146102bc578063ea643914146102cf578063f5b92c73146102d7578063fb393f24146102ea578063ffa1ad74146102fd575b600080fd5b61011f61011a3660046114d4565b610312565b005b60005461013590600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61011f61045d565b610165610160366004611515565b610517565b604051908152602001610141565b61017b6105a6565b6040516001600160d81b03199091168152602001610141565b6101656101a2366004611515565b60036020526000908152604090205481565b6101656101c2366004611539565b600460209081526000928352604080842090915290825290205481565b61011f6101ed3660046114d4565b6105b2565b610165610200366004611539565b600260209081526000928352604080842090915290825290205481565b61011f61022b366004611515565b61072a565b61011f61023e3660046114d4565b610779565b61011f61090b565b610165610259366004611539565b600160209081526000928352604080842090915290825290205481565b61011f610284366004611572565b6109bf565b61011f6102973660046114d4565b610b84565b6000546102af906001600160a01b031681565b604051610141919061159e565b61011f6102ca3660046114d4565b610cd7565b61011f610e2b565b61011f6102e53660046114d4565b610e5a565b61011f6102f83660046114d4565b61115c565b60408051600181526000602082015201610141565b6000546001600160a01b031663f166d9eb61032b6105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610357939291906115b2565b602060405180830381865afa158015610374573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039891906115e7565b6103c057336040516311bf00c960e01b81526004016103b7919061159e565b60405180910390fd5b6001600160a01b0380841660009081526002602090815260408083209386168352929052908120546103f390839061161f565b6001600160a01b038581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917f9afc1acde4b7ec0d84d924e5b530aecfb57d117a7122b80904cb9912badbff5991015b60405180910390a350505050565b6000546001600160a01b031663f166d9eb6104766105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016104a2939291906115b2565b602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e391906115e7565b61050257336040516311bf00c960e01b81526004016103b7919061159e565b6000805460ff60a01b1916600160a01b179055565b6001600160a01b0381166000818152600360205260408082205490516370a0823160e01b8152919290916370a082319061055590309060040161159e565b602060405180830381865afa158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190611637565b6105a0919061161f565b92915050565b64545253525960d81b90565b6000546001600160a01b031663f166d9eb6105cb6105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016105f7939291906115b2565b602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063891906115e7565b61065757336040516311bf00c960e01b81526004016103b7919061159e565b600054600160a01b900460ff166106815760405163473b682f60e11b815260040160405180910390fd5b3360009081526001602090815260408083206001600160a01b0386168452909152812080548392906106b4908490611650565b909155506106ce90506001600160a01b0383168483611294565b816001600160a01b0316836001600160a01b0316336001600160a01b03167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e8460405161071d91815260200190565b60405180910390a4505050565b6000546001600160a01b03163314610757573360405163053e900f60e21b81526004016103b7919061159e565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031663f166d9eb6107926105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016107be939291906115b2565b602060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff91906115e7565b61081e57336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b0382811660009081526004602090815260408083209387168352929052208054908290558181101561088e5761085b8183611650565b6001600160a01b0384166000908152600360205260408120805490919061088390849061161f565b909155506108c69050565b6108988282611650565b6001600160a01b038416600090815260036020526040812080549091906108c0908490611650565b90915550505b836001600160a01b0316836001600160a01b03167f4417d205f6349e66a581332b36195e74d10f878e80db907b4fd3a814aad4049d8460405161044f91815260200190565b6000546001600160a01b031663f166d9eb6109246105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610950939291906115b2565b602060405180830381865afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099191906115e7565b6109b057336040516311bf00c960e01b81526004016103b7919061159e565b6000805460ff60a01b19169055565b6000546001600160a01b031663f166d9eb6109d86105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610a04939291906115b2565b602060405180830381865afa158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4591906115e7565b610a6457336040516311bf00c960e01b81526004016103b7919061159e565b600054600160a01b900460ff16610a8e5760405163473b682f60e11b815260040160405180910390fd5b3360009081526002602090815260408083206001600160a01b038616845290915281208054839290610ac1908490611650565b90915550506001600160a01b038216600090815260046020908152604080832033845290915281208054839290610af990849061161f565b90915550506001600160a01b03821660009081526003602052604081208054839290610b2690849061161f565b90915550610b4090506001600160a01b0383163383611294565b60405181815233906001600160a01b038416907f7f04a714958851e1d87b504651ba77ab02f62bae8879f577bf3e07cf8567aba29060200160405180910390a35050565b6000546001600160a01b031663f166d9eb610b9d6105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610bc9939291906115b2565b602060405180830381865afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a91906115e7565b610c2957336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b0380841660009081526001602090815260408083209386168352929052908120549082821115610c6957610c648383611650565b610c6c565b60005b6001600160a01b038681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f40730d80659c76c95521f0340872d27fdc8b3c47befe2ca569d2c2eedc8a049e91015b60405180910390a35050505050565b6000546001600160a01b031663f166d9eb610cf06105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610d1c939291906115b2565b602060405180830381865afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d91906115e7565b610d7c57336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b0380841660009081526001602090815260408083209386168352929052908120549082610db283600019611650565b1115610dc757610dc2838361161f565b610dcb565b6000195b6001600160a01b038681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f8bbc2784c9e4073e20f60d8c7218cbd211c43ca2ee041bc037f977693a0c8c1b9101610cc8565b6000546001600160a01b03163314610e58573360405163053e900f60e21b81526004016103b7919061159e565b565b6000546001600160a01b031663f166d9eb610e736105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610e9f939291906115b2565b602060405180830381865afa158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee091906115e7565b610eff57336040516311bf00c960e01b81526004016103b7919061159e565b600554600114610f3e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016103b7565b60026005556001600160a01b0380831660009081526004602090815260408083209387168352929052908120549003610f8a5760405163a4255dc560e01b815260040160405180910390fd5b6040516370a0823160e01b81526000906001600160a01b038416906370a0823190610fb990309060040161159e565b602060405180830381865afa158015610fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffa9190611637565b90506110116001600160a01b0384163330856113a1565b600081846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611040919061159e565b602060405180830381865afa15801561105d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110819190611637565b61108b9190611650565b9050828111156110985750815b6001600160a01b038085166000908152600460209081526040808320938916835292905290812080548392906110cf908490611650565b90915550506001600160a01b038416600090815260036020526040812080548392906110fc908490611650565b92505081905550846001600160a01b0316846001600160a01b03167feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf8360405161114891815260200190565b60405180910390a350506001600555505050565b6000546001600160a01b031663f166d9eb6111756105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016111a1939291906115b2565b602060405180830381865afa1580156111be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e291906115e7565b61120157336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b038084166000908152600260209081526040808320938616835292905290812054611234908390611650565b6001600160a01b038581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917fbb8caa1e59333c99899b67ccacb2b942c5a5ebf1a2bff4932b50274da81fe8d5910161044f565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916112f09190611667565b6000604051808303816000865af19150503d806000811461132d576040519150601f19603f3d011682016040523d82523d6000602084013e611332565b606091505b509150915081801561135c57508051158061135c57508080602001905181019061135c91906115e7565b61139a5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016103b7565b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916114059190611667565b6000604051808303816000865af19150503d8060008114611442576040519150601f19603f3d011682016040523d82523d6000602084013e611447565b606091505b509150915081801561147157508051158061147157508080602001905181019061147191906115e7565b6114b45760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103b7565b505050505050565b6001600160a01b03811681146114d157600080fd5b50565b6000806000606084860312156114e957600080fd5b83356114f4816114bc565b92506020840135611504816114bc565b929592945050506040919091013590565b60006020828403121561152757600080fd5b8135611532816114bc565b9392505050565b6000806040838503121561154c57600080fd5b8235611557816114bc565b91506020830135611567816114bc565b809150509250929050565b6000806040838503121561158557600080fd5b8235611590816114bc565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160d81b03199390931683526001600160a01b039190911660208301526001600160e01b031916604082015260600190565b6000602082840312156115f957600080fd5b8151801515811461153257600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561163257611632611609565b500190565b60006020828403121561164957600080fd5b5051919050565b60008282101561166257611662611609565b500390565b6000825160005b81811015611688576020818601810151858301520161166e565b81811115611697576000828501525b50919091019291505056fea264697066735822122078fd58d96e024b020bb1e79cee66ed300807d3f1661df81505642d331531f02f64736f6c634300080f003360e06040523480156200001157600080fd5b5060405162000fbe38038062000fbe8339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610b4d620004716000396000610402015260006103cd015260006101240152610b4d6000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b4578063095ea7b3146100d257806318160ddd146100f557806323b872dd1461010c578063313ce5671461011f5780633644e5151461015857806340c10f191461016057806370a082311461017557806395d89b41146101955780639dc29fac1461019d578063a9059cbb146101b0578063d505accf146101c3578063dd62ed3e146101d6575b600080fd5b6100bc610201565b6040516100c9919061081a565b60405180910390f35b6100e56100e036600461088b565b61028f565b60405190151581526020016100c9565b6100fe60025481565b6040519081526020016100c9565b6100e561011a3660046108b5565b6102e9565b6101467f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100c9565b6100fe6103c9565b61017361016e36600461088b565b610424565b005b6100fe6101833660046108f1565b60036020526000908152604090205481565b6100bc610432565b6101736101ab36600461088b565b61043f565b6100e56101be36600461088b565b610449565b6101736101d1366004610913565b6104af565b6100fe6101e4366004610986565b600460209081526000928352604080842090915290825290205481565b6000805461020e906109b9565b80601f016020809104026020016040519081016040528092919081815260200182805461023a906109b9565b80156102875780601f1061025c57610100808354040283529160200191610287565b820191906000526020600020905b81548152906001019060200180831161026a57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020610af8833981519152906102d89086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610345576103208382610a09565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061036d908490610a09565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610ad8833981519152906103b69087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146103ff576103fa6106c4565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61042e828261075e565b5050565b6001805461020e906109b9565b61042e82826107b8565b3360009081526003602052604081208054839190839061046a908490610a09565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610ad8833981519152906102d89086815260200190565b428410156104fe5760405162461bcd60e51b815260206004820152601760248201527614115493525517d11150511312539157d1561412549151604a1b60448201526064015b60405180910390fd5b6000600161050a6103c9565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808d1692820192909252908a1660608201526080810189905260a0810188905260c0016040516020818303038152906040528051906020012060405160200161059c92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156105fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106305750876001600160a01b0316816001600160a01b0316145b61066d5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016104f5565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a1691600080516020610af8833981519152910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516106f69190610a20565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107709190610abf565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610ad883398151915291015b60405180910390a35050565b6001600160a01b038216600090815260036020526040812080548392906107e0908490610a09565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610ad8833981519152906020016107ac565b600060208083528351808285015260005b818110156108475785810183015185820160400152820161082b565b81811115610859576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461088657600080fd5b919050565b6000806040838503121561089e57600080fd5b6108a78361086f565b946020939093013593505050565b6000806000606084860312156108ca57600080fd5b6108d38461086f565b92506108e16020850161086f565b9150604084013590509250925092565b60006020828403121561090357600080fd5b61090c8261086f565b9392505050565b600080600080600080600060e0888a03121561092e57600080fd5b6109378861086f565b96506109456020890161086f565b95506040880135945060608801359350608088013560ff8116811461096957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561099957600080fd5b6109a28361086f565b91506109b06020840161086f565b90509250929050565b600181811c908216806109cd57607f821691505b6020821081036109ed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a1b57610a1b6109f3565b500390565b600080835481600182811c915080831680610a3c57607f831692505b60208084108203610a5b57634e487b7160e01b86526022600452602486fd5b818015610a6f5760018114610a8457610ab1565b60ff1986168952841515850289019650610ab1565b60008a81526020902060005b86811015610aa95781548b820152908501908301610a90565b505084890196505b509498975050505050505050565b60008219821115610ad257610ad26109f3565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220a5f8f95236ed07db23fda7b64a87840710d4670f7f344e518b0d275bb6729c7d64736f6c634300080f003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583afb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a264697066735822122035261aef7fa87cb24ddf550b5d207ce13ec327c56ee701a46104b34e44b93f6264736f6c634300080f0033",
    "sourceMap": "637:9588:143:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;637:9588:143;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "ModuleTestFixtureGenerator": [
          {
            "start": 1311,
            "length": 20
          },
          {
            "start": 1603,
            "length": 20
          },
          {
            "start": 1882,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001425760003560e01c80630a9254e414620001475780630e375e4014620001535780630fa89a3b146200017f57806318b9d8c814620001965780632ba22b1814620001a05780633a76846314620001b7578063437e7dfd14620001ce5780635bdb8b0414620001d8578063628a798714620001ef57806362e12a7d14620001f95780636411193d146200021057806380cee4ab146200022757806382e3ea44146200023b5780639cb64a2d1462000245578063a1fbc6731462000259578063a785dfa81462000263578063ba414fa6146200027a578063bcf643cd1462000295578063c5c680f314620002ac578063cee3975514620002c0578063cf18f8d314620002d7578063f8ccbf4714620002e1578063fa7626d414620002f5578063fb223f181462000303575b600080fd5b6200015162000317565b005b600c5462000167906001600160a01b031681565b604051620001769190620044b0565b60405180910390f35b6200015162000190366004620044c4565b62000897565b6200015162000b8f565b62000151620001b1366004620044c4565b62000fe9565b62000167600080516020620085c483398151915281565b6200015162001110565b62000151620001e9366004620044c4565b620014ae565b6200015162001836565b620001516200020a366004620044c4565b620018cd565b6200015162000221366004620044c4565b62001aa9565b60095462000167906001600160a01b031681565b6200015162001f46565b600d5462000167906001600160a01b031681565b62000151620022f7565b6200015162000274366004620044c4565b62002333565b6200028462002541565b604051901515815260200162000176565b62000151620002a6366004620044c4565b6200266b565b600b5462000167906001600160a01b031681565b62000151620002d1366004620044c4565b6200344a565b6200015162003790565b600054620002849062010000900460ff1681565b600054620002849060ff1681565b600a5462000167906001600160a01b031681565b604051620003259062004486565b604051809103906000f08015801562000342573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051620003709062004494565b6200037c9190620044b0565b604051809103906000f08015801562000399573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055604051601290620003cb90620044a2565b6060808252601190820152701b9bdd0819dbdb9b98481b585ad9481a5d607a1b608082015260a060208201819052600490820152634e474d4960e01b60c082015260ff909116604082015260e001604051809103906000f08015801562000436573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b0392831617905560085460095460405163c4d1f8f160e01b81529183169263c4d1f8f19262000483926000921690600401620044de565b600060405180830381600087803b1580156200049e57600080fd5b505af1158015620004b3573d6000803e3d6000fd5b50506009546040805180820182526011815270476f65726c6944616f547265617375727960781b60208201529051639049957960e01b815273__$6a18d296e27eadcc0fe82d65240272eaa9$__94506390499579935062000522926001600160a01b0316919060040162004576565b602060405180830381865af415801562000540573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005669190620045a4565b600c80546001600160a01b0319166001600160a01b0392831690811790915560085460405163c4d1f8f160e01b815292169163c4d1f8f191620005b09160029190600401620044de565b600060405180830381600087803b158015620005cb57600080fd5b505af1158015620005e0573d6000803e3d6000fd5b5050600954604051634e1768af60e11b81526001600160a01b039091166004820152632f42aef560e01b602482015273__$6a18d296e27eadcc0fe82d65240272eaa9$__9250639c2ed15e9150604401602060405180830381865af41580156200064e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006749190620045a4565b600b80546001600160a01b0319166001600160a01b0392831690811790915560085460405163c4d1f8f160e01b815292169163c4d1f8f191620006be9160029190600401620044de565b600060405180830381600087803b158015620006d957600080fd5b505af1158015620006ee573d6000803e3d6000fd5b50506009546040805180820182526011815270476f65726c6944616f547265617375727960781b60208201529051639049957960e01b815273__$6a18d296e27eadcc0fe82d65240272eaa9$__9450639049957993506200075d926001600160a01b0316919060040162004576565b602060405180830381865af41580156200077b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a19190620045a4565b600d80546001600160a01b0319166001600160a01b0392831690811790915560085460405163c4d1f8f160e01b815292169163c4d1f8f191620007eb9160029190600401620044de565b600060405180830381600087803b1580156200080657600080fd5b505af11580156200081b573d6000803e3d6000fd5b5050600a546009546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062000861929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b1580156200087c57600080fd5b505af115801562000891573d6000803e3d6000fd5b50505050565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b158015620008ea57600080fd5b505af1158015620008ff573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062000942916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200095d57600080fd5b505af115801562000972573d6000803e3d6000fd5b5050600954600b54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a9450620009b69392831692909116908690600401620045ef565b600060405180830381600087803b158015620009d157600080fd5b505af1158015620009e6573d6000803e3d6000fd5b5050600954600b54600a54604051635f0736a160e01b815262000a7595506001600160a01b039384169450635f0736a19362000a2a93811692169060040162004613565b602060405180830381865afa15801562000a48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a6e91906200462d565b82620040a5565b600b5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162000ab4916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000acf57600080fd5b505af115801562000ae4573d6000803e3d6000fd5b5050600954600a54604051632f42aef560e01b81526001600160a01b039283169450632f42aef5935062000b2192309216908690600401620045ef565b600060405180830381600087803b15801562000b3c57600080fd5b505af115801562000b51573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815262000b8c93506001600160a01b0390911691506370a082319062000a2a903090600401620044b0565b50565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162000bce916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000be957600080fd5b505af115801562000bfe573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c945062000c4a93928316929091169068056bc75e2d6310000090600401620045ef565b600060405180830381600087803b15801562000c6557600080fd5b505af115801562000c7a573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062000cbd916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000cd857600080fd5b505af115801562000ced573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c1935062000d33929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b15801562000d4e57600080fd5b505af115801562000d63573d6000803e3d6000fd5b5050600954600a54600d546040516328a4ace560e01b815262000dfb95506001600160a01b0393841694506328a4ace59362000da793811692169060040162004613565b602060405180830381865afa15801562000dc5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000deb91906200462d565b68056bc75e2d63100000620040a5565b600954600a54604051631ff517ff60e01b815262000e37926001600160a01b0390811692631ff517ff9262000da79290911690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162000e76916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562000e9157600080fd5b505af115801562000ea6573d6000803e3d6000fd5b5050600954600d54600a54604051634aae164b60e01b81526001600160a01b039384169550634aae164b945062000eeb939283169290911690600090600401620045ef565b600060405180830381600087803b15801562000f0657600080fd5b505af115801562000f1b573d6000803e3d6000fd5b5050600954600a54600d546040516328a4ace560e01b815262000fab95506001600160a01b0393841694506328a4ace59362000f5f93811692169060040162004613565b602060405180830381865afa15801562000f7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa391906200462d565b6000620040a5565b600954600a54604051631ff517ff60e01b815262000fe7926001600160a01b0390811692631ff517ff9262000f5f9290911690600401620044b0565b565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162001028916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200104357600080fd5b505af115801562001058573d6000803e3d6000fd5b5050600954600b54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a94506200109c9392831692909116908690600401620045ef565b600060405180830381600087803b158015620010b757600080fd5b505af1158015620010cc573d6000803e3d6000fd5b5050600954600b54600a54604051635f0736a160e01b815262000b8c95506001600160a01b039384169450635f0736a19362000a2a93811692169060040162004613565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa7916200114f916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200116a57600080fd5b505af11580156200117f573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c9450620011cb93928316929091169068056bc75e2d6310000090600401620045ef565b600060405180830381600087803b158015620011e657600080fd5b505af1158015620011fb573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa792506200123e916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200125957600080fd5b505af11580156200126e573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c19350620012b4929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b158015620012cf57600080fd5b505af1158015620012e4573d6000803e3d6000fd5b5050600b54604051600093506311bf00c960e01b925062001312916001600160a01b031690602401620044b0565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905163f28dceb360e01b8152909150600080516020620085c48339815191529063f28dceb3906200137a90849060040162004647565b600060405180830381600087803b1580156200139557600080fd5b505af1158015620013aa573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa79250620013ed916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200140857600080fd5b505af11580156200141d573d6000803e3d6000fd5b5050600954600d54600a546001600160a01b039283169450634aae164b9350908216911662001457600268056bc75e2d631000006200465c565b6040518463ffffffff1660e01b81526004016200147793929190620045ef565b600060405180830381600087803b1580156200149257600080fd5b505af1158015620014a7573d6000803e3d6000fd5b5050505050565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b1580156200150157600080fd5b505af115801562001516573d6000803e3d6000fd5b5050604051632631f2b160e11b81528315156004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200156457600080fd5b505af115801562001579573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa79250620015bc916001600160a01b031690600401620044b0565b600060405180830381600087803b158015620015d757600080fd5b505af1158015620015ec573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c94506200162f9392831692909116908690600401620045ef565b600060405180830381600087803b1580156200164a57600080fd5b505af11580156200165f573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa79250620016a2916001600160a01b031690600401620044b0565b600060405180830381600087803b158015620016bd57600080fd5b505af1158015620016d2573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c193506200170f92909116908590600401620045d6565b600060405180830381600087803b1580156200172a57600080fd5b505af11580156200173f573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b81526200177d94506001600160a01b0392831693506370a082319262000a2a921690600401620044b0565b600954600a54600d546040516328a4ace560e01b8152620017be936001600160a01b03908116936328a4ace59362000a2a9391831692169060040162004613565b600954600a54604051631ff517ff60e01b8152620017fa926001600160a01b0390811692631ff517ff9262000a2a9290911690600401620044b0565b600954600a546040516305489ad560e21b815262000b8c926001600160a01b03908116926315226b549262000da79290911690600401620044b0565b62000fe764545253525960d81b600960009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001897573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018bd91906200467f565b6001600160d81b03191662004169565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b1580156200192057600080fd5b505af115801562001935573d6000803e3d6000fd5b5050604051632631f2b160e11b81528315156004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200198357600080fd5b505af115801562001998573d6000803e3d6000fd5b505060408051633d21120560e21b81529051600080516020620085c4833981519152935063f48448149250600480830192600092919082900301818387803b158015620019e457600080fd5b505af1158015620019f9573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062001a3c916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001a5757600080fd5b505af115801562001a6c573d6000803e3d6000fd5b5050600954600a54604051632f42aef560e01b81526001600160a01b039283169450632f42aef593506200147792309216908690600401620045ef565b604051632631f2b160e11b81528115156004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b15801562001af357600080fd5b505af115801562001b08573d6000803e3d6000fd5b5050604051632631f2b160e11b815268056bc75e2d6310000084106004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b15801562001b5f57600080fd5b505af115801562001b74573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062001bb7916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001bd257600080fd5b505af115801562001be7573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c945062001c2a9392831692909116908690600401620045ef565b600060405180830381600087803b15801562001c4557600080fd5b505af115801562001c5a573d6000803e3d6000fd5b5050600d546040516303223eab60e11b8152600080516020620085c483398151915293506306447d56925062001c9d916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001cb857600080fd5b505af115801562001ccd573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c1935062001d0a92909116908590600401620045d6565b600060405180830381600087803b15801562001d2557600080fd5b505af115801562001d3a573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b815262001d7894506001600160a01b0392831693506370a082319262000a2a921690600401620044b0565b600954600a54600d546040516328a4ace560e01b815262001db9936001600160a01b03908116936328a4ace59362000a2a9391831692169060040162004613565b600a5460095460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001df1929116908590600401620045d6565b6020604051808303816000875af115801562001e11573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e379190620046ab565b50600954600d54600a5460405163f5b92c7360e01b81526001600160a01b039384169363f5b92c739362001e7793908216929116908690600401620045ef565b600060405180830381600087803b15801562001e9257600080fd5b505af115801562001ea7573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620085c483398151915293506390c5013b9250600480830192600092919082900301818387803b15801562001ef357600080fd5b505af115801562001f08573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b815262000b8c94506001600160a01b0392831693506370a082319262000f5f921690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162001f85916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562001fa057600080fd5b505af115801562001fb5573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c94506200200193928316929091169068056bc75e2d6310000090600401620045ef565b600060405180830381600087803b1580156200201c57600080fd5b505af115801562002031573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002074916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200208f57600080fd5b505af1158015620020a4573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c19350620020ea929091169068056bc75e2d6310000090600401620045d6565b600060405180830381600087803b1580156200210557600080fd5b505af11580156200211a573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa792506200215d916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200217857600080fd5b505af11580156200218d573d6000803e3d6000fd5b5050600954600d54600a546001600160a01b039283169450634aae164b93509082169116620021c7600268056bc75e2d631000006200465c565b6040518463ffffffff1660e01b8152600401620021e793929190620045ef565b600060405180830381600087803b1580156200220257600080fd5b505af115801562002217573d6000803e3d6000fd5b5050600954600a54600d546040516328a4ace560e01b8152620022bb95506001600160a01b0393841694506328a4ace5936200225b93811692169060040162004613565b602060405180830381865afa15801562002279573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200229f91906200462d565b620022b5600268056bc75e2d631000006200465c565b620040a5565b600954600a54604051631ff517ff60e01b815262000fe7926001600160a01b0390811692631ff517ff926200225b9290911690600401620044b0565b600954600a546040516305489ad560e21b815262000fe7926001600160a01b03908116926315226b549262000da79290911690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162002372916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200238d57600080fd5b505af1158015620023a2573d6000803e3d6000fd5b5050600954600b54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a9450620023e69392831692909116908690600401620045ef565b600060405180830381600087803b1580156200240157600080fd5b505af115801562002416573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002459916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200247457600080fd5b505af115801562002489573d6000803e3d6000fd5b5050600954600b54600a54604051638b7f3fb960e01b81526001600160a01b039384169550638b7f3fb99450620024cd9392831692909116908690600401620045ef565b600060405180830381600087803b158015620024e857600080fd5b505af1158015620024fd573d6000803e3d6000fd5b5050600954600b54600a54604051635f0736a160e01b815262000b8c95506001600160a01b039384169450635f0736a19362000f5f93811692169060040162004613565b60008054610100900460ff1615620025625750600054610100900460ff1690565b60006200256e62004175565b156200266657604051600090600080516020620085c4833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620025c89083906519985a5b195960d21b90602001620045d6565b60408051601f1981840301815290829052620025e89291602001620046cf565b60408051601f1981840301815290829052620026049162004702565b6000604051808303816000865af19150503d806000811462002643576040519150601f19603f3d011682016040523d82523d6000602084013e62002648565b606091505b5091505080806020019051810190620026629190620046ab565b9150505b919050565b604051632631f2b160e11b81528115156004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b158015620026b557600080fd5b505af1158015620026ca573d6000803e3d6000fd5b5050604051632631f2b160e11b815268056bc75e2d6310000084106004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200272157600080fd5b505af115801562002736573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002779916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200279457600080fd5b505af1158015620027a9573d6000803e3d6000fd5b5050600954600c54600a54604051637375903d60e11b81526001600160a01b03938416955063e6eb207a9450620027ed9392831692909116908690600401620045ef565b600060405180830381600087803b1580156200280857600080fd5b505af11580156200281d573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002860916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200287b57600080fd5b505af115801562002890573d6000803e3d6000fd5b5050600954600d54600a54604051626a479760e21b81526001600160a01b0393841695506301a91e5c9450620028d39392831692909116908690600401620045ef565b600060405180830381600087803b158015620028ee57600080fd5b505af115801562002903573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002946916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200296157600080fd5b505af115801562002976573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620029cb57600080fd5b505af1158015620029e0573d6000803e3d6000fd5b50506040805160048082526024820183526020820180516001600160e01b031663473b682f60e11b179052915163f28dceb360e01b8152909350600080516020620085c4833981519152925063f28dceb39162002a409185910162004647565b600060405180830381600087803b15801562002a5b57600080fd5b505af115801562002a70573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002ab3916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002ace57600080fd5b505af115801562002ae3573d6000803e3d6000fd5b5050600954600c54600a54604051632f42aef560e01b81526001600160a01b039384169550632f42aef5945062002b279392831692909116908790600401620045ef565b600060405180830381600087803b15801562002b4257600080fd5b505af115801562002b57573d6000803e3d6000fd5b505060405163f28dceb360e01b8152600080516020620085c4833981519152925063f28dceb3915062002b8f90849060040162004647565b600060405180830381600087803b15801562002baa57600080fd5b505af115801562002bbf573d6000803e3d6000fd5b5050600d5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002c02916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002c1d57600080fd5b505af115801562002c32573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c1935062002c6f92909116908690600401620045d6565b600060405180830381600087803b15801562002c8a57600080fd5b505af115801562002c9f573d6000803e3d6000fd5b5050600a54600c546040516370a0823160e01b815262002cdd94506001600160a01b0392831693506370a082319262000f5f921690600401620044b0565b600954600a54600d546040516328a4ace560e01b815262002d1e936001600160a01b03908116936328a4ace59362000f5f9391831692169060040162004613565b600a54600d546040516370a0823160e01b815262002d5a926001600160a01b03908116926370a082319262000f5f9290911690600401620044b0565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162002d99916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002db457600080fd5b505af115801562002dc9573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002e1e57600080fd5b505af115801562002e33573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062002e76916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002e9157600080fd5b505af115801562002ea6573d6000803e3d6000fd5b5050600954600c54600a54604051632f42aef560e01b81526001600160a01b039384169550632f42aef5945062002eea9392831692909116908790600401620045ef565b600060405180830381600087803b15801562002f0557600080fd5b505af115801562002f1a573d6000803e3d6000fd5b5050600a54600c546040516370a0823160e01b815262002fa394506001600160a01b0392831693506370a082319262002f58921690600401620044b0565b602060405180830381865afa15801562002f76573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f9c91906200462d565b83620040a5565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162002fe2916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562002ffd57600080fd5b505af115801562003012573d6000803e3d6000fd5b5050600a5460095460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb93506200304f92909116908690600401620045d6565b6020604051808303816000875af11580156200306f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030959190620046ab565b50600d5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa791620030d5916001600160a01b031690600401620044b0565b600060405180830381600087803b158015620030f057600080fd5b505af115801562003105573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c193506200314292909116908690600401620045d6565b600060405180830381600087803b1580156200315d57600080fd5b505af115801562003172573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b8152620031b094506001600160a01b0392831693506370a082319262002f58921690600401620044b0565b600954600a54600d546040516328a4ace560e01b8152620031f1936001600160a01b03908116936328a4ace59362002f589391831692169060040162004613565b600d5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003230916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200324b57600080fd5b505af115801562003260573d6000803e3d6000fd5b5050600a5460095460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200329d92909116908690600401620045d6565b6020604051808303816000875af1158015620032bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032e39190620046ab565b50600d5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003323916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200333e57600080fd5b505af115801562003353573d6000803e3d6000fd5b5050600954600d54600a5460405163f5b92c7360e01b81526001600160a01b03938416955063f5b92c739450620033979392831692909116908790600401620045ef565b600060405180830381600087803b158015620033b257600080fd5b505af1158015620033c7573d6000803e3d6000fd5b5050600a54600d546040516370a0823160e01b81526200340594506001600160a01b0392831693506370a082319262000f5f921690600401620044b0565b600954600a54600d546040516328a4ace560e01b815262003446936001600160a01b03908116936328a4ace59362000f5f9391831692169060040162004613565b5050565b604051632631f2b160e11b815268056bc75e2d6310000082106004820152600080516020620085c483398151915290634c63e56290602401600060405180830381600087803b1580156200349d57600080fd5b505af1158015620034b2573d6000803e3d6000fd5b5050604051632631f2b160e11b81528315156004820152600080516020620085c48339815191529250634c63e5629150602401600060405180830381600087803b1580156200350057600080fd5b505af115801562003515573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b815260009350600080516020620085c4833981519152925063ca669fa7916200355d916001600160a01b0390911690600401620044b0565b600060405180830381600087803b1580156200357857600080fd5b505af11580156200358d573d6000803e3d6000fd5b5050600954600a54604051626a479760e21b81526001600160a01b0392831694506301a91e5c9350620035c992869216908790600401620045ef565b600060405180830381600087803b158015620035e457600080fd5b505af1158015620035f9573d6000803e3d6000fd5b5050505060006311bf00c960e01b826040516024016200361a9190620044b0565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905163f28dceb360e01b8152909150600080516020620085c48339815191529063f28dceb3906200368290849060040162004647565b600060405180830381600087803b1580156200369d57600080fd5b505af1158015620036b2573d6000803e3d6000fd5b505060405163ca669fa760e01b8152600080516020620085c4833981519152925063ca669fa79150620036ea908590600401620044b0565b600060405180830381600087803b1580156200370557600080fd5b505af11580156200371a573d6000803e3d6000fd5b5050600954600a5460405163724000c160e01b81526001600160a01b03928316945063724000c193506200375792909116908790600401620045d6565b600060405180830381600087803b1580156200377257600080fd5b505af115801562003787573d6000803e3d6000fd5b50505050505050565b6009546040805163017d862f60e11b815290516200380b926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620037dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620038039190620046ab565b60016200418b565b600b546040516000916311bf00c960e01b9162003835916001600160a01b031690602401620044b0565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905163f28dceb360e01b8152909150600080516020620085c48339815191529063f28dceb3906200389d90849060040162004647565b600060405180830381600087803b158015620038b857600080fd5b505af1158015620038cd573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062003910916001600160a01b031690600401620044b0565b600060405180830381600087803b1580156200392b57600080fd5b505af115801562003940573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200399557600080fd5b505af1158015620039aa573d6000803e3d6000fd5b5050505062003a06600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620037dd573d6000803e3d6000fd5b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003a45916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003a6057600080fd5b505af115801562003a75573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003aca57600080fd5b505af115801562003adf573d6000803e3d6000fd5b5050505062003b69600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003b3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b619190620046ab565b60006200418b565b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003ba8916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003bc357600080fd5b505af115801562003bd8573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003c2d57600080fd5b505af115801562003c42573d6000803e3d6000fd5b5050505062003c9e600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003b3b573d6000803e3d6000fd5b60405163f28dceb360e01b8152600080516020620085c48339815191529063f28dceb39062003cd290849060040162004647565b600060405180830381600087803b15801562003ced57600080fd5b505af115801562003d02573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620085c4833981519152935063ca669fa7925062003d45916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003d6057600080fd5b505af115801562003d75573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003dca57600080fd5b505af115801562003ddf573d6000803e3d6000fd5b5050505062003e3b600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003b3b573d6000803e3d6000fd5b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003e7a916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003e9557600080fd5b505af115801562003eaa573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003eff57600080fd5b505af115801562003f14573d6000803e3d6000fd5b5050505062003f70600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620037dd573d6000803e3d6000fd5b600c5460405163ca669fa760e01b8152600080516020620085c48339815191529163ca669fa79162003faf916001600160a01b031690600401620044b0565b600060405180830381600087803b15801562003fca57600080fd5b505af115801562003fdf573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200403457600080fd5b505af115801562004049573d6000803e3d6000fd5b5050505062000b8c600960009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620037dd573d6000803e3d6000fd5b8082146200344657600080516020620085a4833981519152604051620041079060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160008051602062008624833981519152826040516200412f919062004720565b60405180910390a1600080516020620086248339815191528160405162004157919062004759565b60405180910390a162003446620042cf565b620034468282620043d1565b600080516020620085c48339815191523b151590565b801515821515146200344657600080516020620085a4833981519152604051620041f19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a1600080516020620085e48339815191528162004233576040518060400160405280600581526020016466616c736560d81b81525062004251565b604051806040016040528060048152602001637472756560e01b8152505b60405162004260919062004784565b60405180910390a1600080516020620085e483398151915282620042a2576040518060400160405280600581526020016466616c736560d81b815250620042c0565b604051806040016040528060048152602001637472756560e01b8152505b604051620041579190620047ba565b620042d962004175565b15620043c05760408051600080516020620085c4833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200435b9291602001620046cf565b60408051601f1981840301815290829052620043779162004702565b6000604051808303816000865af19150503d8060008114620043b6576040519150601f19603f3d011682016040523d82523d6000602084013e620043bb565b606091505b505050505b6000805461ff001916610100179055565b8082146200344657600080516020620085a4833981519152604051620044369060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160008051602062008604833981519152826040516200445e919062004720565b60405180910390a1600080516020620086048339815191528160405162004157919062004759565b61168080620047f183390190565b6117758062005e7183390190565b610fbe80620075e683390190565b6001600160a01b0391909116815260200190565b600060208284031215620044d757600080fd5b5035919050565b60408101600684106200450157634e487b7160e01b600052602160045260246000fd5b9281526001600160a01b039190911660209091015290565b60005b83811015620045365781810151838201526020016200451c565b83811115620008915750506000910152565b600081518084526200456281602086016020860162004519565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200459c9083018462004548565b949350505050565b600060208284031215620045b757600080fd5b81516001600160a01b0381168114620045cf57600080fd5b9392505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156200464057600080fd5b5051919050565b602081526000620045cf602083018462004548565b6000826200467a57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200469257600080fd5b81516001600160d81b031981168114620045cf57600080fd5b600060208284031215620046be57600080fd5b81518015158114620045cf57600080fd5b6001600160e01b0319831681528151600090620046f481600485016020870162004519565b919091016004019392505050565b600082516200471681846020870162004519565b9190910192915050565b6040815260006200474b60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200474b60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600a6040820152690808115e1c1958dd195960b21b6060820152608060208201526000620045cf608083018462004548565b60408152600a604082015269080808081058dd1d585b60b21b6060820152608060208201526000620045cf60808301846200454856fe608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561164e806100326000396000f3fe608060405234801561001057600080fd5b50600436106100985760003560e01c80620dd95d1461009d57806303c02f42146100c65780635af099c9146100ff57806363a6e3b514610112578063ae5f76fa14610132578063b4dc00b414610162578063c34c08e51461018b578063c4d1f8f11461019e578063dbb61ee7146101b3578063e52223bb146101c6578063f166d9eb146101e9575b600080fd5b6100b06100ab366004611228565b61021d565b6040516100bd9190611254565b60405180910390f35b6100f16100d436600461127d565b600560209081526000928352604080842090915290825290205481565b6040519081526020016100bd565b6100b061010d3660046112b6565b610255565b6100f16101203660046112cf565b60086020526000908152604090205481565b6101556101403660046112cf565b60036020526000908152604090205460d81b81565b6040516100bd91906112f3565b6100b0610170366004611308565b6002602052600090815260409020546001600160a01b031681565b6000546100b0906001600160a01b031681565b6101b16101ac366004611325565b61027f565b005b6101556101c13660046112b6565b6104bd565b6101d96101d43660046112cf565b6104f4565b60405190151581526020016100bd565b6101d96101f736600461135d565b600660209081526000938452604080852082529284528284209052825290205460ff1681565b6004602052816000526040600020818154811061023957600080fd5b6000918252602090912001546001600160a01b03169150829050565b6007818154811061026557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102b457336040516237c7b360e01b81526004016102ab9190611254565b60405180910390fd5b60008260058111156102c8576102c86113a8565b0361034e576102d68161054e565b610340816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906113be565b61057e565b610349816105fc565b610474565b6001826005811115610362576103626113a8565b036103ba576103708161054e565b6103b1816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d6000803e3d6000fd5b610349816107a3565b60028260058111156103ce576103ce6113a8565b036103e5576103dc8161054e565b61034981610925565b60038260058111156103f9576103f96113a8565b03610410576104078161054e565b61034981610b5c565b6004826005811115610424576104246113a8565b0361044957600080546001600160a01b0319166001600160a01b038316179055610474565b600582600581111561045d5761045d6113a8565b036104745761046b8161054e565b61047481610cf5565b806001600160a01b0316826005811115610490576104906113a8565b6040517f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c9090600090a35050565b600181815481106104cd57600080fd5b9060005260206000209060069182820401919006600502915054906101000a900460d81b81565b6007546000901580159061054857506001600160a01b038216600081815260086020526040902054600780549091908110610531576105316113db565b6000918252602090912001546001600160a01b0316145b92915050565b806001600160a01b03163b60000361057b5780604051631bd1ba9d60e21b81526004016102ab9190611254565b50565b8060005b60058110156105f757600082826005811061059f5761059f6113db565b1a60f81b9050604160f81b6001600160f81b0319821610806105ce5750602d60f91b6001600160f81b03198216115b156105ee578360405163075f770560e31b81526004016102ab91906112f3565b50600101610582565b505050565b6000816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066091906113be565b6001600160d81b031981166000908152600260205260409020549091506001600160a01b0316156106a65780604051634403633360e11b81526004016102ab91906112f3565b6001600160d81b03198116600090815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558084526003909252808320805464ffffffffff191660d886901c9081179091556001805480820182559085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600680830491909101805464ffffffffff929093066005026101000a9182021990921692029190911790558051633a990e4560e21b81529051919263ea6439149260048084019382900301818387803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050505050565b6000816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080791906113be565b6001600160d81b031981166000908152600260205260409020549091506001600160a01b031680158061084b5750826001600160a01b0316816001600160a01b0316145b1561086b578160405163073e073160e01b81526004016102ab91906112f3565b6001600160a01b038181166000908152600360209081526040808320805464ffffffffff19908116909155938716808452818420805490951660d888901c179094556001600160d81b031986168352600290915280822080546001600160a01b031916841790558051633a990e4560e21b8152905163ea6439149260048084019391929182900301818387803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b505050506105f782610e64565b61092e816104f4565b1561094e578060405163224b187760e01b81526004016102ab9190611254565b600780546001808201835560008390527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180546001600160a01b0319166001600160a01b03851617905590546109a791906113f1565b6001600160a01b038216600081815260086020526040808220939093558251639459b87560e01b815292519092639459b8759160048083019286929190829003018183875af11580156109fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a2691908101906114a7565b805190915060005b81811015610adf576000838281518110610a4a57610a4a6113db565b6020908102919091018101516001600160d81b03198116600081815260048452604081208054600180820183558284529583200180546001600160a01b0319166001600160a01b038c1617905591905254909250610aa891906113f1565b6001600160d81b031990911660009081526005602090815260408083206001600160a01b0389168452909152902055600101610a2e565b506000836001600160a01b0316635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b489190810190611545565b9050610b5684826001610f6f565b50505050565b610b65816104f4565b610b8457806040516322cd55c560e01b81526004016102ab9190611254565b6000816001600160a01b0316635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610bc4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bec9190810190611545565b9050610bfa82826000610f6f565b6001600160a01b03821660009081526008602052604081205460078054919291610c26906001906113f1565b81548110610c3657610c366113db565b600091825260209091200154600780546001600160a01b039092169250829184908110610c6557610c656113db565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610ca457610ca4611602565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038381168352600890915260408083208590559086168252812055610b5684611048565b60015460005b81811015610dc65760006002600060018481548110610d1c57610d1c6113db565b6000918252602080832060068084049091015492066005026101000a90910460d81b6001600160d81b03191683528201929092526040908101909120549051631195ecdb60e21b81526001600160a01b0390911691508190634657b36c90610d88908790600401611254565b600060405180830381600087803b158015610da257600080fd5b505af1158015610db6573d6000803e3d6000fd5b5050505081600101915050610cfb565b5060075460005b81811015610b5657600060078281548110610dea57610dea6113db565b600091825260209091200154604051631195ecdb60e21b81526001600160a01b0390911691508190634657b36c90610e26908890600401611254565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b5050505081600101915050610dcd565b6001600160d81b03198116600090815260046020908152604080832080548251818502810185019093528083529192909190830182828015610ecf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610eb1575b505083519394506000925050505b81811015610b5657828181518110610ef757610ef76113db565b60200260200101516001600160a01b0316639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af1158015610f3e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f6691908101906114a7565b50600101610edd565b815160005b81811015611041576000848281518110610f9057610f906113db565b60209081029190910181015180516001600160d81b031990811660009081526006845260408082206001600160a01b038c1680845290865281832085870180516001600160e01b0319908116865291885293839020805460ff19168c1515908117909155865194518451921682529681019690965293955092939116917ff3cdd20c5574ce87c347ea71e37b8fa7a095894be4b7f2bb1533e8d2342965f1910160405180910390a350600101610f74565b5050505050565b6000816001600160a01b0316639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561108a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b291908101906114a7565b805190915060005b81811015610b565760008382815181106110d6576110d66113db565b6020908102919091018101516001600160d81b031981166000908152600483526040808220600585528183206001600160a01b038b1684529094528120548354929450918390611128906001906113f1565b81548110611138576111386113db565b9060005260206000200160009054906101000a90046001600160a01b031690508083838154811061116b5761116b6113db565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828054806111a9576111a9611602565b60008281526020808220600019908401810180546001600160a01b03191690559092019092556001600160d81b03199590951681526005855260408082206001600160a01b039384168352909552848120929092558716815291822091909155506001016110ba565b6001600160d81b03198116811461057b57600080fd5b6000806040838503121561123b57600080fd5b823561124681611212565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461057b57600080fd5b6000806040838503121561129057600080fd5b823561129b81611212565b915060208301356112ab81611268565b809150509250929050565b6000602082840312156112c857600080fd5b5035919050565b6000602082840312156112e157600080fd5b81356112ec81611268565b9392505050565b6001600160d81b031991909116815260200190565b60006020828403121561131a57600080fd5b81356112ec81611212565b6000806040838503121561133857600080fd5b82356006811061129b57600080fd5b6001600160e01b03198116811461057b57600080fd5b60008060006060848603121561137257600080fd5b833561137d81611212565b9250602084013561138d81611268565b9150604084013561139d81611347565b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156113d057600080fd5b81516112ec81611212565b634e487b7160e01b600052603260045260246000fd5b60008282101561141157634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561144e5761144e611416565b60405290565b604051601f8201601f191681016001600160401b038111828210171561147c5761147c611416565b604052919050565b60006001600160401b0382111561149d5761149d611416565b5060051b60200190565b600060208083850312156114ba57600080fd5b82516001600160401b038111156114d057600080fd5b8301601f810185136114e157600080fd5b80516114f46114ef82611484565b611454565b81815260059190911b8201830190838101908783111561151357600080fd5b928401925b8284101561153a57835161152b81611212565b82529284019290840190611518565b979650505050505050565b6000602080838503121561155857600080fd5b82516001600160401b0381111561156e57600080fd5b8301601f8101851361157f57600080fd5b805161158d6114ef82611484565b81815260069190911b820183019083810190878311156115ac57600080fd5b928401925b8284101561153a57604084890312156115ca5760008081fd5b6115d261142c565b84516115dd81611212565b8152848601516115ec81611347565b81870152825260409390930192908401906115b1565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a72e84c92701fcd62e8d96b0d5f7fc8892dd4d1536ec088a995235488c064ab64736f6c634300080f00336080604052600160055534801561001557600080fd5b506040516117753803806117758339810160408190526100349161005e565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b17905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b6116d88061009d6000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806301a91e5c1461010c57806302fb0c5e146101215780630f15f4c01461014a57806315226b54146101525780631ae7ec2e146101735780631ff517ff1461019457806328a4ace5146101b45780632f42aef5146101df57806332b43ad2146101f25780634657b36c1461021d5780634aae164b1461023057806351b42b00146102435780635f0736a11461024b578063724000c1146102765780638b7f3fb914610289578063d4aae0c41461029c578063e6eb207a146102bc578063ea643914146102cf578063f5b92c73146102d7578063fb393f24146102ea578063ffa1ad74146102fd575b600080fd5b61011f61011a3660046114d4565b610312565b005b60005461013590600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61011f61045d565b610165610160366004611515565b610517565b604051908152602001610141565b61017b6105a6565b6040516001600160d81b03199091168152602001610141565b6101656101a2366004611515565b60036020526000908152604090205481565b6101656101c2366004611539565b600460209081526000928352604080842090915290825290205481565b61011f6101ed3660046114d4565b6105b2565b610165610200366004611539565b600260209081526000928352604080842090915290825290205481565b61011f61022b366004611515565b61072a565b61011f61023e3660046114d4565b610779565b61011f61090b565b610165610259366004611539565b600160209081526000928352604080842090915290825290205481565b61011f610284366004611572565b6109bf565b61011f6102973660046114d4565b610b84565b6000546102af906001600160a01b031681565b604051610141919061159e565b61011f6102ca3660046114d4565b610cd7565b61011f610e2b565b61011f6102e53660046114d4565b610e5a565b61011f6102f83660046114d4565b61115c565b60408051600181526000602082015201610141565b6000546001600160a01b031663f166d9eb61032b6105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610357939291906115b2565b602060405180830381865afa158015610374573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039891906115e7565b6103c057336040516311bf00c960e01b81526004016103b7919061159e565b60405180910390fd5b6001600160a01b0380841660009081526002602090815260408083209386168352929052908120546103f390839061161f565b6001600160a01b038581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917f9afc1acde4b7ec0d84d924e5b530aecfb57d117a7122b80904cb9912badbff5991015b60405180910390a350505050565b6000546001600160a01b031663f166d9eb6104766105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016104a2939291906115b2565b602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e391906115e7565b61050257336040516311bf00c960e01b81526004016103b7919061159e565b6000805460ff60a01b1916600160a01b179055565b6001600160a01b0381166000818152600360205260408082205490516370a0823160e01b8152919290916370a082319061055590309060040161159e565b602060405180830381865afa158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190611637565b6105a0919061161f565b92915050565b64545253525960d81b90565b6000546001600160a01b031663f166d9eb6105cb6105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016105f7939291906115b2565b602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063891906115e7565b61065757336040516311bf00c960e01b81526004016103b7919061159e565b600054600160a01b900460ff166106815760405163473b682f60e11b815260040160405180910390fd5b3360009081526001602090815260408083206001600160a01b0386168452909152812080548392906106b4908490611650565b909155506106ce90506001600160a01b0383168483611294565b816001600160a01b0316836001600160a01b0316336001600160a01b03167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e8460405161071d91815260200190565b60405180910390a4505050565b6000546001600160a01b03163314610757573360405163053e900f60e21b81526004016103b7919061159e565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031663f166d9eb6107926105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016107be939291906115b2565b602060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff91906115e7565b61081e57336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b0382811660009081526004602090815260408083209387168352929052208054908290558181101561088e5761085b8183611650565b6001600160a01b0384166000908152600360205260408120805490919061088390849061161f565b909155506108c69050565b6108988282611650565b6001600160a01b038416600090815260036020526040812080549091906108c0908490611650565b90915550505b836001600160a01b0316836001600160a01b03167f4417d205f6349e66a581332b36195e74d10f878e80db907b4fd3a814aad4049d8460405161044f91815260200190565b6000546001600160a01b031663f166d9eb6109246105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610950939291906115b2565b602060405180830381865afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099191906115e7565b6109b057336040516311bf00c960e01b81526004016103b7919061159e565b6000805460ff60a01b19169055565b6000546001600160a01b031663f166d9eb6109d86105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610a04939291906115b2565b602060405180830381865afa158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4591906115e7565b610a6457336040516311bf00c960e01b81526004016103b7919061159e565b600054600160a01b900460ff16610a8e5760405163473b682f60e11b815260040160405180910390fd5b3360009081526002602090815260408083206001600160a01b038616845290915281208054839290610ac1908490611650565b90915550506001600160a01b038216600090815260046020908152604080832033845290915281208054839290610af990849061161f565b90915550506001600160a01b03821660009081526003602052604081208054839290610b2690849061161f565b90915550610b4090506001600160a01b0383163383611294565b60405181815233906001600160a01b038416907f7f04a714958851e1d87b504651ba77ab02f62bae8879f577bf3e07cf8567aba29060200160405180910390a35050565b6000546001600160a01b031663f166d9eb610b9d6105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610bc9939291906115b2565b602060405180830381865afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a91906115e7565b610c2957336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b0380841660009081526001602090815260408083209386168352929052908120549082821115610c6957610c648383611650565b610c6c565b60005b6001600160a01b038681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f40730d80659c76c95521f0340872d27fdc8b3c47befe2ca569d2c2eedc8a049e91015b60405180910390a35050505050565b6000546001600160a01b031663f166d9eb610cf06105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610d1c939291906115b2565b602060405180830381865afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d91906115e7565b610d7c57336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b0380841660009081526001602090815260408083209386168352929052908120549082610db283600019611650565b1115610dc757610dc2838361161f565b610dcb565b6000195b6001600160a01b038681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f8bbc2784c9e4073e20f60d8c7218cbd211c43ca2ee041bc037f977693a0c8c1b9101610cc8565b6000546001600160a01b03163314610e58573360405163053e900f60e21b81526004016103b7919061159e565b565b6000546001600160a01b031663f166d9eb610e736105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b8152600401610e9f939291906115b2565b602060405180830381865afa158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee091906115e7565b610eff57336040516311bf00c960e01b81526004016103b7919061159e565b600554600114610f3e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016103b7565b60026005556001600160a01b0380831660009081526004602090815260408083209387168352929052908120549003610f8a5760405163a4255dc560e01b815260040160405180910390fd5b6040516370a0823160e01b81526000906001600160a01b038416906370a0823190610fb990309060040161159e565b602060405180830381865afa158015610fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffa9190611637565b90506110116001600160a01b0384163330856113a1565b600081846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611040919061159e565b602060405180830381865afa15801561105d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110819190611637565b61108b9190611650565b9050828111156110985750815b6001600160a01b038085166000908152600460209081526040808320938916835292905290812080548392906110cf908490611650565b90915550506001600160a01b038416600090815260036020526040812080548392906110fc908490611650565b92505081905550846001600160a01b0316846001600160a01b03167feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf8360405161114891815260200190565b60405180910390a350506001600555505050565b6000546001600160a01b031663f166d9eb6111756105a6565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016111a1939291906115b2565b602060405180830381865afa1580156111be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e291906115e7565b61120157336040516311bf00c960e01b81526004016103b7919061159e565b6001600160a01b038084166000908152600260209081526040808320938616835292905290812054611234908390611650565b6001600160a01b038581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917fbb8caa1e59333c99899b67ccacb2b942c5a5ebf1a2bff4932b50274da81fe8d5910161044f565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916112f09190611667565b6000604051808303816000865af19150503d806000811461132d576040519150601f19603f3d011682016040523d82523d6000602084013e611332565b606091505b509150915081801561135c57508051158061135c57508080602001905181019061135c91906115e7565b61139a5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016103b7565b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916114059190611667565b6000604051808303816000865af19150503d8060008114611442576040519150601f19603f3d011682016040523d82523d6000602084013e611447565b606091505b509150915081801561147157508051158061147157508080602001905181019061147191906115e7565b6114b45760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103b7565b505050505050565b6001600160a01b03811681146114d157600080fd5b50565b6000806000606084860312156114e957600080fd5b83356114f4816114bc565b92506020840135611504816114bc565b929592945050506040919091013590565b60006020828403121561152757600080fd5b8135611532816114bc565b9392505050565b6000806040838503121561154c57600080fd5b8235611557816114bc565b91506020830135611567816114bc565b809150509250929050565b6000806040838503121561158557600080fd5b8235611590816114bc565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160d81b03199390931683526001600160a01b039190911660208301526001600160e01b031916604082015260600190565b6000602082840312156115f957600080fd5b8151801515811461153257600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561163257611632611609565b500190565b60006020828403121561164957600080fd5b5051919050565b60008282101561166257611662611609565b500390565b6000825160005b81811015611688576020818601810151858301520161166e565b81811115611697576000828501525b50919091019291505056fea264697066735822122078fd58d96e024b020bb1e79cee66ed300807d3f1661df81505642d331531f02f64736f6c634300080f003360e06040523480156200001157600080fd5b5060405162000fbe38038062000fbe8339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610b4d620004716000396000610402015260006103cd015260006101240152610b4d6000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b4578063095ea7b3146100d257806318160ddd146100f557806323b872dd1461010c578063313ce5671461011f5780633644e5151461015857806340c10f191461016057806370a082311461017557806395d89b41146101955780639dc29fac1461019d578063a9059cbb146101b0578063d505accf146101c3578063dd62ed3e146101d6575b600080fd5b6100bc610201565b6040516100c9919061081a565b60405180910390f35b6100e56100e036600461088b565b61028f565b60405190151581526020016100c9565b6100fe60025481565b6040519081526020016100c9565b6100e561011a3660046108b5565b6102e9565b6101467f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100c9565b6100fe6103c9565b61017361016e36600461088b565b610424565b005b6100fe6101833660046108f1565b60036020526000908152604090205481565b6100bc610432565b6101736101ab36600461088b565b61043f565b6100e56101be36600461088b565b610449565b6101736101d1366004610913565b6104af565b6100fe6101e4366004610986565b600460209081526000928352604080842090915290825290205481565b6000805461020e906109b9565b80601f016020809104026020016040519081016040528092919081815260200182805461023a906109b9565b80156102875780601f1061025c57610100808354040283529160200191610287565b820191906000526020600020905b81548152906001019060200180831161026a57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020610af8833981519152906102d89086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610345576103208382610a09565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061036d908490610a09565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610ad8833981519152906103b69087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146103ff576103fa6106c4565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61042e828261075e565b5050565b6001805461020e906109b9565b61042e82826107b8565b3360009081526003602052604081208054839190839061046a908490610a09565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610ad8833981519152906102d89086815260200190565b428410156104fe5760405162461bcd60e51b815260206004820152601760248201527614115493525517d11150511312539157d1561412549151604a1b60448201526064015b60405180910390fd5b6000600161050a6103c9565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808d1692820192909252908a1660608201526080810189905260a0810188905260c0016040516020818303038152906040528051906020012060405160200161059c92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156105fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106305750876001600160a01b0316816001600160a01b0316145b61066d5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016104f5565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a1691600080516020610af8833981519152910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516106f69190610a20565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107709190610abf565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610ad883398151915291015b60405180910390a35050565b6001600160a01b038216600090815260036020526040812080548392906107e0908490610a09565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610ad8833981519152906020016107ac565b600060208083528351808285015260005b818110156108475785810183015185820160400152820161082b565b81811115610859576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461088657600080fd5b919050565b6000806040838503121561089e57600080fd5b6108a78361086f565b946020939093013593505050565b6000806000606084860312156108ca57600080fd5b6108d38461086f565b92506108e16020850161086f565b9150604084013590509250925092565b60006020828403121561090357600080fd5b61090c8261086f565b9392505050565b600080600080600080600060e0888a03121561092e57600080fd5b6109378861086f565b96506109456020890161086f565b95506040880135945060608801359350608088013560ff8116811461096957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561099957600080fd5b6109a28361086f565b91506109b06020840161086f565b90509250929050565b600181811c908216806109cd57607f821691505b6020821081036109ed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a1b57610a1b6109f3565b500390565b600080835481600182811c915080831680610a3c57607f831692505b60208084108203610a5b57634e487b7160e01b86526022600452602486fd5b818015610a6f5760018114610a8457610ab1565b60ff1986168952841515850289019650610ab1565b60008a81526020902060005b86811015610aa95781548b820152908501908301610a90565b505084890196505b509498975050505050505050565b60008219821115610ad257610ad26109f3565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220a5f8f95236ed07db23fda7b64a87840710d4670f7f344e518b0d275bb6729c7d64736f6c634300080f003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583afb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a264697066735822122035261aef7fa87cb24ddf550b5d207ce13ec327c56ee701a46104b34e44b93f6264736f6c634300080f0033",
    "sourceMap": "637:9588:143:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:843;;;:::i;:::-;;851:22;;;;;-1:-1:-1;;;;;851:22:143;;;;;;;;;;:::i;:::-;;;;;;;;2652:443;;;;;;:::i;:::-;;:::i;6533:536::-;;;:::i;1935:241::-;;;;;;:::i;:::-;;:::i;321:38:1:-;;-1:-1:-1;;;;;;;;;;;321:38:1;;5930:597:143;;;:::i;3594:616::-;;;;;;:::i;:::-;;:::i;1818:111::-;;;:::i;3238:350::-;;;;;;:::i;:::-;;:::i;4786:610::-;;;;;;:::i;:::-;;:::i;759:30::-;;;;;-1:-1:-1;;;;;759:30:143;;;5402:522;;;:::i;879:21::-;;;;;-1:-1:-1;;;;;879:21:143;;;2516:130;;;:::i;2182:328::-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;1026:14:164;;1019:22;1001:41;;989:2;974:18;1819:584:0;861:187:164;7075:1847:143;;;;;;:::i;:::-;;:::i;822:23::-;;;;;-1:-1:-1;;;;;822:23:143;;;4216:564;;;;;;:::i;:::-;;:::i;8928:1295::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;795:21:143;;;;;-1:-1:-1;;;;;795:21:143;;;969:843;1012:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1003:6:143;:21;;-1:-1:-1;;;;;;1003:21:143;-1:-1:-1;;;;;1003:21:143;;;;;;;;;1042:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1034:5:143;:37;;-1:-1:-1;;;;;;1034:37:143;-1:-1:-1;;;;;1034:37:143;;;;;;;;;;1088:46;;1131:2;;1088:46;;;:::i;:::-;1842:2:164;1824:21;;;1881:2;1861:18;;;1854:30;-1:-1:-1;;;1915:3:164;1900:19;;1893:48;1979:3;1972:4;1957:20;;1950:33;;;2020:1;1999:19;;;1992:30;-1:-1:-1;;;2053:3:164;2038:19;;2031:35;2150:4;2138:17;;;-1:-1:-1;2118:18:164;;2111:45;2098:3;2083:19;1088:46:143;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1081:4:143;:53;;-1:-1:-1;;;;;;1081:53:143;-1:-1:-1;;;;;1081:53:143;;;;;;1144:6;;1196:5;;1144:59;;-1:-1:-1;;;1144:59:143;;:6;;;;:20;;:59;;-1:-1:-1;;1196:5:143;;1144:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1304:5:143;;1333:28;;;;;;;;;;;-1:-1:-1;;;1333:28:143;;;;1304:58;;-1:-1:-1;;;1304:58:143;;:28;;-1:-1:-1;1304:28:143;;-1:-1:-1;1304:58:143;;-1:-1:-1;;;;;1304:5:143;;1333:28;1304:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1294:7;:68;;-1:-1:-1;;;;;;1294:68:143;-1:-1:-1;;;;;1294:68:143;;;;;;;;;1372:6;;:53;;-1:-1:-1;;;1372:53:143;;:6;;;:20;;:53;;1393:22;;1294:68;1372:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1447:5:143;;:62;;-1:-1:-1;;;1447:62:143;;-1:-1:-1;;;;;1447:5:143;;;:62;;;3973:51:164;-1:-1:-1;;;4040:18:164;;;4033:61;1447:29:143;;-1:-1:-1;1447:29:143;;-1:-1:-1;3946:18:164;;1447:62:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1436:8;:73;;-1:-1:-1;;;;;;1436:73:143;-1:-1:-1;;;;;1436:73:143;;;;;;;;;1519:6;;:54;;-1:-1:-1;;;1519:54:143;;:6;;;:20;;:54;;1540:22;;1436:73;1519:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1593:5:143;;1622:28;;;;;;;;;;;-1:-1:-1;;;1622:28:143;;;;1593:58;;-1:-1:-1;;;1593:58:143;;:28;;-1:-1:-1;1593:28:143;;-1:-1:-1;1593:58:143;;-1:-1:-1;;;;;1593:5:143;;1622:28;1593:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1584:6;:67;;-1:-1:-1;;;;;;1584:67:143;-1:-1:-1;;;;;1584:67:143;;;;;;;;;1661:6;;:52;;-1:-1:-1;;;1661:52:143;;:6;;;:20;;:52;;1682:22;;1584:67;1661:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1758:4:143;;1776:5;;1758:47;;-1:-1:-1;;;1758:47:143;;-1:-1:-1;;;;;1758:4:143;;;;-1:-1:-1;1758:9:143;;-1:-1:-1;1758:47:143;;1776:5;;;;956:6;;1758:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:843::o;2652:443::-;2736:41;;-1:-1:-1;;;2736:41:143;;956:6;2746:30;;2736:41;;;1001::164;-1:-1:-1;;;;;;;;;;;250:64:1;2736:9:143;;974:18:164;;2736:41:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2797:7:143;;2788:17;;-1:-1:-1;;;2788:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;2788:8:143;;-1:-1:-1;2788:17:143;;-1:-1:-1;;;;;2797:7:143;;2788:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2815:5:143;;2846:8;;2856:4;;2815:55;;-1:-1:-1;;;2815:55:143;;-1:-1:-1;;;;;2815:5:143;;;;-1:-1:-1;2815:30:143;;-1:-1:-1;2815:55:143;;2846:8;;;;2856:4;;;;2862:7;;2815:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2890:5:143;;2913:8;;2923:4;;2890:38;;-1:-1:-1;;;2890:38:143;;2881:57;;-1:-1:-1;;;;;;2890:5:143;;;;-1:-1:-1;2890:22:143;;:38;;2913:8;;;2923:4;;2890:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2930:7;2881:8;:57::i;:::-;2958:8;;2949:18;;-1:-1:-1;;;2949:18:143;;-1:-1:-1;;;;;;;;;;;250:64:1;2949:8:143;;:18;;-1:-1:-1;;;;;2958:8:143;;2949:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2977:5:143;;3015:4;;2977:52;;-1:-1:-1;;;2977:52:143;;-1:-1:-1;;;;;2977:5:143;;;;-1:-1:-1;2977:22:143;;-1:-1:-1;2977:52:143;;3008:4;;3015;;3021:7;;2977:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3049:4:143;;:29;;-1:-1:-1;;;3049:29:143;;3040:48;;-1:-1:-1;;;;;;3049:4:143;;;;-1:-1:-1;3049:14:143;;:29;;3072:4;;3049:29;;;:::i;3040:48::-;2652:443;:::o;6533:536::-;6596:7;;6587:17;;-1:-1:-1;;;6587:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;6587:8:143;;:17;;-1:-1:-1;;;;;6596:7:143;;6587:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6614:5:143;;6643:6;;6651:4;;6614:64;;-1:-1:-1;;;6614:64:143;;-1:-1:-1;;;;;6614:5:143;;;;-1:-1:-1;6614:28:143;;-1:-1:-1;6614:64:143;;6643:6;;;;6651:4;;;;956:6;;6614:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6698:6:143;;6689:16;;-1:-1:-1;;;6689:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;6689:8:143;;-1:-1:-1;6689:16:143;;-1:-1:-1;;;;;6698:6:143;;6689:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6715:5:143;;6731:4;;6715:43;;-1:-1:-1;;;6715:43:143;;-1:-1:-1;;;;;6715:5:143;;;;-1:-1:-1;6715:15:143;;-1:-1:-1;6715:43:143;;6731:4;;;;956:6;;6715:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6778:5:143;;6796:4;;6802:6;;6778:31;;-1:-1:-1;;;6778:31:143;;6769:63;;-1:-1:-1;;;;;;6778:5:143;;;;-1:-1:-1;6778:17:143;;:31;;6796:4;;;6802:6;;6778:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;956:6;6769:8;:63::i;:::-;6851:5;;6867:4;;6851:21;;-1:-1:-1;;;6851:21:143;;6842:53;;-1:-1:-1;;;;;6851:5:143;;;;:15;;:21;;6867:4;;;;6851:21;;;:::i;6842:53::-;6915:7;;6906:17;;-1:-1:-1;;;6906:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;6906:8:143;;:17;;-1:-1:-1;;;;;6915:7:143;;6906:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6933:5:143;;6947:6;;6955:4;;6933:30;;-1:-1:-1;;;6933:30:143;;-1:-1:-1;;;;;6933:5:143;;;;-1:-1:-1;6933:13:143;;-1:-1:-1;6933:30:143;;6947:6;;;;6955:4;;;;6933:5;;:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6983:5:143;;7001:4;;7007:6;;6983:31;;-1:-1:-1;;;6983:31:143;;6974:44;;-1:-1:-1;;;;;;6983:5:143;;;;-1:-1:-1;6983:17:143;;:31;;7001:4;;;7007:6;;6983:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7016:1;6974:8;:44::i;:::-;7037:5;;7053:4;;7037:21;;-1:-1:-1;;;7037:21:143;;7028:34;;-1:-1:-1;;;;;7037:5:143;;;;:15;;:21;;7053:4;;;;7037:21;;;:::i;7028:34::-;6533:536::o;1935:241::-;2028:7;;2019:17;;-1:-1:-1;;;2019:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;2019:8:143;;:17;;-1:-1:-1;;;;;2028:7:143;;2019:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2046:5:143;;2077:8;;2087:4;;2046:55;;-1:-1:-1;;;2046:55:143;;-1:-1:-1;;;;;2046:5:143;;;;-1:-1:-1;2046:30:143;;-1:-1:-1;2046:55:143;;2077:8;;;;2087:4;;;;2093:7;;2046:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2121:5:143;;2144:8;;2154:4;;2121:38;;-1:-1:-1;;;2121:38:143;;2112:57;;-1:-1:-1;;;;;;2121:5:143;;;;-1:-1:-1;2121:22:143;;:38;;2144:8;;;2154:4;;2121:38;;;:::i;5930:597::-;6010:7;;6001:17;;-1:-1:-1;;;6001:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;6001:8:143;;:17;;-1:-1:-1;;;;;6010:7:143;;6001:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6028:5:143;;6057:6;;6065:4;;6028:64;;-1:-1:-1;;;6028:64:143;;-1:-1:-1;;;;;6028:5:143;;;;-1:-1:-1;6028:28:143;;-1:-1:-1;6028:64:143;;6057:6;;;;6065:4;;;;956:6;;6028:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6112:6:143;;6103:16;;-1:-1:-1;;;6103:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;6103:8:143;;-1:-1:-1;6103:16:143;;-1:-1:-1;;;;;6112:6:143;;6103:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6129:5:143;;6145:4;;6129:43;;-1:-1:-1;;;6129:43:143;;-1:-1:-1;;;;;6129:5:143;;;;-1:-1:-1;6129:15:143;;-1:-1:-1;6129:43:143;;6145:4;;;;956:6;;6129:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6381:8:143;;6290:109;;6271:16;;-1:-1:-1;;;;6326:41:143;-1:-1:-1;6290:109:143;;-1:-1:-1;;;;;6381:8:143;;6290:109;;;:::i;:::-;;;;-1:-1:-1;;6290:109:143;;;;;;;;;;;;;;-1:-1:-1;;;;;6290:109:143;-1:-1:-1;;;;;;6290:109:143;;;;;;;;;;6409:20;;-1:-1:-1;;;6409:20:143;;6290:109;;-1:-1:-1;;;;;;;;;;;;250:64:1;6409:15:143;;:20;;6290:109;;6409:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6448:8:143;;6439:18;;-1:-1:-1;;;6439:18:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;6439:8:143;;-1:-1:-1;6439:18:143;;-1:-1:-1;;;;;6448:8:143;;6439:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6467:5:143;;6481:6;;6489:4;;-1:-1:-1;;;;;6467:5:143;;;;-1:-1:-1;6467:13:143;;-1:-1:-1;6481:6:143;;;;6489:4;6495:24;6518:1;956:6;6495:24;:::i;:::-;6467:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5991:536;5930:597::o;3594:616::-;3663:41;;-1:-1:-1;;;3663:41:143;;956:6;3673:30;;3663:41;;;1001::164;-1:-1:-1;;;;;;;;;;;250:64:1;3663:9:143;;974:18:164;;3663:41:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3714:22:143;;-1:-1:-1;;;3714:22:143;;3724:11;;;3714:22;;;1001:41:164;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;3714:9:143;;-1:-1:-1;974:18:164;;3714:22:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3756:7:143;;3747:17;;-1:-1:-1;;;3747:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;3747:8:143;;-1:-1:-1;3747:17:143;;-1:-1:-1;;;;;3756:7:143;;3747:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3774:5:143;;3803:6;;3811:4;;3774:51;;-1:-1:-1;;;3774:51:143;;-1:-1:-1;;;;;3774:5:143;;;;-1:-1:-1;3774:28:143;;-1:-1:-1;3774:51:143;;3803:6;;;;3811:4;;;;3817:7;;3774:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3845:6:143;;3836:16;;-1:-1:-1;;;3836:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;3836:8:143;;-1:-1:-1;3836:16:143;;-1:-1:-1;;;;;3845:6:143;;3836:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3862:5:143;;3878:4;;3862:30;;-1:-1:-1;;;3862:30:143;;-1:-1:-1;;;;;3862:5:143;;;;-1:-1:-1;3862:15:143;;-1:-1:-1;3862:30:143;;3878:4;;;;3884:7;;3862:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3912:4:143;;3927:6;;3912:22;;-1:-1:-1;;;3912:22:143;;3903:41;;-1:-1:-1;;;;;;3912:4:143;;;;-1:-1:-1;3912:14:143;;:22;;3927:6;;3912:22;;;:::i;3903:41::-;3963:5;;3981:4;;3987:6;;3963:31;;-1:-1:-1;;;3963:31:143;;3954:50;;-1:-1:-1;;;;;3963:5:143;;;;:17;;:31;;3981:4;;;;3987:6;;3963:31;;;:::i;3954:50::-;4023:5;;4039:4;;4023:21;;-1:-1:-1;;;4023:21:143;;4014:40;;-1:-1:-1;;;;;4023:5:143;;;;:15;;:21;;4039:4;;;;4023:21;;;:::i;4014:40::-;4151:5;;4175:4;;4151:29;;-1:-1:-1;;;4151:29:143;;4142:61;;-1:-1:-1;;;;;4151:5:143;;;;:23;;:29;;4175:4;;;;4151:29;;;:::i;1818:111::-;1870:52;-1:-1:-1;;;1905:5:143;;;;;;;;;-1:-1:-1;;;;;1905:5:143;-1:-1:-1;;;;;1905:13:143;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1870:52:143;:10;:52::i;3238:350::-;3324:41;;-1:-1:-1;;;3324:41:143;;956:6;3334:30;;3324:41;;;1001::164;-1:-1:-1;;;;;;;;;;;250:64:1;3324:9:143;;974:18:164;;3324:41:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3375:22:143;;-1:-1:-1;;;3375:22:143;;3385:11;;;3375:22;;;1001:41:164;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;3375:9:143;;-1:-1:-1;974:18:164;;3375:22:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3474:17:143;;;-1:-1:-1;;;3474:17:143;;;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;3474:15:143;;-1:-1:-1;3474:17:143;;;;;274:37:1;;3474:17:143;;;;;;;274:37:1;250:64;3474:17:143;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3510:8:143;;3501:18;;-1:-1:-1;;;3501:18:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;3501:8:143;;-1:-1:-1;3501:18:143;;-1:-1:-1;;;;;3510:8:143;;3501:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3529:5:143;;3567:4;;3529:52;;-1:-1:-1;;;3529:52:143;;-1:-1:-1;;;;;3529:5:143;;;;-1:-1:-1;3529:22:143;;-1:-1:-1;3529:52:143;;3560:4;;3567;;3573:7;;3529:52;;;:::i;4786:610::-;4855:22;;-1:-1:-1;;;4855:22:143;;4865:11;;;4855:22;;;1001:41:164;-1:-1:-1;;;;;;;;;;;250:64:1;4855:9:143;;974:18:164;;4855:22:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4887:41:143;;-1:-1:-1;;;4887:41:143;;956:6;4897:30;;4887:41;;;1001::164;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;4887:9:143;;-1:-1:-1;974:18:164;;4887:41:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4948:7:143;;4939:17;;-1:-1:-1;;;4939:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;4939:8:143;;-1:-1:-1;4939:17:143;;-1:-1:-1;;;;;4948:7:143;;4939:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4966:5:143;;4995:6;;5003:4;;4966:51;;-1:-1:-1;;;4966:51:143;;-1:-1:-1;;;;;4966:5:143;;;;-1:-1:-1;4966:28:143;;-1:-1:-1;4966:51:143;;4995:6;;;;5003:4;;;;5009:7;;4966:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5042:6:143;;5028:21;;-1:-1:-1;;;5028:21:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;5028:13:143;;-1:-1:-1;5028:21:143;;-1:-1:-1;;;;;5042:6:143;;5028:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5059:5:143;;5075:4;;5059:30;;-1:-1:-1;;;5059:30:143;;-1:-1:-1;;;;;5059:5:143;;;;-1:-1:-1;5059:15:143;;-1:-1:-1;5059:30:143;;5075:4;;;;5081:7;;5059:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5109:4:143;;5124:6;;5109:22;;-1:-1:-1;;;5109:22:143;;5100:41;;-1:-1:-1;;;;;;5109:4:143;;;;-1:-1:-1;5109:14:143;;:22;;5124:6;;5109:22;;;:::i;5100:41::-;5160:5;;5178:4;;5184:6;;5160:31;;-1:-1:-1;;;5160:31:143;;5151:50;;-1:-1:-1;;;;;5160:5:143;;;;:17;;:31;;5178:4;;;;5184:6;;5160:31;;;:::i;5151:50::-;5234:4;;5255:5;;5234:37;;-1:-1:-1;;;5234:37:143;;-1:-1:-1;;;;;5234:4:143;;;;:12;;:37;;5255:5;;;5263:7;;5234:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5281:5:143;;5297:6;;5305:4;;5281:38;;-1:-1:-1;;;5281:38:143;;-1:-1:-1;;;;;5281:5:143;;;;:15;;:38;;5297:6;;;;5305:4;;;5311:7;;5281:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5329:14:143;;;-1:-1:-1;;;5329:14:143;;;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;5329:12:143;;-1:-1:-1;5329:14:143;;;;;274:37:1;;5329:14:143;;;;;;;274:37:1;250:64;5329:14:143;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5363:4:143;;5378:6;;5363:22;;-1:-1:-1;;;5363:22:143;;5354:35;;-1:-1:-1;;;;;;5363:4:143;;;;-1:-1:-1;5363:14:143;;:22;;5378:6;;5363:22;;;:::i;5402:522::-;5463:7;;5454:17;;-1:-1:-1;;;5454:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;5454:8:143;;:17;;-1:-1:-1;;;;;5463:7:143;;5454:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5481:5:143;;5510:6;;5518:4;;5481:64;;-1:-1:-1;;;5481:64:143;;-1:-1:-1;;;;;5481:5:143;;;;-1:-1:-1;5481:28:143;;-1:-1:-1;5481:64:143;;5510:6;;;;5518:4;;;;956:6;;5481:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5565:6:143;;5556:16;;-1:-1:-1;;;5556:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;5556:8:143;;-1:-1:-1;5556:16:143;;-1:-1:-1;;;;;5565:6:143;;5556:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5582:5:143;;5598:4;;5582:43;;-1:-1:-1;;;5582:43:143;;-1:-1:-1;;;;;5582:5:143;;;;-1:-1:-1;5582:15:143;;-1:-1:-1;5582:43:143;;5598:4;;;;956:6;;5582:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5701:7:143;;5692:17;;-1:-1:-1;;;5692:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;5692:8:143;;-1:-1:-1;5692:17:143;;-1:-1:-1;;;;;5701:7:143;;5692:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5719:5:143;;5733:6;;5741:4;;-1:-1:-1;;;;;5719:5:143;;;;-1:-1:-1;5719:13:143;;-1:-1:-1;5733:6:143;;;;5741:4;5747:24;5770:1;956:6;5747:24;:::i;:::-;5719:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5792:5:143;;5810:4;;5816:6;;5792:31;;-1:-1:-1;;;5792:31:143;;5783:67;;-1:-1:-1;;;;;;5792:5:143;;;;-1:-1:-1;5792:17:143;;:31;;5810:4;;;5816:6;;5792:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5825:24;5848:1;956:6;5825:24;:::i;:::-;5783:8;:67::i;:::-;5869:5;;5885:4;;5869:21;;-1:-1:-1;;;5869:21:143;;5860:57;;-1:-1:-1;;;;;5869:5:143;;;;:15;;:21;;5885:4;;;;5869:21;;;:::i;2516:130::-;2587:5;;2611:4;;2587:29;;-1:-1:-1;;;2587:29:143;;2578:61;;-1:-1:-1;;;;;2587:5:143;;;;:23;;:29;;2611:4;;;;2587:29;;;:::i;2182:328::-;2275:7;;2266:17;;-1:-1:-1;;;2266:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;2266:8:143;;:17;;-1:-1:-1;;;;;2275:7:143;;2266:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2293:5:143;;2324:8;;2334:4;;2293:55;;-1:-1:-1;;;2293:55:143;;-1:-1:-1;;;;;2293:5:143;;;;-1:-1:-1;2293:30:143;;-1:-1:-1;2293:55:143;;2324:8;;;;2334:4;;;;2340:7;;2293:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2368:7:143;;2359:17;;-1:-1:-1;;;2359:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;2359:8:143;;-1:-1:-1;2359:17:143;;-1:-1:-1;;;;;2368:7:143;;2359:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2386:5:143;;2417:8;;2427:4;;2386:55;;-1:-1:-1;;;2386:55:143;;-1:-1:-1;;;;;2386:5:143;;;;-1:-1:-1;2386:30:143;;-1:-1:-1;2386:55:143;;2417:8;;;;2427:4;;;;2433:7;;2386:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2461:5:143;;2484:8;;2494:4;;2461:38;;-1:-1:-1;;;2461:38:143;;2452:51;;-1:-1:-1;;;;;;2461:5:143;;;;-1:-1:-1;2461:22:143;;:38;;2484:8;;;2494:4;;2461:38;;;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;7075:1847:143:-;7143:23;;-1:-1:-1;;;7143:23:143;;7153:12;;;7143:23;;;1001:41:164;-1:-1:-1;;;;;;;;;;;250:64:1;7143:9:143;;974:18:164;;7143:23:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7176:41:143;;-1:-1:-1;;;7176:41:143;;956:6;7186:30;;7176:41;;;1001::164;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7176:9:143;;-1:-1:-1;974:18:164;;7176:41:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7307:7:143;;7298:17;;-1:-1:-1;;;7298:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7298:8:143;;-1:-1:-1;7298:17:143;;-1:-1:-1;;;;;7307:7:143;;7298:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7325:5:143;;7356:7;;7365:4;;7325:54;;-1:-1:-1;;;7325:54:143;;-1:-1:-1;;;;;7325:5:143;;;;-1:-1:-1;7325:30:143;;-1:-1:-1;7325:54:143;;7356:7;;;;7365:4;;;;7371:7;;7325:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7399:7:143;;7390:17;;-1:-1:-1;;;7390:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7390:8:143;;-1:-1:-1;7390:17:143;;-1:-1:-1;;;;;7399:7:143;;7390:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7417:5:143;;7446:6;;7454:4;;7417:51;;-1:-1:-1;;;7417:51:143;;-1:-1:-1;;;;;7417:5:143;;;;-1:-1:-1;7417:28:143;;-1:-1:-1;7417:51:143;;7446:6;;;;7454:4;;;;7460:7;;7417:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7518:7:143;;7509:17;;-1:-1:-1;;;7509:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7509:8:143;;-1:-1:-1;7509:17:143;;-1:-1:-1;;;;;7518:7:143;;7509:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7536:5;;;;;;;;;-1:-1:-1;;;;;7536:5:143;-1:-1:-1;;;;;7536:16:143;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7637:44:143;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7637:44:143;-1:-1:-1;;;7637:44:143;;;7691:20;;-1:-1:-1;;;7691:20:143;;7637:44;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;7691:15:143;;:20;;7637:44;;7691:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7730:7:143;;7721:17;;-1:-1:-1;;;7721:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7721:8:143;;-1:-1:-1;7721:17:143;;-1:-1:-1;;;;;7730:7:143;;7721:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7748:5:143;;7771:7;;7780:4;;7748:46;;-1:-1:-1;;;7748:46:143;;-1:-1:-1;;;;;7748:5:143;;;;-1:-1:-1;7748:22:143;;-1:-1:-1;7748:46:143;;7771:7;;;;7780:4;;;;7786:7;;7748:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7852:20:143;;-1:-1:-1;;;7852:20:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7852:15:143;;-1:-1:-1;7852:20:143;;7868:3;;7852:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7891:6:143;;7882:16;;-1:-1:-1;;;7882:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7882:8:143;;-1:-1:-1;7882:16:143;;-1:-1:-1;;;;;7891:6:143;;7882:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7908:5:143;;7924:4;;7908:30;;-1:-1:-1;;;7908:30:143;;-1:-1:-1;;;;;7908:5:143;;;;-1:-1:-1;7908:15:143;;-1:-1:-1;7908:30:143;;7924:4;;;;7930:7;;7908:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7958:4:143;;7973:7;;7958:23;;-1:-1:-1;;;7958:23:143;;7949:36;;-1:-1:-1;;;;;;7958:4:143;;;;-1:-1:-1;7958:14:143;;:23;;7973:7;;7958:23;;;:::i;7949:36::-;8004:5;;8022:4;;8028:6;;8004:31;;-1:-1:-1;;;8004:31:143;;7995:44;;-1:-1:-1;;;;;8004:5:143;;;;:17;;:31;;8022:4;;;;8028:6;;8004:31;;;:::i;7995:44::-;8058:4;;8073:6;;8058:22;;-1:-1:-1;;;8058:22:143;;8049:35;;-1:-1:-1;;;;;8058:4:143;;;;:14;;:22;;8073:6;;;;8058:22;;;:::i;8049:35::-;8137:7;;8128:17;;-1:-1:-1;;;8128:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;8128:8:143;;:17;;-1:-1:-1;;;;;8137:7:143;;8128:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8155:5;;;;;;;;;-1:-1:-1;;;;;8155:5:143;-1:-1:-1;;;;;8155:14:143;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8219:7:143;;8210:17;;-1:-1:-1;;;8210:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;8210:8:143;;-1:-1:-1;8210:17:143;;-1:-1:-1;;;;;8219:7:143;;8210:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8237:5:143;;8260:7;;8269:4;;8237:46;;-1:-1:-1;;;8237:46:143;;-1:-1:-1;;;;;8237:5:143;;;;-1:-1:-1;8237:22:143;;-1:-1:-1;8237:46:143;;8260:7;;;;8269:4;;;;8275:7;;8237:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8302:4:143;;8317:7;;8302:23;;-1:-1:-1;;;8302:23:143;;8293:42;;-1:-1:-1;;;;;;8302:4:143;;;;-1:-1:-1;8302:14:143;;:23;;8317:7;;8302:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8327:7;8293:8;:42::i;:::-;8411:7;;8402:17;;-1:-1:-1;;;8402:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;8402:8:143;;:17;;-1:-1:-1;;;;;8411:7:143;;8402:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8429:4:143;;8451:5;;8429:38;;-1:-1:-1;;;8429:38:143;;-1:-1:-1;;;;;8429:4:143;;;;-1:-1:-1;8429:13:143;;-1:-1:-1;8429:38:143;;8451:5;;;;8459:7;;8429:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8487:6:143;;8478:16;;-1:-1:-1;;;8478:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;8478:8:143;;:16;;-1:-1:-1;;;;;8487:6:143;;8478:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8504:5:143;;8520:4;;8504:30;;-1:-1:-1;;;8504:30:143;;-1:-1:-1;;;;;8504:5:143;;;;-1:-1:-1;8504:15:143;;-1:-1:-1;8504:30:143;;8520:4;;;;8526:7;;8504:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8553:4:143;;8568:6;;8553:22;;-1:-1:-1;;;8553:22:143;;8544:41;;-1:-1:-1;;;;;;8553:4:143;;;;-1:-1:-1;8553:14:143;;:22;;8568:6;;8553:22;;;:::i;8544:41::-;8604:5;;8622:4;;8628:6;;8604:31;;-1:-1:-1;;;8604:31:143;;8595:50;;-1:-1:-1;;;;;8604:5:143;;;;:17;;:31;;8622:4;;;;8628:6;;8604:31;;;:::i;8595:50::-;8687:6;;8678:16;;-1:-1:-1;;;8678:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;8678:8:143;;:16;;-1:-1:-1;;;;;8687:6:143;;8678:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8704:4:143;;8725:5;;8704:37;;-1:-1:-1;;;8704:37:143;;-1:-1:-1;;;;;8704:4:143;;;;-1:-1:-1;8704:12:143;;-1:-1:-1;8704:37:143;;8725:5;;;;8733:7;;8704:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8760:6:143;;8751:16;;-1:-1:-1;;;8751:16:143;;-1:-1:-1;;;;;;;;;;;250:64:1;8751:8:143;;:16;;-1:-1:-1;;;;;8760:6:143;;8751:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8777:5:143;;8793:6;;8801:4;;8777:38;;-1:-1:-1;;;8777:38:143;;-1:-1:-1;;;;;8777:5:143;;;;-1:-1:-1;8777:15:143;;-1:-1:-1;8777:38:143;;8793:6;;;;8801:4;;;;8807:7;;8777:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8835:4:143;;8850:6;;8835:22;;-1:-1:-1;;;8835:22:143;;8826:35;;-1:-1:-1;;;;;;8835:4:143;;;;-1:-1:-1;8835:14:143;;:22;;8850:6;;8835:22;;;:::i;8826:35::-;8880:5;;8898:4;;8904:6;;8880:31;;-1:-1:-1;;;8880:31:143;;8871:44;;-1:-1:-1;;;;;8880:5:143;;;;:17;;:31;;8898:4;;;;8904:6;;8880:31;;;:::i;8871:44::-;7133:1789;7075:1847;:::o;4216:564::-;4298:41;;-1:-1:-1;;;4298:41:143;;956:6;4308:30;;4298:41;;;1001::164;-1:-1:-1;;;;;;;;;;;250:64:1;4298:9:143;;974:18:164;;4298:41:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4349:22:143;;-1:-1:-1;;;4349:22:143;;4359:11;;;4349:22;;;1001:41:164;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;4349:9:143;;-1:-1:-1;974:18:164;;4349:22:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4441:7:143;;4432:17;;-1:-1:-1;;;4432:17:143;;4382:24;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;4432:8:143;;:17;;-1:-1:-1;;;;;4441:7:143;;;;4432:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4459:5:143;;4506:4;;4459:61;;-1:-1:-1;;;4459:61:143;;-1:-1:-1;;;;;4459:5:143;;;;-1:-1:-1;4459:28:143;;-1:-1:-1;4459:61:143;;4488:16;;4506:4;;4512:7;;4459:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4531:16;4586:41;;;4641:16;4550:117;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4550:117:143;;;;;;;;;;;;;;-1:-1:-1;;;;;4550:117:143;-1:-1:-1;;;;;;4550:117:143;;;;;;;;;;4677:20;;-1:-1:-1;;;4677:20:143;;4550:117;;-1:-1:-1;;;;;;;;;;;;250:64:1;4677:15:143;;:20;;4550:117;;4677:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4707:26:143;;-1:-1:-1;;;4707:26:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;4707:8:143;;-1:-1:-1;4707:26:143;;4716:16;;4707:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4743:5:143;;4759:4;;4743:30;;-1:-1:-1;;;4743:30:143;;-1:-1:-1;;;;;4743:5:143;;;;-1:-1:-1;4743:15:143;;-1:-1:-1;4743:30:143;;4759:4;;;;4765:7;;4743:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4288:492;;4216:564;:::o;8928:1295::-;9048:5;;:14;;;-1:-1:-1;;;9048:14:143;;;;9039:30;;-1:-1:-1;;;;;9048:5:143;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9064:4;9039:8;:30::i;:::-;9242:8;;9151:109;;9132:16;;-1:-1:-1;;;9187:41:143;9151:109;;-1:-1:-1;;;;;9242:8:143;;9151:109;;;:::i;:::-;;;;-1:-1:-1;;9151:109:143;;;;;;;;;;;;;;-1:-1:-1;;;;;9151:109:143;-1:-1:-1;;;;;;9151:109:143;;;;;;;;;;9270:20;;-1:-1:-1;;;9270:20:143;;9151:109;;-1:-1:-1;;;;;;;;;;;;250:64:1;9270:15:143;;:20;;9151:109;;9270:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9309:8:143;;9300:18;;-1:-1:-1;;;9300:18:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;9300:8:143;;-1:-1:-1;9300:18:143;;-1:-1:-1;;;;;9309:8:143;;9300:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9328:5;;;;;;;;;-1:-1:-1;;;;;9328:5:143;-1:-1:-1;;;;;9328:16:143;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9357:30;9366:5;;;;;;;;;-1:-1:-1;;;;;9366:5:143;-1:-1:-1;;;;;9366:12:143;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9357:30;9448:7;;9439:17;;-1:-1:-1;;;9439:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;9439:8:143;;:17;;-1:-1:-1;;;;;9448:7:143;;9439:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9466:5;;;;;;;;;-1:-1:-1;;;;;9466:5:143;-1:-1:-1;;;;;9466:16:143;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9495:31;9504:5;;;;;;;;;-1:-1:-1;;;;;9504:5:143;-1:-1:-1;;;;;9504:12:143;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9520:5;9495:8;:31::i;:::-;9639:7;;9630:17;;-1:-1:-1;;;9630:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;9630:8:143;;:17;;-1:-1:-1;;;;;9639:7:143;;9630:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9657:5;;;;;;;;;-1:-1:-1;;;;;9657:5:143;-1:-1:-1;;;;;9657:16:143;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9686:31;9695:5;;;;;;;;;-1:-1:-1;;;;;9695:5:143;-1:-1:-1;;;;;9695:12:143;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9686:31;9780:20;;-1:-1:-1;;;9780:20:143;;-1:-1:-1;;;;;;;;;;;250:64:1;9780:15:143;;:20;;9796:3;;9780:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9819:8:143;;9810:18;;-1:-1:-1;;;9810:18:143;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;9810:8:143;;-1:-1:-1;9810:18:143;;-1:-1:-1;;;;;9819:8:143;;9810:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9838:5;;;;;;;;;-1:-1:-1;;;;;9838:5:143;-1:-1:-1;;;;;9838:14:143;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9865:31;9874:5;;;;;;;;;-1:-1:-1;;;;;9874:5:143;-1:-1:-1;;;;;9874:12:143;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9865:31;9957:7;;9948:17;;-1:-1:-1;;;9948:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;9948:8:143;;:17;;-1:-1:-1;;;;;9957:7:143;;9948:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9975:5;;;;;;;;;-1:-1:-1;;;;;9975:5:143;-1:-1:-1;;;;;9975:14:143;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10002:30;10011:5;;;;;;;;;-1:-1:-1;;;;;10011:5:143;-1:-1:-1;;;;;10011:12:143;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10002:30;10141:7;;10132:17;;-1:-1:-1;;;10132:17:143;;-1:-1:-1;;;;;;;;;;;250:64:1;10132:8:143;;:17;;-1:-1:-1;;;;;10141:7:143;;10132:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10159:5;;;;;;;;;-1:-1:-1;;;;;10159:5:143;-1:-1:-1;;;;;10159:14:143;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10186:30;10195:5;;;;;;;;;-1:-1:-1;;;;;10195:5:143;-1:-1:-1;;;;;10195:12:143;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5209:262:0;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:0;;;;8523:2:164;8505:21;;;8562:2;8542:18;;;8535:30;8601:34;8596:2;8581:18;;8574:62;-1:-1:-1;;;8667:2:164;8652:18;;8645:32;8709:3;8694:19;;8321:398;5293:41:0;;;;;;;;-1:-1:-1;;;;;;;;;;;5382:1:0;5353:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5432:1:0;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;4567:82::-;4628:14;4637:1;4640;4628:8;:14::i;2847:242::-;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;;;2847:242::o;8050:326:3:-;8112:1;8107:6;;:1;:6;;;8103:267;;-1:-1:-1;;;;;;;;;;;8134:57:3;;;;9960:2:164;9942:21;;;9999:2;9979:18;;;9972:30;10038:34;10033:2;10018:18;;10011:62;-1:-1:-1;;;10104:2:164;10089:18;;10082:32;10146:3;10131:19;;9758:398;8134:57:3;;;;;;;;-1:-1:-1;;;;;;;;;;;8244:1:3;:20;;;;;;;;;;;;;;;-1:-1:-1;;;8244:20:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8244:20:3;;;;8210:55;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;8318:1:3;:20;;;;;;;;;;;;;;;-1:-1:-1;;;8318:20:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8318:20:3;;;;8284:55;;;;;;:::i;2409:432:0:-;2456:16;:14;:16::i;:::-;2452:359;;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:0;;;11277:51:164;;;-1:-1:-1;;;11344:18:164;;;11337:34;;;;2712:4:0;11387:18:164;;;11380:34;2489:11:0;;1671:64;2586:43;;11250:18:164;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;4095:277::-;4163:1;4158;:6;4154:212;;-1:-1:-1;;;;;;;;;;;4185:44:0;;;;11627:2:164;11609:21;;;11666:2;11646:18;;;11639:30;11705:34;11700:2;11685:18;;11678:62;-1:-1:-1;;;11771:2:164;11756:18;;11749:35;11816:3;11801:19;;11425:401;4185:44:0;;;;;;;;-1:-1:-1;;;;;;;;;;;4280:1:0;4248:34;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;4333:1:0;4301:34;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:203:164:-;-1:-1:-1;;;;;178:32:164;;;;160:51;;148:2;133:18;;14:203::o;222:180::-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:164;;222:180;-1:-1:-1;222:180:164:o;2167:438::-;2340:2;2325:18;;2373:1;2362:13;;2352:144;;2418:10;2413:3;2409:20;2406:1;2399:31;2453:4;2450:1;2443:15;2481:4;2478:1;2471:15;2352:144;2505:25;;;-1:-1:-1;;;;;2566:32:164;;;;2561:2;2546:18;;;2539:60;2167:438;:::o;2610:258::-;2682:1;2692:113;2706:6;2703:1;2700:13;2692:113;;;2782:11;;;2776:18;2763:11;;;2756:39;2728:2;2721:10;2692:113;;;2823:6;2820:1;2817:13;2814:48;;;-1:-1:-1;;2858:1:164;2840:16;;2833:27;2610:258::o;2873:::-;2915:3;2953:5;2947:12;2980:6;2975:3;2968:19;2996:63;3052:6;3045:4;3040:3;3036:14;3029:4;3022:5;3018:16;2996:63;:::i;:::-;3113:2;3092:15;-1:-1:-1;;3088:29:164;3079:39;;;;3120:4;3075:50;;2873:258;-1:-1:-1;;2873:258:164:o;3136:341::-;-1:-1:-1;;;;;3337:32:164;;3319:51;;3406:2;3401;3386:18;;3379:30;;;-1:-1:-1;;3426:45:164;;3452:18;;3444:6;3426:45;:::i;:::-;3418:53;3136:341;-1:-1:-1;;;;3136:341:164:o;3482:290::-;3552:6;3605:2;3593:9;3584:7;3580:23;3576:32;3573:52;;;3621:1;3618;3611:12;3573:52;3647:16;;-1:-1:-1;;;;;3692:31:164;;3682:42;;3672:70;;3738:1;3735;3728:12;3672:70;3761:5;3482:290;-1:-1:-1;;;3482:290:164:o;4105:274::-;-1:-1:-1;;;;;4297:32:164;;;;4279:51;;4361:2;4346:18;;4339:34;4267:2;4252:18;;4105:274::o;4384:394::-;-1:-1:-1;;;;;4661:15:164;;;4643:34;;4713:15;;;;4708:2;4693:18;;4686:43;4760:2;4745:18;;4738:34;;;;4593:2;4578:18;;4384:394::o;4783:323::-;-1:-1:-1;;;;;5032:15:164;;;5014:34;;5084:15;;5079:2;5064:18;;5057:43;4964:2;4949:18;;4783:323::o;5111:184::-;5181:6;5234:2;5222:9;5213:7;5209:23;5205:32;5202:52;;;5250:1;5247;5240:12;5202:52;-1:-1:-1;5273:16:164;;5111:184;-1:-1:-1;5111:184:164:o;6333:218::-;6480:2;6469:9;6462:21;6443:4;6500:45;6541:2;6530:9;6526:18;6518:6;6500:45;:::i;6556:217::-;6596:1;6622;6612:132;;6666:10;6661:3;6657:20;6654:1;6647:31;6701:4;6698:1;6691:15;6729:4;6726:1;6719:15;6612:132;-1:-1:-1;6758:9:164;;6556:217::o;6778:322::-;6877:6;6930:2;6918:9;6909:7;6905:23;6901:32;6898:52;;;6946:1;6943;6936:12;6898:52;6972:16;;-1:-1:-1;;;;;;7017:34:164;;7007:45;;6997:73;;7066:1;7063;7056:12;7105:277;7172:6;7225:2;7213:9;7204:7;7200:23;7196:32;7193:52;;;7241:1;7238;7231:12;7193:52;7273:9;7267:16;7326:5;7319:13;7312:21;7305:5;7302:32;7292:60;;7348:1;7345;7338:12;7666:371;-1:-1:-1;;;;;;7851:33:164;;7839:46;;7908:13;;7821:3;;7930:61;7908:13;7980:1;7971:11;;7964:4;7952:17;;7930:61;:::i;:::-;8011:16;;;;8029:1;8007:24;;7666:371;-1:-1:-1;;;7666:371:164:o;8042:274::-;8171:3;8209:6;8203:13;8225:53;8271:6;8266:3;8259:4;8251:6;8247:17;8225:53;:::i;:::-;8294:16;;;;;8042:274;-1:-1:-1;;8042:274:164:o;8888:348::-;9118:2;9107:9;9100:21;9081:4;9138:49;9183:2;9172:9;9168:18;8801:2;8789:15;;-1:-1:-1;;;8829:4:164;8820:14;;8813:36;8874:2;8865:12;;8724:159;9138:49;9130:57;;9223:6;9218:2;9207:9;9203:18;9196:34;8888:348;;;;:::o;9405:::-;9635:2;9624:9;9617:21;9598:4;9655:49;9700:2;9689:9;9685:18;9318:2;9306:15;;-1:-1:-1;;;9346:4:164;9337:14;;9330:36;9391:2;9382:12;;9241:159;10161:452;10411:2;10400:9;10393:21;10450:2;10445;10434:9;10430:18;10423:30;-1:-1:-1;;;10484:2:164;10473:9;10469:18;10462:40;10540:3;10533:4;10522:9;10518:20;10511:33;10374:4;10561:46;10602:3;10591:9;10587:19;10579:6;10561:46;:::i;10618:452::-;10868:2;10857:9;10850:21;10907:2;10902;10891:9;10887:18;10880:30;-1:-1:-1;;;10941:2:164;10930:9;10926:18;10919:40;10997:3;10990:4;10979:9;10975:20;10968:33;10831:4;11018:46;11059:3;11048:9;11044:19;11036:6;11018:46;:::i",
    "linkReferences": {
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "ModuleTestFixtureGenerator": [
          {
            "start": 1261,
            "length": 20
          },
          {
            "start": 1553,
            "length": 20
          },
          {
            "start": 1832,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "TRSRY()": "80cee4ab",
    "debtor()": "9cb64a2d",
    "failed()": "ba414fa6",
    "godmode()": "0e375e40",
    "ngmi()": "fb223f18",
    "setUp()": "0a9254e4",
    "testCorrectness_ApprovedCanWithdrawToken(uint256)": "0fa89a3b",
    "testCorrectness_ClearDebt()": "18b9d8c8",
    "testCorrectness_DecreaseWithdrawApproval(uint256)": "a785dfa8",
    "testCorrectness_GetReserveBalance()": "a1fbc673",
    "testCorrectness_IncreaseWithdrawApproval(uint256)": "2ba22b18",
    "testCorrectness_IncurDebt(uint256)": "5bdb8b04",
    "testCorrectness_KEYCODE()": "628a7987",
    "testCorrectness_RepayDebt(uint256)": "6411193d",
    "testCorrectness_SetDebt()": "82e3ea44",
    "testCorrectness_Shutdown(uint256)": "bcf643cd",
    "testRevert_AddressWithPermCannotShutdownOrRestart()": "cf18f8d3",
    "testRevert_UnauthorizedCannotIncurDebt(uint256)": "cee39755",
    "testRevert_UnauthorizedCannotWithdrawToken(uint256)": "62e12a7d",
    "testRevert_UnauthorizedPolicyCannotSetDebt()": "437e7dfd",
    "testUser()": "c5c680f3",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRSRY\",\"outputs\":[{\"internalType\":\"contract GoerliDaoTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"godmode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ngmi\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_ApprovedCanWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_ClearDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_DecreaseWithdrawApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_GetReserveBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_IncreaseWithdrawApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_IncurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_KEYCODE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_RepayDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_SetDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_Shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRevert_AddressWithPermCannotShutdownOrRestart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testRevert_UnauthorizedCannotIncurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testRevert_UnauthorizedCannotWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRevert_UnauthorizedPolicyCannotSetDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/modules/TRSRY.t.sol\":\"TRSRYTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/external/GDAO.sol\":{\"keccak256\":\"0xd7e42b8087ae13691843e745d464e1bdcbdd5f32d1de6ad12b93c9b39bc07482\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cab6f74c61f5687c44afeab1a3daac57a403029ce1597dbccdebf06fd24349e9\",\"dweb:/ipfs/QmTVhnMyRiHy6hKQHYwbvy86JeyWLRwWo39N5oPRFRwfSD\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x096deeb4877195b4c1b5394e8cbbd1e3d9070783f79ccaf043531b7ec895ff2e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ecf06f8740e0264486e82bf55dd05e543c4f52dc8541525ec0bec2ef06b63ff1\",\"dweb:/ipfs/QmSqKpVyNCMD1TMLZBKkV7qDeZ9PXQ1P8UES3NBx87sXqw\"]},\"src/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xe3b7a1bbf49e6d1ab40ecef4ef8f470a79ad182b58786979ac86e3ddad2dad7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74925dc0f01a068093f24a31cf1d99369f98b2353bb09da6a6f32e46e54b2a9d\",\"dweb:/ipfs/QmWcYX9F4PWXH9xK7fcuYQ42v2kRUPn9JFBeW3q1t2NCkS\"]},\"src/interfaces/IGDAO.sol\":{\"keccak256\":\"0x9572551a9a7b36afdf3ac2a97518e48e4363ac0c81f0473a2c2a663067e2308b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a88cbb89da52bd327e846308445844c30b30a80b6964b6b3cd2e48fb26241ec\",\"dweb:/ipfs/QmW86zeA95Wne5BVayzCEwbdpaEzPay9PAxN9a1f9uVEX1\"]},\"src/interfaces/IOlympusAuthority.sol\":{\"keccak256\":\"0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737\",\"dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ\"]},\"src/libraries/Counters.sol\":{\"keccak256\":\"0x3db0dd754ff3e2b8d504af8aa9b1b85a3c440aa447a0974ba3901178546af57e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4624e8fe2437ae9b04de164e81a778297990a8433e285b1a86d8e7b4b15d7057\",\"dweb:/ipfs/QmUgKnMwCCqchK4Zd9JAchgfBaCg6nZdCp9L57EPpNyWr3\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/TRSRY/GoerliDaoTreasury.sol\":{\"keccak256\":\"0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471\",\"dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c\"]},\"src/modules/TRSRY/TRSRY.v1.sol\":{\"keccak256\":\"0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2\",\"dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC\"]},\"src/test/lib/ModuleTestFixtureGenerator.sol\":{\"keccak256\":\"0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619\",\"dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/lib/quabi/Quabi.sol\":{\"keccak256\":\"0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751\",\"dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm\"]},\"src/test/modules/TRSRY.t.sol\":{\"keccak256\":\"0x0fc150657dda09fa7a4e283d13e091d15294905048f99fad96b385e66945ea27\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://02af253f4e732cac935b71d088f8dc823ccdc07a7587482b96a9e2ded9db3882\",\"dweb:/ipfs/QmZtJYzRcPGGxKefRzLSAWfHxgFToUYhMVjfyh5UVH5nXC\"]},\"src/types/ERC20.sol\":{\"keccak256\":\"0xf659b2d3d3be5a808b45021268c57e2d3a5a9bd87d36b7f9b6877d03deac2662\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://f22362608bed26edd6f990b8777da22b77206252f1bb58cb62203541740cf737\",\"dweb:/ipfs/Qma4WJZoM9wJaMyoz7APFVpJhDuE6segUJmSAvmuALTn6q\"]},\"src/types/ERC20Permit.sol\":{\"keccak256\":\"0x1cdab61e842ec33dbba5d1d52e2ff874335be4332162a8ecad490fb928907b9f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://13dd204d01698dbfd4879c9d9d305644224d2c62a778ca36d5b844c366ae57ce\",\"dweb:/ipfs/QmPjbDrqcmXGNcrW7WWTtUB5zoDF9qfAe1fNZVaftjJHWZ\"]},\"src/types/OlympusAccessControlled.sol\":{\"keccak256\":\"0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1\",\"dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRSRY",
          "outputs": [
            {
              "internalType": "contract GoerliDaoTreasury",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "debtor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "godmode",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ngmi",
          "outputs": [
            {
              "internalType": "contract MockERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_ApprovedCanWithdrawToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_ClearDebt"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_DecreaseWithdrawApproval"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_GetReserveBalance"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_IncreaseWithdrawApproval"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_IncurDebt"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_KEYCODE"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_RepayDebt"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_SetDebt"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_Shutdown"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_AddressWithPermCannotShutdownOrRestart"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_UnauthorizedCannotIncurDebt"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_UnauthorizedCannotWithdrawToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRevert_UnauthorizedPolicyCannotSetDebt"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/modules/TRSRY.t.sol": "TRSRYTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/GDAO.sol": {
        "keccak256": "0xd7e42b8087ae13691843e745d464e1bdcbdd5f32d1de6ad12b93c9b39bc07482",
        "urls": [
          "bzz-raw://cab6f74c61f5687c44afeab1a3daac57a403029ce1597dbccdebf06fd24349e9",
          "dweb:/ipfs/QmTVhnMyRiHy6hKQHYwbvy86JeyWLRwWo39N5oPRFRwfSD"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x096deeb4877195b4c1b5394e8cbbd1e3d9070783f79ccaf043531b7ec895ff2e",
        "urls": [
          "bzz-raw://ecf06f8740e0264486e82bf55dd05e543c4f52dc8541525ec0bec2ef06b63ff1",
          "dweb:/ipfs/QmSqKpVyNCMD1TMLZBKkV7qDeZ9PXQ1P8UES3NBx87sXqw"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IERC20Permit.sol": {
        "keccak256": "0xe3b7a1bbf49e6d1ab40ecef4ef8f470a79ad182b58786979ac86e3ddad2dad7c",
        "urls": [
          "bzz-raw://74925dc0f01a068093f24a31cf1d99369f98b2353bb09da6a6f32e46e54b2a9d",
          "dweb:/ipfs/QmWcYX9F4PWXH9xK7fcuYQ42v2kRUPn9JFBeW3q1t2NCkS"
        ],
        "license": "MIT"
      },
      "src/interfaces/IGDAO.sol": {
        "keccak256": "0x9572551a9a7b36afdf3ac2a97518e48e4363ac0c81f0473a2c2a663067e2308b",
        "urls": [
          "bzz-raw://6a88cbb89da52bd327e846308445844c30b30a80b6964b6b3cd2e48fb26241ec",
          "dweb:/ipfs/QmW86zeA95Wne5BVayzCEwbdpaEzPay9PAxN9a1f9uVEX1"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOlympusAuthority.sol": {
        "keccak256": "0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25",
        "urls": [
          "bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737",
          "dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/Counters.sol": {
        "keccak256": "0x3db0dd754ff3e2b8d504af8aa9b1b85a3c440aa447a0974ba3901178546af57e",
        "urls": [
          "bzz-raw://4624e8fe2437ae9b04de164e81a778297990a8433e285b1a86d8e7b4b15d7057",
          "dweb:/ipfs/QmUgKnMwCCqchK4Zd9JAchgfBaCg6nZdCp9L57EPpNyWr3"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/GoerliDaoTreasury.sol": {
        "keccak256": "0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc",
        "urls": [
          "bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471",
          "dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/TRSRY.v1.sol": {
        "keccak256": "0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1",
        "urls": [
          "bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2",
          "dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "keccak256": "0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a",
        "urls": [
          "bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619",
          "dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/lib/quabi/Quabi.sol": {
        "keccak256": "0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9",
        "urls": [
          "bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751",
          "dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/modules/TRSRY.t.sol": {
        "keccak256": "0x0fc150657dda09fa7a4e283d13e091d15294905048f99fad96b385e66945ea27",
        "urls": [
          "bzz-raw://02af253f4e732cac935b71d088f8dc823ccdc07a7587482b96a9e2ded9db3882",
          "dweb:/ipfs/QmZtJYzRcPGGxKefRzLSAWfHxgFToUYhMVjfyh5UVH5nXC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/types/ERC20.sol": {
        "keccak256": "0xf659b2d3d3be5a808b45021268c57e2d3a5a9bd87d36b7f9b6877d03deac2662",
        "urls": [
          "bzz-raw://f22362608bed26edd6f990b8777da22b77206252f1bb58cb62203541740cf737",
          "dweb:/ipfs/Qma4WJZoM9wJaMyoz7APFVpJhDuE6segUJmSAvmuALTn6q"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/types/ERC20Permit.sol": {
        "keccak256": "0x1cdab61e842ec33dbba5d1d52e2ff874335be4332162a8ecad490fb928907b9f",
        "urls": [
          "bzz-raw://13dd204d01698dbfd4879c9d9d305644224d2c62a778ca36d5b844c366ae57ce",
          "dweb:/ipfs/QmPjbDrqcmXGNcrW7WWTtUB5zoDF9qfAe1fNZVaftjJHWZ"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/types/OlympusAccessControlled.sol": {
        "keccak256": "0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf",
        "urls": [
          "bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1",
          "dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/modules/TRSRY.t.sol",
    "id": 80853,
    "exportedSymbols": {
      "Actions": [
        29387
      ],
      "GDAO": [
        38187
      ],
      "GoerliDaoTreasury": [
        47112
      ],
      "Instruction": [
        29393
      ],
      "InvalidKeycode": [
        29410
      ],
      "Kernel": [
        30536
      ],
      "KernelAdapter": [
        29551
      ],
      "Keycode": [
        29401
      ],
      "MockERC20": [
        28095
      ],
      "Module": [
        29616
      ],
      "ModuleTestFixtureGenerator": [
        59625
      ],
      "Permissions": [
        29399
      ],
      "Policy": [
        29698
      ],
      "TRSRYTest": [
        80852
      ],
      "TRSRYv1": [
        47345
      ],
      "TargetNotAContract": [
        29405
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        59746
      ],
      "console": [
        23663
      ],
      "ensureContract": [
        29454
      ],
      "ensureValidKeycode": [
        29499
      ],
      "fromKeycode": [
        29438
      ],
      "toKeycode": [
        29424
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:10184:143",
    "nodes": [
      {
        "id": 79640,
        "nodeType": "PragmaDirective",
        "src": "42:23:143",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 79642,
        "nodeType": "ImportDirective",
        "src": "67:40:143",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79641,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "75:4:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79644,
        "nodeType": "ImportDirective",
        "src": "108:53:143",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 59747,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79643,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59746,
              "src": "116:11:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79646,
        "nodeType": "ImportDirective",
        "src": "162:59:143",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79645,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "170:8:143",
              "typeDescriptions": {}
            },
            "local": "console",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79648,
        "nodeType": "ImportDirective",
        "src": "222:83:143",
        "nodes": [],
        "absolutePath": "src/test/lib/ModuleTestFixtureGenerator.sol",
        "file": "test/lib/ModuleTestFixtureGenerator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 59626,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79647,
              "name": "ModuleTestFixtureGenerator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59625,
              "src": "230:26:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79650,
        "nodeType": "ImportDirective",
        "src": "307:65:143",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 28096,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79649,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28095,
              "src": "315:9:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79652,
        "nodeType": "ImportDirective",
        "src": "373:43:143",
        "nodes": [],
        "absolutePath": "src/external/GDAO.sol",
        "file": "src/external/GDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 38188,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79651,
              "name": "GDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38187,
              "src": "381:4:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79654,
        "nodeType": "ImportDirective",
        "src": "479:74:143",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "file": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 47113,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79653,
              "name": "GoerliDaoTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47112,
              "src": "487:17:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79656,
        "nodeType": "ImportDirective",
        "src": "554:55:143",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/TRSRY.v1.sol",
        "file": "src/modules/TRSRY/TRSRY.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 47346,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79655,
              "name": "TRSRYv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47345,
              "src": "562:7:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79657,
        "nodeType": "ImportDirective",
        "src": "611:24:143",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80853,
        "sourceUnit": 30537,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 80852,
        "nodeType": "ContractDefinition",
        "src": "637:9588:143",
        "nodes": [
          {
            "id": 79663,
            "nodeType": "UsingForDirective",
            "src": "670:55:143",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 79660,
              "name": "ModuleTestFixtureGenerator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59625,
              "src": "676:26:143"
            },
            "typeName": {
              "id": 79662,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79661,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47112,
                "src": "707:17:143"
              },
              "referencedDeclaration": 47112,
              "src": "707:17:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                "typeString": "contract GoerliDaoTreasury"
              }
            }
          },
          {
            "id": 79666,
            "nodeType": "VariableDeclaration",
            "src": "731:22:143",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "747:6:143",
            "scope": 80852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$30536",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 79665,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79664,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30536,
                "src": "731:6:143"
              },
              "referencedDeclaration": 30536,
              "src": "731:6:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$30536",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 79669,
            "nodeType": "VariableDeclaration",
            "src": "759:30:143",
            "nodes": [],
            "constant": false,
            "functionSelector": "80cee4ab",
            "mutability": "mutable",
            "name": "TRSRY",
            "nameLocation": "784:5:143",
            "scope": 80852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
              "typeString": "contract GoerliDaoTreasury"
            },
            "typeName": {
              "id": 79668,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79667,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47112,
                "src": "759:17:143"
              },
              "referencedDeclaration": 47112,
              "src": "759:17:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                "typeString": "contract GoerliDaoTreasury"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79672,
            "nodeType": "VariableDeclaration",
            "src": "795:21:143",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb223f18",
            "mutability": "mutable",
            "name": "ngmi",
            "nameLocation": "812:4:143",
            "scope": 80852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28095",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 79671,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79670,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28095,
                "src": "795:9:143"
              },
              "referencedDeclaration": 28095,
              "src": "795:9:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28095",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79674,
            "nodeType": "VariableDeclaration",
            "src": "822:23:143",
            "nodes": [],
            "constant": false,
            "functionSelector": "c5c680f3",
            "mutability": "mutable",
            "name": "testUser",
            "nameLocation": "837:8:143",
            "scope": 80852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79673,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "822:7:143",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79676,
            "nodeType": "VariableDeclaration",
            "src": "851:22:143",
            "nodes": [],
            "constant": false,
            "functionSelector": "0e375e40",
            "mutability": "mutable",
            "name": "godmode",
            "nameLocation": "866:7:143",
            "scope": 80852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "851:7:143",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79678,
            "nodeType": "VariableDeclaration",
            "src": "879:21:143",
            "nodes": [],
            "constant": false,
            "functionSelector": "9cb64a2d",
            "mutability": "mutable",
            "name": "debtor",
            "nameLocation": "894:6:143",
            "scope": 80852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79677,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "879:7:143",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79681,
            "nodeType": "VariableDeclaration",
            "src": "907:55:143",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "INITIAL_TOKEN_AMOUNT",
            "nameLocation": "933:20:143",
            "scope": 80852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79679,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:143",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030653138",
              "id": 79680,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "956:6:143",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100e18"
            },
            "visibility": "internal"
          },
          {
            "id": 79784,
            "nodeType": "FunctionDefinition",
            "src": "969:843:143",
            "nodes": [],
            "body": {
              "id": 79783,
              "nodeType": "Block",
              "src": "993:819:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79684,
                      "name": "kernel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79666,
                      "src": "1003:6:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Kernel_$30536",
                        "typeString": "contract Kernel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 79687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1012:10:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$30536_$",
                          "typeString": "function () returns (contract Kernel)"
                        },
                        "typeName": {
                          "id": 79686,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 79685,
                            "name": "Kernel",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30536,
                            "src": "1016:6:143"
                          },
                          "referencedDeclaration": 30536,
                          "src": "1016:6:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$30536",
                            "typeString": "contract Kernel"
                          }
                        }
                      },
                      "id": 79688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1012:12:143",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Kernel_$30536",
                        "typeString": "contract Kernel"
                      }
                    },
                    "src": "1003:21:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$30536",
                      "typeString": "contract Kernel"
                    }
                  },
                  "id": 79690,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:21:143"
                },
                {
                  "expression": {
                    "id": 79697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79691,
                      "name": "TRSRY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79669,
                      "src": "1034:5:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                        "typeString": "contract GoerliDaoTreasury"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79695,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79666,
                          "src": "1064:6:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$30536",
                            "typeString": "contract Kernel"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Kernel_$30536",
                            "typeString": "contract Kernel"
                          }
                        ],
                        "id": 79694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1042:21:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$30536_$returns$_t_contract$_GoerliDaoTreasury_$47112_$",
                          "typeString": "function (contract Kernel) returns (contract GoerliDaoTreasury)"
                        },
                        "typeName": {
                          "id": 79693,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 79692,
                            "name": "GoerliDaoTreasury",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47112,
                            "src": "1046:17:143"
                          },
                          "referencedDeclaration": 47112,
                          "src": "1046:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        }
                      },
                      "id": 79696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1042:29:143",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                        "typeString": "contract GoerliDaoTreasury"
                      }
                    },
                    "src": "1034:37:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                      "typeString": "contract GoerliDaoTreasury"
                    }
                  },
                  "id": 79698,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:37:143"
                },
                {
                  "expression": {
                    "id": 79707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79699,
                      "name": "ngmi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79672,
                      "src": "1081:4:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28095",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6e6f7420676f6e6e61206d616b65206974",
                          "id": 79703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1102:19:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0c47861d48f25a2a7c8e92029e95a6ee2d7345881fa2ba8aa46ded3318b11333",
                            "typeString": "literal_string \"not gonna make it\""
                          },
                          "value": "not gonna make it"
                        },
                        {
                          "hexValue": "4e474d49",
                          "id": 79704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1123:6:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_623ce23a6ca9529b6f6b1cc5e6641bb77bf579711c58bd36735620075a4bc116",
                            "typeString": "literal_string \"NGMI\""
                          },
                          "value": "NGMI"
                        },
                        {
                          "hexValue": "3138",
                          "id": 79705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1131:2:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_0c47861d48f25a2a7c8e92029e95a6ee2d7345881fa2ba8aa46ded3318b11333",
                            "typeString": "literal_string \"not gonna make it\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_623ce23a6ca9529b6f6b1cc5e6641bb77bf579711c58bd36735620075a4bc116",
                            "typeString": "literal_string \"NGMI\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 79702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1088:13:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28095_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 79701,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 79700,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28095,
                            "src": "1092:9:143"
                          },
                          "referencedDeclaration": 28095,
                          "src": "1092:9:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28095",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 79706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1088:46:143",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28095",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1081:53:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28095",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 79708,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:53:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79712,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29387,
                          "src": "1165:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 79713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "InstallModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29381,
                        "src": "1165:21:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 79716,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "1196:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 79715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1188:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79714,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1188:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79709,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79666,
                        "src": "1144:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$30536",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 79711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29970,
                      "src": "1144:20:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 79718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:59:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79719,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:59:143"
                },
                {
                  "expression": {
                    "id": 79728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79720,
                      "name": "godmode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79676,
                      "src": "1294:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 79724,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47112,
                                "src": "1338:17:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$47112_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$47112_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              ],
                              "id": 79723,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1333:4:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 79725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1333:23:143",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "type(contract GoerliDaoTreasury)"
                            }
                          },
                          "id": 79726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "src": "1333:28:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 79721,
                          "name": "TRSRY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79669,
                          "src": "1304:5:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "id": 79722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generateGodmodeFixture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59496,
                        "src": "1304:28:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$29616_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_contract$_Module_$29616_$",
                          "typeString": "function (contract Module,string memory) returns (address)"
                        }
                      },
                      "id": 79727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1304:58:143",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1294:68:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79729,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:68:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79733,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29387,
                          "src": "1393:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 79734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ActivatePolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29383,
                        "src": "1393:22:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "id": 79735,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "1417:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79730,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79666,
                        "src": "1372:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$30536",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 79732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29970,
                      "src": "1372:20:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 79736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:53:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79737,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:53:143"
                },
                {
                  "expression": {
                    "id": 79745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79738,
                      "name": "testUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79674,
                      "src": "1436:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 79741,
                              "name": "TRSRY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79669,
                              "src": "1477:5:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 79742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46785,
                            "src": "1477:22:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                              "typeString": "function (address,contract ERC20,uint256) external"
                            }
                          },
                          "id": 79743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1477:31:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 79739,
                          "name": "TRSRY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79669,
                          "src": "1447:5:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "id": 79740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generateFunctionFixture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59598,
                        "src": "1447:29:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$29616_$_t_bytes4_$returns$_t_address_$bound_to$_t_contract$_Module_$29616_$",
                          "typeString": "function (contract Module,bytes4) returns (address)"
                        }
                      },
                      "id": 79744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1447:62:143",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1436:73:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79746,
                  "nodeType": "ExpressionStatement",
                  "src": "1436:73:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79750,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29387,
                          "src": "1540:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 79751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ActivatePolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29383,
                        "src": "1540:22:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "id": 79752,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "1564:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79747,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79666,
                        "src": "1519:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$30536",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 79749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29970,
                      "src": "1519:20:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 79753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:54:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79754,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:54:143"
                },
                {
                  "expression": {
                    "id": 79763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79755,
                      "name": "debtor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79678,
                      "src": "1584:6:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 79759,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47112,
                                "src": "1627:17:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$47112_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$47112_$",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              ],
                              "id": 79758,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1622:4:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 79760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1622:23:143",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "type(contract GoerliDaoTreasury)"
                            }
                          },
                          "id": 79761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "src": "1622:28:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 79756,
                          "name": "TRSRY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79669,
                          "src": "1593:5:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "id": 79757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generateGodmodeFixture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59496,
                        "src": "1593:28:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$29616_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_contract$_Module_$29616_$",
                          "typeString": "function (contract Module,string memory) returns (address)"
                        }
                      },
                      "id": 79762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1593:58:143",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:67:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79764,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:67:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79768,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29387,
                          "src": "1682:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                            "typeString": "type(enum Actions)"
                          }
                        },
                        "id": 79769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ActivatePolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29383,
                        "src": "1682:22:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        }
                      },
                      {
                        "id": 79770,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "1706:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Actions_$29387",
                          "typeString": "enum Actions"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79765,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79666,
                        "src": "1661:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$30536",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 79767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29970,
                      "src": "1661:20:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                        "typeString": "function (enum Actions,address) external"
                      }
                    },
                    "id": 79771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:52:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79772,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:52:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79778,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "1776:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 79777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1768:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79776,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1768:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1768:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79780,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "1784:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79773,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "1758:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 79775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28081,
                      "src": "1758:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 79781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:47:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79782,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:47:143"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "978:5:143",
            "parameters": {
              "id": 79682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:2:143"
            },
            "returnParameters": {
              "id": 79683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79798,
            "nodeType": "FunctionDefinition",
            "src": "1818:111:143",
            "nodes": [],
            "body": {
              "id": 79797,
              "nodeType": "Block",
              "src": "1860:69:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5452535259",
                        "id": 79788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1881:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f6ea785a4ed24cdb38dd7c064320cd877af51c02f3a8cc7f179e714b8fd1f08",
                          "typeString": "literal_string \"TRSRY\""
                        },
                        "value": "TRSRY"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 79791,
                                "name": "TRSRY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79669,
                                "src": "1905:5:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              },
                              "id": 79792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "KEYCODE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46620,
                              "src": "1905:13:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_userDefinedValueType$_Keycode_$29401_$",
                                "typeString": "function () pure external returns (Keycode)"
                              }
                            },
                            "id": 79793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1905:15:143",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$29401",
                              "typeString": "Keycode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$29401",
                              "typeString": "Keycode"
                            }
                          ],
                          "expression": {
                            "id": 79789,
                            "name": "Keycode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29401,
                            "src": "1890:7:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Keycode_$29401_$",
                              "typeString": "type(Keycode)"
                            }
                          },
                          "id": 79790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "1890:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Keycode_$29401_$returns$_t_bytes5_$",
                            "typeString": "function (Keycode) pure returns (bytes5)"
                          }
                        },
                        "id": 79794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1890:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes5",
                          "typeString": "bytes5"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1f6ea785a4ed24cdb38dd7c064320cd877af51c02f3a8cc7f179e714b8fd1f08",
                          "typeString": "literal_string \"TRSRY\""
                        },
                        {
                          "typeIdentifier": "t_bytes5",
                          "typeString": "bytes5"
                        }
                      ],
                      "id": 79787,
                      "name": "assertEq32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        413,
                        429
                      ],
                      "referencedDeclaration": 413,
                      "src": "1870:10:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 79795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1870:52:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79796,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:52:143"
                }
              ]
            },
            "functionSelector": "628a7987",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_KEYCODE",
            "nameLocation": "1827:23:143",
            "parameters": {
              "id": 79785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:143"
            },
            "returnParameters": {
              "id": 79786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79827,
            "nodeType": "FunctionDefinition",
            "src": "1935:241:143",
            "nodes": [],
            "body": {
              "id": 79826,
              "nodeType": "Block",
              "src": "2009:167:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79806,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "2028:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79803,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2019:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2019:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79808,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79812,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "2077:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79813,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "2087:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 79814,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79800,
                        "src": "2093:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79809,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "2046:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 79811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46696,
                      "src": "2046:30:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 79815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:55:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79816,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:55:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79820,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79674,
                            "src": "2144:8:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 79821,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "2154:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 79818,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "2121:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 79819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawApproval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47209,
                          "src": "2121:22:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (address,contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 79822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2121:38:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79823,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79800,
                        "src": "2161:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79817,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2112:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:57:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79825,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:57:143"
                }
              ]
            },
            "functionSelector": "2ba22b18",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_IncreaseWithdrawApproval",
            "nameLocation": "1944:40:143",
            "parameters": {
              "id": 79801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79800,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1993:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 79827,
                  "src": "1985:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:17:143"
            },
            "returnParameters": {
              "id": 79802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79870,
            "nodeType": "FunctionDefinition",
            "src": "2182:328:143",
            "nodes": [],
            "body": {
              "id": 79869,
              "nodeType": "Block",
              "src": "2256:254:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79835,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "2275:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79832,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2266:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2266:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79837,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79841,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "2324:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79842,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "2334:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 79843,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79829,
                        "src": "2340:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79838,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "2293:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 79840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46696,
                      "src": "2293:30:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 79844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:55:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79845,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:55:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79849,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "2368:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79846,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2359:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2359:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79851,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79855,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "2417:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79856,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "2427:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 79857,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79829,
                        "src": "2433:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79852,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "2386:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 79854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46744,
                      "src": "2386:30:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 79858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2386:55:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79859,
                  "nodeType": "ExpressionStatement",
                  "src": "2386:55:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79863,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79674,
                            "src": "2484:8:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 79864,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "2494:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 79861,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "2461:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 79862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawApproval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47209,
                          "src": "2461:22:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (address,contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 79865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2461:38:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2501:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 79860,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2452:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2452:51:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79868,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:51:143"
                }
              ]
            },
            "functionSelector": "a785dfa8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_DecreaseWithdrawApproval",
            "nameLocation": "2191:40:143",
            "parameters": {
              "id": 79830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79829,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "2240:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 79870,
                  "src": "2232:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2232:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2231:17:143"
            },
            "returnParameters": {
              "id": 79831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2256:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79882,
            "nodeType": "FunctionDefinition",
            "src": "2516:130:143",
            "nodes": [],
            "body": {
              "id": 79881,
              "nodeType": "Block",
              "src": "2568:78:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79876,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "2611:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 79874,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "2587:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 79875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47111,
                          "src": "2587:23:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 79877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2587:29:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79878,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "2618:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79873,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2578:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2578:61:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79880,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:61:143"
                }
              ]
            },
            "functionSelector": "a1fbc673",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_GetReserveBalance",
            "nameLocation": "2525:33:143",
            "parameters": {
              "id": 79871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2558:2:143"
            },
            "returnParameters": {
              "id": 79872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79947,
            "nodeType": "FunctionDefinition",
            "src": "2652:443:143",
            "nodes": [],
            "body": {
              "id": 79946,
              "nodeType": "Block",
              "src": "2726:369:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 79892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79890,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79884,
                          "src": "2746:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 79891,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "2756:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2746:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79887,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2736:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "2736:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79894,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79898,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "2797:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79895,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2788:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2788:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79900,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79904,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "2846:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79905,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "2856:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 79906,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79884,
                        "src": "2862:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79901,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "2815:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 79903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46696,
                      "src": "2815:30:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 79907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:55:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79908,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:55:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79912,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79674,
                            "src": "2913:8:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 79913,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "2923:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 79910,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "2890:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 79911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawApproval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47209,
                          "src": "2890:22:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (address,contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 79914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2890:38:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79915,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79884,
                        "src": "2930:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79909,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2881:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:57:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79917,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:57:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79921,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "2958:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79918,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2949:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "2949:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2949:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79923,
                  "nodeType": "ExpressionStatement",
                  "src": "2949:18:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79929,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3008:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TRSRYTest_$80852",
                              "typeString": "contract TRSRYTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TRSRYTest_$80852",
                              "typeString": "contract TRSRYTest"
                            }
                          ],
                          "id": 79928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3000:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79927,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3000:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3000:13:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79931,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "3015:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 79932,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79884,
                        "src": "3021:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79924,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "2977:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 79926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46785,
                      "src": "2977:22:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 79933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:52:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79934,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:52:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79940,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3072:4:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TRSRYTest_$80852",
                                  "typeString": "contract TRSRYTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TRSRYTest_$80852",
                                  "typeString": "contract TRSRYTest"
                                }
                              ],
                              "id": 79939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3064:7:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79938,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3064:7:143",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3064:13:143",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 79936,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "3049:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 79937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "3049:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 79942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3049:29:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79943,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79884,
                        "src": "3080:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79935,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3040:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:48:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79945,
                  "nodeType": "ExpressionStatement",
                  "src": "3040:48:143"
                }
              ]
            },
            "functionSelector": "0fa89a3b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_ApprovedCanWithdrawToken",
            "nameLocation": "2661:40:143",
            "parameters": {
              "id": 79885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79884,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "2710:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 79947,
                  "src": "2702:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2701:17:143"
            },
            "returnParameters": {
              "id": 79886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79991,
            "nodeType": "FunctionDefinition",
            "src": "3238:350:143",
            "nodes": [],
            "body": {
              "id": 79990,
              "nodeType": "Block",
              "src": "3314:274:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 79957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79955,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79949,
                          "src": "3334:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 79956,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "3344:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3334:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79952,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3324:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3324:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79959,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 79965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79963,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79949,
                          "src": "3385:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 79964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3395:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3385:11:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79960,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3375:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3375:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:22:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79967,
                  "nodeType": "ExpressionStatement",
                  "src": "3375:22:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79968,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3474:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7097,
                      "src": "3474:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 79971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3474:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79972,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79976,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "3510:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79973,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3501:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "3501:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79978,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:18:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79984,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3560:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TRSRYTest_$80852",
                              "typeString": "contract TRSRYTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TRSRYTest_$80852",
                              "typeString": "contract TRSRYTest"
                            }
                          ],
                          "id": 79983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3552:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79982,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3552:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3552:13:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79986,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "3567:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 79987,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79949,
                        "src": "3573:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79979,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "3529:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 79981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46785,
                      "src": "3529:22:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 79988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3529:52:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79989,
                  "nodeType": "ExpressionStatement",
                  "src": "3529:52:143"
                }
              ]
            },
            "functionSelector": "62e12a7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_UnauthorizedCannotWithdrawToken",
            "nameLocation": "3247:42:143",
            "parameters": {
              "id": 79950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79949,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3298:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 79991,
                  "src": "3290:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3289:17:143"
            },
            "returnParameters": {
              "id": 79951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3314:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80073,
            "nodeType": "FunctionDefinition",
            "src": "3594:616:143",
            "nodes": [],
            "body": {
              "id": 80072,
              "nodeType": "Block",
              "src": "3653:557:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79999,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79993,
                          "src": "3673:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 80000,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "3683:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3673:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79996,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3663:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3663:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3663:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80003,
                  "nodeType": "ExpressionStatement",
                  "src": "3663:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80007,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79993,
                          "src": "3724:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3734:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3724:11:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80004,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3714:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "3714:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3714:22:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80011,
                  "nodeType": "ExpressionStatement",
                  "src": "3714:22:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80015,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "3756:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80012,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3747:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "3747:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3747:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80017,
                  "nodeType": "ExpressionStatement",
                  "src": "3747:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80021,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "3803:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80022,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "3811:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80023,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79993,
                        "src": "3817:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80018,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "3774:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46824,
                      "src": "3774:28:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3774:51:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80025,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:51:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80029,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "3845:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80026,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "3836:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "3836:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80031,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80035,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "3878:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80036,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79993,
                        "src": "3884:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80032,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "3862:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "3862:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80038,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:30:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80042,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "3927:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80040,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "3912:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "3912:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3912:22:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80044,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79993,
                        "src": "3936:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80039,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3903:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3903:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80046,
                  "nodeType": "ExpressionStatement",
                  "src": "3903:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80050,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "3981:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80051,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "3987:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80048,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "3963:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "3963:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3963:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80053,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79993,
                        "src": "3996:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80047,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3954:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:50:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80055,
                  "nodeType": "ExpressionStatement",
                  "src": "3954:50:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80059,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "4039:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 80057,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "4023:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47223,
                          "src": "4023:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 80060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4023:21:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80061,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79993,
                        "src": "4046:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80056,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4014:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:40:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80063,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:40:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80067,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "4175:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 80065,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "4151:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47111,
                          "src": "4151:23:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 80068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4151:29:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80069,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "4182:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80064,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4142:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4142:61:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80071,
                  "nodeType": "ExpressionStatement",
                  "src": "4142:61:143"
                }
              ]
            },
            "functionSelector": "5bdb8b04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_IncurDebt",
            "nameLocation": "3603:25:143",
            "parameters": {
              "id": 79994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79993,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3637:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 80073,
                  "src": "3629:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3628:17:143"
            },
            "returnParameters": {
              "id": 79995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3653:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80145,
            "nodeType": "FunctionDefinition",
            "src": "4216:564:143",
            "nodes": [],
            "body": {
              "id": 80144,
              "nodeType": "Block",
              "src": "4288:492:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80081,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80075,
                          "src": "4308:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 80082,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "4318:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4308:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80078,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4298:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4298:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4298:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80085,
                  "nodeType": "ExpressionStatement",
                  "src": "4298:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80089,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80075,
                          "src": "4359:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4369:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4359:11:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80086,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4349:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4349:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4349:22:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80093,
                  "nodeType": "ExpressionStatement",
                  "src": "4349:22:143"
                },
                {
                  "assignments": [
                    80095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80095,
                      "mutability": "mutable",
                      "name": "unapprovedPolicy",
                      "nameLocation": "4390:16:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 80144,
                      "src": "4382:24:143",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 80094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4382:7:143",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80100,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307830",
                        "id": 80098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4417:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4409:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 80096,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4409:7:143",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 80099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4409:12:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4382:39:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80104,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "4441:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80101,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4432:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4432:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80106,
                  "nodeType": "ExpressionStatement",
                  "src": "4432:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80110,
                        "name": "unapprovedPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80095,
                        "src": "4488:16:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80111,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "4506:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80112,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80075,
                        "src": "4512:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80107,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "4459:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46824,
                      "src": "4459:28:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:61:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80114,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:61:143"
                },
                {
                  "assignments": [
                    80116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80116,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "4544:3:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 80144,
                      "src": "4531:16:143",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80115,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80124,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 80119,
                            "name": "Module",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29616,
                            "src": "4586:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Module_$29616_$",
                              "typeString": "type(contract Module)"
                            }
                          },
                          "id": 80120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Module_PolicyNotPermitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29558,
                          "src": "4586:32:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                            "typeString": "function (address) pure"
                          }
                        },
                        "id": 80121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4586:41:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 80122,
                        "name": "unapprovedPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80095,
                        "src": "4641:16:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80117,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4550:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "4550:22:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 80123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:117:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:136:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80128,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80116,
                        "src": "4693:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80125,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4677:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "4677:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4677:20:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80130,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:20:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80134,
                        "name": "unapprovedPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80095,
                        "src": "4716:16:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80131,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4707:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4707:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4707:26:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80136,
                  "nodeType": "ExpressionStatement",
                  "src": "4707:26:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80140,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "4759:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80141,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80075,
                        "src": "4765:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80137,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "4743:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "4743:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80143,
                  "nodeType": "ExpressionStatement",
                  "src": "4743:30:143"
                }
              ]
            },
            "functionSelector": "cee39755",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_UnauthorizedCannotIncurDebt",
            "nameLocation": "4225:38:143",
            "parameters": {
              "id": 80076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80075,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4272:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 80145,
                  "src": "4264:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:17:143"
            },
            "returnParameters": {
              "id": 80077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4288:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80242,
            "nodeType": "FunctionDefinition",
            "src": "4786:610:143",
            "nodes": [],
            "body": {
              "id": 80241,
              "nodeType": "Block",
              "src": "4845:551:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80153,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80147,
                          "src": "4865:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4875:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4865:11:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80150,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4855:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4855:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:22:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80157,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:22:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80161,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80147,
                          "src": "4897:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 80162,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "4907:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4897:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80158,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4887:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "4887:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80165,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80169,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "4948:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80166,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4939:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4939:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80171,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80175,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "4995:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80176,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "5003:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80177,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80147,
                        "src": "5009:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80172,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "4966:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46824,
                      "src": "4966:28:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:51:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80179,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:51:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80183,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "5042:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80180,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5028:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7053,
                      "src": "5028:13:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:21:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80185,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:21:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80189,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "5075:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80190,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80147,
                        "src": "5081:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80186,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "5059:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "5059:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5059:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80192,
                  "nodeType": "ExpressionStatement",
                  "src": "5059:30:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80196,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "5124:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80194,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "5109:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "5109:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5109:22:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80198,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80147,
                        "src": "5133:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80193,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5100:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80200,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80204,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "5178:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80205,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "5184:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80202,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "5160:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "5160:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5160:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80207,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80147,
                        "src": "5193:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80201,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5151:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:50:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80209,
                  "nodeType": "ExpressionStatement",
                  "src": "5151:50:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80215,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "5255:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 80214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5247:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80213,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5247:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5247:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80217,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80147,
                        "src": "5263:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80210,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "5234:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28868,
                      "src": "5234:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5234:37:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80219,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:37:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80223,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "5297:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80224,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "5305:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80225,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80147,
                        "src": "5311:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80220,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "5281:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "repayDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47007,
                      "src": "5281:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:38:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80227,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:38:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80228,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5329:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7070,
                      "src": "5329:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5329:14:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80232,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:14:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80236,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "5378:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80234,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "5363:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "5363:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5363:22:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5387:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80233,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5354:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5354:35:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80240,
                  "nodeType": "ExpressionStatement",
                  "src": "5354:35:143"
                }
              ]
            },
            "functionSelector": "6411193d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_RepayDebt",
            "nameLocation": "4795:25:143",
            "parameters": {
              "id": 80148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80147,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4829:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 80242,
                  "src": "4821:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4821:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4820:17:143"
            },
            "returnParameters": {
              "id": 80149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4845:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80310,
            "nodeType": "FunctionDefinition",
            "src": "5402:522:143",
            "nodes": [],
            "body": {
              "id": 80309,
              "nodeType": "Block",
              "src": "5444:480:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80248,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "5463:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80245,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5454:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5454:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80250,
                  "nodeType": "ExpressionStatement",
                  "src": "5454:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80254,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "5510:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80255,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "5518:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80256,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "5524:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80251,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "5481:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46824,
                      "src": "5481:28:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5481:64:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80258,
                  "nodeType": "ExpressionStatement",
                  "src": "5481:64:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80262,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "5565:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80259,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5556:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5556:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5556:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80264,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80268,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "5598:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80269,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "5604:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80265,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "5582:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "5582:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5582:43:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80271,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:43:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80275,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "5701:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80272,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5692:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5692:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5692:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80277,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80281,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "5733:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80282,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "5741:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80283,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "5747:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 80284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5770:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5747:24:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80278,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "5719:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47064,
                      "src": "5719:13:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5719:53:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80287,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:53:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80291,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "5810:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80292,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "5816:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80289,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "5792:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "5792:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5792:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80294,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "5825:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 80295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5848:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5825:24:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80288,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5783:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:67:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80298,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:67:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80302,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "5885:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 80300,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "5869:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47223,
                          "src": "5869:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 80303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5869:21:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80304,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "5892:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 80305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5915:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5892:24:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80299,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5860:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5860:57:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80308,
                  "nodeType": "ExpressionStatement",
                  "src": "5860:57:143"
                }
              ]
            },
            "functionSelector": "82e3ea44",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_SetDebt",
            "nameLocation": "5411:23:143",
            "parameters": {
              "id": 80243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5434:2:143"
            },
            "returnParameters": {
              "id": 80244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5444:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80373,
            "nodeType": "FunctionDefinition",
            "src": "5930:597:143",
            "nodes": [],
            "body": {
              "id": 80372,
              "nodeType": "Block",
              "src": "5991:536:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80316,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "6010:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80313,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6001:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6001:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6001:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80318,
                  "nodeType": "ExpressionStatement",
                  "src": "6001:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80322,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "6057:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80323,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "6065:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80324,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "6071:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80319,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "6028:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46824,
                      "src": "6028:28:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6028:64:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80326,
                  "nodeType": "ExpressionStatement",
                  "src": "6028:64:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80330,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "6112:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80327,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6103:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6103:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6103:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80332,
                  "nodeType": "ExpressionStatement",
                  "src": "6103:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80336,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "6145:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80337,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "6151:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80333,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "6129:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "6129:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6129:43:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80339,
                  "nodeType": "ExpressionStatement",
                  "src": "6129:43:143"
                },
                {
                  "assignments": [
                    80341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80341,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "6284:3:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 80372,
                      "src": "6271:16:143",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80340,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6271:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80349,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 80344,
                            "name": "Module",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29616,
                            "src": "6326:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Module_$29616_$",
                              "typeString": "type(contract Module)"
                            }
                          },
                          "id": 80345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Module_PolicyNotPermitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29558,
                          "src": "6326:32:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                            "typeString": "function (address) pure"
                          }
                        },
                        "id": 80346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "6326:41:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 80347,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "6381:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80342,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6290:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "6290:22:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 80348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:109:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6271:128:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80353,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80341,
                        "src": "6425:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80350,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6409:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "6409:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6409:20:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80355,
                  "nodeType": "ExpressionStatement",
                  "src": "6409:20:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80359,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "6448:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80356,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6439:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6439:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6439:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80361,
                  "nodeType": "ExpressionStatement",
                  "src": "6439:18:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80365,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "6481:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80366,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "6489:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80367,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "6495:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 80368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6518:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6495:24:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80362,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "6467:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47064,
                      "src": "6467:13:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6467:53:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80371,
                  "nodeType": "ExpressionStatement",
                  "src": "6467:53:143"
                }
              ]
            },
            "functionSelector": "437e7dfd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_UnauthorizedPolicyCannotSetDebt",
            "nameLocation": "5939:42:143",
            "parameters": {
              "id": 80311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5981:2:143"
            },
            "returnParameters": {
              "id": 80312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5991:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80452,
            "nodeType": "FunctionDefinition",
            "src": "6533:536:143",
            "nodes": [],
            "body": {
              "id": 80451,
              "nodeType": "Block",
              "src": "6577:492:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80379,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "6596:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80376,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6587:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6587:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6587:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80381,
                  "nodeType": "ExpressionStatement",
                  "src": "6587:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80385,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "6643:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80386,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "6651:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80387,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "6657:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80382,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "6614:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46824,
                      "src": "6614:28:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6614:64:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80389,
                  "nodeType": "ExpressionStatement",
                  "src": "6614:64:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80393,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "6698:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80390,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6689:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6689:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80395,
                  "nodeType": "ExpressionStatement",
                  "src": "6689:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80399,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "6731:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80400,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "6737:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80396,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "6715:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "6715:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6715:43:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80402,
                  "nodeType": "ExpressionStatement",
                  "src": "6715:43:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80406,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "6796:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80407,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "6802:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80404,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "6778:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "6778:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6778:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80409,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "6811:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80403,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6769:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6769:63:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80411,
                  "nodeType": "ExpressionStatement",
                  "src": "6769:63:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80415,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "6867:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 80413,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "6851:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47223,
                          "src": "6851:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 80416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6851:21:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80417,
                        "name": "INITIAL_TOKEN_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79681,
                        "src": "6874:20:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80412,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6842:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6842:53:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80419,
                  "nodeType": "ExpressionStatement",
                  "src": "6842:53:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80423,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "6915:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80420,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6906:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6906:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6906:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80425,
                  "nodeType": "ExpressionStatement",
                  "src": "6906:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80429,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "6947:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80430,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "6955:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6961:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 80426,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "6933:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47064,
                      "src": "6933:13:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6933:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80433,
                  "nodeType": "ExpressionStatement",
                  "src": "6933:30:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80437,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "7001:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80438,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "7007:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80435,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "6983:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "6983:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6983:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7016:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80434,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6974:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6974:44:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80442,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:44:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80446,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "7053:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "expression": {
                            "id": 80444,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "7037:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47223,
                          "src": "7037:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20) view external returns (uint256)"
                          }
                        },
                        "id": 80447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7037:21:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7060:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80443,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7028:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7028:34:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80450,
                  "nodeType": "ExpressionStatement",
                  "src": "7028:34:143"
                }
              ]
            },
            "functionSelector": "18b9d8c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_ClearDebt",
            "nameLocation": "6542:25:143",
            "parameters": {
              "id": 80374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6567:2:143"
            },
            "returnParameters": {
              "id": 80375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6577:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80710,
            "nodeType": "FunctionDefinition",
            "src": "7075:1847:143",
            "nodes": [],
            "body": {
              "id": 80709,
              "nodeType": "Block",
              "src": "7133:1789:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80460,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80454,
                          "src": "7153:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7164:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7153:12:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80457,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7143:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "7143:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7143:23:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80464,
                  "nodeType": "ExpressionStatement",
                  "src": "7143:23:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80468,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80454,
                          "src": "7186:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 80469,
                          "name": "INITIAL_TOKEN_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79681,
                          "src": "7196:20:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7186:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80465,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7176:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "7176:9:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7176:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80472,
                  "nodeType": "ExpressionStatement",
                  "src": "7176:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80476,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "7307:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80473,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7298:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7298:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7298:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80478,
                  "nodeType": "ExpressionStatement",
                  "src": "7298:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80482,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "7356:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80483,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "7365:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80484,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "7371:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80479,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "7325:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46696,
                      "src": "7325:30:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7325:54:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80486,
                  "nodeType": "ExpressionStatement",
                  "src": "7325:54:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80490,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "7399:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80487,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7390:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7390:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7390:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80492,
                  "nodeType": "ExpressionStatement",
                  "src": "7390:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80496,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "7446:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80497,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "7454:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80498,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "7460:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80493,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "7417:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46824,
                      "src": "7417:28:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:51:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80500,
                  "nodeType": "ExpressionStatement",
                  "src": "7417:51:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80504,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "7518:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80501,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7509:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7509:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7509:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80506,
                  "nodeType": "ExpressionStatement",
                  "src": "7509:17:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80507,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "7536:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47076,
                      "src": "7536:16:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7536:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80511,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:18:143"
                },
                {
                  "assignments": [
                    80513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80513,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7631:3:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 80709,
                      "src": "7618:16:143",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80512,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7618:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80518,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "54525352595f4e6f744163746976652829",
                        "id": 80516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7661:19:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        },
                        "value": "TRSRY_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 80514,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7637:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7637:23:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 80517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7637:44:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7618:63:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80522,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80513,
                        "src": "7707:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80519,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7691:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7691:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7691:20:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80524,
                  "nodeType": "ExpressionStatement",
                  "src": "7691:20:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80528,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "7730:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80525,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7721:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7721:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7721:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80530,
                  "nodeType": "ExpressionStatement",
                  "src": "7721:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80534,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "7771:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80535,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "7780:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80536,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "7786:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80531,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "7748:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46785,
                      "src": "7748:22:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:46:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80538,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:46:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80542,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80513,
                        "src": "7868:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80539,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7852:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7852:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7852:20:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80544,
                  "nodeType": "ExpressionStatement",
                  "src": "7852:20:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80548,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "7891:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80545,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7882:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7882:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7882:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80550,
                  "nodeType": "ExpressionStatement",
                  "src": "7882:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80554,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "7924:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80555,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "7930:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80551,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "7908:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "7908:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7908:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80557,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:30:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80561,
                            "name": "godmode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79676,
                            "src": "7973:7:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80559,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "7958:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "7958:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7958:23:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7983:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80558,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7949:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7949:36:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80565,
                  "nodeType": "ExpressionStatement",
                  "src": "7949:36:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80569,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "8022:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80570,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "8028:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80567,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "8004:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "8004:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8004:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8037:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80566,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7995:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7995:44:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80574,
                  "nodeType": "ExpressionStatement",
                  "src": "7995:44:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80578,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "8073:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80576,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "8058:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "8058:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8058:22:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8082:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80575,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8049:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8049:35:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80582,
                  "nodeType": "ExpressionStatement",
                  "src": "8049:35:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80586,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "8137:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80583,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8128:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8128:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8128:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80588,
                  "nodeType": "ExpressionStatement",
                  "src": "8128:17:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80589,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "8155:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47088,
                      "src": "8155:14:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8155:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80593,
                  "nodeType": "ExpressionStatement",
                  "src": "8155:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80597,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "8219:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80594,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8210:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8210:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80599,
                  "nodeType": "ExpressionStatement",
                  "src": "8210:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80603,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "8260:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80604,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "8269:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80605,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8275:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80600,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "8237:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46785,
                      "src": "8237:22:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8237:46:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80607,
                  "nodeType": "ExpressionStatement",
                  "src": "8237:46:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80611,
                            "name": "godmode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79676,
                            "src": "8317:7:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80609,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "8302:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "8302:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8302:23:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80613,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8327:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80608,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8293:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8293:42:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80615,
                  "nodeType": "ExpressionStatement",
                  "src": "8293:42:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80619,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "8411:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80616,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8402:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8402:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8402:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80621,
                  "nodeType": "ExpressionStatement",
                  "src": "8402:17:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80627,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "8451:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 80626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8443:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80625,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8443:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8443:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80629,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8459:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80622,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "8429:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28901,
                      "src": "8429:13:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8429:38:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80631,
                  "nodeType": "ExpressionStatement",
                  "src": "8429:38:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80635,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "8487:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80632,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8478:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8478:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8478:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80637,
                  "nodeType": "ExpressionStatement",
                  "src": "8478:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80641,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "8520:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80642,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8526:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80638,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "8504:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46917,
                      "src": "8504:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 80643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8504:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80644,
                  "nodeType": "ExpressionStatement",
                  "src": "8504:30:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80648,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "8568:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80646,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "8553:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "8553:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8553:22:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80650,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8577:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80645,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8544:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8544:41:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80652,
                  "nodeType": "ExpressionStatement",
                  "src": "8544:41:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80656,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "8622:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80657,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "8628:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80654,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "8604:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "8604:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8604:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80659,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8637:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80653,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8595:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8595:50:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80661,
                  "nodeType": "ExpressionStatement",
                  "src": "8595:50:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80665,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "8687:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80662,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8678:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8678:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8678:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80667,
                  "nodeType": "ExpressionStatement",
                  "src": "8678:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80673,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "8725:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 80672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8717:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80671,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8717:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8717:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80675,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8733:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80668,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "8704:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28868,
                      "src": "8704:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8704:37:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80677,
                  "nodeType": "ExpressionStatement",
                  "src": "8704:37:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80681,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "8760:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80678,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8751:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8751:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8751:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80683,
                  "nodeType": "ExpressionStatement",
                  "src": "8751:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80687,
                        "name": "debtor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79678,
                        "src": "8793:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80688,
                        "name": "ngmi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79672,
                        "src": "8801:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 80689,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80454,
                        "src": "8807:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80684,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "8777:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "repayDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47007,
                      "src": "8777:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8777:38:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80691,
                  "nodeType": "ExpressionStatement",
                  "src": "8777:38:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80695,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "8850:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80693,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "8835:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 80694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "8835:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 80696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8835:22:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8859:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80692,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8826:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8826:35:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80699,
                  "nodeType": "ExpressionStatement",
                  "src": "8826:35:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80703,
                            "name": "ngmi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79672,
                            "src": "8898:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 80704,
                            "name": "debtor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79678,
                            "src": "8904:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80701,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "8880:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47231,
                          "src": "8880:17:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$29147_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 80705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8880:31:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8913:1:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 80700,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8871:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8871:44:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80708,
                  "nodeType": "ExpressionStatement",
                  "src": "8871:44:143"
                }
              ]
            },
            "functionSelector": "bcf643cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_Shutdown",
            "nameLocation": "7084:24:143",
            "parameters": {
              "id": 80455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80454,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "7117:7:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 80710,
                  "src": "7109:15:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7109:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7108:17:143"
            },
            "returnParameters": {
              "id": 80456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7133:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80851,
            "nodeType": "FunctionDefinition",
            "src": "8928:1295:143",
            "nodes": [],
            "body": {
              "id": 80850,
              "nodeType": "Block",
              "src": "8996:1227:143",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80714,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "9048:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47201,
                          "src": "9048:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 80716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9048:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9064:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80713,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9039:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 80718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9039:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80719,
                  "nodeType": "ExpressionStatement",
                  "src": "9039:30:143"
                },
                {
                  "assignments": [
                    80721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80721,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "9145:3:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 80850,
                      "src": "9132:16:143",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80720,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9132:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80729,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 80724,
                            "name": "Module",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29616,
                            "src": "9187:6:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Module_$29616_$",
                              "typeString": "type(contract Module)"
                            }
                          },
                          "id": 80725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Module_PolicyNotPermitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29558,
                          "src": "9187:32:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                            "typeString": "function (address) pure"
                          }
                        },
                        "id": 80726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "9187:41:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 80727,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "9242:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80722,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9151:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "9151:22:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 80728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9151:109:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9132:128:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80733,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80721,
                        "src": "9286:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80730,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9270:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "9270:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9270:20:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80735,
                  "nodeType": "ExpressionStatement",
                  "src": "9270:20:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80739,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "9309:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80736,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9300:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9300:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9300:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80741,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:18:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80742,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "9328:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47076,
                      "src": "9328:16:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9328:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80746,
                  "nodeType": "ExpressionStatement",
                  "src": "9328:18:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80748,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "9366:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47201,
                          "src": "9366:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 80750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9366:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9382:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80747,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9357:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 80752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9357:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80753,
                  "nodeType": "ExpressionStatement",
                  "src": "9357:30:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80757,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "9448:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80754,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9439:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9439:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9439:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80759,
                  "nodeType": "ExpressionStatement",
                  "src": "9439:17:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80760,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "9466:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47076,
                      "src": "9466:16:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9466:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80764,
                  "nodeType": "ExpressionStatement",
                  "src": "9466:18:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80766,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "9504:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47201,
                          "src": "9504:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 80768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9504:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 80769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9520:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80765,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9495:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 80770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9495:31:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80771,
                  "nodeType": "ExpressionStatement",
                  "src": "9495:31:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80775,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "9639:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80772,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9630:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9630:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9630:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80777,
                  "nodeType": "ExpressionStatement",
                  "src": "9630:17:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80778,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "9657:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47076,
                      "src": "9657:16:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9657:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80782,
                  "nodeType": "ExpressionStatement",
                  "src": "9657:18:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80784,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "9695:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47201,
                          "src": "9695:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 80786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9695:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 80787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9711:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80783,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9686:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 80788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9686:31:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80789,
                  "nodeType": "ExpressionStatement",
                  "src": "9686:31:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80793,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80721,
                        "src": "9796:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80790,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9780:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "9780:15:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9780:20:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80795,
                  "nodeType": "ExpressionStatement",
                  "src": "9780:20:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80799,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79674,
                        "src": "9819:8:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80796,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9810:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9810:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9810:18:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80801,
                  "nodeType": "ExpressionStatement",
                  "src": "9810:18:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80802,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "9838:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47088,
                      "src": "9838:14:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9838:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80806,
                  "nodeType": "ExpressionStatement",
                  "src": "9838:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80808,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "9874:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47201,
                          "src": "9874:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 80810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9874:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 80811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9890:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "9865:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 80812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:31:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80813,
                  "nodeType": "ExpressionStatement",
                  "src": "9865:31:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80817,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "9957:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80814,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9948:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9948:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9948:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80819,
                  "nodeType": "ExpressionStatement",
                  "src": "9948:17:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80820,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "9975:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47088,
                      "src": "9975:14:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9975:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80824,
                  "nodeType": "ExpressionStatement",
                  "src": "9975:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80826,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "10011:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47201,
                          "src": "10011:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 80828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10011:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10027:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80825,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "10002:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 80830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10002:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80831,
                  "nodeType": "ExpressionStatement",
                  "src": "10002:30:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80835,
                        "name": "godmode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79676,
                        "src": "10141:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80832,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10132:2:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10132:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10132:17:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80837,
                  "nodeType": "ExpressionStatement",
                  "src": "10132:17:143"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80838,
                        "name": "TRSRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79669,
                        "src": "10159:5:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47088,
                      "src": "10159:14:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10159:16:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80842,
                  "nodeType": "ExpressionStatement",
                  "src": "10159:16:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80844,
                            "name": "TRSRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79669,
                            "src": "10195:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$47112",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 80845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47201,
                          "src": "10195:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 80846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10195:14:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10211:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80843,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 3672,
                      "src": "10186:8:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 80848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:30:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80849,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:30:143"
                }
              ]
            },
            "functionSelector": "cf18f8d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_AddressWithPermCannotShutdownOrRestart",
            "nameLocation": "8937:49:143",
            "parameters": {
              "id": 80711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8986:2:143"
            },
            "returnParameters": {
              "id": 80712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8996:0:143"
            },
            "scope": 80852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79658,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "659:4:143"
            },
            "id": 79659,
            "nodeType": "InheritanceSpecifier",
            "src": "659:4:143"
          }
        ],
        "canonicalName": "TRSRYTest",
        "contractDependencies": [
          28095,
          30536,
          47112
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80852,
          5484,
          2554,
          2291
        ],
        "name": "TRSRYTest",
        "nameLocation": "646:9:143",
        "scope": 80853,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 143
}