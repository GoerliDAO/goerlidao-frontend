{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_amountsForMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_batchToTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_blacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_callbackMustReceiveTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1822:23291:167:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;1822:23291:167;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1822:23291:167:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2811:6548;;;:::i;:::-;;16401:1479;;;:::i;321:38:1:-;;-1:-1:-1;;;;;;;;;;;321:38:1;;;;;;;;;:::i;:::-;;;;;;;;24298:813:167;;;:::i;20370:3836::-;;;:::i;11728:3283::-;;;:::i;19808:556::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;607:14:184;;600:22;582:41;;570:2;555:18;1819:584:0;442:187:184;1895:30:167;;;;;-1:-1:-1;;;;;1895:30:167;;;18040:1099;;;:::i;19145:657::-;;;:::i;15017:1378::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;2811:6548:167;2845:32;;-1:-1:-1;;;2845:32:167;;2853:23;2845:32;;;1026:25:184;-1:-1:-1;;;;;;;;;;;250:64:1;2845:7:167;;999:18:184;;2845:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2969:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:11:167;:31;;-1:-1:-1;;;;;;2955:31:167;-1:-1:-1;;;;;2955:31:167;;;;;;;;;3086:21;;-1:-1:-1;;;3086:21:167;;3105:1;3086:21;;;1026:25:184;-1:-1:-1;;2955:31:167;3086:18;;999::184;;3086:21:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3086:21:167;;;;;;;;;;;;:::i;:::-;3061:46;;3129:5;3135:1;3129:8;;;;;;;;:::i;:::-;;;;;;;3121:5;;:16;;;;;-1:-1:-1;;;;;3121:16:167;;;;;-1:-1:-1;;;;;3121:16:167;;;;;;3157:5;3163:1;3157:8;;;;;;;;:::i;:::-;;;;;;;3151:3;;:14;;;;;-1:-1:-1;;;;;3151:14:167;;;;;-1:-1:-1;;;;;3151:14:167;;;;;;3190:5;3196:1;3190:8;;;;;;;;:::i;:::-;;;;;;;3179;;:19;;;;;-1:-1:-1;;;;;3179:19:167;;;;;-1:-1:-1;;;;;3179:19:167;;;;;;3221:5;3227:1;3221:8;;;;;;;;:::i;:::-;;;;;;;;;;;3212:6;:17;;-1:-1:-1;;;;;;3212:17:167;-1:-1:-1;;;;;3212:17:167;;;;;;3269:8;;3250:58;;3269:8;;;-1:-1:-1;;3250:58:167;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3243:4:167;:65;;-1:-1:-1;;;;;;3243:65:167;-1:-1:-1;;;;;3243:65:167;;;;;;;;;3394:8;;3375:34;;3394:8;;;3375:34;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3362:10:167;:47;;-1:-1:-1;;;;;;3362:47:167;-1:-1:-1;;;;;3362:47:167;;;;;;;;;3456:8;;3488:4;;3432:61;;3456:8;;;;;;3488:4;;;3432:61;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3423:6:167;:70;;-1:-1:-1;;;;;;3423:70:167;-1:-1:-1;;;;;3423:70:167;;;;;;;;;3549:10;;3561:8;;3571:4;;3520:56;;3423:70;;3549:10;;;;3561:8;;;;3571:4;;3520:56;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3507:10:167;:69;;-1:-1:-1;;;;;;3507:69:167;-1:-1:-1;;;;;3507:69:167;;;;;;3655:8;;3646:18;;-1:-1:-1;;;3646:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;3646:8:167;;:18;;3655:8;;;3646:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3678:10:167;;3708;;3678:41;;-1:-1:-1;;;3678:41:167;;-1:-1:-1;;;;;3678:10:167;;;;-1:-1:-1;3678:29:167;;-1:-1:-1;3678:41:167;;3708:10;;;;3678:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:734;3831:1;3796:37;;;;;:::i;:::-;5434:2:184;5416:21;;;5473:2;5453:18;;;5446:30;-1:-1:-1;;;5507:3:184;5492:19;;5485:41;5564:3;5557:4;5542:20;;5535:33;;;5605:1;5584:19;;;5577:30;-1:-1:-1;;;5638:3:184;5623:19;;5616:35;5735:4;5723:17;;;-1:-1:-1;5703:18:184;;5696:45;5683:3;5668:19;3796:37:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3789:4:167;:44;;-1:-1:-1;;;;;;3789:44:167;-1:-1:-1;;;;;3789:44:167;;;;;;;;;;3857:35;;3889:2;;3857:35;;;:::i;:::-;6090:2:184;6072:21;;;6129:1;6109:18;;;6102:29;-1:-1:-1;;;6162:3:184;6147:19;;6140:38;6216:3;6209:4;6194:20;;6187:33;;;6257:1;6236:19;;;6229:30;-1:-1:-1;;;6290:3:184;6275:19;;6268:34;6386:4;6374:17;;;-1:-1:-1;6354:18:184;;6347:45;6334:3;6319:19;3857:35:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:7:167;:45;;-1:-1:-1;;;;;;3847:45:167;-1:-1:-1;;;;;3847:45:167;;;;;;;;;;3914:33;;;;;:::i;:::-;6741:2:184;6723:21;;;6780:1;6760:18;;;6753:29;-1:-1:-1;;;6813:3:184;6798:19;;6791:36;6865:3;6858:4;6843:20;;6836:33;;;6906:1;6885:19;;;6878:30;-1:-1:-1;;;6939:3:184;6924:19;;6917:34;7035:4;7023:17;;;-1:-1:-1;7003:18:184;;6996:45;6983:3;6968:19;3914:33:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3906:5:167;:41;;-1:-1:-1;;;;;;3906:41:167;-1:-1:-1;;;;;3906:41:167;;;;;;;;;;4021:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4012:6:167;:21;;-1:-1:-1;;;;;;4012:21:167;-1:-1:-1;;;;;4012:21:167;;;;;;;;;4138:49;;4167:7;;4177:9;;4138:49;;;:::i;:::-;-1:-1:-1;;;;;7416:32:184;;;7398:51;;7497:14;7485:27;;;7480:2;7465:18;;7458:55;7544:2;7529:18;;7522:34;7386:2;7371:18;4138:49:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4130:5:167;:57;;-1:-1:-1;;;;;;4130:57:167;-1:-1:-1;;;;;4130:57:167;;;;;;4245:6;;4275:4;;4304:7;;4209:209;;4245:6;;;;4275:4;;;;4304:7;;;4338:3;;4368:4;;4399;;4209:209;;;:::i;:::-;-1:-1:-1;;;;;7956:15:184;;;7938:34;;8008:15;;;8003:2;7988:18;;7981:43;8060:15;;;;8055:2;8040:18;;8033:43;8107:2;8092:18;;8085:34;8150:3;8135:19;;8128:35;7918:3;8179:19;;8172:35;;;;7887:3;7872:19;4209:209:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4201:5:167;:217;;-1:-1:-1;;;;;;4201:217:167;-1:-1:-1;;;;;4201:217:167;;;;;;4465:6;;4443:29;;4465:6;;;4443:29;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4432:8:167;:40;;-1:-1:-1;;;;;;4432:40:167;-1:-1:-1;;;;;4432:40:167;;;;;;4512:6;;4528:4;;4495:39;;4512:6;;;;4528:4;;4495:39;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4486:6:167;:48;;-1:-1:-1;;;;;;4486:48:167;-1:-1:-1;;;;;4486:48:167;;;;;;4575:6;;4556:26;;4575:6;;;4556:26;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4548:5:167;:34;;-1:-1:-1;;;;;;4548:34:167;-1:-1:-1;;;;;4548:34:167;;;;;;4629:5;;:34;;-1:-1:-1;;;4629:34:167;;4652:10;4629:34;;;1026:25:184;4629:5:167;;;:22;;999:18:184;;4629:34:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4677:5:167;;:30;;-1:-1:-1;;;4677:30:167;;4696:10;4677:30;;;1026:25:184;-1:-1:-1;;;;;4677:5:167;;;;-1:-1:-1;4677:18:167;;-1:-1:-1;999:18:184;;4677:30:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4721:5:167;;:21;;-1:-1:-1;;;4721:21:167;;4739:2;4721:21;;;9130:36:184;-1:-1:-1;;;;;4721:5:167;;;;-1:-1:-1;4721:17:167;;-1:-1:-1;9103:18:184;;4721:21:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4756:5:167;;:42;;-1:-1:-1;;;4756:42:167;;9351:14:184;4781:15:167;9339:27:184;4756:42:167;;;9321:46:184;-1:-1:-1;;;;;4756:5:167;;;;-1:-1:-1;4756:17:167;;-1:-1:-1;9294:18:184;;4756:42:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4896:6:167;;4881:22;;-1:-1:-1;;;;;4896:6:167;;;;-1:-1:-1;4881:22:167;;-1:-1:-1;4881:22:167;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4868:10:167;:35;;-1:-1:-1;;;;;;4868:35:167;-1:-1:-1;;;;;4868:35:167;;;;;;4983:6;;5015:10;;5029:4;;4966:68;;4983:6;;;;5015:10;;;;5029:4;;;4966:68;;;:::i;:::-;-1:-1:-1;;;;;9695:15:184;;;9677:34;;9747:15;;;9742:2;9727:18;;9720:43;9799:15;;;9794:2;9779:18;;9772:43;9627:2;9612:18;4966:68:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4955:8:167;:79;;-1:-1:-1;;;;;;4955:79:167;-1:-1:-1;;;;;4955:79:167;;;;;;;;;5122:6;;5163:10;;5092:672;;;;;;;;5226:4;;;;5092:672;;5239:7;;;;5092:672;;;;;;;;;;4955:79;5092:672;;;;5295:4;5092:672;;5346:6;5092:672;;;;;;;5394:7;5092:672;;;;5445:7;5092:672;;;;;;5501:4;5092:672;;;;;;;;5602:1;5092:672;;;;5651:1;5092:672;;;;;;5122:6;;;;5163:10;;;;;4955:79;5092:672;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5081:8:167;:683;;-1:-1:-1;;;;;;5081:683:167;-1:-1:-1;;;;;5081:683:167;;;;;;5861:8;;5852:18;;-1:-1:-1;;;5852:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;5852:8:167;;:18;;5861:8;;;5852:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5884:10:167;;5925:8;;5884:57;;-1:-1:-1;;;5884:57:167;;-1:-1:-1;;;;;5884:10:167;;;;-1:-1:-1;5884:32:167;;-1:-1:-1;5884:57:167;;5925:8;;;;5884:10;;:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6043:8:167;;6034:18;;-1:-1:-1;;;6034:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;6034:8:167;;-1:-1:-1;6034:18:167;;-1:-1:-1;;;;;6043:8:167;;6034:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6066:10:167;;:53;;-1:-1:-1;;;6066:53:167;;-1:-1:-1;;;;;6066:10:167;;;;-1:-1:-1;6066:32:167;;-1:-1:-1;6066:53:167;;6107:4;;6066:10;;:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6232:6:167;;6284:5;;6232:59;;-1:-1:-1;;;6232:59:167;;-1:-1:-1;;;;;6232:6:167;;;;-1:-1:-1;6232:20:167;;-1:-1:-1;6232:59:167;;:6;;6284:5;;6232:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6305:6:167;;6357:5;;6305:59;;-1:-1:-1;;;6305:59:167;;-1:-1:-1;;;;;6305:6:167;;;;-1:-1:-1;6305:20:167;;-1:-1:-1;6305:59:167;;:6;;6357:5;;6305:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6378:6:167;;6430:8;;6378:62;;-1:-1:-1;;;6378:62:167;;-1:-1:-1;;;;;6378:6:167;;;;-1:-1:-1;6378:20:167;;-1:-1:-1;6378:62:167;;:6;;6430:8;;6378:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6454:6:167;;6506;;6454:60;;-1:-1:-1;;;6454:60:167;;-1:-1:-1;;;;;6454:6:167;;;;-1:-1:-1;6454:20:167;;-1:-1:-1;6454:60:167;;:6;;6506;;6454:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6528:6:167;;6580:5;;6528:59;;-1:-1:-1;;;6528:59:167;;-1:-1:-1;;;;;6528:6:167;;;;-1:-1:-1;6528:20:167;;-1:-1:-1;6528:59:167;;:6;;6580:5;;6528:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6635:6:167;;6688:8;;6635:63;;-1:-1:-1;;;6635:63:167;;-1:-1:-1;;;;;6635:6:167;;;;-1:-1:-1;6635:20:167;;-1:-1:-1;6635:63:167;;6656:22;;6688:8;;6635:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6712:6:167;;6765:8;;6712:63;;-1:-1:-1;;;6712:63:167;;-1:-1:-1;;;;;6712:6:167;;;;-1:-1:-1;6712:20:167;;-1:-1:-1;6712:63:167;;6733:22;;6765:8;;6712:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6789:6:167;;6842:10;;6789:65;;-1:-1:-1;;;6789:65:167;;-1:-1:-1;;;;;6789:6:167;;;;-1:-1:-1;6789:20:167;;-1:-1:-1;6789:65:167;;6810:22;;6842:10;;6789:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6961:10:167;;7002:8;;6961:50;;-1:-1:-1;;;6961:50:167;;-1:-1:-1;;;6961:50:167;;;12313:37:184;-1:-1:-1;;;;;7002:8:167;;;12366:18:184;;;12359:60;6961:10:167;;;-1:-1:-1;6961:20:167;;-1:-1:-1;12286:18:184;;6961:50:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7025:10:167;;7075:8;;7025:60;;-1:-1:-1;;;7025:60:167;;-1:-1:-1;;;7025:60:167;;;12667:38:184;-1:-1:-1;;;;;7075:8:167;;;12721:18:184;;;12714:60;7025:10:167;;;-1:-1:-1;7025:20:167;;-1:-1:-1;12640:18:184;;7025:60:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7099:10:167;;7139:6;;7099:47;;-1:-1:-1;;;7099:47:167;;-1:-1:-1;;;7099:47:167;;;13022:36:184;-1:-1:-1;;;;;7139:6:167;;;13074:18:184;;;13067:60;7099:10:167;;;-1:-1:-1;7099:20:167;;-1:-1:-1;12995:18:184;;7099:47:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7160:10:167;;7199:8;;7160:48;;-1:-1:-1;;;7160:48:167;;-1:-1:-1;;;7160:48:167;;;13375:35:184;-1:-1:-1;;;;;7199:8:167;;;13426:18:184;;;13419:60;7160:10:167;;;-1:-1:-1;7160:20:167;;-1:-1:-1;13348:18:184;;7160:48:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7259:10:167;;7310:8;;7259:61;;-1:-1:-1;;;7259:61:167;;-1:-1:-1;;;;;7259:10:167;;;;-1:-1:-1;7259:20:167;;-1:-1:-1;7259:61:167;;7310:8;;;;7259:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7334:10:167;;7377:6;;7334:50;;-1:-1:-1;;;7334:50:167;;-1:-1:-1;;;;;7334:10:167;;;;-1:-1:-1;7334:20:167;;-1:-1:-1;7334:50:167;;7377:6;;;;7334:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7398:10:167;;7437:8;;7398:48;;-1:-1:-1;;;7398:48:167;;-1:-1:-1;;;7398:48:167;;;14083:35:184;-1:-1:-1;;;;;7437:8:167;;;14134:18:184;;;14127:60;7398:10:167;;;-1:-1:-1;7398:20:167;;-1:-1:-1;14056:18:184;;7398:48:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7517:8:167;;7508:18;;-1:-1:-1;;;7508:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7508:8:167;;-1:-1:-1;7508:18:167;;-1:-1:-1;;;;;7517:8:167;;7508:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7536:8:167;;7557;;7536:30;;-1:-1:-1;;;7536:30:167;;-1:-1:-1;;;;;7536:8:167;;;;-1:-1:-1;7536:20:167;;-1:-1:-1;7536:30:167;;7557:8;;;;7536:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7622:8:167;;7613:18;;-1:-1:-1;;;7613:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;7613:8:167;;-1:-1:-1;7613:18:167;;-1:-1:-1;;;;;7622:8:167;;7613:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7641:8;;;;;;;;;-1:-1:-1;;;;;7641:8:167;-1:-1:-1;;;;;7641:19:167;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7823:4:167;;7833:5;;7749:15;;-1:-1:-1;7796:16:167;;-1:-1:-1;;;;;;7823:4:167;;;;:9;;7833:5;7840:13;7749:15;7851:2;7840:13;:::i;:::-;7823:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7864:7:167;;7877:5;;-1:-1:-1;;;;;7864:7:167;;;;-1:-1:-1;7864:12:167;;-1:-1:-1;7877:5:167;7884:16;:11;7898:2;7884:16;:::i;:::-;7864:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7912:7:167;;7933:8;;-1:-1:-1;;;;;7912:7:167;;;;-1:-1:-1;7912:12:167;;-1:-1:-1;7933:8:167;7944:17;:11;7958:3;7944:17;:::i;:::-;7912:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8053:5:167;;8044:15;;-1:-1:-1;;;8044:15:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;8044:8:167;;-1:-1:-1;8044:15:167;;-1:-1:-1;;;;;8053:5:167;;8044:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8069:4:167;;8090:8;;-1:-1:-1;;;;;8069:4:167;;;;-1:-1:-1;8069:12:167;;-1:-1:-1;8090:8:167;8101:13;:8;8112:2;8101:13;:::i;:::-;8069:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8134:5:167;;8125:15;;-1:-1:-1;;;8125:15:167;;-1:-1:-1;;;;;;;;;;;250:64:1;8125:8:167;;:15;;-1:-1:-1;;;;;8134:5:167;;8125:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8150:7:167;;8174:8;;-1:-1:-1;;;;;8150:7:167;;;;-1:-1:-1;8150:15:167;;-1:-1:-1;8174:8:167;8185:16;:11;8199:2;8185:16;:::i;:::-;8150:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8222:5:167;;8213:15;;-1:-1:-1;;;8213:15:167;;-1:-1:-1;;;;;;;;;;;250:64:1;8213:8:167;;:15;;-1:-1:-1;;;;;8222:5:167;;8213:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8238:4:167;;8259:6;;-1:-1:-1;;;;;8238:4:167;;;;-1:-1:-1;8238:12:167;;-1:-1:-1;8259:6:167;8268:13;:8;8279:2;8268:13;:::i;:::-;8238:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8301:5:167;;8292:15;;-1:-1:-1;;;8292:15:167;;-1:-1:-1;;;;;;;;;;;250:64:1;8292:8:167;;:15;;-1:-1:-1;;;;;8301:5:167;;8292:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8317:7:167;;8341:6;;-1:-1:-1;;;;;8317:7:167;;;;-1:-1:-1;8317:15:167;;-1:-1:-1;8341:6:167;8350:16;:11;8364:2;8350:16;:::i;:::-;8317:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8501:7:167;;8510:4;;8488:36;;-1:-1:-1;;;;;8501:7:167;;;;8510:4;8501:7;;8522:1;8488:12;:36::i;:::-;8478:7;:46;8602:4;;8608:7;;8589:36;;-1:-1:-1;;;;;8602:4:167;;;;8608:7;8602:4;;8623:1;8589:12;:36::i;:::-;8579:7;:46;8706:4;;8693:33;;-1:-1:-1;;;;;8706:4:167;;;;8724:1;8693:12;:33::i;:::-;8678:12;:48;8810:7;;8797:40;;-1:-1:-1;;;;;8810:7:167;;;-1:-1:-1;;8835:1:167;8797:12;:40::i;:::-;8782:12;:55;8942:7;;8951:4;;8929:36;;-1:-1:-1;;;;;8942:7:167;;;;8951:4;8942:7;;8963:1;8929:12;:36::i;:::-;8908:18;:57;9038:6;;9029:16;;-1:-1:-1;;;9029:16:167;;-1:-1:-1;;;;;;;;;;;250:64:1;9029:8:167;;:16;;-1:-1:-1;;;;;9038:6:167;;9029:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9055:8:167;;9082:6;;9091:7;;9055:44;;-1:-1:-1;;;9055:44:167;;-1:-1:-1;;;;;9055:8:167;;;;-1:-1:-1;9055:18:167;;-1:-1:-1;9055:44:167;;9082:6;;;;9055:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9119:6:167;;9110:16;;-1:-1:-1;;;9110:16:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;9110:8:167;;-1:-1:-1;9110:16:167;;-1:-1:-1;;;;;9119:6:167;;9110:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9136:8:167;;9163:6;;9172:7;;9136:44;;-1:-1:-1;;;9136:44:167;;-1:-1:-1;;;;;9136:8:167;;;;-1:-1:-1;9136:18:167;;-1:-1:-1;9136:44:167;;9163:6;;;;9136:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9200:6:167;;9191:16;;-1:-1:-1;;;9191:16:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;9191:8:167;;-1:-1:-1;9191:16:167;;-1:-1:-1;;;;;9200:6:167;;9191:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9217:8:167;;9244:6;;9253:12;;9217:49;;-1:-1:-1;;;9217:49:167;;-1:-1:-1;;;;;9217:8:167;;;;-1:-1:-1;9217:18:167;;-1:-1:-1;9217:49:167;;9244:6;;;;9217:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9286:6:167;;9277:16;;-1:-1:-1;;;9277:16:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;9277:8:167;;-1:-1:-1;9277:16:167;;-1:-1:-1;;;;;9286:6:167;;9277:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9303:8:167;;9330:6;;9339:12;;9303:49;;-1:-1:-1;;;9303:49:167;;-1:-1:-1;;;;;9303:8:167;;;;-1:-1:-1;9303:18:167;;-1:-1:-1;9303:49:167;;9330:6;;;;9303:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2835:6524;;2811:6548::o;16401:1479::-;16546:7;;16567:8;;16546:35;;-1:-1:-1;;;16546:35:167;;-1:-1:-1;;;;;16546:7:167;;;;:12;;:35;;16567:8;;;16578:2;;16546:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16665:4:167;;16688:6;;16665:31;;-1:-1:-1;;;16665:31:167;;16642:20;;-1:-1:-1;;;;;;16665:4:167;;;;-1:-1:-1;16665:14:167;;:31;;16688:6;;16665:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16642:54;;16788:16;16896:18;;16807:117;;;;;;1026:25:184;;1014:2;999:18;;863:194;16807:117:167;;;;-1:-1:-1;;16807:117:167;;;;;;;;;;;;;;-1:-1:-1;;;;;16807:117:167;-1:-1:-1;;;16807:117:167;;;16951:6;;16934:25;;-1:-1:-1;;;16934:25:167;;16807:117;;-1:-1:-1;;;;;;;;;;;;250:64:1;16934:8:167;;:25;;-1:-1:-1;;;;;16951:6:167;;;;;16934:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16969:20:167;;-1:-1:-1;;;16969:20:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;16969:15:167;;-1:-1:-1;16969:20:167;;16985:3;;16969:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16999:8:167;;17017:18;;16999:45;;-1:-1:-1;;;16999:45:167;;-1:-1:-1;;;;;16999:8:167;;;;-1:-1:-1;16999:17:167;;-1:-1:-1;16999:45:167;;17037:2;;;;16999:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17136:4:167;;17159:6;;17136:31;;-1:-1:-1;;;17136:31:167;;17113:20;;-1:-1:-1;;;;;;17136:4:167;;;;-1:-1:-1;17136:14:167;;:31;;17159:6;;17136:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17113:54;;17177:36;17186:12;17200;17177:8;:36::i;:::-;17322:6;;17305:25;;-1:-1:-1;;;17305:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;17305:8:167;;:25;;-1:-1:-1;;;;;17322:6:167;;17305:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17340:8:167;;17358:7;;17340:34;;-1:-1:-1;;;17340:34:167;;-1:-1:-1;;;;;17340:8:167;;;;-1:-1:-1;17340:17:167;;-1:-1:-1;17340:34:167;;17367:2;;;;17340:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17443:4:167;;17466:6;;17443:31;;-1:-1:-1;;;17443:31:167;;-1:-1:-1;;;;;17443:4:167;;;;-1:-1:-1;17443:14:167;;-1:-1:-1;17443:31:167;;17466:6;;;;17443:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17428:46;-1:-1:-1;17484:41:167;17428:46;17507:17;:12;17522:2;17507:17;:::i;:::-;17484:8;:41::i;:::-;17614:6;;17605:16;;-1:-1:-1;;;17605:16:167;;-1:-1:-1;;;;;;;;;;;250:64:1;17605:8:167;;:16;;-1:-1:-1;;;;;17614:6:167;;17605:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17631:8:167;;17658:6;;17667:7;;17631:44;;-1:-1:-1;;;17631:44:167;;-1:-1:-1;;;;;17631:8:167;;;;-1:-1:-1;17631:18:167;;-1:-1:-1;17631:44:167;;17658:6;;;;17631:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17756:7;;17692:72;;;;;;1026:25:184;;1014:2;999:18;;863:194;17692:72:167;;;;-1:-1:-1;;17692:72:167;;;;;;;;;;;;;;-1:-1:-1;;;;;17692:72:167;-1:-1:-1;;;17692:72:167;;;17791:6;;17774:25;;-1:-1:-1;;;17774:25:167;;17692:72;;-1:-1:-1;;;;;;;;;;;;250:64:1;17774:8:167;;:25;;-1:-1:-1;;;;;17791:6:167;;;;;17774:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17809:20:167;;-1:-1:-1;;;17809:20:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;17809:15:167;;-1:-1:-1;17809:20:167;;17825:3;;17809:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17839:8:167;;17857:7;;17839:34;;-1:-1:-1;;;17839:34:167;;-1:-1:-1;;;;;17839:8:167;;;;-1:-1:-1;17839:17:167;;-1:-1:-1;17839:34:167;;17866:2;;;;17839:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16469:1411;;;16401:1479::o;24298:813::-;24426:7;;24447:8;;24426:35;;-1:-1:-1;;;24426:35:167;;-1:-1:-1;;;;;24426:7:167;;;;:12;;:35;;24447:8;;;24458:2;;24426:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24614:8:167;;24640:7;;24614:34;;-1:-1:-1;;;24614:34:167;;24563:22;;-1:-1:-1;24563:22:167;;-1:-1:-1;;;;;;24614:8:167;;;;:25;;:34;;;;1026:25:184;;;1014:2;999:18;;863:194;24614:34:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24562:86;;;;24658:27;24667:14;24683:1;24658:8;:27::i;:::-;24695:28;24704:15;24721:1;24695:8;:28::i;:::-;24826:6;;24809:25;;-1:-1:-1;;;24809:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;24809:8:167;;:25;;-1:-1:-1;;;;;24826:6:167;;24809:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24844:8:167;;24862:7;;24844:34;;-1:-1:-1;;;24844:34:167;;-1:-1:-1;;;;;24844:8:167;;;;-1:-1:-1;24844:17:167;;-1:-1:-1;24844:34:167;;24871:2;;;;24844:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24993:8:167;;25019:7;;24993:34;;-1:-1:-1;;;24993:34:167;;24942:22;;-1:-1:-1;24942:22:167;;-1:-1:-1;;;;;;24993:8:167;;;;:25;;:34;;;;1026:25:184;;;1014:2;999:18;;863:194;24993:34:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24941:86;;;;25037:28;25046:14;25062:2;25037:8;:28::i;:::-;25075:29;25084:15;25101:2;25075:8;:29::i;:::-;24349:762;;;;24298:813::o;20370:3836::-;20538:5;;20545:4;;20505:17;;20525:34;;-1:-1:-1;;;;;20538:5:167;;;;20545:4;20551:1;20538:5;20557:1;20525:12;:34::i;:::-;20628:6;;20619:16;;-1:-1:-1;;;20619:16:167;;20505:54;;-1:-1:-1;;;;;;;;;;;;250:64:1;20619:8:167;;:16;;-1:-1:-1;;;;;20628:6:167;;;;20619:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20645:8:167;;20672:6;;20645:46;;-1:-1:-1;;;20645:46:167;;-1:-1:-1;;;;;20645:8:167;;;;-1:-1:-1;20645:18:167;;-1:-1:-1;20645:46:167;;20672:6;;;;20681:9;;20645:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20757:142:167;;;;;;;;;;20805:7;;20831:8;;-1:-1:-1;;;20805:36:167;;;20757:31;;-1:-1:-1;20757:142:167;;-1:-1:-1;20757:142:167;;-1:-1:-1;;;;;20805:7:167;;;;:17;;:36;;20831:8;20805:36;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20757:142;;20855:5;;20879:8;;20855:34;;-1:-1:-1;;;20855:34:167;;20757:142;;;;;-1:-1:-1;;;;;20855:5:167;;;;:15;;:34;;20879:8;;;20855:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20757:142;;20994:7;;21015:8;;20994:35;;-1:-1:-1;;;20994:35:167;;20757:142;;-1:-1:-1;;;;;;20994:7:167;;;;:12;;:35;;21015:8;;21026:2;;20994:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21039:5:167;;21058:8;;21039:33;;-1:-1:-1;;;21039:33:167;;-1:-1:-1;;;;;21039:5:167;;;;-1:-1:-1;21039:10:167;;-1:-1:-1;21039:33:167;;21058:8;;;;21069:2;;21039:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21179:6:167;;21162:25;;-1:-1:-1;;;21162:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;21162:8:167;;-1:-1:-1;21162:25:167;;-1:-1:-1;;;;;21179:6:167;;21162:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21197:8:167;;21215:7;;21197:33;;-1:-1:-1;;;21197:33:167;;-1:-1:-1;;;;;21197:8:167;;;;-1:-1:-1;21197:17:167;;-1:-1:-1;21197:33:167;;21224:2;;21197:8;;:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21258:6:167;;21241:25;;-1:-1:-1;;;21241:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;21241:8:167;;-1:-1:-1;21241:25:167;;-1:-1:-1;;;;;21258:6:167;;21241:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21276:8:167;;:37;;-1:-1:-1;;;21276:37:167;;-1:-1:-1;;;;;21276:8:167;;;;-1:-1:-1;21276:17:167;;-1:-1:-1;21276:37:167;;21294:9;;21305:2;;21309:3;;21276:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21403:7:167;;21429:8;;21403:36;;-1:-1:-1;;;21403:36:167;;21394:50;;-1:-1:-1;;;;;;21403:7:167;;;;-1:-1:-1;21403:17:167;;:36;;21429:8;;21403:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21441:2;21394:8;:50::i;:::-;21463:5;;21487:8;;21463:34;;-1:-1:-1;;;21463:34:167;;21454:48;;-1:-1:-1;;;;;21463:5:167;;;;:15;;:34;;21487:8;;;;21463:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21499:2;21454:8;:48::i;:::-;21599:14;;;21611:1;21599:14;;;;;;;;;21575:21;;21599:14;;;;;;;;;-1:-1:-1;;21635:7:167;;21623:9;;;;-1:-1:-1;;;;;;21635:7:167;;21623:9;;-1:-1:-1;21635:7:167;;21623:9;;;;:::i;:::-;-1:-1:-1;;;;;21623:19:167;;;:9;;;;;;;;;;:19;;;;21757:131;;;-1:-1:-1;;;21757:131:167;;;;1026:25:184;;;;21757:131:167;;;;;;;;;;999:18:184;;;;21757:131:167;;;;;;;-1:-1:-1;;;;;21757:131:167;-1:-1:-1;;;21757:131:167;;;21911:5;;21902:15;;-1:-1:-1;;;21902:15:167;;21757:131;;-1:-1:-1;;;;;;;;;;;250:64:1;21902:8:167;;:15;;21911:5;;21902:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21931:20:167;;-1:-1:-1;;;21931:20:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;21931:15:167;;-1:-1:-1;21931:20:167;;21947:3;;21931:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21965:8:167;;:32;;-1:-1:-1;;;21965:32:167;;-1:-1:-1;;;;;21965:8:167;;;;-1:-1:-1;21965:24:167;;-1:-1:-1;21965:32:167;;21990:6;;21965:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22074:8:167;;22065:18;;-1:-1:-1;;;22065:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;22065:8:167;;-1:-1:-1;22065:18:167;;-1:-1:-1;;;;;;22074:8:167;;;;22065:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22093:8:167;;:32;;-1:-1:-1;;;22093:32:167;;-1:-1:-1;;;;;22093:8:167;;;;-1:-1:-1;22093:24:167;;-1:-1:-1;22093:32:167;;22118:6;;22093:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22227:7:167;;22253:8;;22227:36;;-1:-1:-1;;;22227:36:167;;22218:49;;-1:-1:-1;;;;;;22227:7:167;;;;-1:-1:-1;22227:17:167;;:36;;22253:8;;22227:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22265:1;22218:8;:49::i;:::-;22286:7;;22312:8;;22286:36;;-1:-1:-1;;;22286:36:167;;22277:69;;-1:-1:-1;;;;;22286:7:167;;;;:17;;:36;;22312:8;;;;22286:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22324:16;;:21;;22343:2;22324:21;:::i;22277:69::-;22425:5;;22413:9;;-1:-1:-1;;;;;22425:5:167;;;;22413:6;;22425:5;;22413:9;;;;:::i;:::-;-1:-1:-1;;;;;22413:17:167;;;:9;;;;;;;;;:17;22497:8;;22488:18;;-1:-1:-1;;;22488:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;22488:8:167;;:18;;22497:8;;;22488:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22516:8:167;;:32;;-1:-1:-1;;;22516:32:167;;-1:-1:-1;;;;;22516:8:167;;;;-1:-1:-1;22516:24:167;;-1:-1:-1;22516:32:167;;22541:6;;22516:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22648:5:167;;22672:8;;22648:34;;-1:-1:-1;;;22648:34:167;;22639:47;;-1:-1:-1;;;;;;22648:5:167;;;;-1:-1:-1;22648:15:167;;:34;;22672:8;;22648:34;;;:::i;22639:47::-;22705:5;;22729:8;;22705:34;;-1:-1:-1;;;22705:34:167;;22696:67;;-1:-1:-1;;;;;22705:5:167;;;;:15;;:34;;22729:8;;;;22705:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22741:16;;;;:21;;22760:2;22741:21;:::i;22696:67::-;22864:90;;;;;;;;;;22881:7;;22907:8;;-1:-1:-1;;;22881:36:167;;;22864:90;;;;-1:-1:-1;;;;;22881:7:167;;;;:17;;:36;;22907:8;22881:36;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22864:90;;22919:5;;22943:8;;22919:34;;-1:-1:-1;;;22919:34:167;;22864:90;;;;;-1:-1:-1;;;;;22919:5:167;;;;:15;;:34;;22943:8;;;22919:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22864:90;;23049:7;;23070:8;;23049:35;;-1:-1:-1;;;23049:35:167;;22864:90;;-1:-1:-1;;;;;;23049:7:167;;;;:12;;:35;;23070:8;;23081:2;;23049:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23094:5:167;;23113:8;;23094:33;;-1:-1:-1;;;23094:33:167;;-1:-1:-1;;;;;23094:5:167;;;;-1:-1:-1;23094:10:167;;-1:-1:-1;23094:33:167;;23113:8;;;;23124:2;;23094:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23234:6:167;;23217:25;;-1:-1:-1;;;23217:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;23217:8:167;;-1:-1:-1;23217:25:167;;-1:-1:-1;;;;;23234:6:167;;23217:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23252:8:167;;23270:7;;23252:33;;-1:-1:-1;;;23252:33:167;;-1:-1:-1;;;;;23252:8:167;;;;-1:-1:-1;23252:17:167;;-1:-1:-1;23252:33:167;;23279:2;;23252:8;;:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23313:6:167;;23296:25;;-1:-1:-1;;;23296:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;23296:8:167;;-1:-1:-1;23296:25:167;;-1:-1:-1;;;;;23313:6:167;;23296:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23331:8:167;;:37;;-1:-1:-1;;;23331:37:167;;-1:-1:-1;;;;;23331:8:167;;;;-1:-1:-1;23331:17:167;;-1:-1:-1;23331:37:167;;23349:9;;23360:2;;23364:3;;23331:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23451:7:167;;23477:8;;23451:36;;-1:-1:-1;;;23451:36:167;;23442:50;;-1:-1:-1;;;;;;23451:7:167;;;;-1:-1:-1;23451:17:167;;:36;;23477:8;;23451:36;;;:::i;23442:50::-;23511:5;;23535:8;;23511:34;;-1:-1:-1;;;23511:34:167;;23502:48;;-1:-1:-1;;;;;23511:5:167;;;;:15;;:34;;23535:8;;;;23511:34;;;:::i;23502:48::-;23622:14;;;23634:1;23622:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;23658:7:167;;23646:9;;;;-1:-1:-1;;;;;;23658:7:167;;23646:9;;-1:-1:-1;23658:7:167;;23646:9;;;;:::i;:::-;-1:-1:-1;;;;;23646:19:167;;;:9;;;;;;;;;:19;23687:5;;23675:9;;23687:5;;;23675:6;;23687:5;;23675:9;;;;;;:::i;:::-;-1:-1:-1;;;;;23675:17:167;;;:9;;;;;;;;;:17;23712:8;;23703:18;;-1:-1:-1;;;23703:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;23703:8:167;;:18;;23712:8;;;23703:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23731:8:167;;:32;;-1:-1:-1;;;23731:32:167;;-1:-1:-1;;;;;23731:8:167;;;;-1:-1:-1;23731:24:167;;-1:-1:-1;23731:32:167;;23756:6;;23731:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23865:7:167;;23891:8;;23865:36;;-1:-1:-1;;;23865:36:167;;23856:49;;-1:-1:-1;;;;;;23865:7:167;;;;-1:-1:-1;23865:17:167;;:36;;23891:8;;23865:36;;;:::i;23856:49::-;23924:7;;23950:8;;23924:36;;-1:-1:-1;;;23924:36:167;;23915:69;;-1:-1:-1;;;;;23924:7:167;;;;:17;;:36;;23950:8;;;;23924:36;;;:::i;23915:69::-;24084:5;;24108:8;;24084:34;;-1:-1:-1;;;24084:34:167;;24075:47;;-1:-1:-1;;;;;24084:5:167;;;;:15;;:34;;24108:8;;;;24084:34;;;:::i;24075:47::-;24141:5;;24165:8;;24141:34;;-1:-1:-1;;;24141:34:167;;24132:67;;-1:-1:-1;;;;;24141:5:167;;;;:15;;:34;;24165:8;;;;24141:34;;;:::i;24132:67::-;20420:3786;;;20370:3836::o;11728:3283::-;12102:4;;12125:6;;12102:31;;-1:-1:-1;;;12102:31:167;;12077:22;;-1:-1:-1;;;;;12102:4:167;;;;:14;;:31;;12125:6;;;;12102:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12170:7;;12196:8;;12170:36;;-1:-1:-1;;;12170:36:167;;12077:56;;-1:-1:-1;12143:24:167;;-1:-1:-1;;;;;12170:7:167;;;;:17;;:36;;12196:8;;;12170:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12280:7;;12301:8;;12280:36;;-1:-1:-1;;;12280:36:167;;12143:63;;-1:-1:-1;;;;;;12280:7:167;;;;:12;;:36;;12301:8;;12312:3;;12280:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12399:6:167;;12382:25;;-1:-1:-1;;;12382:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;12382:8:167;;-1:-1:-1;12382:25:167;;-1:-1:-1;;;;;12399:6:167;;12382:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12417:8:167;;12435:7;;12417:35;;-1:-1:-1;;;12417:35:167;;-1:-1:-1;;;;;12417:8:167;;;;-1:-1:-1;12417:17:167;;-1:-1:-1;12417:35:167;;12444:3;;12449:2;;12417:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12545:4:167;;12568:6;;12545:31;;-1:-1:-1;;;12545:31:167;;12536:62;;-1:-1:-1;;;;;;12545:4:167;;;;-1:-1:-1;12545:14:167;;:31;;12568:6;;12545:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12578:19;:14;12595:2;12578:19;:::i;12536:62::-;12617:7;;12643:8;;12617:36;;-1:-1:-1;;;12617:36:167;;12608:70;;-1:-1:-1;;;;;12617:7:167;;;;:17;;:36;;12643:8;;;;12617:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12655:22;:16;12674:3;12655:22;:::i;12608:70::-;12959:7;;12985:6;;12959:34;;-1:-1:-1;;;12959:34:167;;-1:-1:-1;;;;;12959:7:167;;;;:17;;:34;;12985:6;;;12959:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13022:4;;13045:8;;13022:33;;-1:-1:-1;;;13022:33:167;;12942:51;;-1:-1:-1;;;;;;13022:4:167;;;;:14;;:33;;13045:8;;13022:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13129:4;;13147:8;;13129:32;;-1:-1:-1;;;13129:32:167;;13003:52;;-1:-1:-1;;;;;;13129:4:167;;;;:9;;:32;;13147:8;;13158:2;;13129:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13244:6:167;;13227:25;;-1:-1:-1;;;13227:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13227:8:167;;-1:-1:-1;13227:25:167;;-1:-1:-1;;;;;13244:6:167;;13227:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13262:8:167;;13280:7;;13262:35;;-1:-1:-1;;;13262:35:167;;-1:-1:-1;;;;;13262:8:167;;;;-1:-1:-1;13262:17:167;;-1:-1:-1;13262:35:167;;13289:2;;13293:3;;13262:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13475:7:167;;13501:6;;13475:34;;-1:-1:-1;;;13475:34:167;;13466:66;;-1:-1:-1;;;;;;13475:7:167;;;;-1:-1:-1;13475:17:167;;:34;;13501:6;;13475:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13511:20;:14;13528:3;13511:20;:::i;13466:66::-;13551:4;;13574:8;;13551:33;;-1:-1:-1;;;13551:33:167;;13542:61;;-1:-1:-1;;;;;13551:4:167;;;;:14;;:33;;13574:8;;;;13551:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13586:16;13542:8;:61::i;:::-;13887:4;;13910:6;;13887:31;;-1:-1:-1;;;13887:31:167;;-1:-1:-1;;;;;13887:4:167;;;;:14;;:31;;13910:6;;;13887:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13947:4;;13970:8;;13947:33;;-1:-1:-1;;;13947:33:167;;13870:48;;-1:-1:-1;;;;;;13947:4:167;;;;:14;;:33;;13970:8;;13947:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14054:4;;14072:8;;14054:33;;-1:-1:-1;;;14054:33:167;;13928:52;;-1:-1:-1;;;;;;14054:4:167;;;;:9;;:33;;14072:8;;14083:3;;14054:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14170:6:167;;14153:25;;-1:-1:-1;;;14153:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;14153:8:167;;-1:-1:-1;14153:25:167;;-1:-1:-1;;;;;14170:6:167;;14153:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14188:8:167;;14206:12;;14188:41;;-1:-1:-1;;;14188:41:167;;-1:-1:-1;;;;;14188:8:167;;;;-1:-1:-1;14188:17:167;;-1:-1:-1;14188:41:167;;14220:3;;14225;;14188:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14322:4:167;;14345:6;;14322:31;;-1:-1:-1;;;14322:31:167;;14313:63;;-1:-1:-1;;;;;;14322:4:167;;;;-1:-1:-1;14322:14:167;;:31;;14345:6;;14322:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14355:20;:14;14372:3;14355:20;:::i;14313:63::-;14395:4;;14418:8;;14395:33;;-1:-1:-1;;;14395:33:167;;14386:61;;-1:-1:-1;;;;;14395:4:167;;;;:14;;:33;;14418:8;;;;14395:33;;;:::i;14386:61::-;14638:7;;14659:8;;14638:36;;-1:-1:-1;;;14638:36:167;;-1:-1:-1;;;;;14638:7:167;;;;:12;;:36;;14659:8;;;14670:3;;14638:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14758:16;14866:12;;14777:111;;;;;;1026:25:184;;1014:2;999:18;;863:194;14777:111:167;;;;-1:-1:-1;;14777:111:167;;;;;;;;;;;;;;-1:-1:-1;;;;;14777:111:167;-1:-1:-1;;;14777:111:167;;;14915:6;;14898:25;;-1:-1:-1;;;14898:25:167;;14777:111;;-1:-1:-1;;;;;;;;;;;;250:64:1;14898:8:167;;:25;;-1:-1:-1;;;;;14915:6:167;;;;;14898:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14933:20:167;;-1:-1:-1;;;14933:20:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;14933:15:167;;-1:-1:-1;14933:20:167;;14949:3;;14933:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14963:8:167;;14981:12;;14963:41;;-1:-1:-1;;;14963:41:167;;-1:-1:-1;;;;;14963:8:167;;;;-1:-1:-1;14963:17:167;;-1:-1:-1;14963:41:167;;14995:3;;15000;;14963:41;;;:::i;19808:556::-;19962:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19962:51:167;-1:-1:-1;;;19962:51:167;;;20023:20;;-1:-1:-1;;;20023:20:167;;19962:51;;-1:-1:-1;;;;;;;;;;;250:64:1;20023:15:167;;:20;;19962:51;;20023:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20062:8:167;;20053:18;;-1:-1:-1;;;20053:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;20053:8:167;;-1:-1:-1;20053:18:167;;-1:-1:-1;;;;;20062:8:167;;20053:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20081:8:167;;:42;;-1:-1:-1;;;20081:42:167;;-1:-1:-1;;;;;20081:8:167;;;;-1:-1:-1;20081:20:167;;-1:-1:-1;20081:42:167;;:8;;:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20187:8:167;;20178:18;;-1:-1:-1;;;20178:18:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;20178:8:167;;-1:-1:-1;20178:18:167;;-1:-1:-1;;;;;20187:8:167;;20178:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20206:8:167;;20236:5;;20206:37;;-1:-1:-1;;;20206:37:167;;-1:-1:-1;;;;;20206:8:167;;;;-1:-1:-1;20206:20:167;;-1:-1:-1;20206:37:167;;20236:5;;;;20206:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20312:45;20329:8;;;;;;;;;-1:-1:-1;;;;;20329:8:167;-1:-1:-1;;;;;20329:17:167;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20351:5;;-1:-1:-1;;;;;20351:5:167;20312:8;:45::i;:::-;19854:510;19808:556::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;18040:1099:167:-;18189:7;;18198:4;;18160:13;;18176:36;;-1:-1:-1;;;;;18189:7:167;;;;18198:4;18160:13;18189:7;18210:1;18176:12;:36::i;:::-;18251:7;;18260:4;;18160:52;;-1:-1:-1;18222:13:167;;18238:36;;-1:-1:-1;;;;;18251:7:167;;;;18260:4;18222:13;18251:7;18272:1;18238:12;:36::i;:::-;18386:123;;;-1:-1:-1;;;18386:123:167;;;;1026:25:184;;;;18386:123:167;;;;;;;;;;999:18:184;;;;18386:123:167;;;;;;;-1:-1:-1;;;;;18386:123:167;-1:-1:-1;;;18386:123:167;;;18528:5;;18519:15;;-1:-1:-1;;;18519:15:167;;18222:52;;-1:-1:-1;18386:123:167;-1:-1:-1;;;;;;;;;;;250:64:1;18519:8:167;;:15;;-1:-1:-1;;;;;18528:5:167;;18519:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18544:20:167;;-1:-1:-1;;;18544:20:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;18544:15:167;;-1:-1:-1;18544:20:167;;18560:3;;18544:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18574:8:167;;18601:6;;18574:42;;-1:-1:-1;;;18574:42:167;;-1:-1:-1;;;;;18574:8:167;;;;-1:-1:-1;18574:18:167;;-1:-1:-1;18574:42:167;;18601:6;;;;18610:5;;18574:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18703:6:167;;18694:16;;-1:-1:-1;;;18694:16:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;18694:8:167;;-1:-1:-1;18694:16:167;;-1:-1:-1;;;;;18703:6:167;;18694:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18720:8:167;;18747:6;;18720:42;;-1:-1:-1;;;18720:42:167;;-1:-1:-1;;;;;18720:8:167;;;;-1:-1:-1;18720:18:167;;-1:-1:-1;18720:42:167;;18747:6;;;;18756:5;;18720:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18818:8:167;;18851:6;;18818:48;;-1:-1:-1;;;18818:48:167;;-1:-1:-1;;;;;18818:8:167;;;;-1:-1:-1;18818:24:167;;-1:-1:-1;18818:48:167;;18851:6;;;;18860:5;;18818:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18811:56;;;;:::i;:::-;18965:8;;18948:27;;-1:-1:-1;;;18948:27:167;;-1:-1:-1;;;;;;;;;;;250:64:1;18948:8:167;;:27;;-1:-1:-1;;;;;18965:8:167;;18948:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18985:8:167;;19012:6;;18985:42;;-1:-1:-1;;;18985:42:167;;-1:-1:-1;;;;;18985:8:167;;;;-1:-1:-1;18985:18:167;;-1:-1:-1;18985:42:167;;19012:6;;;;19021:5;;18985:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19083:8:167;;19116:6;;19083:48;;-1:-1:-1;;;19083:48:167;;-1:-1:-1;;;;;19083:8:167;;;;-1:-1:-1;19083:24:167;;-1:-1:-1;19083:48:167;;19116:6;;;;19125:5;;19083:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19076:56;;;;:::i;19145:657::-;19294:7;;19303:4;;19265:13;;19281:36;;-1:-1:-1;;;;;19294:7:167;;;;19303:4;19265:13;19294:7;19315:1;19281:12;:36::i;:::-;19398:6;;19389:16;;-1:-1:-1;;;19389:16:167;;19265:52;;-1:-1:-1;;;;;;;;;;;;250:64:1;19389:8:167;;:16;;-1:-1:-1;;;;;19398:6:167;;;;19389:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19415:8:167;;19442:6;;19415:42;;-1:-1:-1;;;19415:42:167;;-1:-1:-1;;;;;19415:8:167;;;;-1:-1:-1;19415:18:167;;-1:-1:-1;19415:42:167;;19442:6;;;;19451:5;;19415:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19513:8:167;;19546:6;;19513:48;;-1:-1:-1;;;19513:48:167;;-1:-1:-1;;;;;19513:8:167;;;;-1:-1:-1;19513:24:167;;-1:-1:-1;19513:48:167;;19546:6;;;;19555:5;;19513:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19506:56;;;;:::i;:::-;19630:6;;19621:16;;-1:-1:-1;;;19621:16:167;;-1:-1:-1;;;;;;;;;;;250:64:1;19621:8:167;;:16;;-1:-1:-1;;;;;19630:6:167;;19621:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19647:8:167;;19674:6;;19647:42;;-1:-1:-1;;;19647:42:167;;-1:-1:-1;;;;;19647:8:167;;;;-1:-1:-1;19647:18:167;;-1:-1:-1;19647:42:167;;19674:6;;;;19683:5;;19647:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19746:8:167;;19779:6;;19746:48;;-1:-1:-1;;;19746:48:167;;-1:-1:-1;;;;;19746:8:167;;;;-1:-1:-1;19746:24:167;;-1:-1:-1;19746:48:167;;19779:6;;;;19788:5;;19746:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19745:49;19738:57;;;;:::i;15017:1378::-;15261:55;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15261:55:167;-1:-1:-1;;;15261:55:167;;;15343:6;;15326:25;;-1:-1:-1;;;15326:25:167;;15261:55;;-1:-1:-1;;;;;;;;;;;250:64:1;15326:8:167;;:25;;-1:-1:-1;;;;;15343:6:167;;15326:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15361:20:167;;-1:-1:-1;;;15361:20:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;15361:15:167;;-1:-1:-1;15361:20:167;;15377:3;;15361:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15391:8:167;;15409:7;;15391:34;;-1:-1:-1;;;15391:34:167;;-1:-1:-1;;;;;15391:8:167;;;;-1:-1:-1;15391:17:167;;-1:-1:-1;15391:34:167;;15418:2;;;;15391:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15490:7:167;;15511:8;;15490:34;;-1:-1:-1;;;15490:34:167;;-1:-1:-1;;;;;15490:7:167;;;;-1:-1:-1;15490:12:167;;-1:-1:-1;15490:34:167;;15511:8;;;;15522:1;;15490:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15552:6:167;;15535:25;;-1:-1:-1;;;15535:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;15535:8:167;;-1:-1:-1;15535:25:167;;-1:-1:-1;;;;;15552:6:167;;15535:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15570:20:167;;-1:-1:-1;;;15570:20:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;15570:15:167;;-1:-1:-1;15570:20:167;;15586:3;;15570:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15600:8:167;;15618:7;;15600:34;;-1:-1:-1;;;15600:34:167;;-1:-1:-1;;;;;15600:8:167;;;;-1:-1:-1;15600:17:167;;-1:-1:-1;15600:34:167;;15627:2;;;;15600:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15726:6:167;;15709:25;;-1:-1:-1;;;15709:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;15709:8:167;;-1:-1:-1;15709:25:167;;-1:-1:-1;;;;;15726:6:167;;15709:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15744:8:167;;15762:7;;15744:32;;-1:-1:-1;;;15744:32:167;;-1:-1:-1;;;;;15744:8:167;;;;-1:-1:-1;15744:17:167;;-1:-1:-1;15744:32:167;;15771:1;;;;15744:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15821:8:167;;15847:7;;15821:34;;-1:-1:-1;;;15821:34:167;;15788:13;;-1:-1:-1;15788:13:167;;-1:-1:-1;;;;;;15821:8:167;;;;:25;;:34;;;;1026:25:184;;;1014:2;999:18;;863:194;15821:34:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15787:68;;;;15866:18;15875:5;15882:1;15866:8;:18::i;:::-;15894:19;15903:6;15911:1;15894:8;:19::i;:::-;16150:7;;16171:8;;16150:35;;-1:-1:-1;;;16150:35:167;;-1:-1:-1;;;;;16150:7:167;;;;:12;;:35;;16171:8;;;16182:2;;16150:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16213:6:167;;16196:25;;-1:-1:-1;;;16196:25:167;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;16196:8:167;;-1:-1:-1;16196:25:167;;-1:-1:-1;;;;;16213:6:167;;16196:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16231:8:167;;16249:7;;16231:34;;-1:-1:-1;;;16231:34:167;;-1:-1:-1;;;;;16231:8:167;;;;-1:-1:-1;16231:17:167;;-1:-1:-1;16231:34:167;;16258:2;;;;16231:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16294:8:167;;16320:7;;16294:34;;-1:-1:-1;;;16294:34:167;;-1:-1:-1;;;;;16294:8:167;;;;-1:-1:-1;16294:25:167;;-1:-1:-1;16294:34:167;;;;1026:25:184;;;1014:2;999:18;;863:194;16294:34:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16276:52;;-1:-1:-1;16276:52:167;-1:-1:-1;16339:19:167;16276:52;16355:2;16339:8;:19::i;:::-;16368:20;16377:6;16385:2;16368:8;:20::i;9413:2128::-;9615:11;9638:21;9662:11;-1:-1:-1;;;;;9662:20:167;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9638:46;;9694:20;9717:10;-1:-1:-1;;;;;9717:19:167;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9694:44;-1:-1:-1;9749:16:167;9788:44;9812:20;9793:15;9788:44;:::i;:::-;9778:55;;:2;:55;:::i;:::-;9768:65;;:7;:65;:::i;:::-;9749:84;-1:-1:-1;9844:20:167;9997:1;9939:42;9962:19;9939:20;:42;:::i;:::-;9938:60;;;;:::i;:::-;9867:56;9908:14;9872:15;9867:56;:::i;:::-;:131;;;;:::i;:::-;9844:154;-1:-1:-1;10009:20:167;10309:19;10258:20;9844:154;10165:15;10143:19;10148:14;10143:2;:19;:::i;:::-;:37;;;;:::i;:::-;10138:89;;;;:::i;:::-;:140;;;;:::i;:::-;:190;;;;:::i;:::-;10063:305;;:2;:305;:::i;:::-;10032:336;;:16;:336;:::i;:::-;10009:359;-1:-1:-1;10379:20:167;10685:19;10634:20;10588:15;10541;10519:19;10524:14;10519:2;:19;:::i;:::-;:37;;;;:::i;:::-;10514:89;;;;:::i;:::-;:140;;;;:::i;:::-;:190;;;;:::i;:::-;10439:305;;:2;:305;:::i;:::-;10403:20;10422:1;10403:16;:20;:::i;:::-;10402:342;;;;:::i;:::-;10796:677;;;;;;;;-1:-1:-1;;;;;10796:677:167;;;;;;;;;;;;10932:8;;;10796:677;;;;;;;10755:38;10796:677;;;;;;;;;;;;;;;;;;;;;;;;11171:6;10796:677;;;;10932:8;10796:677;;;;;10379:365;;-1:-1:-1;10796:677:167;;;11285:24;:15;11303:6;11285:24;:::i;:::-;10796:677;;;;11364:8;10796:677;;;;;;;;-1:-1:-1;10796:677:167;;;;;;;;11491:10;;11515:18;;10755:718;;-1:-1:-1;;;;;;11491:10:167;;;;:23;;11515:18;;10755:718;;11515:18;;:::i;:::-;;;;;;;;;;;;;11491:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11484:50;9413:2128;-1:-1:-1;;;;;;;;;;;;;9413:2128:167:o;5202:262:0:-;5264:1;5259;:6;5255:203;;-1:-1:-1;;;;;;;;;;;5286:41:0;;;;28086:2:184;28068:21;;;28125:2;28105:18;;;28098:30;28164:34;28159:2;28144:18;;28137:62;-1:-1:-1;;;28230:2:184;28215:18;;28208:32;28272:3;28257:19;;27884:398;5286:41:0;;;;;;;;-1:-1:-1;;;;;;;;;;;5375:1:0;5346:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5425:1:0;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;-1:-1:-1;;;;;;;;;;;3705:44:0;;;;29523:2:184;29505:21;;;29562:2;29542:18;;;29535:30;29601:34;29596:2;29581:18;;29574:62;-1:-1:-1;;;29667:2:184;29652:18;;29645:35;29712:3;29697:19;;29321:401;3705:44:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3800:1:0;3768:34;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;3853:1:0;3821:34;;;;;;:::i;2840:242::-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;;;2840:242::o;2410:424::-;2449:16;:14;:16::i;:::-;2445:359;;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;30687:51:184;;;-1:-1:-1;;;30754:18:184;;;30747:34;;;;2705:4:0;30797:18:184;;;30790:34;2482:11:0;;1671:64;2579:43;;30660:18:184;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:108:184:-;-1:-1:-1;;;;;84:31:184;72:44;;14:108::o;127:214::-;-1:-1:-1;;;;;302:32:184;;;;284:51;;272:2;257:18;;127:214::o;1252:127::-;1313:10;1308:3;1304:20;1301:1;1294:31;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1384:131;-1:-1:-1;;;;;1459:31:184;;1449:42;;1439:70;;1505:1;1502;1495:12;1520:138;1599:13;;1621:31;1599:13;1621:31;:::i;1663:1129::-;1758:6;1789:2;1832;1820:9;1811:7;1807:23;1803:32;1800:52;;;1848:1;1845;1838:12;1800:52;1875:16;;-1:-1:-1;;;;;1940:14:184;;;1937:34;;;1967:1;1964;1957:12;1937:34;2005:6;1994:9;1990:22;1980:32;;2050:7;2043:4;2039:2;2035:13;2031:27;2021:55;;2072:1;2069;2062:12;2021:55;2101:2;2095:9;2123:2;2119;2116:10;2113:36;;;2129:18;;:::i;:::-;2175:2;2172:1;2168:10;2207:2;2201:9;2270:2;2266:7;2261:2;2257;2253:11;2249:25;2241:6;2237:38;2325:6;2313:10;2310:22;2305:2;2293:10;2290:18;2287:46;2284:72;;;2336:18;;:::i;:::-;2372:2;2365:22;2422:18;;;2456:15;;;;-1:-1:-1;2498:11:184;;;2494:20;;;2526:19;;;2523:39;;;2558:1;2555;2548:12;2523:39;2582:11;;;;2602:159;2618:6;2613:3;2610:15;2602:159;;;2684:34;2714:3;2684:34;:::i;:::-;2672:47;;2635:12;;;;2739;;;;2602:159;;;2780:6;1663:1129;-1:-1:-1;;;;;;;;1663:1129:184:o;2797:127::-;2858:10;2853:3;2849:20;2846:1;2839:31;2889:4;2886:1;2879:15;2913:4;2910:1;2903:15;2929:323;-1:-1:-1;;;;;3178:15:184;;;3160:34;;3230:15;;3225:2;3210:18;;3203:43;3110:2;3095:18;;2929:323::o;3590:513::-;-1:-1:-1;;;;;3925:15:184;;;3907:34;;3977:15;;;3972:2;3957:18;;3950:43;4029:15;;;4024:2;4009:18;;4002:43;4081:15;;;4076:2;4061:18;;4054:43;3856:3;3841:19;;3590:513::o;10104:1235::-;-1:-1:-1;;;;;10580:15:184;;;10562:34;;10653:15;;;10615:2;10633:18;;;10626:43;;;;10705:15;;;10700:2;10685:18;;10678:43;10511:3;10496:19;;;10756:2;10741:18;;;10801:6;10469:4;10835:171;10849:4;10846:1;10843:11;10835:171;;;10939:13;;-1:-1:-1;;;;;9924:32:184;9912:45;;9989:4;9980:14;;10896:62;-1:-1:-1;10981:15:184;;;;10869:1;10862:9;10835:171;;;10839:3;;11043;11032:9;11028:19;11015:32;;11095:6;11121:1;11131:202;11147:4;11142:3;11139:13;11131:202;;;11216:15;;11233:10;11212:32;11198:47;;11267:14;;;;11306:17;;;;11171:1;11162:11;11131:202;;;11135:3;;;;10104:1235;;;;;;;;:::o;11344:284::-;-1:-1:-1;;;;;11530:32:184;;;;11512:51;;11606:14;11599:22;11594:2;11579:18;;11572:50;11500:2;11485:18;;11344:284::o;11633:438::-;11806:2;11791:18;;11839:1;11828:13;;11818:144;;11884:10;11879:3;11875:20;11872:1;11865:31;11919:4;11916:1;11909:15;11947:4;11944:1;11937:15;11818:144;11971:25;;;-1:-1:-1;;;;;12032:32:184;;;;12027:2;12012:18;;;12005:60;11633:438;:::o;13490:351::-;-1:-1:-1;;;13727:39:184;;-1:-1:-1;;;;;13802:32:184;;;;13797:2;13782:18;;13775:60;13715:2;13700:18;;13490:351::o;14424:127::-;14485:10;14480:3;14476:20;14473:1;14466:31;14516:4;14513:1;14506:15;14540:4;14537:1;14530:15;14556:168;14596:7;14662:1;14658;14654:6;14650:14;14647:1;14644:21;14639:1;14632:9;14625:17;14621:45;14618:71;;;14669:18;;:::i;:::-;-1:-1:-1;14709:9:184;;14556:168::o;14729:274::-;-1:-1:-1;;;;;14921:32:184;;;;14903:51;;14985:2;14970:18;;14963:34;14891:2;14876:18;;14729:274::o;15008:277::-;15075:6;15128:2;15116:9;15107:7;15103:23;15099:32;15096:52;;;15144:1;15141;15134:12;15096:52;15176:9;15170:16;15229:5;15222:13;15215:21;15208:5;15205:32;15195:60;;15251:1;15248;15241:12;15195:60;15274:5;15008:277;-1:-1:-1;;;15008:277:184:o;15578:184::-;15648:6;15701:2;15689:9;15680:7;15676:23;15672:32;15669:52;;;15717:1;15714;15707:12;15669:52;-1:-1:-1;15740:16:184;;15578:184;-1:-1:-1;15578:184:184:o;15949:258::-;16021:1;16031:113;16045:6;16042:1;16039:13;16031:113;;;16121:11;;;16115:18;16102:11;;;16095:39;16067:2;16060:10;16031:113;;;16162:6;16159:1;16156:13;16153:48;;;-1:-1:-1;;16197:1:184;16179:16;;16172:27;15949:258::o;16212:381::-;16359:2;16348:9;16341:21;16322:4;16391:6;16385:13;16434:6;16429:2;16418:9;16414:18;16407:34;16450:66;16509:6;16504:2;16493:9;16489:18;16484:2;16476:6;16472:15;16450:66;:::i;:::-;16577:2;16556:15;-1:-1:-1;;16552:29:184;16537:45;;;;16584:2;16533:54;;16212:381;-1:-1:-1;;16212:381:184:o;16598:337::-;16818:25;;;16874:2;16859:18;;16852:34;;;;16917:2;16902:18;;16895:34;16806:2;16791:18;;16598:337::o;16940:128::-;16980:3;17011:1;17007:6;17004:1;17001:13;16998:39;;;17017:18;;:::i;:::-;-1:-1:-1;17053:9:184;;16940:128::o;17073:245::-;17152:6;17160;17213:2;17201:9;17192:7;17188:23;17184:32;17181:52;;;17229:1;17226;17219:12;17181:52;-1:-1:-1;;17252:16:184;;17308:2;17293:18;;;17287:25;17252:16;;17287:25;;-1:-1:-1;17073:245:184:o;18477:673::-;18663:2;18715:21;;;18785:13;;18688:18;;;18807:22;;;18634:4;;18663:2;18886:15;;;;18860:2;18845:18;;;18634:4;18929:195;18943:6;18940:1;18937:13;18929:195;;;19008:13;;-1:-1:-1;;;;;19004:39:184;18992:52;;19099:15;;;;19064:12;;;;19040:1;18958:9;18929:195;;;-1:-1:-1;19141:3:184;;18477:673;-1:-1:-1;;;;;;18477:673:184:o;20763:269::-;20851:6;20904:2;20892:9;20883:7;20879:23;20875:32;20872:52;;;20920:1;20917;20910:12;20872:52;20952:9;20946:16;20971:31;20996:5;20971:31;:::i;21316:371::-;-1:-1:-1;;;;;;21501:33:184;;21489:46;;21558:13;;21471:3;;21580:61;21558:13;21630:1;21621:11;;21614:4;21602:17;;21580:61;:::i;:::-;21661:16;;;;21679:1;21657:24;;21316:371;-1:-1:-1;;;21316:371:184:o;21692:274::-;21821:3;21859:6;21853:13;21875:53;21921:6;21916:3;21909:4;21901:6;21897:17;21875:53;:::i;:::-;21944:16;;;;;21692:274;-1:-1:-1;;21692:274:184:o;21971:127::-;22032:10;22027:3;22023:20;22020:1;22013:31;22063:4;22060:1;22053:15;22087:4;22084:1;22077:15;23018:273;23086:6;23139:2;23127:9;23118:7;23114:23;23110:32;23107:52;;;23155:1;23152;23145:12;23107:52;23187:9;23181:16;23237:4;23230:5;23226:16;23219:5;23216:27;23206:55;;23257:1;23254;23247:12;23296:333;23333:4;23363:16;;;23399;;;23434:11;;;23461:10;;-1:-1:-1;;23482:18:184;;23473:28;;23457:45;23454:71;;;23505:18;;:::i;:::-;23564:3;23558:4;23554:14;23549:3;23545:24;23541:2;23537:33;23534:59;;;23573:18;;:::i;:::-;-1:-1:-1;23610:13:184;;;23296:333;-1:-1:-1;;;23296:333:184:o;23634:422::-;23723:1;23766:5;23723:1;23780:270;23801:7;23791:8;23788:21;23780:270;;;23860:4;23856:1;23852:6;23848:17;23842:4;23839:27;23836:53;;;23869:18;;:::i;:::-;23919:7;23909:8;23905:22;23902:55;;;23939:16;;;;23902:55;24018:22;;;;23978:15;;;;23780:270;;;23784:3;23634:422;;;;;:::o;24061:806::-;24110:5;24140:8;24130:80;;-1:-1:-1;24181:1:184;24195:5;;24130:80;24229:4;24219:76;;-1:-1:-1;24266:1:184;24280:5;;24219:76;24311:4;24329:1;24324:59;;;;24397:1;24392:130;;;;24304:218;;24324:59;24354:1;24345:10;;24368:5;;;24392:130;24429:3;24419:8;24416:17;24413:43;;;24436:18;;:::i;:::-;-1:-1:-1;;24492:1:184;24478:16;;24507:5;;24304:218;;24606:2;24596:8;24593:16;24587:3;24581:4;24578:13;24574:36;24568:2;24558:8;24555:16;24550:2;24544:4;24541:12;24537:35;24534:77;24531:159;;;-1:-1:-1;24643:19:184;;;24675:5;;24531:159;24722:34;24747:8;24741:4;24722:34;:::i;:::-;24792:6;24788:1;24784:6;24780:19;24771:7;24768:32;24765:58;;;24803:18;;:::i;:::-;24841:20;;-1:-1:-1;24061:806:184;;;;;:::o;24872:140::-;24930:5;24959:47;25000:4;24990:8;24986:19;24980:4;24959:47;:::i;25017:127::-;25078:10;25073:3;25069:20;25066:1;25059:31;25109:4;25106:1;25099:15;25133:4;25130:1;25123:15;25149:270;25186:1;25227;25224;25213:16;25263:1;25260;25249:16;25284:3;25274:37;;25291:18;;:::i;:::-;-1:-1:-1;;25327:17:184;;-1:-1:-1;;25346:15:184;;25323:39;25320:65;;;25365:18;;:::i;:::-;25399:14;;;25149:270;-1:-1:-1;;;25149:270:184:o;25424:204::-;25462:3;25498:4;25495:1;25491:12;25530:4;25527:1;25523:12;25565:3;25559:4;25555:14;25550:3;25547:23;25544:49;;;25573:18;;:::i;:::-;25609:13;;25424:204;-1:-1:-1;;;25424:204:184:o;25633:195::-;25671:4;25708;25705:1;25701:12;25740:4;25737:1;25733:12;25765:3;25760;25757:12;25754:38;;;25772:18;;:::i;:::-;25809:13;;;25633:195;-1:-1:-1;;;25633:195:184:o;25833:331::-;25870:3;25913:1;25910;25899:16;25949:1;25946;25935:16;25979:1;25974:3;25970:11;26028:3;26022:4;26018:14;26013:3;26009:24;26004:2;25997:10;25993:41;25990:67;;;26037:18;;:::i;:::-;26100:3;26094;26090:8;26086:18;26081:3;26077:28;26073:2;26069:37;26066:63;;;26109:18;;:::i;:::-;-1:-1:-1;26145:13:184;;25833:331;-1:-1:-1;;;25833:331:184:o;26169:120::-;26209:1;26235;26225:35;;26240:18;;:::i;:::-;-1:-1:-1;26274:9:184;;26169:120::o;26389:1490::-;26543:4;26585:3;26574:9;26570:19;26562:27;;26598:48;26636:9;26627:6;26621:13;26598:48;:::i;:::-;26693:4;26685:6;26681:17;26675:24;26708:58;26760:4;26749:9;26745:20;26731:12;26708:58;:::i;:::-;;26815:4;26807:6;26803:17;26797:24;26830:60;26884:4;26873:9;26869:20;26853:14;26830:60;:::i;:::-;;26939:4;26931:6;26927:17;26921:24;26954:53;27001:4;26990:9;26986:20;26970:14;416:13;409:21;397:34;;346:91;26954:53;;27063:4;27055:6;27051:17;27045:24;27038:4;27027:9;27023:20;27016:54;27126:4;27118:6;27114:17;27108:24;27101:4;27090:9;27086:20;27079:54;27189:4;27181:6;27177:17;27171:24;27164:4;27153:9;27149:20;27142:54;27245:4;27237:6;27233:17;27227:24;27260:55;27309:4;27298:9;27294:20;27278:14;10081:10;10070:22;10058:35;;10005:94;27260:55;-1:-1:-1;27334:6:184;27377:15;;;27371:22;7128:14;7117:26;;;27436:18;;;7105:39;;;;27474:6;27517:15;;;27511:22;7117:26;;;27576:18;;;7105:39;27614:6;27657:15;;;27651:22;10081:10;10070:22;27716:18;;;10058:35;27754:6;27797:15;;;27791:22;-1:-1:-1;26357:20:184;27854:18;;;;26345:33;;;;26389:1490;:::o;28287:159::-;28364:2;28352:15;;-1:-1:-1;;;28392:4:184;28383:14;;28376:36;28437:2;28428:12;;28287:159::o;28451:348::-;28681:2;28670:9;28663:21;28644:4;28701:49;28746:2;28735:9;28731:18;28701:49;:::i;:::-;28693:57;;28786:6;28781:2;28770:9;28766:18;28759:34;28451:348;;;;:::o;28804:159::-;28881:2;28869:15;;-1:-1:-1;;;28909:4:184;28900:14;;28893:36;28954:2;28945:12;;28804:159::o;28968:348::-;29198:2;29187:9;29180:21;29161:4;29218:49;29263:2;29252:9;29248:18;29218:49;:::i;29727:374::-;29957:2;29946:9;29939:21;29920:4;29977:49;30022:2;30011:9;30007:18;29977:49;:::i;:::-;-1:-1:-1;;;;;30062:32:184;;;;30057:2;30042:18;;;;30035:60;;;;-1:-1:-1;29969:57:184;29727:374::o;30106:::-;30336:2;30325:9;30318:21;30299:4;30356:49;30401:2;30390:9;30386:18;30356:49;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectness_OnlyWhitelistedMarketsCanCallback()": "38906dbd",
    "testCorrectness_amountsForMarket()": "3be22132",
    "testCorrectness_batchToTreasury()": "4b59caab",
    "testCorrectness_blacklist()": "de5f3102",
    "testCorrectness_callback()": "570af261",
    "testCorrectness_callbackMustReceiveTokens()": "f2b2afce",
    "testCorrectness_setOperator()": "9e0c5608",
    "testCorrectness_whitelist()": "ce597df3",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyWhitelistedMarketsCanCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_amountsForMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_batchToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_callbackMustReceiveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCreator\",\"outputs\":[{\"internalType\":\"contract UserFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testCorrectness_amountsForMarket()\":{\"notice\":\"DONE [X] amountsForMarket\"},\"testCorrectness_callback()\":{\"notice\":\"DONE [X] Callback correctly handles payouts for the 4 market cases [X] Only whitelisted markets can callback\"},\"testCorrectness_whitelist()\":{\"notice\":\"DONE [X] whitelist [X] blacklist [X] setOperator [X] batchToTreasury\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/BondCallback.t.sol\":\"BondCallbackTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":balancer-v2/=lib/balancer-v2/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/auth/authorities/RolesAuthority.sol\":{\"keccak256\":\"0x6cdd6092b5e72d8d4b1b787a44ef3fd734dbef2d40ac71304c08d3a8a991d910\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a16e2e9ded740c31a2db1d27f9186eb8fb637e3ed4412ffa291f0aa14fac5171\",\"dweb:/ipfs/Qmc29fdWzib5ZJEyM23cZUmcRzEtFdcvty5AwMVXThuQie\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/external/GDAO.sol\":{\"keccak256\":\"0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230\",\"dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18\",\"dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU\"]},\"src/interfaces/IGDAO.sol\":{\"keccak256\":\"0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58\",\"dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj\"]},\"src/interfaces/IOlympusAuthority.sol\":{\"keccak256\":\"0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737\",\"dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ\"]},\"src/libraries/Counters.sol\":{\"keccak256\":\"0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0\",\"dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05\",\"dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/MINTR/GoerliMinter.sol\":{\"keccak256\":\"0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b\",\"dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN\"]},\"src/modules/MINTR/MINTR.v1.sol\":{\"keccak256\":\"0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71\",\"dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/RANGE/GoerliDaoRange.sol\":{\"keccak256\":\"0x9ecf1a16a604082df3c8aec95145df9fa341bd2f584d79997d64d21a61a38294\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ae9d9e128674dc6ebaa034b49c0bda742bb1536cc1cd87c9473415fcf0c94c1d\",\"dweb:/ipfs/Qmf8JKoMHrFFpctjMg9wEtMSe5qttFQjMdJiAJXA7jE315\"]},\"src/modules/RANGE/RANGE.v1.sol\":{\"keccak256\":\"0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85\",\"dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/modules/TRSRY/GoerliDaoTreasury.sol\":{\"keccak256\":\"0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471\",\"dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c\"]},\"src/modules/TRSRY/TRSRY.v1.sol\":{\"keccak256\":\"0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2\",\"dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC\"]},\"src/policies/BondCallback.sol\":{\"keccak256\":\"0xea18d909d70162c8f49503b05df389a8ae6a33e238ac0e59b83002cd59995fe7\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6d9d039762205e2101a30e6d118c7c0460993151b284fb08ed87d2b9d359aed\",\"dweb:/ipfs/QmenfPVTiy8vshK521kLDYd9iXhiuKpBRgt7VRzrBc2gD8\"]},\"src/policies/Operator.sol\":{\"keccak256\":\"0xd1718c6b7c914747d3a0b31ad400c620cb793dbed30c6b9f4b5a1df3111bf379\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://16a0b234ad284299b33607bdcdb2c1f2e2bfbf8012c8d6e79de3b50d6ffb2293\",\"dweb:/ipfs/QmT64hsDCZZKFSjtndDNgkTwdPCXPpbATGC4Gdd4XZzA5r\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/lib/bonds/BondAggregator.sol\":{\"keccak256\":\"0xf3bcab28a7d94f64a0673ecd5b19db92c5f931e2e0dbeb0d0302400b79a5e473\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aa02ade17adb2fbc3b08601b51ee36f91e4fba55cf93b54d5991944a36b68358\",\"dweb:/ipfs/Qme3sZu1yChuxJVhbAjhkigSsJdctT9WSmNPJ3unb3exPW\"]},\"src/test/lib/bonds/BondFixedTermSDA.sol\":{\"keccak256\":\"0xbeed481d8363576ee264a97f62eb734a41b317d02fc914cdb680127012f08271\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://24f687cc843ac0bf72bf636e40296855028cfaa45a1fe9b203d0ab50193ba682\",\"dweb:/ipfs/QmXevwRG5z98cX2hnzEMJ7C8HhKPBJ2RiqzFtFzJ1LyNds\"]},\"src/test/lib/bonds/BondFixedTermTeller.sol\":{\"keccak256\":\"0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97\",\"dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT\"]},\"src/test/lib/bonds/bases/BondBaseSDA.sol\":{\"keccak256\":\"0x39d93e1eb0a1f8c599a4197a2dcd4c3e5c206e13fd7826caf107380d08f2151c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2fe7d154037dd98c969afe6f1c313093ddecc57301cd1bd94cd02e70d46c1a39\",\"dweb:/ipfs/QmfKBTWeujToMu2X2CuEkjMwwWZjfsLhjBeomdKMVq97uP\"]},\"src/test/lib/bonds/bases/BondBaseTeller.sol\":{\"keccak256\":\"0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6\",\"dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH\"]},\"src/test/lib/bonds/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/test/lib/bonds/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/test/lib/bonds/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol\":{\"keccak256\":\"0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9\",\"dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7\"]},\"src/test/lib/bonds/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/test/lib/bonds/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/test/lib/bonds/lib/ERC1155.sol\":{\"keccak256\":\"0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11\",\"dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H\"]},\"src/test/mocks/MockPrice.sol\":{\"keccak256\":\"0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495\",\"dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd\"]},\"src/test/policies/BondCallback.t.sol\":{\"keccak256\":\"0x4a80a1e9006d939e69c1aafae1323b1471e382d5053300131218e7dbec91fb00\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8b3bc3005435eacaf60cfe148dda78295ecbd028c2ca397a9da9d2709280b9f1\",\"dweb:/ipfs/QmXLyDhd3TGRKVzqCaUiUEfkBnzq5ZcgAZWDu6e5og7THW\"]},\"src/types/OlympusAccessControlled.sol\":{\"keccak256\":\"0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1\",\"dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_amountsForMarket"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_batchToTreasury"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_blacklist"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_callback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_callbackMustReceiveTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_whitelist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userCreator",
          "outputs": [
            {
              "internalType": "contract UserFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testCorrectness_amountsForMarket()": {
            "notice": "DONE [X] amountsForMarket"
          },
          "testCorrectness_callback()": {
            "notice": "DONE [X] Callback correctly handles payouts for the 4 market cases [X] Only whitelisted markets can callback"
          },
          "testCorrectness_whitelist()": {
            "notice": "DONE [X] whitelist [X] blacklist [X] setOperator [X] batchToTreasury"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":balancer-v2/=lib/balancer-v2/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/BondCallback.t.sol": "BondCallbackTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/auth/authorities/RolesAuthority.sol": {
        "keccak256": "0x6cdd6092b5e72d8d4b1b787a44ef3fd734dbef2d40ac71304c08d3a8a991d910",
        "urls": [
          "bzz-raw://a16e2e9ded740c31a2db1d27f9186eb8fb637e3ed4412ffa291f0aa14fac5171",
          "dweb:/ipfs/Qmc29fdWzib5ZJEyM23cZUmcRzEtFdcvty5AwMVXThuQie"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/GDAO.sol": {
        "keccak256": "0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd",
        "urls": [
          "bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230",
          "dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c",
        "urls": [
          "bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18",
          "dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IGDAO.sol": {
        "keccak256": "0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2",
        "urls": [
          "bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58",
          "dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOlympusAuthority.sol": {
        "keccak256": "0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25",
        "urls": [
          "bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737",
          "dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/Counters.sol": {
        "keccak256": "0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c",
        "urls": [
          "bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0",
          "dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeMath.sol": {
        "keccak256": "0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed",
        "urls": [
          "bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05",
          "dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/GoerliMinter.sol": {
        "keccak256": "0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1",
        "urls": [
          "bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b",
          "dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/MINTR.v1.sol": {
        "keccak256": "0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c",
        "urls": [
          "bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71",
          "dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/RANGE/GoerliDaoRange.sol": {
        "keccak256": "0x9ecf1a16a604082df3c8aec95145df9fa341bd2f584d79997d64d21a61a38294",
        "urls": [
          "bzz-raw://ae9d9e128674dc6ebaa034b49c0bda742bb1536cc1cd87c9473415fcf0c94c1d",
          "dweb:/ipfs/Qmf8JKoMHrFFpctjMg9wEtMSe5qttFQjMdJiAJXA7jE315"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/RANGE/RANGE.v1.sol": {
        "keccak256": "0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb",
        "urls": [
          "bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85",
          "dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/GoerliDaoTreasury.sol": {
        "keccak256": "0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc",
        "urls": [
          "bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471",
          "dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/TRSRY.v1.sol": {
        "keccak256": "0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1",
        "urls": [
          "bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2",
          "dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/BondCallback.sol": {
        "keccak256": "0xea18d909d70162c8f49503b05df389a8ae6a33e238ac0e59b83002cd59995fe7",
        "urls": [
          "bzz-raw://e6d9d039762205e2101a30e6d118c7c0460993151b284fb08ed87d2b9d359aed",
          "dweb:/ipfs/QmenfPVTiy8vshK521kLDYd9iXhiuKpBRgt7VRzrBc2gD8"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/Operator.sol": {
        "keccak256": "0xd1718c6b7c914747d3a0b31ad400c620cb793dbed30c6b9f4b5a1df3111bf379",
        "urls": [
          "bzz-raw://16a0b234ad284299b33607bdcdb2c1f2e2bfbf8012c8d6e79de3b50d6ffb2293",
          "dweb:/ipfs/QmT64hsDCZZKFSjtndDNgkTwdPCXPpbATGC4Gdd4XZzA5r"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/lib/bonds/BondAggregator.sol": {
        "keccak256": "0xf3bcab28a7d94f64a0673ecd5b19db92c5f931e2e0dbeb0d0302400b79a5e473",
        "urls": [
          "bzz-raw://aa02ade17adb2fbc3b08601b51ee36f91e4fba55cf93b54d5991944a36b68358",
          "dweb:/ipfs/Qme3sZu1yChuxJVhbAjhkigSsJdctT9WSmNPJ3unb3exPW"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/BondFixedTermSDA.sol": {
        "keccak256": "0xbeed481d8363576ee264a97f62eb734a41b317d02fc914cdb680127012f08271",
        "urls": [
          "bzz-raw://24f687cc843ac0bf72bf636e40296855028cfaa45a1fe9b203d0ab50193ba682",
          "dweb:/ipfs/QmXevwRG5z98cX2hnzEMJ7C8HhKPBJ2RiqzFtFzJ1LyNds"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/BondFixedTermTeller.sol": {
        "keccak256": "0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3",
        "urls": [
          "bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97",
          "dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/bases/BondBaseSDA.sol": {
        "keccak256": "0x39d93e1eb0a1f8c599a4197a2dcd4c3e5c206e13fd7826caf107380d08f2151c",
        "urls": [
          "bzz-raw://2fe7d154037dd98c969afe6f1c313093ddecc57301cd1bd94cd02e70d46c1a39",
          "dweb:/ipfs/QmfKBTWeujToMu2X2CuEkjMwwWZjfsLhjBeomdKMVq97uP"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/bases/BondBaseTeller.sol": {
        "keccak256": "0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098",
        "urls": [
          "bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6",
          "dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol": {
        "keccak256": "0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746",
        "urls": [
          "bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9",
          "dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/lib/ERC1155.sol": {
        "keccak256": "0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197",
        "urls": [
          "bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11",
          "dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/mocks/MockPrice.sol": {
        "keccak256": "0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c",
        "urls": [
          "bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495",
          "dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/policies/BondCallback.t.sol": {
        "keccak256": "0x4a80a1e9006d939e69c1aafae1323b1471e382d5053300131218e7dbec91fb00",
        "urls": [
          "bzz-raw://8b3bc3005435eacaf60cfe148dda78295ecbd028c2ca397a9da9d2709280b9f1",
          "dweb:/ipfs/QmXLyDhd3TGRKVzqCaUiUEfkBnzq5ZcgAZWDu6e5og7THW"
        ],
        "license": "Unlicense"
      },
      "src/types/OlympusAccessControlled.sol": {
        "keccak256": "0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf",
        "urls": [
          "bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1",
          "dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/BondCallback.t.sol",
    "id": 78595,
    "exportedSymbols": {
      "Actions": [
        28076
      ],
      "BondAggregator": [
        54885
      ],
      "BondCallback": [
        45747
      ],
      "BondCallbackTest": [
        78594
      ],
      "BondFixedTermSDA": [
        54961
      ],
      "BondFixedTermTeller": [
        55576
      ],
      "ERC20": [
        25226
      ],
      "FullMath": [
        37436
      ],
      "GDAO": [
        31028
      ],
      "GoerliDaoRange": [
        40252
      ],
      "GoerliDaoRoles": [
        40681
      ],
      "GoerliDaoTreasury": [
        41299
      ],
      "GoerliMinter": [
        38501
      ],
      "IBondAggregator": [
        35702
      ],
      "IBondSDA": [
        36137
      ],
      "Instruction": [
        28082
      ],
      "InvalidKeycode": [
        28099
      ],
      "Kernel": [
        29225
      ],
      "KernelAdapter": [
        28240
      ],
      "Keycode": [
        28090
      ],
      "LibIBondSDA": [
        59330
      ],
      "MockERC20": [
        24174
      ],
      "MockGdao": [
        76270
      ],
      "MockPrice": [
        66695
      ],
      "Module": [
        28305
      ],
      "Operator": [
        49840
      ],
      "Permissions": [
        28088
      ],
      "Policy": [
        28387
      ],
      "ROLESv1": [
        40760
      ],
      "RolesAdmin": [
        51124
      ],
      "RolesAuthority": [
        23605
      ],
      "SolmateAuthority": [
        23330
      ],
      "TargetNotAContract": [
        28094
      ],
      "Test": [
        4979
      ],
      "UserFactory": [
        53895
      ],
      "console2": [
        23158
      ],
      "ensureContract": [
        28143
      ],
      "ensureValidKeycode": [
        28188
      ],
      "fromKeycode": [
        28127
      ],
      "toKeycode": [
        28113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:25076:167",
    "nodes": [
      {
        "id": 76180,
        "nodeType": "PragmaDirective",
        "src": "38:24:167",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 76182,
        "nodeType": "ImportDirective",
        "src": "64:40:167",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 6319,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76181,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4979,
              "src": "72:4:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76184,
        "nodeType": "ImportDirective",
        "src": "105:48:167",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 23159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76183,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23158,
              "src": "113:8:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76186,
        "nodeType": "ImportDirective",
        "src": "154:53:167",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 53896,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76185,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53895,
              "src": "162:11:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76188,
        "nodeType": "ImportDirective",
        "src": "209:69:167",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/BondFixedTermSDA.sol",
        "file": "test/lib/bonds/BondFixedTermSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 54962,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76187,
              "name": "BondFixedTermSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54961,
              "src": "217:16:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76190,
        "nodeType": "ImportDirective",
        "src": "279:65:167",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/BondAggregator.sol",
        "file": "test/lib/bonds/BondAggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 54886,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76189,
              "name": "BondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54885,
              "src": "287:14:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76192,
        "nodeType": "ImportDirective",
        "src": "345:75:167",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/BondFixedTermTeller.sol",
        "file": "test/lib/bonds/BondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 55577,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76191,
              "name": "BondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55576,
              "src": "353:19:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76194,
        "nodeType": "ImportDirective",
        "src": "421:79:167",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/interfaces/IBondSDA.sol",
        "file": "test/lib/bonds/interfaces/IBondSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 59331,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76193,
              "name": "IBondSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59330,
              "src": "429:8:167",
              "typeDescriptions": {}
            },
            "local": "LibIBondSDA",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76197,
        "nodeType": "ImportDirective",
        "src": "501:106:167",
        "nodes": [],
        "absolutePath": "lib/solmate/src/auth/authorities/RolesAuthority.sol",
        "file": "solmate/auth/authorities/RolesAuthority.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 23606,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76195,
              "name": "RolesAuthority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23605,
              "src": "509:14:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76196,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23330,
              "src": "525:9:167",
              "typeDescriptions": {}
            },
            "local": "SolmateAuthority",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76200,
        "nodeType": "ImportDirective",
        "src": "609:72:167",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 24175,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76198,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24174,
              "src": "617:9:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76199,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25226,
              "src": "628:5:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76202,
        "nodeType": "ImportDirective",
        "src": "682:51:167",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockPrice.sol",
        "file": "test/mocks/MockPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 66696,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76201,
              "name": "MockPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66695,
              "src": "690:9:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76204,
        "nodeType": "ImportDirective",
        "src": "735:49:167",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondSDA.sol",
        "file": "interfaces/IBondSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 36138,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76203,
              "name": "IBondSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36137,
              "src": "743:8:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76206,
        "nodeType": "ImportDirective",
        "src": "785:63:167",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondAggregator.sol",
        "file": "interfaces/IBondAggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 35703,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76205,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35702,
              "src": "793:15:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76208,
        "nodeType": "ImportDirective",
        "src": "850:48:167",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 37437,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76207,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37436,
              "src": "858:8:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76210,
        "nodeType": "ImportDirective",
        "src": "900:64:167",
        "nodes": [],
        "absolutePath": "src/modules/RANGE/GoerliDaoRange.sol",
        "file": "modules/RANGE/GoerliDaoRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 40253,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76209,
              "name": "GoerliDaoRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40252,
              "src": "908:14:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76212,
        "nodeType": "ImportDirective",
        "src": "965:70:167",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "file": "modules/TRSRY/GoerliDaoTreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 41300,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76211,
              "name": "GoerliDaoTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41299,
              "src": "973:17:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76215,
        "nodeType": "ImportDirective",
        "src": "1036:66:167",
        "nodes": [],
        "absolutePath": "src/modules/MINTR/GoerliMinter.sol",
        "file": "modules/MINTR/GoerliMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 38502,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76213,
              "name": "GoerliMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38501,
              "src": "1044:12:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76214,
              "name": "GDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31028,
              "src": "1058:4:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76217,
        "nodeType": "ImportDirective",
        "src": "1103:64:167",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 40682,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76216,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40681,
              "src": "1111:14:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76219,
        "nodeType": "ImportDirective",
        "src": "1168:51:167",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 40761,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76218,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40760,
              "src": "1176:7:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76221,
        "nodeType": "ImportDirective",
        "src": "1220:51:167",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 51125,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76220,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51124,
              "src": "1228:10:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76223,
        "nodeType": "ImportDirective",
        "src": "1272:47:167",
        "nodes": [],
        "absolutePath": "src/policies/Operator.sol",
        "file": "policies/Operator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 49841,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76222,
              "name": "Operator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49840,
              "src": "1280:8:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76225,
        "nodeType": "ImportDirective",
        "src": "1320:55:167",
        "nodes": [],
        "absolutePath": "src/policies/BondCallback.sol",
        "file": "policies/BondCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 45748,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76224,
              "name": "BondCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45747,
              "src": "1328:12:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76226,
        "nodeType": "ImportDirective",
        "src": "1377:24:167",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78595,
        "sourceUnit": 29226,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76270,
        "nodeType": "ContractDefinition",
        "src": "1403:371:167",
        "nodes": [
          {
            "id": 76243,
            "nodeType": "FunctionDefinition",
            "src": "1436:138:167",
            "nodes": [],
            "body": {
              "id": 76242,
              "nodeType": "Block",
              "src": "1572:2:167",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76237,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76230,
                    "src": "1545:5:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 76238,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76232,
                    "src": "1552:7:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 76239,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76234,
                    "src": "1561:9:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 76240,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 76236,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25226,
                  "src": "1539:5:167"
                },
                "nodeType": "ModifierInvocation",
                "src": "1539:32:167"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 76235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76230,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1471:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 76243,
                  "src": "1457:19:167",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:6:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76232,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1500:7:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 76243,
                  "src": "1486:21:167",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:6:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76234,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "1523:9:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 76243,
                  "src": "1517:15:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 76233,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:5:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:91:167"
            },
            "returnParameters": {
              "id": 76241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1572:0:167"
            },
            "scope": 76270,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76256,
            "nodeType": "FunctionDefinition",
            "src": "1580:89:167",
            "nodes": [],
            "body": {
              "id": 76255,
              "nodeType": "Block",
              "src": "1636:33:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76251,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76245,
                        "src": "1652:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76252,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76247,
                        "src": "1656:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76250,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25197,
                      "src": "1646:5:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76254,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:16:167"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1589:4:167",
            "parameters": {
              "id": 76248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76245,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1602:2:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 76256,
                  "src": "1594:10:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:167",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76247,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1614:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 76256,
                  "src": "1606:13:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:27:167"
            },
            "returnParameters": {
              "id": 76249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:0:167"
            },
            "scope": 76270,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 76269,
            "nodeType": "FunctionDefinition",
            "src": "1675:97:167",
            "nodes": [],
            "body": {
              "id": 76268,
              "nodeType": "Block",
              "src": "1737:35:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76264,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76258,
                        "src": "1753:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76265,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76260,
                        "src": "1759:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76263,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25225,
                      "src": "1747:5:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76267,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:18:167"
                }
              ]
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "1684:8:167",
            "parameters": {
              "id": 76261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76258,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1701:4:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 76269,
                  "src": "1693:12:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:167",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76260,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1715:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 76269,
                  "src": "1707:13:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:29:167"
            },
            "returnParameters": {
              "id": 76262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:167"
            },
            "scope": 76270,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76227,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25226,
              "src": "1424:5:167"
            },
            "id": 76228,
            "nodeType": "InheritanceSpecifier",
            "src": "1424:5:167"
          }
        ],
        "canonicalName": "MockGdao",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          76270,
          25226
        ],
        "name": "MockGdao",
        "nameLocation": "1412:8:167",
        "scope": 78595,
        "usedErrors": []
      },
      {
        "id": 78594,
        "nodeType": "ContractDefinition",
        "src": "1822:23291:167",
        "nodes": [
          {
            "id": 76275,
            "nodeType": "UsingForDirective",
            "src": "1862:27:167",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 76273,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37436,
              "src": "1868:8:167"
            },
            "typeName": {
              "id": 76274,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1881:7:167",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 76278,
            "nodeType": "VariableDeclaration",
            "src": "1895:30:167",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1914:11:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$53895",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 76277,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76276,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53895,
                "src": "1895:11:167"
              },
              "referencedDeclaration": 53895,
              "src": "1895:11:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$53895",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 76280,
            "nodeType": "VariableDeclaration",
            "src": "1931:22:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1948:5:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76279,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1931:7:167",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76282,
            "nodeType": "VariableDeclaration",
            "src": "1959:20:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1976:3:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76281,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1959:7:167",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76284,
            "nodeType": "VariableDeclaration",
            "src": "1985:25:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "guardian",
            "nameLocation": "2002:8:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76283,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1985:7:167",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76286,
            "nodeType": "VariableDeclaration",
            "src": "2016:23:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "2033:6:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76285,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2016:7:167",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76289,
            "nodeType": "VariableDeclaration",
            "src": "2046:28:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "auth",
            "nameLocation": "2070:4:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAuthority_$23605",
              "typeString": "contract RolesAuthority"
            },
            "typeName": {
              "id": 76288,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76287,
                "name": "RolesAuthority",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23605,
                "src": "2046:14:167"
              },
              "referencedDeclaration": 23605,
              "src": "2046:14:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                "typeString": "contract RolesAuthority"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76292,
            "nodeType": "VariableDeclaration",
            "src": "2080:34:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "aggregator",
            "nameLocation": "2104:10:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondAggregator_$54885",
              "typeString": "contract BondAggregator"
            },
            "typeName": {
              "id": 76291,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76290,
                "name": "BondAggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54885,
                "src": "2080:14:167"
              },
              "referencedDeclaration": 54885,
              "src": "2080:14:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondAggregator_$54885",
                "typeString": "contract BondAggregator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76295,
            "nodeType": "VariableDeclaration",
            "src": "2120:35:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "teller",
            "nameLocation": "2149:6:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
              "typeString": "contract BondFixedTermTeller"
            },
            "typeName": {
              "id": 76294,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76293,
                "name": "BondFixedTermTeller",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55576,
                "src": "2120:19:167"
              },
              "referencedDeclaration": 55576,
              "src": "2120:19:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                "typeString": "contract BondFixedTermTeller"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76298,
            "nodeType": "VariableDeclaration",
            "src": "2161:36:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "auctioneer",
            "nameLocation": "2187:10:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
              "typeString": "contract BondFixedTermSDA"
            },
            "typeName": {
              "id": 76297,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76296,
                "name": "BondFixedTermSDA",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54961,
                "src": "2161:16:167"
              },
              "referencedDeclaration": 54961,
              "src": "2161:16:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                "typeString": "contract BondFixedTermSDA"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76301,
            "nodeType": "VariableDeclaration",
            "src": "2203:22:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "gdao",
            "nameLocation": "2221:4:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockGdao_$76270",
              "typeString": "contract MockGdao"
            },
            "typeName": {
              "id": 76300,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76299,
                "name": "MockGdao",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76270,
                "src": "2203:8:167"
              },
              "referencedDeclaration": 76270,
              "src": "2203:8:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockGdao_$76270",
                "typeString": "contract MockGdao"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76304,
            "nodeType": "VariableDeclaration",
            "src": "2231:26:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "2250:7:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24174",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 76303,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76302,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24174,
                "src": "2231:9:167"
              },
              "referencedDeclaration": 24174,
              "src": "2231:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24174",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76307,
            "nodeType": "VariableDeclaration",
            "src": "2263:24:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "other",
            "nameLocation": "2282:5:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24174",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 76306,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76305,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24174,
                "src": "2263:9:167"
              },
              "referencedDeclaration": 24174,
              "src": "2263:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24174",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76310,
            "nodeType": "VariableDeclaration",
            "src": "2294:22:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "2310:6:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$29225",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 76309,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76308,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29225,
                "src": "2294:6:167"
              },
              "referencedDeclaration": 29225,
              "src": "2294:6:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$29225",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76313,
            "nodeType": "VariableDeclaration",
            "src": "2322:24:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "2341:5:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockPrice_$66695",
              "typeString": "contract MockPrice"
            },
            "typeName": {
              "id": 76312,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76311,
                "name": "MockPrice",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66695,
                "src": "2322:9:167"
              },
              "referencedDeclaration": 66695,
              "src": "2322:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockPrice_$66695",
                "typeString": "contract MockPrice"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76316,
            "nodeType": "VariableDeclaration",
            "src": "2352:29:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "range",
            "nameLocation": "2376:5:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
              "typeString": "contract GoerliDaoRange"
            },
            "typeName": {
              "id": 76315,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76314,
                "name": "GoerliDaoRange",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40252,
                "src": "2352:14:167"
              },
              "referencedDeclaration": 40252,
              "src": "2352:14:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
                "typeString": "contract GoerliDaoRange"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76319,
            "nodeType": "VariableDeclaration",
            "src": "2387:35:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "2414:8:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
              "typeString": "contract GoerliDaoTreasury"
            },
            "typeName": {
              "id": 76318,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76317,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41299,
                "src": "2387:17:167"
              },
              "referencedDeclaration": 41299,
              "src": "2387:17:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                "typeString": "contract GoerliDaoTreasury"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76322,
            "nodeType": "VariableDeclaration",
            "src": "2428:28:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "2450:6:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliMinter_$38501",
              "typeString": "contract GoerliMinter"
            },
            "typeName": {
              "id": 76321,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76320,
                "name": "GoerliMinter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38501,
                "src": "2428:12:167"
              },
              "referencedDeclaration": 38501,
              "src": "2428:12:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliMinter_$38501",
                "typeString": "contract GoerliMinter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76325,
            "nodeType": "VariableDeclaration",
            "src": "2462:29:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "2486:5:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 76324,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76323,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40681,
                "src": "2462:14:167"
              },
              "referencedDeclaration": 40681,
              "src": "2462:14:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76328,
            "nodeType": "VariableDeclaration",
            "src": "2498:26:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "2516:8:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Operator_$49840",
              "typeString": "contract Operator"
            },
            "typeName": {
              "id": 76327,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76326,
                "name": "Operator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49840,
                "src": "2498:8:167"
              },
              "referencedDeclaration": 49840,
              "src": "2498:8:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operator_$49840",
                "typeString": "contract Operator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76331,
            "nodeType": "VariableDeclaration",
            "src": "2530:30:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "callback",
            "nameLocation": "2552:8:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondCallback_$45747",
              "typeString": "contract BondCallback"
            },
            "typeName": {
              "id": 76330,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76329,
                "name": "BondCallback",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45747,
                "src": "2530:12:167"
              },
              "referencedDeclaration": 45747,
              "src": "2530:12:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondCallback_$45747",
                "typeString": "contract BondCallback"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76334,
            "nodeType": "VariableDeclaration",
            "src": "2566:30:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "2586:10:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 76333,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76332,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51124,
                "src": "2566:10:167"
              },
              "referencedDeclaration": 51124,
              "src": "2566:10:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76336,
            "nodeType": "VariableDeclaration",
            "src": "2639:24:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "regBond",
            "nameLocation": "2656:7:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76335,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2639:7:167",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76338,
            "nodeType": "VariableDeclaration",
            "src": "2669:24:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "invBond",
            "nameLocation": "2686:7:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76337,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2669:7:167",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76340,
            "nodeType": "VariableDeclaration",
            "src": "2699:29:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "internalBond",
            "nameLocation": "2716:12:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76339,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2699:7:167",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76342,
            "nodeType": "VariableDeclaration",
            "src": "2734:29:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "externalBond",
            "nameLocation": "2751:12:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76341,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2734:7:167",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76344,
            "nodeType": "VariableDeclaration",
            "src": "2769:35:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nonWhitelistedBond",
            "nameLocation": "2786:18:167",
            "scope": 78594,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76343,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2769:7:167",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 77109,
            "nodeType": "FunctionDefinition",
            "src": "2811:6548:167",
            "nodes": [],
            "body": {
              "id": 77108,
              "nodeType": "Block",
              "src": "2835:6524:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 76358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 76356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 76354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 76352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 76350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2853:2:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 76351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2858:3:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "2853:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 76353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2864:2:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "2853:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 76355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2869:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "2853:18:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 76357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2874:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2853:23:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 76347,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2845:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "2845:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 76359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76360,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:32:167"
                },
                {
                  "expression": {
                    "id": 76366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76361,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76278,
                      "src": "2955:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$53895",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2969:15:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$53895_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 76363,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76362,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53895,
                            "src": "2973:11:167"
                          },
                          "referencedDeclaration": 53895,
                          "src": "2973:11:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$53895",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 76365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2969:17:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$53895",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "2955:31:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$53895",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 76367,
                  "nodeType": "ExpressionStatement",
                  "src": "2955:31:167"
                },
                {
                  "id": 76459,
                  "nodeType": "Block",
                  "src": "2996:734:167",
                  "statements": [
                    {
                      "assignments": [
                        76372
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 76372,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "3078:5:167",
                          "nodeType": "VariableDeclaration",
                          "scope": 76459,
                          "src": "3061:22:167",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 76370,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3061:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 76371,
                            "nodeType": "ArrayTypeName",
                            "src": "3061:9:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "documentation": "Deploy bond system to test against",
                      "id": 76377,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 76375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3105:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 76373,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76278,
                            "src": "3086:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$53895",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 76374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53894,
                          "src": "3086:18:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 76376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3086:21:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3061:46:167"
                    },
                    {
                      "expression": {
                        "id": 76382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76378,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76280,
                          "src": "3121:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76379,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76372,
                            "src": "3129:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76381,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 76380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3135:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3129:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3121:16:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76383,
                      "nodeType": "ExpressionStatement",
                      "src": "3121:16:167"
                    },
                    {
                      "expression": {
                        "id": 76388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76384,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76282,
                          "src": "3151:3:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76385,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76372,
                            "src": "3157:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76387,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 76386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3163:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3157:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3151:14:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76389,
                      "nodeType": "ExpressionStatement",
                      "src": "3151:14:167"
                    },
                    {
                      "expression": {
                        "id": 76394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76390,
                          "name": "guardian",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76284,
                          "src": "3179:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76391,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76372,
                            "src": "3190:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76393,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 76392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3196:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3190:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3179:19:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76395,
                      "nodeType": "ExpressionStatement",
                      "src": "3179:19:167"
                    },
                    {
                      "expression": {
                        "id": 76400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76396,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76286,
                          "src": "3212:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76397,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76372,
                            "src": "3221:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76399,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 76398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3227:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3221:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3212:17:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76401,
                      "nodeType": "ExpressionStatement",
                      "src": "3212:17:167"
                    },
                    {
                      "expression": {
                        "id": 76414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76402,
                          "name": "auth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76289,
                          "src": "3243:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                            "typeString": "contract RolesAuthority"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76406,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76284,
                              "src": "3269:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 76410,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3304:1:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 76409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3296:7:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 76408,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3296:7:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3296:10:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76407,
                                "name": "SolmateAuthority",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23330,
                                "src": "3279:16:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Authority_$23330_$",
                                  "typeString": "type(contract Authority)"
                                }
                              },
                              "id": 76412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3279:28:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Authority_$23330",
                                "typeString": "contract Authority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_Authority_$23330",
                                "typeString": "contract Authority"
                              }
                            ],
                            "id": 76405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3250:18:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Authority_$23330_$returns$_t_contract$_RolesAuthority_$23605_$",
                              "typeString": "function (address,contract Authority) returns (contract RolesAuthority)"
                            },
                            "typeName": {
                              "id": 76404,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76403,
                                "name": "RolesAuthority",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 23605,
                                "src": "3254:14:167"
                              },
                              "referencedDeclaration": 23605,
                              "src": "3254:14:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          },
                          "id": 76413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3250:58:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                            "typeString": "contract RolesAuthority"
                          }
                        },
                        "src": "3243:65:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                          "typeString": "contract RolesAuthority"
                        }
                      },
                      "id": 76415,
                      "nodeType": "ExpressionStatement",
                      "src": "3243:65:167"
                    },
                    {
                      "documentation": "Deploy the bond system",
                      "expression": {
                        "id": 76423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76416,
                          "name": "aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76292,
                          "src": "3362:10:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondAggregator_$54885",
                            "typeString": "contract BondAggregator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76420,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76284,
                              "src": "3394:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76421,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76289,
                              "src": "3404:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 76419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3375:18:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Authority_$23330_$returns$_t_contract$_BondAggregator_$54885_$",
                              "typeString": "function (address,contract Authority) returns (contract BondAggregator)"
                            },
                            "typeName": {
                              "id": 76418,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76417,
                                "name": "BondAggregator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54885,
                                "src": "3379:14:167"
                              },
                              "referencedDeclaration": 54885,
                              "src": "3379:14:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$54885",
                                "typeString": "contract BondAggregator"
                              }
                            }
                          },
                          "id": 76422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3375:34:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondAggregator_$54885",
                            "typeString": "contract BondAggregator"
                          }
                        },
                        "src": "3362:47:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondAggregator_$54885",
                          "typeString": "contract BondAggregator"
                        }
                      },
                      "id": 76424,
                      "nodeType": "ExpressionStatement",
                      "src": "3362:47:167"
                    },
                    {
                      "expression": {
                        "id": 76434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76425,
                          "name": "teller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76295,
                          "src": "3423:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                            "typeString": "contract BondFixedTermTeller"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76429,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76284,
                              "src": "3456:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76430,
                              "name": "aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76292,
                              "src": "3466:10:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$54885",
                                "typeString": "contract BondAggregator"
                              }
                            },
                            {
                              "id": 76431,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76284,
                              "src": "3478:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76432,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76289,
                              "src": "3488:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondAggregator_$54885",
                                "typeString": "contract BondAggregator"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 76428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3432:23:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IBondAggregator_$58875_$_t_address_$_t_contract$_Authority_$23330_$returns$_t_contract$_BondFixedTermTeller_$55576_$",
                              "typeString": "function (address,contract IBondAggregator,address,contract Authority) returns (contract BondFixedTermTeller)"
                            },
                            "typeName": {
                              "id": 76427,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76426,
                                "name": "BondFixedTermTeller",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 55576,
                                "src": "3436:19:167"
                              },
                              "referencedDeclaration": 55576,
                              "src": "3436:19:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          },
                          "id": 76433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3432:61:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                            "typeString": "contract BondFixedTermTeller"
                          }
                        },
                        "src": "3423:70:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                          "typeString": "contract BondFixedTermTeller"
                        }
                      },
                      "id": 76435,
                      "nodeType": "ExpressionStatement",
                      "src": "3423:70:167"
                    },
                    {
                      "expression": {
                        "id": 76445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76436,
                          "name": "auctioneer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76298,
                          "src": "3507:10:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                            "typeString": "contract BondFixedTermSDA"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76440,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76295,
                              "src": "3541:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            },
                            {
                              "id": 76441,
                              "name": "aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76292,
                              "src": "3549:10:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$54885",
                                "typeString": "contract BondAggregator"
                              }
                            },
                            {
                              "id": 76442,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76284,
                              "src": "3561:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76443,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76289,
                              "src": "3571:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondAggregator_$54885",
                                "typeString": "contract BondAggregator"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$23605",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 76439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3520:20:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IBondTeller_$59389_$_t_contract$_IBondAggregator_$58875_$_t_address_$_t_contract$_Authority_$23330_$returns$_t_contract$_BondFixedTermSDA_$54961_$",
                              "typeString": "function (contract IBondTeller,contract IBondAggregator,address,contract Authority) returns (contract BondFixedTermSDA)"
                            },
                            "typeName": {
                              "id": 76438,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76437,
                                "name": "BondFixedTermSDA",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54961,
                                "src": "3524:16:167"
                              },
                              "referencedDeclaration": 54961,
                              "src": "3524:16:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                                "typeString": "contract BondFixedTermSDA"
                              }
                            }
                          },
                          "id": 76444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3520:56:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                            "typeString": "contract BondFixedTermSDA"
                          }
                        },
                        "src": "3507:69:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                          "typeString": "contract BondFixedTermSDA"
                        }
                      },
                      "id": 76446,
                      "nodeType": "ExpressionStatement",
                      "src": "3507:69:167"
                    },
                    {
                      "documentation": "Register auctioneer on the bond system",
                      "expression": {
                        "arguments": [
                          {
                            "id": 76450,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76284,
                            "src": "3655:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76447,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "3646:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7030",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 76449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6543,
                          "src": "3646:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 76451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3646:18:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76452,
                      "nodeType": "ExpressionStatement",
                      "src": "3646:18:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 76456,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76298,
                            "src": "3708:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          ],
                          "expression": {
                            "id": 76453,
                            "name": "aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76292,
                            "src": "3678:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondAggregator_$54885",
                              "typeString": "contract BondAggregator"
                            }
                          },
                          "id": 76455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "registerAuctioneer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54013,
                          "src": "3678:29:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IBondAuctioneer_$59060_$returns$__$",
                            "typeString": "function (contract IBondAuctioneer) external"
                          }
                        },
                        "id": 76457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3678:41:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76458,
                      "nodeType": "ExpressionStatement",
                      "src": "3678:41:167"
                    }
                  ]
                },
                {
                  "id": 76490,
                  "nodeType": "Block",
                  "src": "3740:218:167",
                  "statements": [
                    {
                      "documentation": "Deploy mock tokens",
                      "expression": {
                        "id": 76468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76460,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "3789:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "476f65726c692044414f",
                              "id": 76464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3809:12:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b2ac737ae102904102db046021be67598648bc8ea68b97fdedb57ea6ef41ea65",
                                "typeString": "literal_string \"Goerli DAO\""
                              },
                              "value": "Goerli DAO"
                            },
                            {
                              "hexValue": "4744414f",
                              "id": 76465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3823:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              "value": "GDAO"
                            },
                            {
                              "hexValue": "39",
                              "id": 76466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3831:1:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b2ac737ae102904102db046021be67598648bc8ea68b97fdedb57ea6ef41ea65",
                                "typeString": "literal_string \"Goerli DAO\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "id": 76463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3796:12:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockGdao_$76270_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockGdao)"
                            },
                            "typeName": {
                              "id": 76462,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76461,
                                "name": "MockGdao",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 76270,
                                "src": "3800:8:167"
                              },
                              "referencedDeclaration": 76270,
                              "src": "3800:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockGdao_$76270",
                                "typeString": "contract MockGdao"
                              }
                            }
                          },
                          "id": 76467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3796:37:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "src": "3789:44:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 76469,
                      "nodeType": "ExpressionStatement",
                      "src": "3789:44:167"
                    },
                    {
                      "expression": {
                        "id": 76478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76470,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76304,
                          "src": "3847:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657365727665",
                              "id": 76474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3871:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              "value": "Reserve"
                            },
                            {
                              "hexValue": "525356",
                              "id": 76475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3882:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              "value": "RSV"
                            },
                            {
                              "hexValue": "3138",
                              "id": 76476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3889:2:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 76473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3857:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24174_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 76472,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76471,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24174,
                                "src": "3861:9:167"
                              },
                              "referencedDeclaration": 24174,
                              "src": "3861:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24174",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 76477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3857:35:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "3847:45:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76479,
                      "nodeType": "ExpressionStatement",
                      "src": "3847:45:167"
                    },
                    {
                      "expression": {
                        "id": 76488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76480,
                          "name": "other",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76307,
                          "src": "3906:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "4f74686572",
                              "id": 76484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3928:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0691aa2e8423768d061c955d231ebcfd39568459920cd05dc1ff1ffe2ca6f04a",
                                "typeString": "literal_string \"Other\""
                              },
                              "value": "Other"
                            },
                            {
                              "hexValue": "4f5448",
                              "id": 76485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3937:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2bbdabf55ac2a4142a0f27886b9d660587700fc875eb8ee81b5d15ad4198cf44",
                                "typeString": "literal_string \"OTH\""
                              },
                              "value": "OTH"
                            },
                            {
                              "hexValue": "3138",
                              "id": 76486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3944:2:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0691aa2e8423768d061c955d231ebcfd39568459920cd05dc1ff1ffe2ca6f04a",
                                "typeString": "literal_string \"Other\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2bbdabf55ac2a4142a0f27886b9d660587700fc875eb8ee81b5d15ad4198cf44",
                                "typeString": "literal_string \"OTH\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 76483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3914:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24174_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 76482,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76481,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24174,
                                "src": "3918:9:167"
                              },
                              "referencedDeclaration": 24174,
                              "src": "3918:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24174",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 76487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3914:33:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "3906:41:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76489,
                      "nodeType": "ExpressionStatement",
                      "src": "3906:41:167"
                    }
                  ]
                },
                {
                  "id": 76599,
                  "nodeType": "Block",
                  "src": "3968:841:167",
                  "statements": [
                    {
                      "documentation": "Deploy kernel",
                      "expression": {
                        "id": 76496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76491,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76310,
                          "src": "4012:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29225",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 76494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4021:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$29225_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 76493,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76492,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29225,
                                "src": "4025:6:167"
                              },
                              "referencedDeclaration": 29225,
                              "src": "4025:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 76495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4021:12:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29225",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "4012:21:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29225",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 76497,
                      "nodeType": "ExpressionStatement",
                      "src": "4012:21:167"
                    },
                    {
                      "documentation": "Deploy modules (some mocks)",
                      "expression": {
                        "id": 76511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76498,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76313,
                          "src": "4130:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66695",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76502,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "4152:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "38",
                                  "id": 76505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4167:7:167",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  },
                                  "value": "8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  }
                                ],
                                "id": 76504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4160:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 76503,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4160:6:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4160:15:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "id": 76509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 76507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4177:2:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 76508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4182:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "4177:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "id": 76501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4138:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$_t_uint48_$_t_uint256_$returns$_t_contract$_MockPrice_$66695_$",
                              "typeString": "function (contract Kernel,uint48,uint256) returns (contract MockPrice)"
                            },
                            "typeName": {
                              "id": 76500,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76499,
                                "name": "MockPrice",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66695,
                                "src": "4142:9:167"
                              },
                              "referencedDeclaration": 66695,
                              "src": "4142:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockPrice_$66695",
                                "typeString": "contract MockPrice"
                              }
                            }
                          },
                          "id": 76510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4138:49:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66695",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "src": "4130:57:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$66695",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 76512,
                      "nodeType": "ExpressionStatement",
                      "src": "4130:57:167"
                    },
                    {
                      "expression": {
                        "id": 76537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76513,
                          "name": "range",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76316,
                          "src": "4201:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
                            "typeString": "contract GoerliDaoRange"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76517,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "4245:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 76519,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76301,
                                  "src": "4275:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockGdao_$76270",
                                    "typeString": "contract MockGdao"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockGdao_$76270",
                                    "typeString": "contract MockGdao"
                                  }
                                ],
                                "id": 76518,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25226,
                                "src": "4269:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$25226_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 76520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4269:11:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 76522,
                                  "name": "reserve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76304,
                                  "src": "4304:7:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24174",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24174",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 76521,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25226,
                                "src": "4298:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$25226_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 76523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4298:14:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 76526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4338:3:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "id": 76525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4330:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 76524,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4330:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4330:12:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "31303030",
                                  "id": 76530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4368:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "id": 76529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4360:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 76528,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4360:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4360:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32303030",
                                  "id": 76534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4399:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000_by_1",
                                    "typeString": "int_const 2000"
                                  },
                                  "value": "2000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2000_by_1",
                                    "typeString": "int_const 2000"
                                  }
                                ],
                                "id": 76533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4391:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 76532,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4391:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4391:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 76516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4209:18:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_GoerliDaoRange_$40252_$",
                              "typeString": "function (contract Kernel,contract ERC20,contract ERC20,uint256,uint256,uint256) returns (contract GoerliDaoRange)"
                            },
                            "typeName": {
                              "id": 76515,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76514,
                                "name": "GoerliDaoRange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40252,
                                "src": "4213:14:167"
                              },
                              "referencedDeclaration": 40252,
                              "src": "4213:14:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
                                "typeString": "contract GoerliDaoRange"
                              }
                            }
                          },
                          "id": 76536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4209:209:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
                            "typeString": "contract GoerliDaoRange"
                          }
                        },
                        "src": "4201:217:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
                          "typeString": "contract GoerliDaoRange"
                        }
                      },
                      "id": 76538,
                      "nodeType": "ExpressionStatement",
                      "src": "4201:217:167"
                    },
                    {
                      "expression": {
                        "id": 76545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76539,
                          "name": "treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76319,
                          "src": "4432:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76543,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "4465:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 76542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4443:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$returns$_t_contract$_GoerliDaoTreasury_$41299_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoTreasury)"
                            },
                            "typeName": {
                              "id": 76541,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76540,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 41299,
                                "src": "4447:17:167"
                              },
                              "referencedDeclaration": 41299,
                              "src": "4447:17:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            }
                          },
                          "id": 76544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4443:29:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "src": "4432:40:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 76546,
                      "nodeType": "ExpressionStatement",
                      "src": "4432:40:167"
                    },
                    {
                      "expression": {
                        "id": 76557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76547,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76322,
                          "src": "4486:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38501",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76551,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "4512:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 76554,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76301,
                                  "src": "4528:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockGdao_$76270",
                                    "typeString": "contract MockGdao"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockGdao_$76270",
                                    "typeString": "contract MockGdao"
                                  }
                                ],
                                "id": 76553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4520:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 76552,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4520:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4520:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 76550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4495:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$_t_address_$returns$_t_contract$_GoerliMinter_$38501_$",
                              "typeString": "function (contract Kernel,address) returns (contract GoerliMinter)"
                            },
                            "typeName": {
                              "id": 76549,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76548,
                                "name": "GoerliMinter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38501,
                                "src": "4499:12:167"
                              },
                              "referencedDeclaration": 38501,
                              "src": "4499:12:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38501",
                                "typeString": "contract GoerliMinter"
                              }
                            }
                          },
                          "id": 76556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4495:39:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38501",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "src": "4486:48:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38501",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 76558,
                      "nodeType": "ExpressionStatement",
                      "src": "4486:48:167"
                    },
                    {
                      "expression": {
                        "id": 76565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76559,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76325,
                          "src": "4548:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76563,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "4575:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 76562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4556:18:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$returns$_t_contract$_GoerliDaoRoles_$40681_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 76561,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76560,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40681,
                                "src": "4560:14:167"
                              },
                              "referencedDeclaration": 40681,
                              "src": "4560:14:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 76564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4556:26:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "4548:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 76566,
                      "nodeType": "ExpressionStatement",
                      "src": "4548:34:167"
                    },
                    {
                      "documentation": "Configure mocks",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 76572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 76570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4652:3:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 76571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4658:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "4652:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 76567,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76313,
                            "src": "4629:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setMovingAverage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66654,
                          "src": "4629:22:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 76573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76574,
                      "nodeType": "ExpressionStatement",
                      "src": "4629:34:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 76580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 76578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4696:3:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 76579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4702:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "4696:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 76575,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76313,
                            "src": "4677:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66664,
                          "src": "4677:18:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 76581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4677:30:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76582,
                      "nodeType": "ExpressionStatement",
                      "src": "4677:30:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3138",
                            "id": 76586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4739:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "expression": {
                            "id": 76583,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76313,
                            "src": "4721:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDecimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66684,
                          "src": "4721:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) external"
                          }
                        },
                        "id": 76587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4721:21:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76588,
                      "nodeType": "ExpressionStatement",
                      "src": "4721:21:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 76594,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4781:5:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 76595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4781:15:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 76593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4774:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 76592,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "4774:6:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4774:23:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "expression": {
                            "id": 76589,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76313,
                            "src": "4756:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66694,
                          "src": "4756:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                            "typeString": "function (uint48) external"
                          }
                        },
                        "id": 76597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4756:42:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76598,
                      "nodeType": "ExpressionStatement",
                      "src": "4756:42:167"
                    }
                  ]
                },
                {
                  "id": 76710,
                  "nodeType": "Block",
                  "src": "4819:1311:167",
                  "statements": [
                    {
                      "documentation": "Deploy roles admin",
                      "expression": {
                        "id": 76606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76600,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76334,
                          "src": "4868:10:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76604,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "4896:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 76603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4881:14:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$returns$_t_contract$_RolesAdmin_$51124_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 76602,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76601,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51124,
                                "src": "4885:10:167"
                              },
                              "referencedDeclaration": 51124,
                              "src": "4885:10:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 76605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4881:22:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "4868:35:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 76607,
                      "nodeType": "ExpressionStatement",
                      "src": "4868:35:167"
                    },
                    {
                      "documentation": "Deploy bond callback",
                      "expression": {
                        "id": 76621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76608,
                          "name": "callback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76331,
                          "src": "4955:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$45747",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76612,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "4983:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 76616,
                                      "name": "aggregator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76292,
                                      "src": "5015:10:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BondAggregator_$54885",
                                        "typeString": "contract BondAggregator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BondAggregator_$54885",
                                        "typeString": "contract BondAggregator"
                                      }
                                    ],
                                    "id": 76615,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5007:7:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 76614,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5007:7:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5007:19:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76613,
                                "name": "IBondAggregator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35702,
                                "src": "4991:15:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBondAggregator_$35702_$",
                                  "typeString": "type(contract IBondAggregator)"
                                }
                              },
                              "id": 76618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4991:36:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondAggregator_$35702",
                                "typeString": "contract IBondAggregator"
                              }
                            },
                            {
                              "id": 76619,
                              "name": "gdao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76301,
                              "src": "5029:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockGdao_$76270",
                                "typeString": "contract MockGdao"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBondAggregator_$35702",
                                "typeString": "contract IBondAggregator"
                              },
                              {
                                "typeIdentifier": "t_contract$_MockGdao_$76270",
                                "typeString": "contract MockGdao"
                              }
                            ],
                            "id": 76611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4966:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$_t_contract$_IBondAggregator_$35702_$_t_contract$_ERC20_$25226_$returns$_t_contract$_BondCallback_$45747_$",
                              "typeString": "function (contract Kernel,contract IBondAggregator,contract ERC20) returns (contract BondCallback)"
                            },
                            "typeName": {
                              "id": 76610,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76609,
                                "name": "BondCallback",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 45747,
                                "src": "4970:12:167"
                              },
                              "referencedDeclaration": 45747,
                              "src": "4970:12:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              }
                            }
                          },
                          "id": 76620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4966:68:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$45747",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "src": "4955:79:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 76622,
                      "nodeType": "ExpressionStatement",
                      "src": "4955:79:167"
                    },
                    {
                      "documentation": "Deploy operator",
                      "expression": {
                        "id": 76676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76623,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76328,
                          "src": "5081:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Operator_$49840",
                            "typeString": "contract Operator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76627,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76310,
                              "src": "5122:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 76631,
                                      "name": "auctioneer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76298,
                                      "src": "5163:10:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                                        "typeString": "contract BondFixedTermSDA"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                                        "typeString": "contract BondFixedTermSDA"
                                      }
                                    ],
                                    "id": 76630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5155:7:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 76629,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5155:7:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5155:19:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76628,
                                "name": "IBondSDA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36137,
                                "src": "5146:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBondSDA_$36137_$",
                                  "typeString": "type(contract IBondSDA)"
                                }
                              },
                              "id": 76633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5146:29:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondSDA_$36137",
                                "typeString": "contract IBondSDA"
                              }
                            },
                            {
                              "id": 76634,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76331,
                              "src": "5193:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "id": 76636,
                                      "name": "gdao",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76301,
                                      "src": "5226:4:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockGdao_$76270",
                                        "typeString": "contract MockGdao"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockGdao_$76270",
                                        "typeString": "contract MockGdao"
                                      }
                                    ],
                                    "id": 76635,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25226,
                                    "src": "5220:5:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$25226_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 76637,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5220:11:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25226",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 76639,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76304,
                                      "src": "5239:7:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockERC20_$24174",
                                        "typeString": "contract MockERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockERC20_$24174",
                                        "typeString": "contract MockERC20"
                                      }
                                    ],
                                    "id": 76638,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25226,
                                    "src": "5233:5:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$25226_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 76640,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5233:14:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25226",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "id": 76641,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5219:29:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32303030",
                                      "id": 76644,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5295:4:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      },
                                      "value": "2000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      }
                                    ],
                                    "id": 76643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5288:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76642,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5288:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5288:12:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "35",
                                      "id": 76648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5346:6:167",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_432000_by_1",
                                        "typeString": "int_const 432000"
                                      },
                                      "value": "5"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_432000_by_1",
                                        "typeString": "int_const 432000"
                                      }
                                    ],
                                    "id": 76647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5339:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76646,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5339:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5339:14:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "3130305f303030",
                                      "id": 76652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5394:7:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100000_by_1",
                                        "typeString": "int_const 100000"
                                      },
                                      "value": "100_000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100000_by_1",
                                        "typeString": "int_const 100000"
                                      }
                                    ],
                                    "id": 76651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5387:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76650,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5387:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5387:15:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 76656,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5445:7:167",
                                      "subdenomination": "hours",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      }
                                    ],
                                    "id": 76655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5438:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76654,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5438:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76657,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5438:15:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31303030",
                                      "id": 76660,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5501:4:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      }
                                    ],
                                    "id": 76659,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5494:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76658,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5494:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76661,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5494:12:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 76664,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5552:7:167",
                                      "subdenomination": "hours",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      }
                                    ],
                                    "id": 76663,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5545:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76662,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5545:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5545:15:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "35",
                                      "id": 76668,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5602:1:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      },
                                      "value": "5"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      }
                                    ],
                                    "id": 76667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5595:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76666,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5595:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5595:9:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "37",
                                      "id": 76672,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5651:1:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_7_by_1",
                                        "typeString": "int_const 7"
                                      },
                                      "value": "7"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_7_by_1",
                                        "typeString": "int_const 7"
                                      }
                                    ],
                                    "id": 76671,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5644:6:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76670,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5644:6:167",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5644:9:167",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 76674,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5266:484:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$8_memory_ptr",
                                "typeString": "uint32[8] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBondSDA_$36137",
                                "typeString": "contract IBondSDA"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              },
                              {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$8_memory_ptr",
                                "typeString": "uint32[8] memory"
                              }
                            ],
                            "id": 76626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5092:12:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$_t_contract$_IBondSDA_$36137_$_t_contract$_IBondCallback_$35928_$_t_array$_t_contract$_ERC20_$25226_$2_memory_ptr_$_t_array$_t_uint32_$8_memory_ptr_$returns$_t_contract$_Operator_$49840_$",
                              "typeString": "function (contract Kernel,contract IBondSDA,contract IBondCallback,contract ERC20[2] memory,uint32[8] memory) returns (contract Operator)"
                            },
                            "typeName": {
                              "id": 76625,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76624,
                                "name": "Operator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 49840,
                                "src": "5096:8:167"
                              },
                              "referencedDeclaration": 49840,
                              "src": "5096:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Operator_$49840",
                                "typeString": "contract Operator"
                              }
                            }
                          },
                          "id": 76675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5092:672:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Operator_$49840",
                            "typeString": "contract Operator"
                          }
                        },
                        "src": "5081:683:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      },
                      "id": 76677,
                      "nodeType": "ExpressionStatement",
                      "src": "5081:683:167"
                    },
                    {
                      "documentation": "Registor operator to create bond markets with a callback",
                      "expression": {
                        "arguments": [
                          {
                            "id": 76681,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76284,
                            "src": "5861:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76678,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "5852:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7030",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 76680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6543,
                          "src": "5852:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 76682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5852:18:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76683,
                      "nodeType": "ExpressionStatement",
                      "src": "5852:18:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 76689,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76328,
                                "src": "5925:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$49840",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$49840",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 76688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5917:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76687,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5917:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5917:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 76691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5936:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 76684,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76298,
                            "src": "5884:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          },
                          "id": 76686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCallbackAuthStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56555,
                          "src": "5884:32:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,bool) external"
                          }
                        },
                        "id": 76692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5884:57:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76693,
                      "nodeType": "ExpressionStatement",
                      "src": "5884:57:167"
                    },
                    {
                      "documentation": "Register this contract to create bond markets with a callback",
                      "expression": {
                        "arguments": [
                          {
                            "id": 76697,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76284,
                            "src": "6043:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76694,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "6034:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7030",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 76696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6543,
                          "src": "6034:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 76698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6034:18:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76699,
                      "nodeType": "ExpressionStatement",
                      "src": "6034:18:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 76705,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6107:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallbackTest_$78594",
                                  "typeString": "contract BondCallbackTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallbackTest_$78594",
                                  "typeString": "contract BondCallbackTest"
                                }
                              ],
                              "id": 76704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6099:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6099:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6099:13:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 76707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6114:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 76700,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76298,
                            "src": "6066:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          },
                          "id": 76702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCallbackAuthStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56555,
                          "src": "6066:32:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,bool) external"
                          }
                        },
                        "id": 76708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6066:53:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76709,
                      "nodeType": "ExpressionStatement",
                      "src": "6066:53:167"
                    }
                  ]
                },
                {
                  "id": 76799,
                  "nodeType": "Block",
                  "src": "6140:725:167",
                  "statements": [
                    {
                      "documentation": "Install modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76714,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6253:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28070,
                            "src": "6253:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76718,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76313,
                                "src": "6284:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPrice_$66695",
                                  "typeString": "contract MockPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPrice_$66695",
                                  "typeString": "contract MockPrice"
                                }
                              ],
                              "id": 76717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6276:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76716,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6276:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6276:14:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76711,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6232:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6232:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6232:59:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76721,
                      "nodeType": "ExpressionStatement",
                      "src": "6232:59:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76725,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6326:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28070,
                            "src": "6326:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76729,
                                "name": "range",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76316,
                                "src": "6357:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
                                  "typeString": "contract GoerliDaoRange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRange_$40252",
                                  "typeString": "contract GoerliDaoRange"
                                }
                              ],
                              "id": 76728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6349:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76727,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6349:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6349:14:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76722,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6305:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6305:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6305:59:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76732,
                      "nodeType": "ExpressionStatement",
                      "src": "6305:59:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76736,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6399:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28070,
                            "src": "6399:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76740,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76319,
                                "src": "6430:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 76739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6422:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76738,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6422:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6422:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76733,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6378:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6378:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6378:62:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76743,
                      "nodeType": "ExpressionStatement",
                      "src": "6378:62:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76747,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6475:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28070,
                            "src": "6475:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76751,
                                "name": "minter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76322,
                                "src": "6506:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38501",
                                  "typeString": "contract GoerliMinter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38501",
                                  "typeString": "contract GoerliMinter"
                                }
                              ],
                              "id": 76750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6498:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76749,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6498:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6498:15:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76744,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6454:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6454:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6454:60:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76754,
                      "nodeType": "ExpressionStatement",
                      "src": "6454:60:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76758,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6549:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28070,
                            "src": "6549:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76762,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76325,
                                "src": "6580:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 76761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6572:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76760,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6572:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6572:14:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76755,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6528:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6528:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6528:59:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76765,
                      "nodeType": "ExpressionStatement",
                      "src": "6528:59:167"
                    },
                    {
                      "documentation": "Approve policies",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76769,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6656:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28072,
                            "src": "6656:22:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76773,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76328,
                                "src": "6688:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$49840",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$49840",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 76772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6680:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76771,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6680:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6680:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76766,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6635:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6635:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6635:63:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76776,
                      "nodeType": "ExpressionStatement",
                      "src": "6635:63:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76780,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6733:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28072,
                            "src": "6733:22:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76784,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "6765:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 76783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6757:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76782,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6757:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6757:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76777,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6712:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6712:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6712:63:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76787,
                      "nodeType": "ExpressionStatement",
                      "src": "6712:63:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76791,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "6810:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28072,
                            "src": "6810:22:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76795,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76334,
                                "src": "6842:10:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 76794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6834:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76793,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6834:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6834:19:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76788,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76310,
                            "src": "6789:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "6789:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6789:65:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76798,
                      "nodeType": "ExpressionStatement",
                      "src": "6789:65:167"
                    }
                  ]
                },
                {
                  "id": 76855,
                  "nodeType": "Block",
                  "src": "6874:583:167",
                  "statements": [
                    {
                      "documentation": "Operator roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f6f706572617465",
                            "id": 76803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6982:18:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b4d9fb9a6da4dd32edf1c5c44aad7cf2ce8898cb854309656241b15637477090",
                              "typeString": "literal_string \"operator_operate\""
                            },
                            "value": "operator_operate"
                          },
                          {
                            "id": 76804,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76284,
                            "src": "7002:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b4d9fb9a6da4dd32edf1c5c44aad7cf2ce8898cb854309656241b15637477090",
                              "typeString": "literal_string \"operator_operate\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76800,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76334,
                            "src": "6961:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "6961:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6961:50:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76806,
                      "nodeType": "ExpressionStatement",
                      "src": "6961:50:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f7265706f72746572",
                            "id": 76810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7046:19:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_28152516262ac2847353981fed1fe5d5238d78dae987979d66a82d27b53ceed8",
                              "typeString": "literal_string \"operator_reporter\""
                            },
                            "value": "operator_reporter"
                          },
                          {
                            "arguments": [
                              {
                                "id": 76813,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "7075:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 76812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7067:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76811,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7067:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7067:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_28152516262ac2847353981fed1fe5d5238d78dae987979d66a82d27b53ceed8",
                              "typeString": "literal_string \"operator_reporter\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76807,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76334,
                            "src": "7025:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "7025:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7025:60:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76816,
                      "nodeType": "ExpressionStatement",
                      "src": "7025:60:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f706f6c696379",
                            "id": 76820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7120:17:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8d0cdcbebb48d7e2184369befd6a8f24fb6c9a7341595f6ebf2f1c9404c857df",
                              "typeString": "literal_string \"operator_policy\""
                            },
                            "value": "operator_policy"
                          },
                          {
                            "id": 76821,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76286,
                            "src": "7139:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_8d0cdcbebb48d7e2184369befd6a8f24fb6c9a7341595f6ebf2f1c9404c857df",
                              "typeString": "literal_string \"operator_policy\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76817,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76334,
                            "src": "7099:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "7099:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7099:47:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76823,
                      "nodeType": "ExpressionStatement",
                      "src": "7099:47:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f61646d696e",
                            "id": 76827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7181:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f0e196562d5c16895b4aadb374572d4ddc8bb46b0044a7ad6ee316a87634a0d5",
                              "typeString": "literal_string \"operator_admin\""
                            },
                            "value": "operator_admin"
                          },
                          {
                            "id": 76828,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76284,
                            "src": "7199:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f0e196562d5c16895b4aadb374572d4ddc8bb46b0044a7ad6ee316a87634a0d5",
                              "typeString": "literal_string \"operator_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76824,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76334,
                            "src": "7160:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "7160:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7160:48:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76830,
                      "nodeType": "ExpressionStatement",
                      "src": "7160:48:167"
                    },
                    {
                      "documentation": "Bond callback roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f77686974656c697374",
                            "id": 76834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7280:20:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            "value": "callback_whitelist"
                          },
                          {
                            "arguments": [
                              {
                                "id": 76837,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76328,
                                "src": "7310:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$49840",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$49840",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 76836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7302:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76835,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7302:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7302:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76831,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76334,
                            "src": "7259:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "7259:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7259:61:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76840,
                      "nodeType": "ExpressionStatement",
                      "src": "7259:61:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f77686974656c697374",
                            "id": 76844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7355:20:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            "value": "callback_whitelist"
                          },
                          {
                            "id": 76845,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76286,
                            "src": "7377:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76841,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76334,
                            "src": "7334:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "7334:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7334:50:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76847,
                      "nodeType": "ExpressionStatement",
                      "src": "7334:50:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f61646d696e",
                            "id": 76851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7419:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                              "typeString": "literal_string \"callback_admin\""
                            },
                            "value": "callback_admin"
                          },
                          {
                            "id": 76852,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76284,
                            "src": "7437:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                              "typeString": "literal_string \"callback_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76848,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76334,
                            "src": "7398:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "7398:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7398:48:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76854,
                      "nodeType": "ExpressionStatement",
                      "src": "7398:48:167"
                    }
                  ]
                },
                {
                  "documentation": "Set operator on the callback",
                  "expression": {
                    "arguments": [
                      {
                        "id": 76859,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76284,
                        "src": "7517:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76856,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7508:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "7508:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7508:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76861,
                  "nodeType": "ExpressionStatement",
                  "src": "7508:18:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76865,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76328,
                        "src": "7557:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 76862,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "7536:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 76864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45716,
                      "src": "7536:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$49840_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 76866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7536:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76867,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:30:167"
                },
                {
                  "documentation": "Initialize the operator",
                  "expression": {
                    "arguments": [
                      {
                        "id": 76871,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76284,
                        "src": "7622:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76868,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7613:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "7613:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7613:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76873,
                  "nodeType": "ExpressionStatement",
                  "src": "7613:18:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 76874,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76328,
                        "src": "7641:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      },
                      "id": 76876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49590,
                      "src": "7641:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 76877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7641:21:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76878,
                  "nodeType": "ExpressionStatement",
                  "src": "7641:21:167"
                },
                {
                  "assignments": [
                    76880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76880,
                      "mutability": "mutable",
                      "name": "testGdao",
                      "nameLocation": "7738:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77108,
                      "src": "7730:16:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76879,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7730:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76884,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "id": 76883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 76881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7749:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "316539",
                      "id": 76882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7761:3:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000_by_1",
                        "typeString": "int_const 1000000000"
                      },
                      "value": "1e9"
                    },
                    "src": "7749:15:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7730:34:167"
                },
                {
                  "assignments": [
                    76886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76886,
                      "mutability": "mutable",
                      "name": "testReserve",
                      "nameLocation": "7782:11:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77108,
                      "src": "7774:19:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76885,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7774:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76890,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "id": 76889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 76887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7796:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 76888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7808:4:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "7796:16:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7774:38:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76894,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "7833:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76895,
                          "name": "testGdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76880,
                          "src": "7840:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 76896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7851:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7840:13:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76891,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "7823:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 76893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76256,
                      "src": "7823:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 76898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7823:31:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76899,
                  "nodeType": "ExpressionStatement",
                  "src": "7823:31:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76903,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "7877:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76904,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "7884:11:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 76905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7898:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7884:16:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76900,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "7864:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "7864:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 76907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7864:37:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76908,
                  "nodeType": "ExpressionStatement",
                  "src": "7864:37:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76914,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76319,
                            "src": "7933:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 76913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7925:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7925:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7925:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76916,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "7944:11:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 76917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7958:3:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "7944:17:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76909,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "7912:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "7912:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 76919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7912:50:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76920,
                  "nodeType": "ExpressionStatement",
                  "src": "7912:50:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76924,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "8053:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76921,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8044:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "8044:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8044:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76926,
                  "nodeType": "ExpressionStatement",
                  "src": "8044:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76932,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76328,
                            "src": "8090:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 76931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8082:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76930,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8082:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8082:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76934,
                          "name": "testGdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76880,
                          "src": "8101:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 76935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8112:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8101:13:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76927,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "8069:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 76929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24947,
                      "src": "8069:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8069:46:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76938,
                  "nodeType": "ExpressionStatement",
                  "src": "8069:46:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76942,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "8134:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76939,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8125:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "8125:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8125:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76944,
                  "nodeType": "ExpressionStatement",
                  "src": "8125:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76950,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76328,
                            "src": "8174:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 76949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8166:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76948,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8166:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8166:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76952,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "8185:11:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 76953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8199:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8185:16:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76945,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "8150:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24947,
                      "src": "8150:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8150:52:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76956,
                  "nodeType": "ExpressionStatement",
                  "src": "8150:52:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76960,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "8222:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76957,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8213:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "8213:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8213:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76962,
                  "nodeType": "ExpressionStatement",
                  "src": "8213:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76968,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "8259:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 76967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8251:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76966,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8251:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8251:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76970,
                          "name": "testGdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76880,
                          "src": "8268:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 76971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8279:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8268:13:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76963,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "8238:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 76965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24947,
                      "src": "8238:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8238:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76974,
                  "nodeType": "ExpressionStatement",
                  "src": "8238:44:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76978,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "8301:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76975,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8292:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "8292:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8292:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76980,
                  "nodeType": "ExpressionStatement",
                  "src": "8292:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76986,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "8341:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 76985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8333:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76984,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8333:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8333:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76988,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "8350:11:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 76989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8364:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8350:16:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76981,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "8317:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24947,
                      "src": "8317:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8317:50:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76992,
                  "nodeType": "ExpressionStatement",
                  "src": "8317:50:167"
                },
                {
                  "expression": {
                    "id": 77001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76993,
                      "name": "regBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76336,
                      "src": "8478:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76995,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76304,
                          "src": "8501:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 76996,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "8510:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 76997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8516:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 76998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8519:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "33",
                          "id": 76999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8522:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 76994,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77274,
                        "src": "8488:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8488:36:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8478:46:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77002,
                  "nodeType": "ExpressionStatement",
                  "src": "8478:46:167"
                },
                {
                  "expression": {
                    "id": 77011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77003,
                      "name": "invBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76338,
                      "src": "8579:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77005,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "8602:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "id": 77006,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76304,
                          "src": "8608:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 77007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8617:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 77008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8620:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "33",
                          "id": 77009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8623:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 77004,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77274,
                        "src": "8589:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8589:36:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8579:46:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77012,
                  "nodeType": "ExpressionStatement",
                  "src": "8579:46:167"
                },
                {
                  "expression": {
                    "id": 77021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77013,
                      "name": "internalBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76340,
                      "src": "8678:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77015,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "8706:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "id": 77016,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "8712:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 77017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8718:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 77018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8721:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "38",
                          "id": 77019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8724:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 77014,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77274,
                        "src": "8693:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8693:33:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8678:48:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77022,
                  "nodeType": "ExpressionStatement",
                  "src": "8678:48:167"
                },
                {
                  "expression": {
                    "id": 77032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77023,
                      "name": "externalBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76342,
                      "src": "8782:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77025,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76304,
                          "src": "8810:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 77026,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76304,
                          "src": "8819:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 77027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8828:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 77029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "8831:2:167",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 77028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8832:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        {
                          "hexValue": "38",
                          "id": 77030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8835:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 77024,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77274,
                        "src": "8797:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8797:40:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8782:55:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77033,
                  "nodeType": "ExpressionStatement",
                  "src": "8782:55:167"
                },
                {
                  "expression": {
                    "id": 77042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77034,
                      "name": "nonWhitelistedBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76344,
                      "src": "8908:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77036,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76304,
                          "src": "8942:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 77037,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "8951:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 77038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8957:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 77039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8960:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "33",
                          "id": 77040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8963:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 77035,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77274,
                        "src": "8929:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8929:36:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8908:57:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77043,
                  "nodeType": "ExpressionStatement",
                  "src": "8908:57:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77047,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "9038:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77044,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9029:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "9029:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9029:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77049,
                  "nodeType": "ExpressionStatement",
                  "src": "9029:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77055,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "9082:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9074:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77053,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9074:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9074:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77057,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "9091:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77050,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "9055:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "9055:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9055:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77059,
                  "nodeType": "ExpressionStatement",
                  "src": "9055:44:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77063,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "9119:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77060,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9110:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "9110:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9110:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77065,
                  "nodeType": "ExpressionStatement",
                  "src": "9110:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77071,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "9163:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9155:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9155:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9155:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77073,
                        "name": "invBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76338,
                        "src": "9172:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77066,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "9136:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "9136:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9136:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77075,
                  "nodeType": "ExpressionStatement",
                  "src": "9136:44:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77079,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "9200:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77076,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9191:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "9191:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9191:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77081,
                  "nodeType": "ExpressionStatement",
                  "src": "9191:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77087,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "9244:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9236:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77085,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9236:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9236:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77089,
                        "name": "internalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76340,
                        "src": "9253:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77082,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "9217:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "9217:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9217:49:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77091,
                  "nodeType": "ExpressionStatement",
                  "src": "9217:49:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77095,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "9286:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77092,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9277:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "9277:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9277:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77097,
                  "nodeType": "ExpressionStatement",
                  "src": "9277:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77103,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "9330:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9322:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77101,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9322:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9322:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77105,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76342,
                        "src": "9339:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77098,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "9303:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "9303:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9303:49:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77107,
                  "nodeType": "ExpressionStatement",
                  "src": "9303:49:167"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2820:5:167",
            "parameters": {
              "id": 76345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2825:2:167"
            },
            "returnParameters": {
              "id": 76346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2835:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77274,
            "nodeType": "FunctionDefinition",
            "src": "9413:2128:167",
            "nodes": [],
            "body": {
              "id": 77273,
              "nodeType": "Block",
              "src": "9628:1913:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77127,
                      "mutability": "mutable",
                      "name": "_payoutDecimals",
                      "nameLocation": "9644:15:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77273,
                      "src": "9638:21:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 77126,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9638:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77131,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77128,
                        "name": "payoutToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77115,
                        "src": "9662:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 77129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24871,
                      "src": "9662:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 77130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9662:22:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9638:46:167"
                },
                {
                  "assignments": [
                    77133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77133,
                      "mutability": "mutable",
                      "name": "_quoteDecimals",
                      "nameLocation": "9700:14:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77273,
                      "src": "9694:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 77132,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9694:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77137,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77134,
                        "name": "quoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77112,
                        "src": "9717:10:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 77135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24871,
                      "src": "9717:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 77136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9717:21:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9694:44:167"
                },
                {
                  "assignments": [
                    77139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77139,
                      "mutability": "mutable",
                      "name": "capacity",
                      "nameLocation": "9757:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77273,
                      "src": "9749:16:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77138,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9749:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77153,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130305f303030",
                      "id": 77140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9768:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 77151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 77141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9778:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            },
                            "id": 77149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 77146,
                                  "name": "_payoutDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77127,
                                  "src": "9793:15:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 77145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9788:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int8_$",
                                  "typeString": "type(int8)"
                                },
                                "typeName": {
                                  "id": 77144,
                                  "name": "int8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9788:4:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 77147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9788:21:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 77148,
                              "name": "_payoutPriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77119,
                              "src": "9812:20:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "src": "9788:44:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          ],
                          "id": 77143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9782:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 77142,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9782:5:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9782:51:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "9778:55:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9768:65:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9749:84:167"
                },
                {
                  "assignments": [
                    77155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77155,
                      "mutability": "mutable",
                      "name": "scaleAdjustment",
                      "nameLocation": "9849:15:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77273,
                      "src": "9844:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "typeName": {
                        "id": 77154,
                        "name": "int8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9844:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77172,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    },
                    "id": 77171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "id": 77164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 77158,
                            "name": "_payoutDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77127,
                            "src": "9872:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 77157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9867:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int8_$",
                            "typeString": "type(int8)"
                          },
                          "typeName": {
                            "id": 77156,
                            "name": "int8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9867:4:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9867:21:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 77162,
                            "name": "_quoteDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77133,
                            "src": "9908:14:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 77161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9903:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int8_$",
                            "typeString": "type(int8)"
                          },
                          "typeName": {
                            "id": 77160,
                            "name": "int8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9903:4:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9903:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "src": "9867:56:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "id": 77170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            },
                            "id": 77167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 77165,
                              "name": "_payoutPriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77119,
                              "src": "9939:20:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 77166,
                              "name": "_quotePriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77117,
                              "src": "9962:19:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "src": "9939:42:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          }
                        ],
                        "id": 77168,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9938:44:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 77169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9997:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "9938:60:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      }
                    },
                    "src": "9867:131:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9844:154:167"
                },
                {
                  "assignments": [
                    77174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77174,
                      "mutability": "mutable",
                      "name": "initialPrice",
                      "nameLocation": "10017:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77273,
                      "src": "10009:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77173,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10009:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77175,
                      "name": "priceSignificand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77121,
                      "src": "10032:16:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 77195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 77176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10063:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 77192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  },
                                  "id": 77190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    },
                                    "id": 77188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 77185,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 77183,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3336",
                                              "id": 77181,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10143:2:167",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_36_by_1",
                                                "typeString": "int_const 36"
                                              },
                                              "value": "36"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 77182,
                                              "name": "_quoteDecimals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 77133,
                                              "src": "10148:14:167",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "src": "10143:19:167",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 77184,
                                            "name": "_payoutDecimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77127,
                                            "src": "10165:15:167",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "10143:37:167",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 77180,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10138:4:167",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int8_$",
                                          "typeString": "type(int8)"
                                        },
                                        "typeName": {
                                          "id": 77179,
                                          "name": "int8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10138:4:167",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 77186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10138:43:167",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 77187,
                                      "name": "scaleAdjustment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77155,
                                      "src": "10212:15:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "src": "10138:89:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 77189,
                                    "name": "_payoutPriceDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77119,
                                    "src": "10258:20:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "src": "10138:140:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 77191,
                                  "name": "_quotePriceDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77117,
                                  "src": "10309:19:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "10138:190:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 77178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10107:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 77177,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "10107:5:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10107:243:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 77194,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10085:283:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "10063:305:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10032:336:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10009:359:167"
                },
                {
                  "assignments": [
                    77199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77199,
                      "mutability": "mutable",
                      "name": "minimumPrice",
                      "nameLocation": "10387:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77273,
                      "src": "10379:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77198,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10379:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77225,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 77200,
                            "name": "priceSignificand",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77121,
                            "src": "10403:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 77201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10422:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "10403:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 77203,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10402:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 77223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 77204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10439:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 77220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  },
                                  "id": 77218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    },
                                    "id": 77216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 77213,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 77211,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3336",
                                              "id": 77209,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10519:2:167",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_36_by_1",
                                                "typeString": "int_const 36"
                                              },
                                              "value": "36"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 77210,
                                              "name": "_quoteDecimals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 77133,
                                              "src": "10524:14:167",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "src": "10519:19:167",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 77212,
                                            "name": "_payoutDecimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77127,
                                            "src": "10541:15:167",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "10519:37:167",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 77208,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10514:4:167",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int8_$",
                                          "typeString": "type(int8)"
                                        },
                                        "typeName": {
                                          "id": 77207,
                                          "name": "int8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10514:4:167",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 77214,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10514:43:167",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 77215,
                                      "name": "scaleAdjustment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77155,
                                      "src": "10588:15:167",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "src": "10514:89:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 77217,
                                    "name": "_payoutPriceDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77119,
                                    "src": "10634:20:167",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "src": "10514:140:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 77219,
                                  "name": "_quotePriceDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77117,
                                  "src": "10685:19:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "10514:190:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 77206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10483:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 77205,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "10483:5:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10483:243:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 77222,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10461:283:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "10439:305:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10402:342:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10379:365:167"
                },
                {
                  "assignments": [
                    77230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77230,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10787:6:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77273,
                      "src": "10755:38:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$59304_memory_ptr",
                        "typeString": "struct IBondSDA.MarketParams"
                      },
                      "typeName": {
                        "id": 77229,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77228,
                          "name": "LibIBondSDA.MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59304,
                          "src": "10755:24:167"
                        },
                        "referencedDeclaration": 59304,
                        "src": "10755:24:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$59304_storage_ptr",
                          "typeString": "struct IBondSDA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77264,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77233,
                        "name": "payoutToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77115,
                        "src": "10834:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 77234,
                        "name": "quoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77112,
                        "src": "10880:10:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77237,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "10932:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10924:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77235,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10924:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10924:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10979:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 77240,
                        "name": "capacity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77139,
                        "src": "11022:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77241,
                        "name": "initialPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77174,
                        "src": "11064:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77242,
                        "name": "minimumPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77199,
                        "src": "11114:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "35305f303030",
                            "id": 77245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11171:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            },
                            "value": "50_000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            }
                          ],
                          "id": 77244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11164:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 77243,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11164:6:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11164:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 77249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11220:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 77248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11213:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint48_$",
                            "typeString": "type(uint48)"
                          },
                          "typeName": {
                            "id": 77247,
                            "name": "uint48",
                            "nodeType": "ElementaryTypeName",
                            "src": "11213:6:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11213:9:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 77253,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11285:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 77254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11285:15:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "37",
                              "id": 77255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11303:6:167",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                              },
                              "value": "7"
                            },
                            "src": "11285:24:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 77252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11278:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint48_$",
                            "typeString": "type(uint48)"
                          },
                          "typeName": {
                            "id": 77251,
                            "name": "uint48",
                            "nodeType": "ElementaryTypeName",
                            "src": "11278:6:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11278:32:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "3234",
                            "id": 77260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11364:8:167",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "24"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            }
                          ],
                          "id": 77259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11357:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 77258,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11357:6:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11357:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 77262,
                        "name": "scaleAdjustment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77155,
                        "src": "11424:15:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      ],
                      "expression": {
                        "id": 77231,
                        "name": "LibIBondSDA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59330,
                        "src": "10796:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBondSDA_$59330_$",
                          "typeString": "type(contract IBondSDA)"
                        }
                      },
                      "id": 77232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MarketParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59304,
                      "src": "10796:24:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MarketParams_$59304_storage_ptr_$",
                        "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                      }
                    },
                    "id": 77263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10796:677:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$59304_memory_ptr",
                      "typeString": "struct IBondSDA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10755:718:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77269,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77230,
                            "src": "11526:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketParams_$59304_memory_ptr",
                              "typeString": "struct IBondSDA.MarketParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_MarketParams_$59304_memory_ptr",
                              "typeString": "struct IBondSDA.MarketParams memory"
                            }
                          ],
                          "expression": {
                            "id": 77267,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11515:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 77268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11515:10:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 77270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11515:18:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77265,
                        "name": "auctioneer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76298,
                        "src": "11491:10:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermSDA_$54961",
                          "typeString": "contract BondFixedTermSDA"
                        }
                      },
                      "id": 77266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54960,
                      "src": "11491:23:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 77271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11491:43:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 77125,
                  "id": 77272,
                  "nodeType": "Return",
                  "src": "11484:50:167"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "9422:12:167",
            "parameters": {
              "id": 77122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77112,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "9450:10:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 77274,
                  "src": "9444:16:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 77111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77110,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "9444:5:167"
                    },
                    "referencedDeclaration": 25226,
                    "src": "9444:5:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77115,
                  "mutability": "mutable",
                  "name": "payoutToken",
                  "nameLocation": "9476:11:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 77274,
                  "src": "9470:17:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 77114,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77113,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "9470:5:167"
                    },
                    "referencedDeclaration": 25226,
                    "src": "9470:5:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77117,
                  "mutability": "mutable",
                  "name": "_quotePriceDecimals",
                  "nameLocation": "9502:19:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 77274,
                  "src": "9497:24:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 77116,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9497:4:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77119,
                  "mutability": "mutable",
                  "name": "_payoutPriceDecimals",
                  "nameLocation": "9536:20:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 77274,
                  "src": "9531:25:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 77118,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9531:4:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77121,
                  "mutability": "mutable",
                  "name": "priceSignificand",
                  "nameLocation": "9574:16:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 77274,
                  "src": "9566:24:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9566:7:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9434:162:167"
            },
            "returnParameters": {
              "id": 77125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77124,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "9623:3:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 77274,
                  "src": "9615:11:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9615:7:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9614:13:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77537,
            "nodeType": "FunctionDefinition",
            "src": "11728:3283:167",
            "nodes": [],
            "body": {
              "id": 77536,
              "nodeType": "Block",
              "src": "11771:3240:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77280,
                      "mutability": "mutable",
                      "name": "startBalTeller",
                      "nameLocation": "12085:14:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77536,
                      "src": "12077:22:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12077:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store start balances of teller and callback",
                  "id": 77288,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77285,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "12125:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12117:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12117:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12117:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77281,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "12102:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "12102:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12102:31:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12077:56:167"
                },
                {
                  "assignments": [
                    77290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77290,
                      "mutability": "mutable",
                      "name": "startBalCallback",
                      "nameLocation": "12151:16:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77536,
                      "src": "12143:24:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12143:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77298,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77295,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "12196:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12188:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12188:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12188:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77291,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "12170:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "12170:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12170:36:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12143:63:167"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77304,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "12301:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12293:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77302,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12293:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12293:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030",
                        "id": 77306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12312:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        }
                      ],
                      "expression": {
                        "id": 77299,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "12280:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "12280:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12280:36:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77308,
                  "nodeType": "ExpressionStatement",
                  "src": "12280:36:167"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77314,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "12399:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12391:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12391:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12391:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77309,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "12382:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "12382:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12382:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77317,
                  "nodeType": "ExpressionStatement",
                  "src": "12382:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77321,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "12435:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333030",
                        "id": 77322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12444:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12449:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77318,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "12417:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "12417:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12417:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77325,
                  "nodeType": "ExpressionStatement",
                  "src": "12417:35:167"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77331,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76295,
                                "src": "12568:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12560:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77329,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12560:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12560:15:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77327,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76301,
                            "src": "12545:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76270",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "12545:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12545:31:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77334,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77280,
                          "src": "12578:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 77335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12595:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "12578:19:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77326,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "12536:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12536:62:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77338,
                  "nodeType": "ExpressionStatement",
                  "src": "12536:62:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77344,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "12643:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 77343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12635:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77342,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12635:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12635:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77340,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "12617:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 77341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "12617:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12617:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77347,
                          "name": "startBalCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77290,
                          "src": "12655:16:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "333030",
                          "id": 77348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12674:3:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "src": "12655:22:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77339,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "12608:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12608:70:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77351,
                  "nodeType": "ExpressionStatement",
                  "src": "12608:70:167"
                },
                {
                  "documentation": "Store start balances of teller and callback",
                  "expression": {
                    "id": 77360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77352,
                      "name": "startBalTeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77280,
                      "src": "12942:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77357,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76295,
                              "src": "12985:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 77356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12977:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77355,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12977:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12977:15:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77353,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76304,
                          "src": "12959:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 77354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "12959:17:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12959:34:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12942:51:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77361,
                  "nodeType": "ExpressionStatement",
                  "src": "12942:51:167"
                },
                {
                  "expression": {
                    "id": 77370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77362,
                      "name": "startBalCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77290,
                      "src": "13003:16:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77367,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76331,
                              "src": "13045:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              }
                            ],
                            "id": 77366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13037:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77365,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13037:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13037:17:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77363,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "13022:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "13022:14:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13022:33:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13003:52:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77371,
                  "nodeType": "ExpressionStatement",
                  "src": "13003:52:167"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77377,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "13147:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13139:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77375,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13139:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13139:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13158:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77372,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "13129:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76256,
                      "src": "13129:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13129:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77381,
                  "nodeType": "ExpressionStatement",
                  "src": "13129:32:167"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77387,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "13244:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13236:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77385,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13236:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13236:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77382,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "13227:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "13227:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13227:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77390,
                  "nodeType": "ExpressionStatement",
                  "src": "13227:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77394,
                        "name": "invBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76338,
                        "src": "13280:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13289:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "333030",
                        "id": 77396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13293:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        }
                      ],
                      "expression": {
                        "id": 77391,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "13262:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "13262:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13262:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77398,
                  "nodeType": "ExpressionStatement",
                  "src": "13262:35:167"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated\n Callback should be the same as the start amount since the GDAO is burned",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77404,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76295,
                                "src": "13501:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13493:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77402,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13493:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13493:15:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77400,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "13475:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 77401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "13475:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13475:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77407,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77280,
                          "src": "13511:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "333030",
                          "id": 77408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13528:3:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "src": "13511:20:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77399,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13466:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13466:66:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77411,
                  "nodeType": "ExpressionStatement",
                  "src": "13466:66:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77417,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "13574:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 77416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13566:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77415,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13566:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13566:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77413,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76301,
                            "src": "13551:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76270",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "13551:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13551:33:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77420,
                        "name": "startBalCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77290,
                        "src": "13586:16:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77412,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13542:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13542:61:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77422,
                  "nodeType": "ExpressionStatement",
                  "src": "13542:61:167"
                },
                {
                  "documentation": "Store start balances of teller and callback",
                  "expression": {
                    "id": 77431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77423,
                      "name": "startBalTeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77280,
                      "src": "13870:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77428,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76295,
                              "src": "13910:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 77427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13902:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13902:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13902:15:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77424,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "13887:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "13887:14:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13887:31:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13870:48:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77432,
                  "nodeType": "ExpressionStatement",
                  "src": "13870:48:167"
                },
                {
                  "expression": {
                    "id": 77441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77433,
                      "name": "startBalCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77290,
                      "src": "13928:16:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77438,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76331,
                              "src": "13970:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              }
                            ],
                            "id": 77437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13962:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13962:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13962:17:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77434,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "13947:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "13947:14:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13947:33:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13928:52:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77442,
                  "nodeType": "ExpressionStatement",
                  "src": "13928:52:167"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77448,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "14072:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14064:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14064:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14064:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14083:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 77443,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "14054:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76256,
                      "src": "14054:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14054:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77452,
                  "nodeType": "ExpressionStatement",
                  "src": "14054:33:167"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77458,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "14170:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14162:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77456,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14162:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14162:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77453,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14153:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "14153:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14153:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77461,
                  "nodeType": "ExpressionStatement",
                  "src": "14153:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77465,
                        "name": "internalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76340,
                        "src": "14206:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14220:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "313530",
                        "id": 77467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14225:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "expression": {
                        "id": 77462,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "14188:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "14188:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14188:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77469,
                  "nodeType": "ExpressionStatement",
                  "src": "14188:41:167"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77475,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76295,
                                "src": "14345:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14337:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77473,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14337:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14337:15:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77471,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76301,
                            "src": "14322:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76270",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "14322:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14322:31:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77478,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77280,
                          "src": "14355:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313530",
                          "id": 77479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14372:3:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150_by_1",
                            "typeString": "int_const 150"
                          },
                          "value": "150"
                        },
                        "src": "14355:20:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77470,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "14313:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14313:63:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77482,
                  "nodeType": "ExpressionStatement",
                  "src": "14313:63:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77488,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "14418:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 77487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14410:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77486,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14410:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14410:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77484,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76301,
                            "src": "14395:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76270",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "14395:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14395:33:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77491,
                        "name": "startBalCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77290,
                        "src": "14430:16:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77483,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "14386:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14386:61:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77493,
                  "nodeType": "ExpressionStatement",
                  "src": "14386:61:167"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77499,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "14659:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14651:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14651:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14651:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14670:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 77494,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "14638:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "14638:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14638:36:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77503,
                  "nodeType": "ExpressionStatement",
                  "src": "14638:36:167"
                },
                {
                  "assignments": [
                    77506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77506,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "14771:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77536,
                      "src": "14758:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77505,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14758:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Call the callback function from the teller, expect to revert",
                  "id": 77512,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                        "id": 77509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14814:38:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        "value": "Callback_MarketNotSupported(uint256)"
                      },
                      {
                        "id": 77510,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76342,
                        "src": "14866:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77507,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14777:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "14777:23:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 77511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14777:111:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14758:130:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77518,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "14915:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14907:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77516,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14907:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14907:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77513,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14898:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "14898:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14898:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77521,
                  "nodeType": "ExpressionStatement",
                  "src": "14898:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77525,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77506,
                        "src": "14949:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77522,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14933:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "14933:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14933:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77527,
                  "nodeType": "ExpressionStatement",
                  "src": "14933:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77531,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76342,
                        "src": "14981:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14995:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "313530",
                        "id": 77533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15000:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "expression": {
                        "id": 77528,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "14963:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "14963:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14963:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77535,
                  "nodeType": "ExpressionStatement",
                  "src": "14963:41:167"
                }
              ]
            },
            "documentation": {
              "id": 77275,
              "nodeType": "StructuredDocumentation",
              "src": "11594:129:167",
              "text": "DONE\n [X] Callback correctly handles payouts for the 4 market cases\n [X] Only whitelisted markets can callback"
            },
            "functionSelector": "570af261",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_callback",
            "nameLocation": "11737:24:167",
            "parameters": {
              "id": 77276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11761:2:167"
            },
            "returnParameters": {
              "id": 77277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11771:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77687,
            "nodeType": "FunctionDefinition",
            "src": "15017:1378:167",
            "nodes": [],
            "body": {
              "id": 77686,
              "nodeType": "Block",
              "src": "15077:1318:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77542,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "15255:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77686,
                      "src": "15242:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77541,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15242:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Case 1: Zero tokens sent in",
                  "id": 77547,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f546f6b656e734e6f7452656365697665642829",
                        "id": 77545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15285:30:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_813638497a651e872deaf3e0c7addfec024776ada558f808abc154ff78cea955",
                          "typeString": "literal_string \"Callback_TokensNotReceived()\""
                        },
                        "value": "Callback_TokensNotReceived()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_813638497a651e872deaf3e0c7addfec024776ada558f808abc154ff78cea955",
                          "typeString": "literal_string \"Callback_TokensNotReceived()\""
                        }
                      ],
                      "expression": {
                        "id": 77543,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "15261:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "15261:23:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 77546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15261:55:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15242:74:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77553,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "15343:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15335:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15335:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15335:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77548,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "15326:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "15326:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15326:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77556,
                  "nodeType": "ExpressionStatement",
                  "src": "15326:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77560,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77542,
                        "src": "15377:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77557,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "15361:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "15361:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15361:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77562,
                  "nodeType": "ExpressionStatement",
                  "src": "15361:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77566,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "15409:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15418:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15422:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77563,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "15391:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "15391:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15391:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77570,
                  "nodeType": "ExpressionStatement",
                  "src": "15391:34:167"
                },
                {
                  "documentation": "Case 2: Fewer than claimed tokens sent in",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77576,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "15511:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15503:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77574,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15503:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15503:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15522:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 77571,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "15490:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "15490:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15490:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77580,
                  "nodeType": "ExpressionStatement",
                  "src": "15490:34:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77586,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "15552:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15544:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77584,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15544:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15544:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77581,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "15535:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "15535:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15535:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77589,
                  "nodeType": "ExpressionStatement",
                  "src": "15535:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77593,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77542,
                        "src": "15586:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77590,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "15570:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "15570:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15570:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77595,
                  "nodeType": "ExpressionStatement",
                  "src": "15570:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77599,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "15618:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15627:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15631:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77596,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "15600:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "15600:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15600:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77603,
                  "nodeType": "ExpressionStatement",
                  "src": "15600:34:167"
                },
                {
                  "documentation": "Case 3: Exact number of tokens claimed, should work",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77609,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "15726:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15718:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15718:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15718:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77604,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "15709:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "15709:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15709:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77612,
                  "nodeType": "ExpressionStatement",
                  "src": "15709:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77616,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "15762:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15771:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      {
                        "hexValue": "35",
                        "id": 77618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15774:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 77613,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "15744:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "15744:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15744:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77620,
                  "nodeType": "ExpressionStatement",
                  "src": "15744:32:167"
                },
                {
                  "assignments": [
                    77622,
                    77624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77622,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "15796:5:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77686,
                      "src": "15788:13:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77621,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15788:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 77624,
                      "mutability": "mutable",
                      "name": "payout",
                      "nameLocation": "15811:6:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77686,
                      "src": "15803:14:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15803:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77629,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77627,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "15847:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77625,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "15821:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45746,
                      "src": "15821:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 77628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15821:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15787:68:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77631,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77622,
                        "src": "15875:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15882:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 77630,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15866:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15866:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77634,
                  "nodeType": "ExpressionStatement",
                  "src": "15866:18:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77636,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77624,
                        "src": "15903:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15911:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 77635,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15894:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15894:19:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77639,
                  "nodeType": "ExpressionStatement",
                  "src": "15894:19:167"
                },
                {
                  "documentation": "Case 4: More tokens sent than claimed, should work\n Will allow a subsequent caller to pay less than they should\n This realistically shouldn't happen since the callback function is whitelisted",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77645,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "16171:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16163:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16163:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16163:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 77647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16182:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 77640,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "16150:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "16150:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16150:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77649,
                  "nodeType": "ExpressionStatement",
                  "src": "16150:35:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77655,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "16213:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16205:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16205:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16205:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77650,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "16196:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "16196:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16196:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77658,
                  "nodeType": "ExpressionStatement",
                  "src": "16196:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77662,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "16249:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16258:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16262:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77659,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "16231:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "16231:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16231:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77666,
                  "nodeType": "ExpressionStatement",
                  "src": "16231:34:167"
                },
                {
                  "expression": {
                    "id": 77674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 77667,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77622,
                          "src": "16277:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 77668,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77624,
                          "src": "16284:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 77669,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16276:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77672,
                          "name": "regBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76336,
                          "src": "16320:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 77670,
                          "name": "callback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76331,
                          "src": "16294:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$45747",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "id": 77671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountsForMarket",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45746,
                        "src": "16294:25:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 77673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16294:34:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16276:52:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77675,
                  "nodeType": "ExpressionStatement",
                  "src": "16276:52:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77677,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77622,
                        "src": "16348:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 77678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16355:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 77676,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "16339:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16339:19:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77680,
                  "nodeType": "ExpressionStatement",
                  "src": "16339:19:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77682,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77624,
                        "src": "16377:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 77683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16385:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 77681,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "16368:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16368:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77685,
                  "nodeType": "ExpressionStatement",
                  "src": "16368:20:167"
                }
              ]
            },
            "functionSelector": "f2b2afce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_callbackMustReceiveTokens",
            "nameLocation": "15026:41:167",
            "parameters": {
              "id": 77538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15067:2:167"
            },
            "returnParameters": {
              "id": 77539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15077:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77838,
            "nodeType": "FunctionDefinition",
            "src": "16401:1479:167",
            "nodes": [],
            "body": {
              "id": 77837,
              "nodeType": "Block",
              "src": "16469:1411:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77695,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "16567:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16559:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77693,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16559:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16559:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16578:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77690,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "16546:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "16546:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16546:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77699,
                  "nodeType": "ExpressionStatement",
                  "src": "16546:35:167"
                },
                {
                  "assignments": [
                    77701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77701,
                      "mutability": "mutable",
                      "name": "oldTellerBal",
                      "nameLocation": "16650:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77837,
                      "src": "16642:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77700,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16642:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77709,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77706,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "16688:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16680:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77704,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16680:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16680:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77702,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "16665:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "16665:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16665:31:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16642:54:167"
                },
                {
                  "assignments": [
                    77711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77711,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "16801:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77837,
                      "src": "16788:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77710,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16788:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77717,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                        "id": 77714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16844:38:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        "value": "Callback_MarketNotSupported(uint256)"
                      },
                      {
                        "id": 77715,
                        "name": "nonWhitelistedBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76344,
                        "src": "16896:18:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77712,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16807:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "16807:23:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 77716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16807:117:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16788:136:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77723,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "16951:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16943:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16943:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16943:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77718,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "16934:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "16934:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16934:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77726,
                  "nodeType": "ExpressionStatement",
                  "src": "16934:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77730,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77711,
                        "src": "16985:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77727,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "16969:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "16969:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16969:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77732,
                  "nodeType": "ExpressionStatement",
                  "src": "16969:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77736,
                        "name": "nonWhitelistedBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76344,
                        "src": "17017:18:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17037:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17041:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77733,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "16999:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "16999:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16999:45:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77740,
                  "nodeType": "ExpressionStatement",
                  "src": "16999:45:167"
                },
                {
                  "assignments": [
                    77742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77742,
                      "mutability": "mutable",
                      "name": "newTellerBal",
                      "nameLocation": "17121:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77837,
                      "src": "17113:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17113:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77750,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77747,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "17159:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17151:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17151:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17151:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77743,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "17136:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "17136:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17136:31:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17113:54:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77752,
                        "name": "newTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77742,
                        "src": "17186:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77753,
                        "name": "oldTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77701,
                        "src": "17200:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77751,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "17177:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17177:36:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77755,
                  "nodeType": "ExpressionStatement",
                  "src": "17177:36:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77761,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "17322:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17314:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77759,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17314:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17314:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77756,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17305:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "17305:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17305:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77764,
                  "nodeType": "ExpressionStatement",
                  "src": "17305:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77768,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "17358:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17367:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17371:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77765,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "17340:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "17340:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17340:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77772,
                  "nodeType": "ExpressionStatement",
                  "src": "17340:34:167"
                },
                {
                  "expression": {
                    "id": 77781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77773,
                      "name": "newTellerBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77742,
                      "src": "17428:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77778,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76295,
                              "src": "17466:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 77777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17458:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77776,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17458:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17458:15:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77774,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76301,
                          "src": "17443:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76270",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "17443:14:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17443:31:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17428:46:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77782,
                  "nodeType": "ExpressionStatement",
                  "src": "17428:46:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77784,
                        "name": "newTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77742,
                        "src": "17493:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77785,
                          "name": "oldTellerBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77701,
                          "src": "17507:12:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 77786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17522:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "17507:17:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77783,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "17484:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17484:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77789,
                  "nodeType": "ExpressionStatement",
                  "src": "17484:41:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77793,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "17614:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77790,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17605:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "17605:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17605:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77795,
                  "nodeType": "ExpressionStatement",
                  "src": "17605:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77801,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "17658:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17650:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17650:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17650:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77803,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "17667:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77796,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "17631:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45441,
                      "src": "17631:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17631:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77805,
                  "nodeType": "ExpressionStatement",
                  "src": "17631:44:167"
                },
                {
                  "expression": {
                    "id": 77812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77806,
                      "name": "err",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77711,
                      "src": "17686:3:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                          "id": 77809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17716:38:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                            "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                          },
                          "value": "Callback_MarketNotSupported(uint256)"
                        },
                        {
                          "id": 77810,
                          "name": "regBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76336,
                          "src": "17756:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                            "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 77807,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "17692:3:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 77808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeWithSignature",
                        "nodeType": "MemberAccess",
                        "src": "17692:23:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (string memory) pure returns (bytes memory)"
                        }
                      },
                      "id": 77811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17692:72:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17686:78:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 77813,
                  "nodeType": "ExpressionStatement",
                  "src": "17686:78:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77819,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "17791:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17783:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17783:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17783:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77814,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17774:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "17774:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17774:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77822,
                  "nodeType": "ExpressionStatement",
                  "src": "17774:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77826,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77711,
                        "src": "17825:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77823,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17809:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "17809:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17809:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77828,
                  "nodeType": "ExpressionStatement",
                  "src": "17809:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77832,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "17857:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17866:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17870:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77829,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "17839:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "17839:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17839:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77836,
                  "nodeType": "ExpressionStatement",
                  "src": "17839:34:167"
                }
              ]
            },
            "functionSelector": "38906dbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback",
            "nameLocation": "16410:49:167",
            "parameters": {
              "id": 77688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16459:2:167"
            },
            "returnParameters": {
              "id": 77689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16469:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77955,
            "nodeType": "FunctionDefinition",
            "src": "18040:1099:167",
            "nodes": [],
            "body": {
              "id": 77954,
              "nodeType": "Block",
              "src": "18084:1055:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77843,
                      "mutability": "mutable",
                      "name": "wlOne",
                      "nameLocation": "18168:5:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77954,
                      "src": "18160:13:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77842,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18160:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77851,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77845,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "18189:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 77846,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "18198:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 77847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18204:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 77848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18207:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 77849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18210:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 77844,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77274,
                      "src": "18176:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 77850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18176:36:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18160:52:167"
                },
                {
                  "assignments": [
                    77853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77853,
                      "mutability": "mutable",
                      "name": "wlTwo",
                      "nameLocation": "18230:5:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77954,
                      "src": "18222:13:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77852,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18222:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77861,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77855,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "18251:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 77856,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "18260:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 77857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18266:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 77858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18269:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 77859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18272:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 77854,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77274,
                      "src": "18238:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 77860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18238:36:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18222:52:167"
                },
                {
                  "assignments": [
                    77863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77863,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "18380:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 77954,
                      "src": "18367:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77862,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18367:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77874,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 77866,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40760,
                            "src": "18422:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40760_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 77867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40706,
                          "src": "18422:25:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 77868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "18422:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f77686974656c697374",
                            "id": 77871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18478:20:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            "value": "callback_whitelist"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            }
                          ],
                          "id": 77870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18470:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 77869,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18470:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18470:29:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 77864,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "18386:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "18386:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 77873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18386:123:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18367:142:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77878,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "18528:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77875,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18519:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "18519:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18519:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77880,
                  "nodeType": "ExpressionStatement",
                  "src": "18519:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77884,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77863,
                        "src": "18560:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77881,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18544:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "18544:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18544:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77886,
                  "nodeType": "ExpressionStatement",
                  "src": "18544:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77892,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "18601:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18593:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77890,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18593:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18593:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77894,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77843,
                        "src": "18610:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77887,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "18574:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "18574:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18574:42:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77896,
                  "nodeType": "ExpressionStatement",
                  "src": "18574:42:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77900,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "18703:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77897,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18694:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "18694:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18694:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77902,
                  "nodeType": "ExpressionStatement",
                  "src": "18694:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77908,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "18747:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18739:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18739:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18739:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77910,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77843,
                        "src": "18756:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77903,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "18720:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "18720:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18720:42:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77912,
                  "nodeType": "ExpressionStatement",
                  "src": "18720:42:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77918,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76295,
                                "src": "18851:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18843:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77916,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18843:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18843:15:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 77920,
                            "name": "wlOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77843,
                            "src": "18860:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 77914,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "18818:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 77915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45040,
                          "src": "18818:24:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 77921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18818:48:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 77913,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "18811:6:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18811:56:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77923,
                  "nodeType": "ExpressionStatement",
                  "src": "18811:56:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77929,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76328,
                            "src": "18965:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 77928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18957:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77927,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18957:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18957:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77924,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18948:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "18948:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18948:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77932,
                  "nodeType": "ExpressionStatement",
                  "src": "18948:27:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77938,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "19012:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19004:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77936,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19004:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19004:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77940,
                        "name": "wlTwo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77853,
                        "src": "19021:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77933,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "18985:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "18985:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18985:42:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77942,
                  "nodeType": "ExpressionStatement",
                  "src": "18985:42:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77948,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76295,
                                "src": "19116:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19108:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77946,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19108:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19108:15:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 77950,
                            "name": "wlTwo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77853,
                            "src": "19125:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 77944,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "19083:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 77945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45040,
                          "src": "19083:24:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 77951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19083:48:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 77943,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "19076:6:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19076:56:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77953,
                  "nodeType": "ExpressionStatement",
                  "src": "19076:56:167"
                }
              ]
            },
            "documentation": {
              "id": 77839,
              "nodeType": "StructuredDocumentation",
              "src": "17930:105:167",
              "text": "DONE\n [X] whitelist\n [X] blacklist\n [X] setOperator\n [X] batchToTreasury"
            },
            "functionSelector": "ce597df3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_whitelist",
            "nameLocation": "18049:25:167",
            "parameters": {
              "id": 77840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18074:2:167"
            },
            "returnParameters": {
              "id": 77841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18084:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78024,
            "nodeType": "FunctionDefinition",
            "src": "19145:657:167",
            "nodes": [],
            "body": {
              "id": 78023,
              "nodeType": "Block",
              "src": "19189:613:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77959,
                      "mutability": "mutable",
                      "name": "wlOne",
                      "nameLocation": "19273:5:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78023,
                      "src": "19265:13:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77958,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19265:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77967,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77961,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "19294:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 77962,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "19303:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 77963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19309:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 77964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19312:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 77965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19315:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 77960,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77274,
                      "src": "19281:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 77966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19281:36:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19265:52:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77971,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "19398:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77968,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "19389:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "19389:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19389:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77973,
                  "nodeType": "ExpressionStatement",
                  "src": "19389:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77979,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "19442:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19434:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77977,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19434:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19434:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77981,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77959,
                        "src": "19451:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77974,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "19415:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "19415:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19415:42:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77983,
                  "nodeType": "ExpressionStatement",
                  "src": "19415:42:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77989,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76295,
                                "src": "19546:6:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19538:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77987,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19538:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19538:15:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 77991,
                            "name": "wlOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77959,
                            "src": "19555:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 77985,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "19513:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 77986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45040,
                          "src": "19513:24:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 77992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19513:48:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 77984,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "19506:6:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19506:56:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77994,
                  "nodeType": "ExpressionStatement",
                  "src": "19506:56:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77998,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "19630:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77995,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "19621:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "19621:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19621:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78000,
                  "nodeType": "ExpressionStatement",
                  "src": "19621:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78006,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "19674:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19666:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78004,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19666:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19666:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78008,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77959,
                        "src": "19683:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78001,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "19647:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45441,
                      "src": "19647:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19647:42:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78010,
                  "nodeType": "ExpressionStatement",
                  "src": "19647:42:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "19745:49:167",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78016,
                                  "name": "teller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76295,
                                  "src": "19779:6:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                    "typeString": "contract BondFixedTermTeller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                                    "typeString": "contract BondFixedTermTeller"
                                  }
                                ],
                                "id": 78015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19771:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78014,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19771:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19771:15:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 78018,
                              "name": "wlOne",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77959,
                              "src": "19788:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 78012,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76331,
                              "src": "19746:8:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45747",
                                "typeString": "contract BondCallback"
                              }
                            },
                            "id": 78013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approvedMarkets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45040,
                            "src": "19746:24:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view external returns (bool)"
                            }
                          },
                          "id": 78019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19746:48:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78011,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "19738:6:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19738:57:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78022,
                  "nodeType": "ExpressionStatement",
                  "src": "19738:57:167"
                }
              ]
            },
            "functionSelector": "de5f3102",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_blacklist",
            "nameLocation": "19154:25:167",
            "parameters": {
              "id": 77956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19179:2:167"
            },
            "returnParameters": {
              "id": 77957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19189:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78083,
            "nodeType": "FunctionDefinition",
            "src": "19808:556:167",
            "nodes": [],
            "body": {
              "id": 78082,
              "nodeType": "Block",
              "src": "19854:510:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78029,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "19956:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78082,
                      "src": "19943:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 78028,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19943:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Attempt to set operator contract to zero address and expect revert",
                  "id": 78034,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f496e76616c6964506172616d732829",
                        "id": 78032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19986:26:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7a4111e846a281e9fec32b9163237b55525e89d386d3bf9b9ca6c05a98ad08e",
                          "typeString": "literal_string \"Callback_InvalidParams()\""
                        },
                        "value": "Callback_InvalidParams()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7a4111e846a281e9fec32b9163237b55525e89d386d3bf9b9ca6c05a98ad08e",
                          "typeString": "literal_string \"Callback_InvalidParams()\""
                        }
                      ],
                      "expression": {
                        "id": 78030,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "19962:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 78031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "19962:23:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 78033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19962:51:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19943:70:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78038,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78029,
                        "src": "20039:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 78035,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20023:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "20023:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 78039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20023:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78040,
                  "nodeType": "ExpressionStatement",
                  "src": "20023:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78044,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76284,
                        "src": "20062:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78041,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20053:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "20053:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20053:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78046,
                  "nodeType": "ExpressionStatement",
                  "src": "20053:18:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 78053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20119:1:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 78052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20111:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78051,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20111:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20111:10:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78050,
                          "name": "Operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49840,
                          "src": "20102:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Operator_$49840_$",
                            "typeString": "type(contract Operator)"
                          }
                        },
                        "id": 78055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20102:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 78047,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "20081:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45716,
                      "src": "20081:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$49840_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 78056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20081:42:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78057,
                  "nodeType": "ExpressionStatement",
                  "src": "20081:42:167"
                },
                {
                  "documentation": "Update the operator as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78061,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76284,
                        "src": "20187:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78058,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20178:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "20178:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20178:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78063,
                  "nodeType": "ExpressionStatement",
                  "src": "20178:18:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78068,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76280,
                            "src": "20236:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78067,
                          "name": "Operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49840,
                          "src": "20227:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Operator_$49840_$",
                            "typeString": "type(contract Operator)"
                          }
                        },
                        "id": 78069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20227:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$49840",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 78064,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "20206:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45716,
                      "src": "20206:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$49840_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 78070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20206:37:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78071,
                  "nodeType": "ExpressionStatement",
                  "src": "20206:37:167"
                },
                {
                  "documentation": "Check that the operator contract has been set",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 78075,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "20329:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              },
                              "id": 78076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45060,
                              "src": "20329:17:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Operator_$49840_$",
                                "typeString": "function () view external returns (contract Operator)"
                              }
                            },
                            "id": 78077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20329:19:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49840",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 78074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20321:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78073,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20321:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20321:28:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78079,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "20351:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 78072,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "20312:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 78080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20312:45:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78081,
                  "nodeType": "ExpressionStatement",
                  "src": "20312:45:167"
                }
              ]
            },
            "functionSelector": "9e0c5608",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setOperator",
            "nameLocation": "19817:27:167",
            "parameters": {
              "id": 78025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19844:2:167"
            },
            "returnParameters": {
              "id": 78026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19854:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78523,
            "nodeType": "FunctionDefinition",
            "src": "20370:3836:167",
            "nodes": [],
            "body": {
              "id": 78522,
              "nodeType": "Block",
              "src": "20420:3786:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78088,
                      "mutability": "mutable",
                      "name": "otherBond",
                      "nameLocation": "20513:9:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78522,
                      "src": "20505:17:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78087,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20505:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Create an extra market with the other token as the quote token",
                  "id": 78096,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78090,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76307,
                        "src": "20538:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 78091,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76301,
                        "src": "20545:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20551:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "31",
                        "id": 78093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20554:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35",
                        "id": 78094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20557:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76270",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 78089,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77274,
                      "src": "20525:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_contract$_ERC20_$25226_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 78095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20525:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20505:54:167"
                },
                {
                  "documentation": "Whitelist new market on the callback",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78100,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76286,
                        "src": "20628:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78097,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20619:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "20619:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20619:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78102,
                  "nodeType": "ExpressionStatement",
                  "src": "20619:16:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78108,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "20672:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20664:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20664:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20664:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78110,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78088,
                        "src": "20681:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78103,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "20645:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45407,
                      "src": "20645:18:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20645:46:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78112,
                  "nodeType": "ExpressionStatement",
                  "src": "20645:46:167"
                },
                {
                  "assignments": [
                    78118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78118,
                      "mutability": "mutable",
                      "name": "startBalances",
                      "nameLocation": "20775:13:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78522,
                      "src": "20757:31:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20757:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78117,
                        "length": {
                          "hexValue": "32",
                          "id": 78115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20765:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "20757:10:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store the initial balances of the treasury",
                  "id": 78134,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78123,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76319,
                                "src": "20831:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20823:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78121,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20823:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20823:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78119,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "20805:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "20805:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20805:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78130,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76319,
                                "src": "20879:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20871:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78128,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20871:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20871:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78126,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76307,
                            "src": "20855:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "20855:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20855:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 78133,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "20791:108:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20757:142:167"
                },
                {
                  "documentation": "Send other tokens and reserve tokens to callback to mimic bond purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78140,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "21015:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21007:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21007:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21007:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21026:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 78135,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "20994:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "20994:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20994:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78144,
                  "nodeType": "ExpressionStatement",
                  "src": "20994:35:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78150,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "21058:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21050:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21050:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21050:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21069:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78145,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76307,
                        "src": "21039:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "21039:10:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21039:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78154,
                  "nodeType": "ExpressionStatement",
                  "src": "21039:33:167"
                },
                {
                  "documentation": "Call the callback function from the teller to payout the purchases",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78160,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "21179:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21171:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21171:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21171:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78155,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "21162:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "21162:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21162:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78163,
                  "nodeType": "ExpressionStatement",
                  "src": "21162:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78167,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "21215:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21224:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "hexValue": "31",
                        "id": 78169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21228:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 78164,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "21197:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "21197:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21197:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78171,
                  "nodeType": "ExpressionStatement",
                  "src": "21197:33:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78177,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "21258:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21250:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21250:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21250:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78172,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "21241:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "21241:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21241:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78180,
                  "nodeType": "ExpressionStatement",
                  "src": "21241:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78184,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78088,
                        "src": "21294:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21305:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "323030",
                        "id": 78186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21309:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 78181,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "21276:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "21276:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21276:37:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78188,
                  "nodeType": "ExpressionStatement",
                  "src": "21276:37:167"
                },
                {
                  "documentation": "Check the balance of the callback and ensure it's updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78194,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "21429:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21421:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78192,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21421:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21421:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78190,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "21403:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "21403:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21403:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21441:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 78189,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "21394:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21394:50:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78199,
                  "nodeType": "ExpressionStatement",
                  "src": "21394:50:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78205,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "21487:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21479:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78203,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21479:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21479:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78201,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76307,
                            "src": "21463:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "21463:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21463:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21499:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78200,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "21454:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21454:48:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78210,
                  "nodeType": "ExpressionStatement",
                  "src": "21454:48:167"
                },
                {
                  "assignments": [
                    78215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78215,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "21590:6:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78522,
                      "src": "21575:21:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                        "typeString": "contract ERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78213,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 78212,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25226,
                            "src": "21575:5:167"
                          },
                          "referencedDeclaration": 25226,
                          "src": "21575:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 78214,
                        "nodeType": "ArrayTypeName",
                        "src": "21575:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_storage_ptr",
                          "typeString": "contract ERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Call batch to treasury with each token separately",
                  "id": 78222,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 78220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21611:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 78219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21599:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78217,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 78216,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25226,
                            "src": "21603:5:167"
                          },
                          "referencedDeclaration": 25226,
                          "src": "21603:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 78218,
                        "nodeType": "ArrayTypeName",
                        "src": "21603:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_storage_ptr",
                          "typeString": "contract ERC20[]"
                        }
                      }
                    },
                    "id": 78221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21599:14:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21575:38:167"
                },
                {
                  "expression": {
                    "id": 78227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78223,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78215,
                        "src": "21623:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78225,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 78224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21630:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21623:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78226,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76304,
                      "src": "21635:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24174",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "21623:19:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78228,
                  "nodeType": "ExpressionStatement",
                  "src": "21623:19:167"
                },
                {
                  "documentation": "Try to call batch to treasury as non-policy, expect revert",
                  "id": 78260,
                  "nodeType": "Block",
                  "src": "21724:284:167",
                  "statements": [
                    {
                      "assignments": [
                        78230
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 78230,
                          "mutability": "mutable",
                          "name": "err",
                          "nameLocation": "21751:3:167",
                          "nodeType": "VariableDeclaration",
                          "scope": 78260,
                          "src": "21738:16:167",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 78229,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "21738:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 78241,
                      "initialValue": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 78233,
                                "name": "ROLESv1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40760,
                                "src": "21797:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40760_$",
                                  "typeString": "type(contract ROLESv1)"
                                }
                              },
                              "id": 78234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ROLES_RequireRole",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40706,
                              "src": "21797:25:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes32) pure"
                              }
                            },
                            "id": 78235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "21797:34:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "63616c6c6261636b5f61646d696e",
                                "id": 78238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21857:16:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                },
                                "value": "callback_admin"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                }
                              ],
                              "id": 78237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21849:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 78236,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "21849:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21849:25:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 78231,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21757:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 78232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "21757:22:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 78240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21757:131:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "21738:150:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 78245,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76280,
                            "src": "21911:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78242,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "21902:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7030",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 78244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6543,
                          "src": "21902:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 78246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21902:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78247,
                      "nodeType": "ExpressionStatement",
                      "src": "21902:15:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 78251,
                            "name": "err",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78230,
                            "src": "21947:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 78248,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "21931:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7030",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 78250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expectRevert",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6584,
                          "src": "21931:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes memory) external"
                          }
                        },
                        "id": 78252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21931:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78253,
                      "nodeType": "ExpressionStatement",
                      "src": "21931:20:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 78257,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78215,
                            "src": "21990:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                              "typeString": "contract ERC20[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                              "typeString": "contract ERC20[] memory"
                            }
                          ],
                          "expression": {
                            "id": 78254,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "21965:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 78256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "batchToTreasury",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45688,
                          "src": "21965:24:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC20[] memory) external"
                          }
                        },
                        "id": 78258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21965:32:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78259,
                      "nodeType": "ExpressionStatement",
                      "src": "21965:32:167"
                    }
                  ]
                },
                {
                  "documentation": "Call batch to treasury as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78264,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76284,
                        "src": "22074:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "22065:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "22065:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22065:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78266,
                  "nodeType": "ExpressionStatement",
                  "src": "22065:18:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78270,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78215,
                        "src": "22118:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 78267,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "22093:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45688,
                      "src": "22093:24:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 78271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22093:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78272,
                  "nodeType": "ExpressionStatement",
                  "src": "22093:32:167"
                },
                {
                  "documentation": "Expect the reserve balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78278,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "22253:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22245:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78276,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22245:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22245:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78274,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "22227:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "22227:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22227:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22265:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78273,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22218:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22218:49:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78283,
                  "nodeType": "ExpressionStatement",
                  "src": "22218:49:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78289,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76319,
                                "src": "22312:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22304:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78287,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22304:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22304:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78285,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "22286:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "22286:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22286:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78292,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78118,
                            "src": "22324:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78294,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 78293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22338:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22324:16:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 78295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22343:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "22324:21:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78284,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22277:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22277:69:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78298,
                  "nodeType": "ExpressionStatement",
                  "src": "22277:69:167"
                },
                {
                  "documentation": "Test batch to treasury with the other token",
                  "expression": {
                    "id": 78303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78299,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78215,
                        "src": "22413:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78301,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 78300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22420:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22413:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78302,
                      "name": "other",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76307,
                      "src": "22425:5:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24174",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "22413:17:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78304,
                  "nodeType": "ExpressionStatement",
                  "src": "22413:17:167"
                },
                {
                  "documentation": "Call batch to treasury as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78308,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76284,
                        "src": "22497:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78305,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "22488:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "22488:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22488:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78310,
                  "nodeType": "ExpressionStatement",
                  "src": "22488:18:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78314,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78215,
                        "src": "22541:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 78311,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "22516:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45688,
                      "src": "22516:24:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 78315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22516:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78316,
                  "nodeType": "ExpressionStatement",
                  "src": "22516:32:167"
                },
                {
                  "documentation": "Expect the other balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78322,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "22672:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22664:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78320,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22664:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22664:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78318,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76307,
                            "src": "22648:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "22648:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22648:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22684:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78317,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22639:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22639:47:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78327,
                  "nodeType": "ExpressionStatement",
                  "src": "22639:47:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78333,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76319,
                                "src": "22729:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22721:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78331,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22721:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22721:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78329,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76307,
                            "src": "22705:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "22705:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22705:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78336,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78118,
                            "src": "22741:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78338,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 78337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22755:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22741:16:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 78339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22760:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "22741:21:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78328,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22696:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22696:67:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78342,
                  "nodeType": "ExpressionStatement",
                  "src": "22696:67:167"
                },
                {
                  "documentation": "Store updated treasury balances",
                  "expression": {
                    "id": 78359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78343,
                      "name": "startBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78118,
                      "src": "22864:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78348,
                                  "name": "treasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76319,
                                  "src": "22907:8:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                ],
                                "id": 78347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22899:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78346,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22899:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22899:17:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 78344,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76304,
                              "src": "22881:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24174",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 78345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24877,
                            "src": "22881:17:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 78350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22881:36:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78355,
                                  "name": "treasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76319,
                                  "src": "22943:8:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                ],
                                "id": 78354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22935:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78353,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22935:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22935:17:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 78351,
                              "name": "other",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76307,
                              "src": "22919:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24174",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 78352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24877,
                            "src": "22919:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 78357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22919:34:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 78358,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "22880:74:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "22864:90:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "id": 78360,
                  "nodeType": "ExpressionStatement",
                  "src": "22864:90:167"
                },
                {
                  "documentation": "Send other tokens and reserve tokens to callback to mimic bond purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78366,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "23070:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23062:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78364,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23062:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23062:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23081:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 78361,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "23049:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "23049:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23049:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78370,
                  "nodeType": "ExpressionStatement",
                  "src": "23049:35:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78376,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "23113:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23105:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78374,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23105:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23105:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23124:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78371,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76307,
                        "src": "23094:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "23094:10:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23094:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78380,
                  "nodeType": "ExpressionStatement",
                  "src": "23094:33:167"
                },
                {
                  "documentation": "Call the callback function from the teller to payout the purchases",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78386,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "23234:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23226:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78384,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23226:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23226:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78381,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "23217:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "23217:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23217:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78389,
                  "nodeType": "ExpressionStatement",
                  "src": "23217:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78393,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "23270:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23279:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "hexValue": "31",
                        "id": 78395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23283:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 78390,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "23252:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "23252:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23252:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78397,
                  "nodeType": "ExpressionStatement",
                  "src": "23252:33:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78403,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "23313:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23305:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23305:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23305:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78398,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "23296:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "23296:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23296:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78406,
                  "nodeType": "ExpressionStatement",
                  "src": "23296:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78410,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78088,
                        "src": "23349:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23360:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "323030",
                        "id": 78412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23364:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 78407,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "23331:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "23331:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23331:37:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78414,
                  "nodeType": "ExpressionStatement",
                  "src": "23331:37:167"
                },
                {
                  "documentation": "Check that the callback balances are updated again",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78420,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "23477:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23469:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78418,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23469:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23469:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78416,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "23451:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "23451:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23451:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23489:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 78415,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23442:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23442:50:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78425,
                  "nodeType": "ExpressionStatement",
                  "src": "23442:50:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78431,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "23535:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23527:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78429,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23527:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23527:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78427,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76307,
                            "src": "23511:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "23511:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23511:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23547:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78426,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23502:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23502:48:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78436,
                  "nodeType": "ExpressionStatement",
                  "src": "23502:48:167"
                },
                {
                  "documentation": "Call batch to treasury with both tokens",
                  "expression": {
                    "id": 78444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78437,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78215,
                      "src": "23613:6:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 78442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23634:1:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 78441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "23622:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 78439,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 78438,
                              "name": "ERC20",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 25226,
                              "src": "23626:5:167"
                            },
                            "referencedDeclaration": 25226,
                            "src": "23626:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25226",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 78440,
                          "nodeType": "ArrayTypeName",
                          "src": "23626:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        }
                      },
                      "id": 78443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23622:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "src": "23613:23:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "id": 78445,
                  "nodeType": "ExpressionStatement",
                  "src": "23613:23:167"
                },
                {
                  "expression": {
                    "id": 78450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78446,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78215,
                        "src": "23646:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78448,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 78447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23653:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23646:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78449,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76304,
                      "src": "23658:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24174",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "23646:19:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78451,
                  "nodeType": "ExpressionStatement",
                  "src": "23646:19:167"
                },
                {
                  "expression": {
                    "id": 78456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78452,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78215,
                        "src": "23675:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78454,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 78453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23682:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23675:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25226",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78455,
                      "name": "other",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76307,
                      "src": "23687:5:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24174",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "23675:17:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78457,
                  "nodeType": "ExpressionStatement",
                  "src": "23675:17:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78461,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76284,
                        "src": "23712:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78458,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "23703:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "23703:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23703:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78463,
                  "nodeType": "ExpressionStatement",
                  "src": "23703:18:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78467,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78215,
                        "src": "23756:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 78464,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "23731:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45688,
                      "src": "23731:24:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25226_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 78468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23731:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78469,
                  "nodeType": "ExpressionStatement",
                  "src": "23731:32:167"
                },
                {
                  "documentation": "Expect the reserve balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78475,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "23891:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23883:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78473,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23883:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23883:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78471,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "23865:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "23865:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23865:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23903:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78470,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23856:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23856:49:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78480,
                  "nodeType": "ExpressionStatement",
                  "src": "23856:49:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78486,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76319,
                                "src": "23950:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23942:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78484,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23942:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23942:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78482,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76304,
                            "src": "23924:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "23924:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23924:36:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78489,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78118,
                            "src": "23962:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78491,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 78490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23976:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23962:16:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 78492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23981:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "23962:21:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78481,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23915:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23915:69:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78495,
                  "nodeType": "ExpressionStatement",
                  "src": "23915:69:167"
                },
                {
                  "documentation": "Expect the other balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78501,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76331,
                                "src": "24108:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45747",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24100:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78499,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24100:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24100:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78497,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76307,
                            "src": "24084:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "24084:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24084:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24120:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78496,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24075:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24075:47:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78506,
                  "nodeType": "ExpressionStatement",
                  "src": "24075:47:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78512,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76319,
                                "src": "24165:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41299",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24157:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78510,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24157:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24157:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78508,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76307,
                            "src": "24141:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "24141:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24141:34:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78515,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78118,
                            "src": "24177:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78517,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 78516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24191:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24177:16:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 78518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24196:2:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "24177:21:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24132:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24132:67:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78521,
                  "nodeType": "ExpressionStatement",
                  "src": "24132:67:167"
                }
              ]
            },
            "functionSelector": "4b59caab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_batchToTreasury",
            "nameLocation": "20379:31:167",
            "parameters": {
              "id": 78084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20410:2:167"
            },
            "returnParameters": {
              "id": 78085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20420:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78593,
            "nodeType": "FunctionDefinition",
            "src": "24298:813:167",
            "nodes": [],
            "body": {
              "id": 78592,
              "nodeType": "Block",
              "src": "24349:762:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78532,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "24447:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45747",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24439:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24439:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24439:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24458:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78527,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76304,
                        "src": "24426:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "24426:12:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24426:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78536,
                  "nodeType": "ExpressionStatement",
                  "src": "24426:35:167"
                },
                {
                  "assignments": [
                    78538,
                    78540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78538,
                      "mutability": "mutable",
                      "name": "oldQuoteAmount",
                      "nameLocation": "24571:14:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78592,
                      "src": "24563:22:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78537,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24563:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78540,
                      "mutability": "mutable",
                      "name": "oldPayoutAmount",
                      "nameLocation": "24595:15:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78592,
                      "src": "24587:23:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78539,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24587:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78545,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78543,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "24640:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78541,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "24614:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45746,
                      "src": "24614:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 78544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24614:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24562:86:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78547,
                        "name": "oldQuoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78538,
                        "src": "24667:14:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24683:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78546,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24658:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24658:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78550,
                  "nodeType": "ExpressionStatement",
                  "src": "24658:27:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78552,
                        "name": "oldPayoutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78540,
                        "src": "24704:15:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24721:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78551,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24695:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24695:28:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78555,
                  "nodeType": "ExpressionStatement",
                  "src": "24695:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78561,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76295,
                            "src": "24826:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55576",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24818:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78559,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24818:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24818:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78556,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "24809:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "24809:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24809:25:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78564,
                  "nodeType": "ExpressionStatement",
                  "src": "24809:25:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78568,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "24862:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24871:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 78570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24875:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78565,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "24844:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45614,
                      "src": "24844:17:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24844:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78572,
                  "nodeType": "ExpressionStatement",
                  "src": "24844:34:167"
                },
                {
                  "assignments": [
                    78574,
                    78576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78574,
                      "mutability": "mutable",
                      "name": "newQuoteAmount",
                      "nameLocation": "24950:14:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78592,
                      "src": "24942:22:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78573,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24942:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78576,
                      "mutability": "mutable",
                      "name": "newPayoutAmount",
                      "nameLocation": "24974:15:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 78592,
                      "src": "24966:23:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78575,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24966:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78581,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78579,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76336,
                        "src": "25019:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78577,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "24993:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45747",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45746,
                      "src": "24993:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 78580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24993:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24941:86:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78583,
                        "name": "newQuoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78574,
                        "src": "25046:14:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25062:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78582,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "25037:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25037:28:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78586,
                  "nodeType": "ExpressionStatement",
                  "src": "25037:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78588,
                        "name": "newPayoutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78576,
                        "src": "25084:15:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25101:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78587,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "25075:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25075:29:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78591,
                  "nodeType": "ExpressionStatement",
                  "src": "25075:29:167"
                }
              ]
            },
            "documentation": {
              "id": 78524,
              "nodeType": "StructuredDocumentation",
              "src": "24255:38:167",
              "text": "DONE\n [X] amountsForMarket"
            },
            "functionSelector": "3be22132",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_amountsForMarket",
            "nameLocation": "24307:32:167",
            "parameters": {
              "id": 78525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24339:2:167"
            },
            "returnParameters": {
              "id": 78526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24349:0:167"
            },
            "scope": 78594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76271,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "1851:4:167"
            },
            "id": 76272,
            "nodeType": "InheritanceSpecifier",
            "src": "1851:4:167"
          }
        ],
        "canonicalName": "BondCallbackTest",
        "contractDependencies": [
          23605,
          24174,
          29225,
          38501,
          40252,
          40681,
          41299,
          45747,
          49840,
          51124,
          53895,
          54885,
          54961,
          55576,
          66695,
          76270
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78594,
          4979,
          2049,
          1786
        ],
        "name": "BondCallbackTest",
        "nameLocation": "1831:16:167",
        "scope": 78595,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 167
}