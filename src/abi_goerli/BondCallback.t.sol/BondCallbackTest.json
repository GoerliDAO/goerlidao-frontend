{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_amountsForMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_batchToTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_blacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_callbackMustReceiveTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506202a22f80620000336000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063ba414fa61162000097578063de5f3102116200006e578063de5f310214620001b2578063f2b2afce14620001bc578063f8ccbf4714620001c6578063fa7626d414620001da57600080fd5b8063ba414fa61462000179578063c7d81eff1462000194578063ce597df314620001a857600080fd5b80633be2213211620000d85780633be2213214620001515780634b59caab146200015b578063570af26114620001655780639e0c5608146200016f57600080fd5b80630a9254e4146200010257806338906dbd146200010e5780633a7684631462000118575b600080fd5b6200010c620001e8565b005b6200010c620028c0565b62000134737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6200010c620030f0565b6200010c620033e1565b6200010c6200471d565b6200010c620053a9565b62000183620056f3565b604051901515815260200162000148565b60085462000134906001600160a01b031681565b6200010c6200585d565b6200010c62005e2b565b6200010c62006185565b600054620001839062010000900460ff1681565b600054620001839060ff1681565b6040517fe5d6bf02000000000000000000000000000000000000000000000000000000008152635fdd42806004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e5d6bf0290602401600060405180830381600087803b1580156200025257600080fd5b505af115801562000267573d6000803e3d6000fd5b50505050604051620002799062007043565b604051809103906000f08015801562000296573d6000803e3d6000fd5b50600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040517f780900dc0000000000000000000000000000000000000000000000000000000081526004808201526000919063780900dc906024016000604051808303816000875af115801562000327573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200036f919081019062007175565b90508060008151811062000387576200038762007266565b6020026020010151600960006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600181518110620003cb57620003cb62007266565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806002815181106200040f576200040f62007266565b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060038151811062000453576200045362007266565b6020908102919091010151600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b54604051911690600090620004a99062007051565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620004dd573d6000803e3d6000fd5b50600d80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316908117909155600b5460405192169162000529906200705f565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200055d573d6000803e3d6000fd5b50600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316908117909155600b54600d54604051918416938492911690620005b2906200706d565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f080158015620005f7573d6000803e3d6000fd5b50600f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316908117909155600e54600b54600d5460405193949283169391831692169062000652906200707b565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f08015801562000697573d6000803e3d6000fd5b50601080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200071d57600080fd5b505af115801562000732573d6000803e3d6000fd5b5050600e546010546040517f66b382ee0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152911692506366b382ee9150602401600060405180830381600087803b1580156200079957600080fd5b505af1158015620007ae573d6000803e3d6000fd5b50505050506009604051620007c39062007089565b6060808252600a908201527f476f65726c692044414f00000000000000000000000000000000000000000000608082015260a0602082018190526004908201527f4744414f0000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000853573d6000803e3d6000fd5b50601180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790556040516012906200089d9062007097565b60608082526007908201527f5265736572766500000000000000000000000000000000000000000000000000608082015260a0602082018190526003908201527f525356000000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f0801580156200092d573d6000803e3d6000fd5b50601280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091178155604051620009749062007097565b60608082526005908201527f4f74686572000000000000000000000000000000000000000000000000000000608082015260a0602082018190526003908201527f4f5448000000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000a04573d6000803e3d6000fd5b50601380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905560405162000a4b90620070a5565b604051809103906000f08015801562000a68573d6000803e3d6000fd5b50601480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216918217905560405161708090678ac7230489e800009062000abc90620070b3565b6001600160a01b03909316835265ffffffffffff90911660208301526040820152606001604051809103906000f08015801562000afd573d6000803e3d6000fd5b50601580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460115460125460405192841693918216929116906064906103e8906107d09062000b5f90620070c1565b6001600160a01b03968716815294861660208601529490921660408401526060830152608082015260a081019190915260c001604051809103906000f08015801562000baf573d6000803e3d6000fd5b50601680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460405191169062000bf890620070cf565b6001600160a01b039091168152602001604051809103906000f08015801562000c25573d6000803e3d6000fd5b50601780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460115460405191831692169062000c7490620070dd565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000ca8573d6000803e3d6000fd5b50601880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460405191169062000cf190620070eb565b6001600160a01b039091168152602001604051809103906000f08015801562000d1e573d6000803e3d6000fd5b50601980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283161790556015546040517f6cb56dbc00000000000000000000000000000000000000000000000000000000815268056bc75e2d631000006004820152911690636cb56dbc90602401600060405180830381600087803b15801562000db257600080fd5b505af115801562000dc7573d6000803e3d6000fd5b50506015546040517f2c19abb900000000000000000000000000000000000000000000000000000000815268056bc75e2d6310000060048201526001600160a01b039091169250632c19abb99150602401600060405180830381600087803b15801562000e3357600080fd5b505af115801562000e48573d6000803e3d6000fd5b50506015546040517f7a1395aa000000000000000000000000000000000000000000000000000000008152601260048201526001600160a01b039091169250637a1395aa9150602401600060405180830381600087803b15801562000eac57600080fd5b505af115801562000ec1573d6000803e3d6000fd5b50506015546040517f7e20be3b00000000000000000000000000000000000000000000000000000000815265ffffffffffff421660048201526001600160a01b039091169250637e20be3b9150602401600060405180830381600087803b15801562000f2c57600080fd5b505af115801562000f41573d6000803e3d6000fd5b50506014546040516001600160a01b03909116925062000f629150620070f9565b6001600160a01b039091168152602001604051809103906000f08015801562000f8f573d6000803e3d6000fd5b50601c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601454600e54601154604051928416939182169291169062000fe69062007107565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001023573d6000803e3d6000fd5b50601b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556014546010546040805180820182526011548616815260125486166020808301919091528251610100810184526107d081526206978091810191909152620186a081840152610e10606082018190526103e8608083015260a0820152600560c0820152600760e0820152915193861695929092169392620010dc9062007115565b620010ec95949392919062007295565b604051809103906000f08015801562001109573d6000803e3d6000fd5b50601a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200118f57600080fd5b505af1158015620011a4573d6000803e3d6000fd5b5050601054601a546040517fbbbdd95a0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600160248201529116925063bbbdd95a9150604401600060405180830381600087803b1580156200121257600080fd5b505af115801562001227573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200128557600080fd5b505af11580156200129a573d6000803e3d6000fd5b50506010546040517fbbbdd95a000000000000000000000000000000000000000000000000000000008152306004820152600160248201526001600160a01b03909116925063bbbdd95a9150604401600060405180830381600087803b1580156200130457600080fd5b505af115801562001319573d6000803e3d6000fd5b50506014546015546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f193506200136e9260009216906004016200732f565b600060405180830381600087803b1580156200138957600080fd5b505af11580156200139e573d6000803e3d6000fd5b50506014546016546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620013f39260009216906004016200732f565b600060405180830381600087803b1580156200140e57600080fd5b505af115801562001423573d6000803e3d6000fd5b50506014546017546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620014789260009216906004016200732f565b600060405180830381600087803b1580156200149357600080fd5b505af1158015620014a8573d6000803e3d6000fd5b50506014546018546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620014fd9260009216906004016200732f565b600060405180830381600087803b1580156200151857600080fd5b505af11580156200152d573d6000803e3d6000fd5b50506014546019546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620015829260009216906004016200732f565b600060405180830381600087803b1580156200159d57600080fd5b505af1158015620015b2573d6000803e3d6000fd5b5050601454601a546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620016079260029216906004016200732f565b600060405180830381600087803b1580156200162257600080fd5b505af115801562001637573d6000803e3d6000fd5b5050601454601b546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f193506200168c9260029216906004016200732f565b600060405180830381600087803b158015620016a757600080fd5b505af1158015620016bc573d6000803e3d6000fd5b5050601454601c546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620017119260029216906004016200732f565b600060405180830381600087803b1580156200172c57600080fd5b505af115801562001741573d6000803e3d6000fd5b5050601c54600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f6f7065726174650000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b158015620017ce57600080fd5b505af1158015620017e3573d6000803e3d6000fd5b5050601c54601b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f7265706f7274657200000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b1580156200187057600080fd5b505af115801562001885573d6000803e3d6000fd5b5050601c54600c546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b1580156200191257600080fd5b505af115801562001927573d6000803e3d6000fd5b5050601c54600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f61646d696e00000000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b158015620019b457600080fd5b505af1158015620019c9573d6000803e3d6000fd5b5050601c54601a546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c697374000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562001a5657600080fd5b505af115801562001a6b573d6000803e3d6000fd5b5050601c54600c546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c697374000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562001af857600080fd5b505af115801562001b0d573d6000803e3d6000fd5b5050601c54600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f61646d696e00000000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562001b9a57600080fd5b505af115801562001baf573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001c0d57600080fd5b505af115801562001c22573d6000803e3d6000fd5b5050601b54601a546040517fb3ab15fb0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529116925063b3ab15fb9150602401600060405180830381600087803b15801562001c8957600080fd5b505af115801562001c9e573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001cfc57600080fd5b505af115801562001d11573d6000803e3d6000fd5b50505050601a60009054906101000a90046001600160a01b03166001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001d6657600080fd5b505af115801562001d7b573d6000803e3d6000fd5b505060115460095466038d7ea4c68000935069d3c21bcecceda100000092506001600160a01b03918216916340c10f19911662001dba856014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001e1957600080fd5b505af115801562001e2e573d6000803e3d6000fd5b50506012546009546001600160a01b0391821693506340c10f1992501662001e58846014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001eb757600080fd5b505af115801562001ecc573d6000803e3d6000fd5b50506012546017546001600160a01b0391821693506340c10f1992501662001ef6846064620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001f5557600080fd5b505af115801562001f6a573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001fc857600080fd5b505af115801562001fdd573d6000803e3d6000fd5b5050601154601a546001600160a01b03918216935063095ea7b392501662002007856014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156200206b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020919190620073f2565b5060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620020ec57600080fd5b505af115801562002101573d6000803e3d6000fd5b5050601254601a546001600160a01b03918216935063095ea7b39250166200212b846014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156200218f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021b59190620073f2565b5060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200221057600080fd5b505af115801562002225573d6000803e3d6000fd5b5050601154600f546001600160a01b03918216935063095ea7b39250166200224f856014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620022b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022d99190620073f2565b5060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200233457600080fd5b505af115801562002349573d6000803e3d6000fd5b5050601254600f546001600160a01b03918216935063095ea7b392501662002373846014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620023d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023fd9190620073f2565b5060125460115462002422916001600160a01b0390811691166000600160036200695e565b601d5560115460125462002449916001600160a01b0390811691166001600060036200695e565b601e556011546200246a906001600160a01b0316806001600060086200695e565b601f55601254620024aa906001600160a01b03168060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60086200695e565b602055601254601154620024d1916001600160a01b0390811691166000600160036200695e565b602155600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200252e57600080fd5b505af115801562002543573d6000803e3d6000fd5b5050601b54600f54601d546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620025b557600080fd5b505af1158015620025ca573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200262857600080fd5b505af11580156200263d573d6000803e3d6000fd5b5050601b54600f54601e546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620026af57600080fd5b505af1158015620026c4573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200272257600080fd5b505af115801562002737573d6000803e3d6000fd5b5050601b54600f54601f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620027a957600080fd5b505af1158015620027be573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200281c57600080fd5b505af115801562002831573d6000803e3d6000fd5b5050601b54600f546020546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620028a357600080fd5b505af1158015620028b8573d6000803e3d6000fd5b505050505050565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a60248201529116906340c10f1990604401600060405180830381600087803b1580156200292a57600080fd5b505af11580156200293f573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562002993573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029b991906200741d565b90506000602154604051602401620029d391815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c60e16700000000000000000000000000000000000000000000000000000000179052600f54905163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002aa557600080fd5b505af115801562002aba573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062002b1090849060040162007466565b600060405180830381600087803b15801562002b2b57600080fd5b505af115801562002b40573d6000803e3d6000fd5b5050601b546021546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b15801562002bb657600080fd5b505af115801562002bcb573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562002c1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c4591906200741d565b905062002c53818462006c98565b600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002cad57600080fd5b505af115801562002cc2573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b15801562002d3857600080fd5b505af115801562002d4d573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562002d9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002dc491906200741d565b905062002dde8162002dd885600a620074b9565b62006c98565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002e3857600080fd5b505af115801562002e4d573d6000803e3d6000fd5b5050601b54600f54601d546040517f1074bce50000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152602481019190915291169250631074bce59150604401600060405180830381600087803b15801562002ebf57600080fd5b505af115801562002ed4573d6000803e3d6000fd5b50505050601d5460405160240162002eee91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c60e16700000000000000000000000000000000000000000000000000000000179052600f54905163ca669fa760e01b81526001600160a01b039091166004820152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002fc057600080fd5b505af115801562002fd5573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506200302b90859060040162007466565b600060405180830381600087803b1580156200304657600080fd5b505af11580156200305b573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c91506064015b600060405180830381600087803b158015620030d257600080fd5b505af1158015620030e7573d6000803e3d6000fd5b50505050505050565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a60248201529116906340c10f1990604401600060405180830381600087803b1580156200315a57600080fd5b505af11580156200316f573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd000000000000000000000000000000000000000000000000000000008152600094508493506001600160a01b0390921691638aeb40fd91620031c79160040190815260200190565b6040805180830381865afa158015620031e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200320a9190620074d4565b915091506200321b82600062006c98565b6200322881600062006c98565b600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200328257600080fd5b505af115801562003297573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200330d57600080fd5b505af115801562003322573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd000000000000000000000000000000000000000000000000000000008152600094508493506001600160a01b0390921691638aeb40fd916200337a9160040190815260200190565b6040805180830381865afa15801562003397573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033bd9190620074d4565b91509150620033ce82600a62006c98565b620033db81600a62006c98565b50505050565b60135460115460009162003408916001600160a01b0391821691166002600160056200695e565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200346557600080fd5b505af11580156200347a573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101869052911692506398fc55d89150604401600060405180830381600087803b158015620034e857600080fd5b505af1158015620034fd573d6000803e3d6000fd5b505060408051808201918290526012546017546370a0823160e01b9093526001600160a01b039283166044830152600094509092508291166370a0823160648301602060405180830381865afa1580156200355c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200358291906200741d565b81526013546017546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa158015620035d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035fd91906200741d565b9052601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152601e602482015292935016906340c10f1990604401600060405180830381600087803b1580156200366b57600080fd5b505af115801562003680573d6000803e3d6000fd5b5050601354601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b158015620036ee57600080fd5b505af115801562003703573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200376157600080fd5b505af115801562003776573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152601e6024820152600160448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b158015620037ec57600080fd5b505af115801562003801573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200385f57600080fd5b505af115801562003874573d6000803e3d6000fd5b5050601b546040517f4b9de77c00000000000000000000000000000000000000000000000000000000815260048101869052600a602482015260c860448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b158015620038e657600080fd5b505af1158015620038fb573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b039182166004820152620039809450911691506370a08231906024015b602060405180830381865afa15801562003952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200397891906200741d565b601e62006c98565b601354601b546040516370a0823160e01b81526001600160a01b03918216600482015262003a039291909116906370a08231906024015b602060405180830381865afa158015620039d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039fb91906200741d565b600a62006c98565b60408051600180825281830190925260009160208083019080368337505060125482519293506001600160a01b03169183915060009062003a485762003a4862007266565b6001600160a01b03928316602091820292909201810191909152604080517f63616c6c6261636b5f61646d696e0000000000000000000000000000000000006024808301919091528251808303820181526044909201835292810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f4100000000000000000000000000000000000000000000000000000000179052600954825163ca669fa760e01b81529416600485015290519092737109709ecfa91a80626ff3989d68f67f5b1dd12d9263ca669fa792828201926000929082900301818387803b15801562003b3b57600080fd5b505af115801562003b50573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062003ba690849060040162007466565b600060405180830381600087803b15801562003bc157600080fd5b505af115801562003bd6573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c843915062003c25908590600401620074f9565b600060405180830381600087803b15801562003c4057600080fd5b505af115801562003c55573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063ca669fa792506024019050600060405180830381600087803b15801562003cb557600080fd5b505af115801562003cca573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c843915062003d19908490600401620074f9565b600060405180830381600087803b15801562003d3457600080fd5b505af115801562003d49573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b03918216600482015262003dce9450911691506370a08231906024015b602060405180830381865afa15801562003da0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dc691906200741d565b600062006c98565b6012546017546040516370a0823160e01b81526001600160a01b03918216600482015262003e589291909116906370a08231906024015b602060405180830381865afa15801562003e23573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e4991906200741d565b835162002dd890601e620074b9565b60135481516001600160a01b0390911690829060009062003e7d5762003e7d62007266565b6001600160a01b039283166020918202929092010152600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562003ee457600080fd5b505af115801562003ef9573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c843915062003f48908490600401620074f9565b600060405180830381600087803b15801562003f6357600080fd5b505af115801562003f78573d6000803e3d6000fd5b5050601354601b546040516370a0823160e01b81526001600160a01b03918216600482015262003fb69450911691506370a082319060240162003d82565b6013546017546040516370a0823160e01b81526001600160a01b039182166004820152620040439291909116906370a08231906024015b602060405180830381865afa1580156200400b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200403191906200741d565b602084015162002dd890600a620074b9565b60408051808201918290526012546017546370a0823160e01b9093526001600160a01b03928316604483015290918291166370a0823160648301602060405180830381865afa1580156200409b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040c191906200741d565b81526013546017546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562004116573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200413c91906200741d565b9052601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152601e602482015292945016906340c10f1990604401600060405180830381600087803b158015620041aa57600080fd5b505af1158015620041bf573d6000803e3d6000fd5b5050601354601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b1580156200422d57600080fd5b505af115801562004242573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620042a057600080fd5b505af1158015620042b5573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152601e6024820152600160448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200432b57600080fd5b505af115801562004340573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200439e57600080fd5b505af1158015620043b3573d6000803e3d6000fd5b5050601b546040517f4b9de77c00000000000000000000000000000000000000000000000000000000815260048101879052600a602482015260c860448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200442557600080fd5b505af11580156200443a573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b039182166004820152620044789450911691506370a082319060240162003934565b601354601b546040516370a0823160e01b81526001600160a01b039182166004820152620044b49291909116906370a0823190602401620039b7565b6040805160028082526060820183529091602083019080368337505060125482519293506001600160a01b031691839150600090620044f757620044f762007266565b6001600160a01b0392831660209182029290920101526013548251911690829060019081106200452b576200452b62007266565b6001600160a01b039283166020918202929092010152600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200459257600080fd5b505af1158015620045a7573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c8439150620045f6908490600401620074f9565b600060405180830381600087803b1580156200461157600080fd5b505af115801562004626573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b039182166004820152620046649450911691506370a082319060240162003d82565b6012546017546040516370a0823160e01b81526001600160a01b039182166004820152620046a09291909116906370a082319060240162003e05565b601354601b546040516370a0823160e01b81526001600160a01b039182166004820152620046dc9291909116906370a082319060240162003d82565b6013546017546040516370a0823160e01b81526001600160a01b039182166004820152620047189291909116906370a082319060240162003fed565b505050565b601154600f546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa1580156200476f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200479591906200741d565b601254601b546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015620047e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200480e91906200741d565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015261012c602482015292935016906340c10f1990604401600060405180830381600087803b1580156200487b57600080fd5b505af115801562004890573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620048ee57600080fd5b505af115801562004903573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481019190915261012c6024820152600a60448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200497a57600080fd5b505af11580156200498f573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015262004a189450911691506370a0823190602401602060405180830381865afa158015620049e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a0b91906200741d565b62002dd884600a620074b9565b601254601b546040516370a0823160e01b81526001600160a01b03918216600482015262004aa09291909116906370a0823190602401602060405180830381865afa15801562004a6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a9291906200741d565b62002dd88361012c620074b9565b601254600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562004aed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b1391906200741d565b601154601b546040516370a0823160e01b81526001600160a01b03918216600482015292945016906370a0823190602401602060405180830381865afa15801562004b62573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b8891906200741d565b601154601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a602482015292935016906340c10f1990604401600060405180830381600087803b15801562004bf457600080fd5b505af115801562004c09573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562004c6757600080fd5b505af115801562004c7c573d6000803e3d6000fd5b5050601b54601e546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a602482015261012c60448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b15801562004cf357600080fd5b505af115801562004d08573d6000803e3d6000fd5b5050601254600f546040516370a0823160e01b81526001600160a01b03918216600482015262004d929450911691506370a0823190602401602060405180830381865afa15801562004d5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d8491906200741d565b62002dd88461012c620074b9565b601154601b546040516370a0823160e01b81526001600160a01b03918216600482015262004e149291909116906370a08231906024015b602060405180830381865afa15801562004de7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e0d91906200741d565b8262006c98565b601154600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562004e61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e8791906200741d565b601154601b546040516370a0823160e01b81526001600160a01b03918216600482015292945016906370a0823190602401602060405180830381865afa15801562004ed6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004efc91906200741d565b601154601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526064602482015292935016906340c10f1990604401600060405180830381600087803b15801562004f6857600080fd5b505af115801562004f7d573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562004fdb57600080fd5b505af115801562004ff0573d6000803e3d6000fd5b5050601b54601f546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152606460248201819052609660448301526001600160a01b039092169350634b9de77c925001600060405180830381600087803b1580156200506657600080fd5b505af11580156200507b573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b039182166004820152620051049450911691506370a0823190602401602060405180830381865afa158015620050d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620050f791906200741d565b62002dd8846096620074b9565b601154601b546040516370a0823160e01b81526001600160a01b039182166004820152620051409291909116906370a082319060240162004dc9565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152606460248201529116906340c10f1990604401600060405180830381600087803b158015620051aa57600080fd5b505af1158015620051bf573d6000803e3d6000fd5b505050506000602054604051602401620051db91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c60e16700000000000000000000000000000000000000000000000000000000179052600f54905163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620052ad57600080fd5b505af1158015620052c2573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506200531890849060040162007466565b600060405180830381600087803b1580156200533357600080fd5b505af115801562005348573d6000803e3d6000fd5b5050601b546020546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152606460248201819052609660448301526001600160a01b039092169350634b9de77c925001620030b7565b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc7a4111e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620054519185910162007466565b600060405180830381600087803b1580156200546c57600080fd5b505af115801562005481573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620054df57600080fd5b505af1158015620054f4573d6000803e3d6000fd5b5050601b546040517fb3ab15fb000000000000000000000000000000000000000000000000000000008152600060048201526001600160a01b03909116925063b3ab15fb9150602401600060405180830381600087803b1580156200555857600080fd5b505af11580156200556d573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620055cb57600080fd5b505af1158015620055e0573d6000803e3d6000fd5b5050601b546009546040517fb3ab15fb0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529116925063b3ab15fb9150602401600060405180830381600087803b1580156200564757600080fd5b505af11580156200565c573d6000803e3d6000fd5b50505050620056f0601b60009054906101000a90046001600160a01b03166001600160a01b031663570ca7356040518163ffffffff1660e01b8152600401602060405180830381865afa158015620056b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620056de919062007548565b6009546001600160a01b031662006dae565b50565b60008054610100900460ff1615620057145750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620058585760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091620057bc917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162007568565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620057f691620075b2565b6000604051808303816000865af19150503d806000811462005835576040519150601f19603f3d011682016040523d82523d6000602084013e6200583a565b606091505b5091505080806020019051810190620058549190620073f2565b9150505b919050565b60125460115460009162005883916001600160a01b03918216911683600160036200695e565b601254601154919250600091620058ac916001600160a01b03908116911683600160036200695e565b6040517f63616c6c6261636b5f77686974656c697374000000000000000000000000000060248201529091506000907f7de30f410000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009490941693909317909252600954915163ca669fa760e01b81526001600160a01b0390921660048301529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620059d957600080fd5b505af1158015620059ee573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062005a4490849060040162007466565b600060405180830381600087803b15801562005a5f57600080fd5b505af115801562005a74573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101889052911692506398fc55d89150604401600060405180830381600087803b15801562005ae257600080fd5b505af115801562005af7573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562005b5557600080fd5b505af115801562005b6a573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101889052911692506398fc55d89150604401600060405180830381600087803b15801562005bd857600080fd5b505af115801562005bed573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018890529116925063853dc0da9150604401602060405180830381865afa15801562005c5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c849190620073f2565b62005c935762005c93620075d0565b601a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005ced57600080fd5b505af115801562005d02573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101879052911692506398fc55d89150604401600060405180830381600087803b15801562005d7057600080fd5b505af115801562005d85573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018790529116925063853dc0da9150604401602060405180830381865afa15801562005df6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e1c9190620073f2565b620047185762004718620075d0565b60125460115460009162005e51916001600160a01b03918216911683600160036200695e565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005eae57600080fd5b505af115801562005ec3573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101869052911692506398fc55d89150604401600060405180830381600087803b15801562005f3157600080fd5b505af115801562005f46573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018690529116925063853dc0da9150604401602060405180830381865afa15801562005fb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005fdd9190620073f2565b62005fec5762005fec620075d0565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200604657600080fd5b505af11580156200605b573d6000803e3d6000fd5b5050601b54600f546040517f1074bce50000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810186905291169250631074bce59150604401600060405180830381600087803b158015620060c957600080fd5b505af1158015620060de573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018690529116925063853dc0da9150604401602060405180830381865afa1580156200614f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620061759190620073f2565b15620056f057620056f0620075d0565b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8136384900000000000000000000000000000000000000000000000000000000179052600f54925163ca669fa760e01b81529192737109709ecfa91a80626ff3989d68f67f5b1dd12d9263ca669fa7926200622d926001600160a01b031691016001600160a01b0391909116815260200190565b600060405180830381600087803b1580156200624857600080fd5b505af11580156200625d573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb39150620062b390849060040162007466565b600060405180830381600087803b158015620062ce57600080fd5b505af1158015620062e3573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200635957600080fd5b505af11580156200636e573d6000803e3d6000fd5b5050601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260056024820152911692506340c10f199150604401600060405180830381600087803b158015620063dc57600080fd5b505af1158015620063f1573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200644f57600080fd5b505af115801562006464573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb39150620064ba90849060040162007466565b600060405180830381600087803b158015620064d557600080fd5b505af1158015620064ea573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200656057600080fd5b505af115801562006575573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620065d357600080fd5b505af1158015620065e8573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481019190915260056024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200665e57600080fd5b505af115801562006673573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd000000000000000000000000000000000000000000000000000000008152600094508493506001600160a01b0390921691638aeb40fd91620066cb9160040190815260200190565b6040805180830381865afa158015620066e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200670e9190620074d4565b915091506200671f82600562006c98565b6200672c81600562006c98565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152601460248201529116906340c10f1990604401600060405180830381600087803b1580156200679657600080fd5b505af1158015620067ab573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200680957600080fd5b505af11580156200681e573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200689457600080fd5b505af1158015620068a9573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd0000000000000000000000000000000000000000000000000000000081526001600160a01b039092169350638aeb40fd9250620068fc9160040190815260200190565b6040805180830381865afa15801562006919573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200693f9190620074d4565b90925090506200695182600f62006c98565b6200471881600f62006c98565b600080856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620069a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620069c69190620075ff565b90506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562006a09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006a2f9190620075ff565b9050600062006a3f868462007624565b62006a4c90600a620077c7565b62006a5b90620186a0620073b2565b90506000600262006a6d898962007624565b62006a79919062007807565b62006a85848662007624565b62006a91919062007624565b905060008888838762006aa688602462007881565b62006ab29190620078a9565b62006abe9190620078cf565b62006aca9190620078cf565b62006ad6919062007624565b62006ae390600a620077c7565b62006aef9088620073b2565b905060008989848862006b0489602462007881565b62006b109190620078a9565b62006b1c9190620078cf565b62006b289190620078cf565b62006b34919062007624565b62006b4190600a620077c7565b62006b4e60028a62007936565b62006b5a9190620073b2565b60408051610180810182526001600160a01b03808f1682528f81166020830152601b5416918101919091526000606082018190526080820187905260a0820185905260c0820183905261c35060e08301526101008201819052919250610120810162006bca4262093a80620074b9565b65ffffffffffff16815262015180602080830191909152600087900b60409283015260105491519293506001600160a01b03909116916353c7f8e09162006c14918591016200794d565b6040516020818303038152906040526040518263ffffffff1660e01b815260040162006c41919062007466565b6020604051808303816000875af115801562006c61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c8791906200741d565b9d9c50505050505050505050505050565b80821462006daa577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162006d269060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162006d5f919062007a2f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162006d98919062007a7b565b60405180910390a162006daa62006ec0565b5050565b806001600160a01b0316826001600160a01b03161462006daa577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162006e4e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162006e87919062007ab9565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162006d98919062007b0e565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620070155760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262006f92929160200162007568565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262006fcc91620075b2565b6000604051808303816000865af19150503d80600081146200700b576040519150601f19603f3d011682016040523d82523d6000602084013e62007010565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b61040a8062007b4d83390190565b610f7a8062007f5783390190565b61216a8062008ed183390190565b614d95806200b03b83390190565b6147e3806200fdd083390190565b61122280620145b383390190565b61122280620157d583390190565b611edc80620169f783390190565b61093380620188d383390190565b611a73806201920683390190565b612111806201ac7983390190565b61116c806201cd8a83390190565b610b11806201def683390190565b610caa806201ea0783390190565b612a35806201f6b183390190565b61811480620220e683390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6001600160a01b0381168114620056f057600080fd5b8051620058588162007152565b600060208083850312156200718957600080fd5b825167ffffffffffffffff80821115620071a257600080fd5b818501915085601f830112620071b757600080fd5b815181811115620071cc57620071cc62007123565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171562007212576200721262007123565b6040529182528482019250838101850191888311156200723157600080fd5b938501935b828510156200725a576200724a8562007168565b8452938501939285019262007236565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006101a0820190506001600160a01b03808816835260208188168185015281871660408501526060840191508560005b6002811015620072f05781516001600160a01b0316845260208401935090820190600101620072c6565b505060a0840191508460005b60088110156200732157815163ffffffff1684529282019290820190600101620072fc565b505050509695505050505050565b60408101600684106200736b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9281526001600160a01b039190911660209091015290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620073ed57620073ed62007383565b500290565b6000602082840312156200740557600080fd5b815180151581146200741657600080fd5b9392505050565b6000602082840312156200743057600080fd5b5051919050565b60005b83811015620074545781810151838201526020016200743a565b83811115620033db5750506000910152565b60208152600082518060208401526200748781604085016020870162007437565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115620074cf57620074cf62007383565b500190565b60008060408385031215620074e857600080fd5b505080516020909101519092909150565b6020808252825182820181905260009190848201906040850190845b818110156200753c5783516001600160a01b03168352928401929184019160010162007515565b50909695505050505050565b6000602082840312156200755b57600080fd5b8151620074168162007152565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251620075a481600485016020870162007437565b919091016004019392505050565b60008251620075c681846020870162007437565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000602082840312156200761257600080fd5b815160ff811681146200741657600080fd5b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018312811516156200766a576200766a62007383565b81607f01831381161562007682576200768262007383565b5090039392505050565b600181815b80851115620076eb57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115620076cf57620076cf62007383565b80851615620076dd57918102915b93841c939080029062007691565b509250929050565b6000826200770457506001620077c1565b816200771357506000620077c1565b81600181146200772c5760028114620077375762007757565b6001915050620077c1565b60ff8411156200774b576200774b62007383565b50506001821b620077c1565b5060208310610133831016604e8410600b84101617156200777c575081810a620077c1565b6200778883836200768c565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115620077bd57620077bd62007383565b0290505b92915050565b60006200741660ff841683620076f3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160000b8360000b80620078215762007821620077d8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808314161562007878576200787862007383565b90059392505050565b600060ff821660ff84168060ff03821115620078a157620078a162007383565b019392505050565b600060ff821660ff841680821015620078c657620078c662007383565b90039392505050565b60008160000b8360000b6000821282607f03821381151615620078f657620078f662007383565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800382128116156200792d576200792d62007383565b50019392505050565b600082620079485762007948620077d8565b500490565b81516001600160a01b03168152610180810160208301516200797a60208401826001600160a01b03169052565b5060408301516200799660408401826001600160a01b03169052565b506060830151620079ab606084018215159052565b506080830151608083015260a083015160a083015260c083015160c083015260e0830151620079e260e084018263ffffffff169052565b506101008381015165ffffffffffff9081169184019190915261012080850151909116908301526101408084015163ffffffff16908301526101609283015160000b929091019190915290565b60408152600062007a6d60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b60408152600062007a6d60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b60408152600062007af760408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b90506001600160a01b038316602083015292915050565b60408152600062007af760408301600a81527f202020202052696768740000000000000000000000000000000000000000000060208201526040019056fe737109709ecfa91a80626ff3989d68f67f5b1dd12d60805264757365727360d81b60c052600560a05260c56040527f39b41f4ff9d03853a3e5e26ffad8712de4330b640064cfa05d0a29978dea11c660005534801561005d57600080fd5b50608051610391610079600039600061017b01526103916000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c8fe5261461003b578063780900dc1461008a575b600080fd5b6000805460408051602080820184905282518083038201815282840193849052805191012090935573ffffffffffffffffffffffffffffffffffffffff90911690526060015b60405180910390f35b61009d61009836600461022b565b6100aa565b6040516100819190610244565b606060008267ffffffffffffffff8111156100c7576100c761029e565b6040519080825280602002602001820160405280156100f0578160200160208202803683370190505b50905060005b838110156102245760008054604080516020808201849052825180830382018152918301909252805191012082556040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b1580156101c157600080fd5b505af11580156101d5573d6000803e3d6000fd5b50505050808383815181106101ec576101ec6102cd565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152508061021c816102fc565b9150506100f6565b5092915050565b60006020828403121561023d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561029257835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610260565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220deda93e03e4b234ba90d8fbed2cf2ce390afbc8778d16cf98dd284e98ba0270264736f6c634300080f0033608060405234801561001057600080fd5b50604051610f7a380380610f7a83398101604081905261002f916100e1565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505061011b565b6001600160a01b03811681146100de57600080fd5b50565b600080604083850312156100f457600080fd5b82516100ff816100c9565b6020840151909250610110816100c9565b809150509250929050565b610e508061012a6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80637d40583d1161008c578063b700961311610066578063b700961314610285578063bf7e214f14610298578063c6b0263e146102b8578063ea7ca276146102cb57600080fd5b80637d40583d146101bb5780638da5cb5b146101ce578063b4bad06a1461021357600080fd5b806367aff484116100bd57806367aff4841461016a5780637917b7941461017d5780637a9e5e4b146101a857600080fd5b806306a36aee146100e457806313af4035146101175780632f47571f1461012c575b600080fd5b6101046100f2366004610bf0565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b61012a610125366004610bf0565b61030f565b005b61015a61013a366004610c49565b600360209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161010e565b61012a610178366004610c9d565b610418565b61010461018b366004610c49565b600460209081526000928352604080842090915290825290205481565b61012a6101b6366004610bf0565b610576565b61012a6101c9366004610ce6565b6106d3565b6000546101ee9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61015a610221366004610d3e565b73ffffffffffffffffffffffffffffffffffffffff9190911660009081526004602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000090941683529290522054600160ff929092161c16151590565b61015a610293366004610d83565b6108ac565b6001546101ee9073ffffffffffffffffffffffffffffffffffffffff1681565b61012a6102c6366004610da3565b610975565b61015a6102d9366004610dd1565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260026020526040902054600160ff9092161c16151590565b61033d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b6103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b610446336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b6104ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161039f565b80156104e85773ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090208054600160ff85161b17905561051b565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf283604051610569911515815260200190565b60405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061065957506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190610dfd565b61066257600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b610701336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161039f565b80156107d05773ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290208054600160ff87161b179055610830565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290208054600160ff87161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff168560ff167fa52ea92e6e955aa8ac66420b86350f7139959adfcc7e6a14eee1bd116d09860e8460405161089e911515815260200190565b60405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008516845290915281205460ff168061096d575073ffffffffffffffffffffffffffffffffffffffff80841660009081526004602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452825280832054938816835260029091529020541615155b949350505050565b6109a3336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b610a09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161039f565b73ffffffffffffffffffffffffffffffffffffffff831660008181526003602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f950a343f5d10445e82a71036d3f4fb3016180a25805141932543b83e2078a93e9101610569565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590610b9f57506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190610dfd565b8061096d575060005473ffffffffffffffffffffffffffffffffffffffff858116911614949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610bed57600080fd5b50565b600060208284031215610c0257600080fd5b8135610c0d81610bcb565b9392505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610c4457600080fd5b919050565b60008060408385031215610c5c57600080fd5b8235610c6781610bcb565b9150610c7560208401610c14565b90509250929050565b803560ff81168114610c4457600080fd5b8015158114610bed57600080fd5b600080600060608486031215610cb257600080fd5b8335610cbd81610bcb565b9250610ccb60208501610c7e565b91506040840135610cdb81610c8f565b809150509250925092565b60008060008060808587031215610cfc57600080fd5b610d0585610c7e565b93506020850135610d1581610bcb565b9250610d2360408601610c14565b91506060850135610d3381610c8f565b939692955090935050565b600080600060608486031215610d5357600080fd5b610d5c84610c7e565b92506020840135610d6c81610bcb565b9150610d7a60408501610c14565b90509250925092565b600080600060608486031215610d9857600080fd5b8335610d5c81610bcb565b600080600060608486031215610db857600080fd5b8335610dc381610bcb565b9250610ccb60208501610c14565b60008060408385031215610de457600080fd5b8235610def81610bcb565b9150610c7560208401610c7e565b600060208284031215610e0f57600080fd5b8151610c0d81610c8f56fea2646970667358221220dfd749908e831712a926fd9bb183575f79dcb2c4a9d00d07bf08be2330e39c8164736f6c634300080f003360806040523480156200001157600080fd5b506040516200216a3803806200216a8339810160408190526200003491620000e8565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505062000127565b6001600160a01b0381168114620000e557600080fd5b50565b60008060408385031215620000fc57600080fd5b82516200010981620000cf565b60208401519092506200011c81620000cf565b809150509250929050565b61203380620001376000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638da5cb5b116100ee578063bf48582b11610097578063c3b7b13611610071578063c3b7b136146103c1578063c7bf8ca0146103d4578063ea5e0c60146103e7578063f9e709df1461041d57600080fd5b8063bf48582b1461037b578063bf7e214f1461038e578063c0680e20146103ae57600080fd5b8063b4359143116100c8578063b435914314610342578063bb6e75de14610355578063bbfe3a321461036857600080fd5b80638da5cb5b146102fc578063946824cd1461031c5780639a0fae9b1461032f57600080fd5b80634938a3fe1161015057806378b5a87a1161012a57806378b5a87a146102c35780637a9e5e4b146102d65780638b098db3146102e957600080fd5b80634938a3fe14610235578063520479421461025557806366b382ee146102b057600080fd5b8063247608071161018157806324760807146101f657806327507458146101ff5780633adec5a71461022257600080fd5b806306b40ea3146101a857806313af4035146101ce5780631c063a6c146101e3575b600080fd5b6101bb6101b6366004611c24565b610430565b6040519081526020015b60405180910390f35b6101e16101dc366004611c50565b610461565b005b6101bb6101f1366004611c6d565b61056a565b6101bb60025481565b61021261020d366004611c6d565b610613565b60405190151581526020016101c5565b6101bb610230366004611c6d565b6106b5565b610248610243366004611c86565b61071a565b6040516101c59190611cbb565b61028b610263366004611c6d565b60009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c5565b6101e16102be366004611c50565b610a96565b61028b6102d1366004611c6d565b610c4c565b6101e16102e4366004611c50565b610cea565b6102126102f7366004611c6d565b610e47565b60005461028b9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb61032a366004611c6d565b610eac565b6101bb61033d366004611cff565b610f11565b6101bb610350366004611d50565b6111ba565b610248610363366004611d89565b611317565b610248610376366004611d50565b6113f6565b6101bb610389366004611dab565b61177c565b60015461028b9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb6103bc366004611c24565b611835565b61028b6103cf366004611c6d565b611851565b6101bb6103e2366004611de4565b611888565b61028b6103f5366004611c6d565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61024861042b366004611e17565b611939565b6006602052816000526040600020818154811061044c57600080fd5b90600052602060002001600091509150505481565b61048f336000357fffffffff0000000000000000000000000000000000000000000000000000000016611aee565b6104fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000818152600560205260408082205490517f1c063a6c0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116908190631c063a6c906024015b602060405180830381865afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611e45565b9392505050565b6000818152600560205260408082205490517f275074580000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169081906327507458906024015b602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611e5e565b6000818152600560205260408082205490517f3adec5a70000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116908190633adec5a7906024016105cb565b6060600080845b848110156108a057600081815260056020526040908190205490517f275074580000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911692508290632750745890602401602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190611e5e565b801561087f57506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff8089169190841690636352211e90602401602060405180830381865afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190611e7b565b73ffffffffffffffffffffffffffffffffffffffff16145b156108905761088d83611ec7565b92505b61089981611ec7565b9050610721565b5060008267ffffffffffffffff8111156108bc576108bc611eff565b6040519080825280602002602001820160405280156108e5578160200160208202803683370190505b50600093509050855b85811015610a8b57600081815260056020526040908190205490517f275074580000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911693508390632750745890602401602060405180830381865afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190611e5e565b8015610a4c57506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff808a169190851690636352211e90602401602060405180830381865afa158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a349190611e7b565b73ffffffffffffffffffffffffffffffffffffffff16145b15610a7b5780828581518110610a6457610a64611f2e565b6020908102919091010152610a7884611ec7565b93505b610a8481611ec7565b90506108ee565b509695505050505050565b610ac4336000357fffffffff0000000000000000000000000000000000000000000000000000000016611aee565b610b2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104f1565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460ff1615610ba2576040517fcba9dee200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016104f1565b6003805460018181019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff9093167fffffffffffffffffffffffff00000000000000000000000000000000000000009093168317905560009182526004602052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b60008181526005602090815260408083205481517f9787d107000000000000000000000000000000000000000000000000000000008152915173ffffffffffffffffffffffffffffffffffffffff909116928392639787d10792600480830193928290030181865afa158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611e7b565b60005473ffffffffffffffffffffffffffffffffffffffff16331480610dcd57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd9190611e5e565b610dd657600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6000818152600560205260408082205490517f8b098db30000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116908190638b098db390602401610674565b6000818152600560205260408082205490517f946824cd0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690819063946824cd906024016105cb565b600080610f1e87876113f6565b805190915060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818080805b868110156111a85760056000898381518110610f6957610f69611f2e565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff1663acc5570c898381518110610fd057610fd0611f2e565b60200260200101516040518263ffffffff1660e01b8152600401610ff691815260200190565b60c060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190611f5d565b9098509650600093505050635dba240065ffffffffffff871611159050611066578465ffffffffffff16611078565b61107865ffffffffffff861642611fe5565b90508a811161119757838c11611197578273ffffffffffffffffffffffffffffffffffffffff1663bf48582b8e8b85815181106110b7576110b7611f2e565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252602482015260006044820152606401602060405180830381865afa92505050801561115c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261115991810190611e45565b60015b1561119757878111801561117057508c8110155b156111955780975089838151811061118a5761118a611f2e565b602002602001015196505b505b506111a181611ec7565b9050610f4b565b50929c9b505050505050505050505050565b3360009081526004602052604081205460ff16611203576040517f8feeaaa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316158061123a575073ffffffffffffffffffffffffffffffffffffffff8216155b15611271576040517f018c362a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060028054600081815260056020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905573ffffffffffffffffffffffffffffffffffffffff8781168452600683528184208054600181810183559186528486200186905590871684526007835290832080549182018155835290822001829055825491929161130d90611ec7565b9091555092915050565b60606000835b8381101561134f5761132e81610613565b1561133f5761133c82611ec7565b91505b61134881611ec7565b905061131d565b5060008167ffffffffffffffff81111561136b5761136b611eff565b604051908082528060200260200182016040528015611394578160200160208202803683370190505b50600092509050845b848110156113ed576113ae81610613565b156113dd57808284815181106113c6576113c6611f2e565b60209081029190910101526113da83611ec7565b92505b6113e681611ec7565b905061139d565b50949350505050565b60606000611405846001611939565b90506000806000808451905060005b81811015611585576005600087838151811061143257611432611f2e565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508273ffffffffffffffffffffffffffffffffffffffff1663acc5570c87838151811061149957611499611f2e565b60200260200101516040518263ffffffff1660e01b81526004016114bf91815260200190565b60c060405180830381865afa1580156114dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115009190611f5d565b5050895190975061152d9350899250849150811061152057611520611f2e565b6020026020010151610613565b801561156457508773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156115755761157285611ec7565b94505b61157e81611ec7565b9050611414565b5060008467ffffffffffffffff8111156115a1576115a1611eff565b6040519080825280602002602001820160405280156115ca578160200160208202803683370190505b5090506000945060005b8281101561176f57600560008883815181106115f2576115f2611f2e565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff1663acc5570c88838151811061165957611659611f2e565b60200260200101516040518263ffffffff1660e01b815260040161167f91815260200190565b60c060405180830381865afa15801561169c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c09190611f5d565b50508a519098506116e093508a9250849150811061152057611520611f2e565b801561171757508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b1561175f5786818151811061172e5761172e611f2e565b602002602001015182878151811061174857611748611f2e565b602090810291909101015261175c86611ec7565b95505b61176881611ec7565b90506115d4565b5098975050505050505050565b6000828152600560205260408082205490517fbf48582b000000000000000000000000000000000000000000000000000000008152600481018690526024810185905273ffffffffffffffffffffffffffffffffffffffff848116604483015290911690819063bf48582b90606401602060405180830381865afa158015611808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182c9190611e45565b95945050505050565b6007602052816000526040600020818154811061044c57600080fd5b6003818154811061186157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000828152600560205260408082205490517fc7bf8ca00000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff848116602483015290911690819063c7bf8ca090604401602060405180830381865afa15801561190d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119319190611e45565b949350505050565b6060808261196b5773ffffffffffffffffffffffffffffffffffffffff84166000908152600760205260409020611991565b73ffffffffffffffffffffffffffffffffffffffff841660009081526006602052604090205b8054806020026020016040519081016040528092919081815260200182805480156119db57602002820191906000526020600020905b8154815260200190600101908083116119c7575b505050505090506000808251905060005b81811015611a2a57611a0984828151811061152057611520611f2e565b15611a1a57611a1783611ec7565b92505b611a2381611ec7565b90506119ec565b5060008267ffffffffffffffff811115611a4657611a46611eff565b604051908082528060200260200182016040528015611a6f578160200160208202803683370190505b5090506000925060005b82811015610a8b57611a9685828151811061152057611520611f2e565b15611ade57848181518110611aad57611aad611f2e565b6020026020010151828581518110611ac757611ac7611f2e565b6020908102919091010152611adb84611ec7565b93505b611ae781611ec7565b9050611a79565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590611bd257506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd29190611e5e565b80611931575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611c2157600080fd5b50565b60008060408385031215611c3757600080fd5b8235611c4281611bff565b946020939093013593505050565b600060208284031215611c6257600080fd5b813561060c81611bff565b600060208284031215611c7f57600080fd5b5035919050565b600080600060608486031215611c9b57600080fd5b8335611ca681611bff565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b81811015611cf357835183529284019291840191600101611cd7565b50909695505050505050565b600080600080600060a08688031215611d1757600080fd5b8535611d2281611bff565b94506020860135611d3281611bff565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215611d6357600080fd5b8235611d6e81611bff565b91506020830135611d7e81611bff565b809150509250929050565b60008060408385031215611d9c57600080fd5b50508035926020909101359150565b600080600060608486031215611dc057600080fd5b83359250602084013591506040840135611dd981611bff565b809150509250925092565b60008060408385031215611df757600080fd5b823591506020830135611d7e81611bff565b8015158114611c2157600080fd5b60008060408385031215611e2a57600080fd5b8235611e3581611bff565b91506020830135611d7e81611e09565b600060208284031215611e5757600080fd5b5051919050565b600060208284031215611e7057600080fd5b815161060c81611e09565b600060208284031215611e8d57600080fd5b815161060c81611bff565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ef857611ef8611e98565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008060008060008060c08789031215611f7657600080fd5b8651611f8181611bff565b6020880151909650611f9281611bff565b6040880151909550611fa381611bff565b6060880151909450611fb481611bff565b608088015190935065ffffffffffff81168114611fd057600080fd5b8092505060a087015190509295509295509295565b60008219821115611ff857611ff8611e98565b50019056fea2646970667358221220f0cf1cca015ad2efc40c7e687a09f9bfba668e47e0cf11d53c4e94c9fad16b7064736f6c634300080f003360c060405260016002553480156200001657600080fd5b5060405162004d9538038062004d9583398101604081905262000039916200011e565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a0525050600480546001600160601b031916905550620001869050565b6001600160a01b03811681146200011b57600080fd5b50565b600080600080608085870312156200013557600080fd5b8451620001428162000105565b6020860151909450620001558162000105565b6040860151909350620001688162000105565b60608601519092506200017b8162000105565b939692955090935050565b60805160a051614bdb620001ba600039600081816111a20152612a310152600081816114060152611d920152614bdb6000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613b75565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613bcf565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613c00565b6106ca565b005b61027a61028a366004613c1d565b6107ce565b61027a61029d366004613dde565b6108d2565b61027a6102b0366004613e8c565b610cdd565b6102c86102c3366004613f38565b610e10565b604051610208929190613fc7565b6102e96102e4366004613ff5565b610eca565b60405161020891906140f2565b610380610304366004613f38565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc366004614105565b61103a565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c1d565b6114f1565b61027a61041e366004614156565b61164e565b61027a610431366004613c00565b6116d1565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe610489366004614178565b6117f0565b61027a61049c3660046141bf565b6118a5565b6004546102509065ffffffffffff1681565b61027a6104c1366004613c00565b61193c565b6104d96104d43660046141ed565b611a4d565b60408051928352602083019190915201610208565b6102506104fc366004613c1d565b611e3d565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c1d565b60036020526000908152604090205465ffffffffffff1681565b6101fe610557366004614178565b611e7b565b610250620186a081565b6101fe61057436600461422e565b600560209081526000928352604080842090915290825290205481565b61022461059f36600461422e565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd3660046142a8565b611f29565b61027a6105e0366004614314565b612035565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b82518251811461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff87161480610992575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b83811015610af057868181518110610a1857610a1861437d565b60200260200101519250858181518110610a3457610a3461437d565b6020026020010151915081600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610a9e91906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff8816600090815260066020908152604080832086845290915281208054849290610ae39084906143f2565b90915550506001016109fe565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989604051610b6792919061440a565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff87163b15610c53576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff89169063bc197c8190610be89033908d908c908c908c9060040161442f565b6020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c6d565b73ffffffffffffffffffffffffffffffffffffffff871615155b610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050505050565b600254600114610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610e05576000848281518110610d6e57610d6e61437d565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610df25733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610df290868361244d565b505080610dfe906144b7565b9050610d52565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ebd916125b6565b9097909650945050505050565b81518151606091908114610f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8067ffffffffffffffff811115610f5357610f53613c3a565b604051908082528060200260200182016040528015610f7c578160200160208202803683370190505b50915060005b818110156110325760066000868381518110610fa057610fa061437d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858381518110610ff657610ff661437d565b602002602001015181526020019081526020016000205483828151811061101f5761101f61437d565b6020908102919091010152600101610f82565b505092915050565b6000806002546001146110a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110f2908a9065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152600360205260408120546004549293509091839161114e9161113b9165ffffffffffff90811691166144ef565b8c9065ffffffffffff16620186a0612957565b61115891906143db565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d9190614519565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a29190614536565b50919b509950975090915060009050836112bc868f6143db565b6112c691906143db565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611316939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135991906145b3565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ea91906143f2565b909155505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938916835292905290812080548392906114539084906143f2565b9091555061146e90508b8b8561146985876143f2565b612a29565b600061147c8e8589886130d1565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114d0929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115d457506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d491906145cc565b6115dd57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116c88282613168565b50506001600255565b6116ff336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b611765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff90811690821611156117ad576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b600080836118016201518085614618565b60405160200161186792919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61196a336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b6119d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a14576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611acf6201518086614618565b611adc906201518061463d565b9050428165ffffffffffff161015611b20576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b2c87836117f0565b60008181526008602052604090205490915060ff16611b9d576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e91906145b3565b9050611c5273ffffffffffffffffffffffffffffffffffffffff89163330896132ce565b611c5c86826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea91906145b3565b1015611d22576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e1657600454600090611d7b90611d689065ffffffffffff660100000000000082048116911661466b565b889065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611de49084906143f2565b90915550611dfe90503384611df9848b6143db565b613447565b82611e0982896143db565b9550955050505050611e2e565b611e21338388613447565b509250839150611e2e9050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff90811691166144ef565b6000600254600114611ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ef984846117f0565b60008181526008602052604090205490915060ff16611f1d57611f1d81858561348a565b60016002559392505050565b600254600114611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fd3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561202857612018868683818110611ff357611ff361437d565b9050602002013585858481811061200c5761200c61437d565b90506020020135613168565b612021816144b7565b9050611fd6565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff86161480612089575073ffffffffffffffffffffffffffffffffffffffff8516600090815260076020908152604080832033845290915290205460ff165b6120ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff851660009081526006602090815260408083208684529091528120805484929061212f9084906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906121749084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff808716929088169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b156122b5576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e619061224a9033908a90899089908990600401614692565b6020604051808303816000875af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d919061449a565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122cf565b73ffffffffffffffffffffffffffffffffffffffff841615155b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061242057506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242091906145cc565b80612445575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124e491906146e2565b6000604051808303816000865af19150503d8060008114612521576040519150601f19603f3d011682016040523d82523d6000602084013e612526565b606091505b509150915081801561255057508051158061255057508080602001905181019061255091906145cc565b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b60608060008080806125cb62015180886146fe565b905060006125dc8262010bd9614712565b6125e99062253d8c614712565b9050600062023ab16125fc836004614786565b6126069190614842565b905060046126178262023ab1614786565b612622906003614712565b61262c9190614842565b61263690836148aa565b9150600062164b09612649846001614712565b61265590610fa0614786565b61265f9190614842565b9050600461266f826105b5614786565b6126799190614842565b61268390846148aa565b61268e90601f614712565b9250600061098f6126a0856050614786565b6126aa9190614842565b9050600060506126bc8361098f614786565b6126c69190614842565b6126d090866148aa565b90506126dd600b83614842565b94506126ea85600c614786565b6126f5836002614712565b6126ff91906148aa565b9150848361270e6031876148aa565b612719906064614786565b6127239190614712565b61272d9190614712565b9850909650945060009350612752925061274d915061271090508661491e565b613708565b90506000600a841061276c5761276784613708565b612795565b61277584613708565b6040516020016127859190614932565b6040516020818303038152906040525b90506000600a84106127af576127aa84613708565b6127d8565b6127b884613708565b6040516020016127c89190614932565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612825573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261286b9190810190614977565b83838360405160200161288194939291906149e5565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156128dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526129239190810190614977565b8383836040516020016129399493929190614a9a565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129ae57600084116129a357600080fd5b508290049050612a22565b8084116129ba57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612a8a91815260200190565b602060405180830381865afa158015612aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612acb9190614519565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b0591815260200190565b60c060405180830381865afa158015612b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b469190614536565b5050935093509350935060008588612b5e91906143db565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf291906145b3565b9050612c1673ffffffffffffffffffffffffffffffffffffffff841633308c6132ce565b612c2089826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cae91906145b3565b1015612ce6576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f1d57612d2373ffffffffffffffffffffffffffffffffffffffff8416868461244d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db491906145b3565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e2d57600080fd5b505af1158015612e41573d6000803e3d6000fd5b505050508881612e5191906143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612edf91906145b3565b1015612f17576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506130c5565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fae91906145b3565b9050612fd273ffffffffffffffffffffffffffffffffffffffff861688308c6132ce565b612fdc89826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306a91906145b3565b10156130a2576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130c373ffffffffffffffffffffffffffffffffffffffff8516888561244d565b505b50505050505050505050565b600065ffffffffffff8216156131475762015180806130f042856144ef565b6130fa9190614618565b613104919061463d565b9050600061311284836117f0565b60008181526008602052604090205490915060ff166131365761313681858461348a565b613141868287613447565b50612445565b61244573ffffffffffffffffffffffffffffffffffffffff8416868661244d565b60008281526008602052604090205460ff166131b0576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132985760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b6132a3338484613868565b60208101516132c99073ffffffffffffffffffffffffffffffffffffffff16338461244d565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161336d91906146e2565b6000604051808303816000865af19150503d80600081146133aa576040519150601f19603f3d011682016040523d82523d6000602084013e6133af565b606091505b50915091508180156133d95750805115806133d95750808060200190518101906133d991906145cc565b61343f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b505050505050565b600082815260086020526040812060010180548392906134689084906143f2565b925050819055506132c98383836040518060200160405280600081525061389a565b60006134996201518083614618565b6134a6906201518061463d565b9050428165ffffffffffff1610156134ea576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135899190614b20565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361374b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613775578061375f816144b7565b915061376e9050600a836146fe565b915061374f565b60008167ffffffffffffffff81111561379057613790613c3a565b6040519080825280601f01601f1916602001820160405280156137ba576020820181803683370190505b509050815b851561385f576137d06001826143db565b905060006137df600a886146fe565b6137ea90600a614b43565b6137f490886143db565b6137ff906030614b80565b905060008160f81b90508084848151811061381c5761381c61437d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613856600a896146fe565b975050506137bf565b50949350505050565b600082815260086020526040812060010180548392906138899084906143db565b909155506132c99050838383613aa0565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906138da9084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a1a576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e61906139af903390600090899089908990600401614692565b6020604051808303816000875af11580156139ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139f2919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a34565b73ffffffffffffffffffffffffffffffffffffffff841615155b613a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613ae09084906143db565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613b6257600080fd5b50565b8035613b7081613b40565b919050565b60008060408385031215613b8857600080fd5b8235613b9381613b40565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613b6257600080fd5b600060208284031215613be157600080fd5b8135612a2281613ba1565b65ffffffffffff81168114613b6257600080fd5b600060208284031215613c1257600080fd5b8135612a2281613bec565b600060208284031215613c2f57600080fd5b8135612a2281613b40565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613cb057613cb0613c3a565b604052919050565b600067ffffffffffffffff821115613cd257613cd2613c3a565b5060051b60200190565b600082601f830112613ced57600080fd5b81356020613d02613cfd83613cb8565b613c69565b82815260059290921b84018101918181019086841115613d2157600080fd5b8286015b84811015613d3c5780358352918301918301613d25565b509695505050505050565b600067ffffffffffffffff821115613d6157613d61613c3a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112613d9e57600080fd5b8135613dac613cfd82613d47565b818152846020838601011115613dc157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215613df657600080fd5b8535613e0181613b40565b94506020860135613e1181613b40565b9350604086013567ffffffffffffffff80821115613e2e57600080fd5b613e3a89838a01613cdc565b94506060880135915080821115613e5057600080fd5b613e5c89838a01613cdc565b93506080880135915080821115613e7257600080fd5b50613e7f88828901613d8d565b9150509295509295909350565b60008060408385031215613e9f57600080fd5b823567ffffffffffffffff811115613eb657600080fd5b8301601f81018513613ec757600080fd5b80356020613ed7613cfd83613cb8565b82815260059290921b83018101918181019088841115613ef657600080fd5b938201935b83851015613f1d578435613f0e81613b40565b82529382019390820190613efb565b9550613f2c9050868201613b65565b93505050509250929050565b600060208284031215613f4a57600080fd5b5035919050565b60005b83811015613f6c578181015183820152602001613f54565b83811115613a9a5750506000910152565b60008151808452613f95816020860160208601613f51565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000613fda6040830185613f7d565b8281036020840152613fec8185613f7d565b95945050505050565b6000806040838503121561400857600080fd5b823567ffffffffffffffff8082111561402057600080fd5b818501915085601f83011261403457600080fd5b81356020614044613cfd83613cb8565b82815260059290921b8401810191818101908984111561406357600080fd5b948201945b8386101561408a57853561407b81613b40565b82529482019490820190614068565b965050860135925050808211156140a057600080fd5b506140ad85828601613cdc565b9150509250929050565b600081518084526020808501945080840160005b838110156140e7578151875295820195908201906001016140cb565b509495945050505050565b602081526000612a2260208301846140b7565b600080600080600060a0868803121561411d57600080fd5b853561412881613b40565b9450602086013561413881613b40565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561416957600080fd5b50508035926020909101359150565b6000806040838503121561418b57600080fd5b823561419681613b40565b915060208301356141a681613bec565b809150509250929050565b8015158114613b6257600080fd5b600080604083850312156141d257600080fd5b82356141dd81613b40565b915060208301356141a6816141b1565b60008060006060848603121561420257600080fd5b833561420d81613b40565b9250602084013561421d81613bec565b929592945050506040919091013590565b6000806040838503121561424157600080fd5b823561424c81613b40565b915060208301356141a681613b40565b60008083601f84011261426e57600080fd5b50813567ffffffffffffffff81111561428657600080fd5b6020830191508360208260051b85010111156142a157600080fd5b9250929050565b600080600080604085870312156142be57600080fd5b843567ffffffffffffffff808211156142d657600080fd5b6142e28883890161425c565b909650945060208701359150808211156142fb57600080fd5b506143088782880161425c565b95989497509550505050565b600080600080600060a0868803121561432c57600080fd5b853561433781613b40565b9450602086013561434781613b40565b93506040860135925060608601359150608086013567ffffffffffffffff81111561437157600080fd5b613e7f88828901613d8d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156143ed576143ed6143ac565b500390565b60008219821115614405576144056143ac565b500190565b60408152600061441d60408301856140b7565b8281036020840152613fec81856140b7565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261446860a08301866140b7565b828103606084015261447a81866140b7565b9050828103608084015261448e8185613f7d565b98975050505050505050565b6000602082840312156144ac57600080fd5b8151612a2281613ba1565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036144e8576144e86143ac565b5060010190565b600065ffffffffffff808316818516808303821115614510576145106143ac565b01949350505050565b60006020828403121561452b57600080fd5b8151612a2281613b40565b60008060008060008060c0878903121561454f57600080fd5b865161455a81613b40565b602088015190965061456b81613b40565b604088015190955061457c81613b40565b606088015190945061458d81613b40565b608088015190935061459e81613bec565b8092505060a087015190509295509295509295565b6000602082840312156145c557600080fd5b5051919050565b6000602082840312156145de57600080fd5b8151612a22816141b1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80841680614631576146316145e9565b92169190910492915050565b600065ffffffffffff80831681851681830481118215151615614662576146626143ac565b02949350505050565b600065ffffffffffff8381169083168181101561468a5761468a6143ac565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526146d760a0830184613f7d565b979650505050505050565b600082516146f4818460208701613f51565b9190910192915050565b60008261470d5761470d6145e9565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561474c5761474c6143ac565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615614780576147806143ac565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156147c7576147c76143ac565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615614802576148026143ac565b6000871292508782058712848416161561481e5761481e6143ac565b87850587128184161615614834576148346143ac565b505050929093029392505050565b600082614851576148516145e9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156148a5576148a56143ac565b500590565b6000808312837f8000000000000000000000000000000000000000000000000000000000000000018312811516156148e4576148e46143ac565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615614918576149186143ac565b50500390565b60008261492d5761492d6145e9565b500690565b7f300000000000000000000000000000000000000000000000000000000000000081526000825161496a816001850160208701613f51565b9190910160010192915050565b60006020828403121561498957600080fd5b815167ffffffffffffffff8111156149a057600080fd5b8201601f810184136149b157600080fd5b80516149bf613cfd82613d47565b8181528560208385010111156149d457600080fd5b613fec826020830160208601613f51565b600085516149f7818460208a01613f51565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551614a31816001840160208a01613f51565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551614a71816002850160208a01613f51565b60029201918201528351614a8c816003840160208801613f51565b016003019695505050505050565b60008551614aac818460208a01613f51565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614ae6816001840160208a01613f51565b8551910190614afc816001840160208901613f51565b8451910190614b12816001840160208801613f51565b016001019695505050505050565b600060208284031215614b3257600080fd5b815160ff81168114612a2257600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614b7b57614b7b6143ac565b500290565b600060ff821660ff84168060ff03821115614b9d57614b9d6143ac565b01939250505056fea2646970667358221220c10ea4b06a86647b13ebdaa04f3e2482dfa627bbaef97658048bb27d315bd1d064736f6c634300080f003360c06040523480156200001157600080fd5b50604051620047e3380380620047e383398101604081905262000034916200013d565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050506001600160a01b039081166080521660a0525050600980546001600160c01b0319167527100001518000000e100003f48000000e100001518017905550506007805460ff19166001179055620001a5565b6001600160a01b03811681146200013a57600080fd5b50565b600080600080608085870312156200015457600080fd5b8451620001618162000124565b6020860151909450620001748162000124565b6040860151909350620001878162000124565b60608601519092506200019a8162000124565b939692955090935050565b60805160a0516145fc620001e76000396000818161051001528181611d7e0152818161201001526120c301526000818161034801526129a401526145fc6000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c8063acc5570c1161017b578063bf7e214f116100d8578063d9ccdc931161008c578063e3684e3911610071578063e3684e39146109af578063e922067314610aed578063ea0aca3314610b0957600080fd5b8063d9ccdc931461098c578063e007fa971461099c57600080fd5b8063c7bf8ca0116100bd578063c7bf8ca014610935578063d204068714610948578063d2bee3231461096857600080fd5b8063bf7e214f146108a2578063c0aa0e8a146108c257600080fd5b8063bc3b2b121161012f578063bcf6cde811610114578063bcf6cde814610869578063bd1f3a5e1461087c578063bf48582b1461088f57600080fd5b8063bc3b2b12146107d2578063bcb296671461085657600080fd5b8063afa9d3b011610160578063afa9d3b0146106a1578063b1283e77146106ae578063bbbdd95a146107bf57600080fd5b8063acc5570c14610534578063ae4180951461068e57600080fd5b80635f77274e116102295780638973082c116101dd5780638da5cb5b116101c25780638da5cb5b146104cb578063946824cd146104eb5780639787d1071461050e57600080fd5b80638973082c1461047b5780638b098db3146104b857600080fd5b80636729a41e1161020e5780636729a41e1461041f578063699e17d9146104555780637a9e5e4b1461046857600080fd5b80635f77274e146103d65780636352211e146103e957600080fd5b806327507458116102805780633adec5a7116102655780633adec5a71461038d57806353c7f8e0146103a05780635dc4d16b146103b357600080fd5b806327507458146103235780633ad59dbc1461034657600080fd5b80630a9d85eb146102b257806310b05317146102d857806313af4035146102ed5780631c063a6c14610300575b600080fd5b6102c56102c036600461402b565b610b21565b6040519081526020015b60405180910390f35b6102eb6102e636600461402b565b610b53565b005b6102eb6102fb366004614076565b610c0e565b6102c561030e36600461402b565b60009081526002602052604090206004015490565b61033661033136600461402b565b610d17565b60405190151581526020016102cf565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102cf565b6102c561039b36600461402b565b610d60565b6102c56103ae366004614093565b610dc3565b6103366103c1366004614076565b60086020526000908152604090205460ff1681565b6102eb6103e436600461411e565b610e6b565b6103686103f736600461402b565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b61036861042d36600461402b565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102eb61046336600461413b565b610f30565b6102eb610476366004614076565b6113d7565b6009546104a39074010000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102cf565b6103366104c636600461402b565b611534565b6000546103689073ffffffffffffffffffffffffffffffffffffffff1681565b6102c56104f936600461402b565b6000908152600260205260409020600a015490565b7f0000000000000000000000000000000000000000000000000000000000000000610368565b61063861054236600461402b565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff90811680835260018401548216838701819052848801548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007870154610100870190815260088801546101208801526009880154610140880152600a90970154610160909601959095529989529290955292909520909301549251919590949265ffffffffffff169190565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c0016102cf565b6102eb61069c36600461402b565b61156a565b6007546103369060ff1681565b6107456106bc36600461402b565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860154600787015460088801546009890154600a9099015473ffffffffffffffffffffffffffffffffffffffff9889169a891699978916988716977401000000000000000000000000000000000000000090970460ff1696908c565b6040805173ffffffffffffffffffffffffffffffffffffffff9d8e1681529b8d1660208d0152998c16998b0199909952999096166060890152931515608088015260a087019290925260c086015260e0850152610100840152610120830152610140820192909252610160810191909152610180016102cf565b6102eb6107cd36600461416e565b6115d3565b6108256107e036600461402b565b6005602052600090815260409020805460019091015465ffffffffffff8082169166010000000000008104909116906c01000000000000000000000000900460ff1684565b6040516102cf949392919093845265ffffffffffff9283166020850152911660408301521515606082015260800190565b6102c561086436600461402b565b6116bd565b6102eb6108773660046141a7565b611851565b6102eb61088a366004614239565b611901565b6102c561089d3660046142be565b611d30565b6001546103689073ffffffffffffffffffffffffffffffffffffffff1681565b6109076108d036600461402b565b60036020526000908152604090208054600182015460029092015490919065ffffffffffff80821691660100000000000090041684565b60408051948552602085019390935265ffffffffffff918216928401929092521660608201526080016102cf565b6102c56109433660046141a7565b611e89565b6009546104a3906c01000000000000000000000000900463ffffffff1681565b6009546104a390700100000000000000000000000000000000900463ffffffff1681565b6009546104a39063ffffffff1681565b6102c56109aa3660046142f7565b6120a9565b610a876109bd36600461402b565b600460205260009081526040902080546001820154600283015460039093015465ffffffffffff80841694660100000000000085049091169363ffffffff6c0100000000000000000000000082048116947001000000000000000000000000000000008304821694740100000000000000000000000000000000000000008404831694780100000000000000000000000000000000000000000000000085048416947c0100000000000000000000000000000000000000000000000000000000900490931692908a565b6040805165ffffffffffff9b8c1681529a90991660208b015263ffffffff978816988a01989098529486166060890152928516608088015290841660a08701529290921660c085015260e0840191909152610100830152610120820152610140016102cf565b6009546104a39068010000000000000000900463ffffffff1681565b6009546104a390640100000000900463ffffffff1681565b600080610b2d83612402565b5050600084815260036020526040902054909150610b4c908290614352565b9392505050565b60008181526006602052604090205473ffffffffffffffffffffffffffffffffffffffff163314610bb0576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260066020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610c3c336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b610ca7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610d5a575060008281526003602052604090206002015442660100000000000090910465ffffffffffff16115b92915050565b600080610d91610d6f846116bd565b6000858152600260205260409020600a0154610d8a86610b21565b91906125ee565b6000848152600260205260409020600601549091508111610d5a57600083815260026020526040902060060154610b4c565b600080610dd28385018561439a565b905080610100015165ffffffffffff16600014158015610e2357506201518081610100015165ffffffffffff161080610e235750635dba240065ffffffffffff1681610100015165ffffffffffff16115b15610e5a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e638161264c565b949350505050565b610e99336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b610eff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b610f3982610d17565b610f6f576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f7c6020820182614471565b63ffffffff161580610fa15750610f996040820160208301614471565b63ffffffff16155b80610fbf5750610fb76060820160408301614471565b63ffffffff16155b15610ff6576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110066040820160208301614471565b63ffffffff166110196020830183614471565b63ffffffff161015611057576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526004602090815260409091208054909170010000000000000000000000000000000090910463ffffffff169061109490840184614471565b63ffffffff1610156110d2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60095468010000000000000000900463ffffffff166110f76060840160408501614471565b63ffffffff161015611135576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083815260026020818152604092839020835161018081018552815473ffffffffffffffffffffffffffffffffffffffff908116808352600184015482169483019490945293820154841694810194909452600381015492831660608501527401000000000000000000000000000000000000000090920460ff1615156080840152600482015460a0840152600582015460c0840152600682015460e0840152600782015461010084015260088201546101208401526009820154610140840152600a90910154610160830152331461123b576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112486020840184614471565b825463ffffffff9190911674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff9091161782556112e66112a16020850185614471565b60008681526003602052604090206002015463ffffffff91909116906112da9042906601000000000000900465ffffffffffff16614352565b60a08401519190613335565b6001830181905560a0820151116112fe576000611312565b81600101548160a001516113129190614352565b60028301556113276040840160208501614471565b825463ffffffff919091167801000000000000000000000000000000000000000000000000027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff9091161782556113846060840160408501614471565b825463ffffffff919091167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90911617909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806114ba57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015611496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ba919061448c565b6114c357600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206002015465ffffffffffff16635dba24008111156115635742811115610b4c565b1592915050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146115c7576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115d081613401565b50565b611601336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000818152600460209081526040808320815161014081018352815465ffffffffffff8082168352660100000000000082041694820185905263ffffffff6c0100000000000000000000000082048116948301949094527001000000000000000000000000000000008104841660608301527401000000000000000000000000000000000000000081048416608083015278010000000000000000000000000000000000000000000000008104841660a08301527c0100000000000000000000000000000000000000000000000000000000900490921660c0830152600181015460e08301526002810154610100830152600301546101208201529042808211156118125760c083015181830390611808906117e090839063ffffffff166144a9565b60c0860151600089815260026020526040902060050154919063ffffffff9081169061333516565b9695505050505050565b60c08301518282039063ffffffff16811161184557611840818560c0015163ffffffff166117e09190614352565b611808565b60009695505050505050565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146118ae576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526006602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61192f336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b611995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b6020810151815163ffffffff918216911610156119de576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151815163ffffffff91821691161015611a27576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810151606082015163ffffffff91821691161115611a73576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151611a839060056144c1565b63ffffffff16816002602002015163ffffffff161015611acf576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060006020020151600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff90921691909117905580600160200201516009805463ffffffff909216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff90921691909117905580600260200201516009805463ffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff90921691909117905580600360200201516009805463ffffffff9092166c01000000000000000000000000027fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff90921691909117905580600460200201516009805463ffffffff909216700100000000000000000000000000000000027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff90921691909117905580600560209081029190910151600980547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff81167401000000000000000000000000000000000000000063ffffffff9485168102918217938490556040805193861692861692909217835264010000000084048516958301959095526801000000000000000083048416908201526c010000000000000000000000008204831660608201527001000000000000000000000000000000008204831660808201529290041660a08201527fbbc02fa2138d26ec5ecb379612618d1b291bf5140167f3028178080953459c5a9060c00160405180910390a150565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291611dfe917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611deb91906144ed565b869065ffffffffffff16620186a0613335565b6000858152600260205260408120600a015491925090611e3290611e2187610d60565b611e2b858a614352565b9190613335565b600086815260026020526040902060070154909150811115611e80576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9150610b4c9050565b6000828152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a015461016082015281611f5d85610d60565b905060008260800151611f855761016083015160a0840151611f80918490613335565b611f8b565b8260a001515b90506000611fae838561016001518661010001516133359092919063ffffffff16565b90506000818310611fbf5781611fc1565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152919250600091612090917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d91906144ed565b839065ffffffffffff16620186a0613335565b905061209c81836144a9565b9998505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461211a576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526002602081815260408084206003808452948290208251608081018452815481526001820154948101949094529093015465ffffffffffff80821692840192909252660100000000000090041660608201529181015490919073ffffffffffffffffffffffffffffffffffffffff16158015906121c35750815473ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205460ff16155b156121fa576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000429050816060015165ffffffffffff168165ffffffffffff161061225c5760608201516040517f07fc4a7000000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610c9e565b6000612269888842613485565b95509050858510156122a7576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600701548511156122e5576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384015474010000000000000000000000000000000000000000900460ff16612315578360040154851161231d565b836004015487115b15612354576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384015474010000000000000000000000000000000000000000900460ff1661237e5784612380565b865b8460040160008282546123939190614352565b92505081905550868460090160008282546123ae91906144a9565b92505081905550848460080160008282546123c991906144a9565b90915550506005840154602084015110156123ec576123e788613401565b6123f7565b6123f7888383613854565b505050509392505050565b600081815260056020908152604080832081516080810183528154815260019091015465ffffffffffff8082169483019490945266010000000000008104909316918101919091526c0100000000000000000000000090910460ff1615156060820181905282918291612480576000806000935093509350506124d6565b602081015161248f904261450a565b9250806040015165ffffffffffff168365ffffffffffff16109150816124b65780516124d2565b604081015181516124d29165ffffffffffff8087169116613335565b9350505b9193909250565b60015460009073ffffffffffffffffffffffffffffffffffffffff1680158015906125c157506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa15801561259d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c1919061448c565b80610e63575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b60006125fb848484613335565b90506000828061260d5761260d614531565b8486091115610b4c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061264257600080fd5b6001019392505050565b60075460009060ff1661268b576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127009190614560565b90506000836020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127779190614560565b905060068260ff16108061278e575060128260ff16115b156127c5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff1610806127da575060128160ff16115b15612811576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe884610160015160000b128061284f5750601884610160015160000b135b15612886576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526008602052604090205460ff161580156128bf5750604084015173ffffffffffffffffffffffffffffffffffffffff1615155b156128f6576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600082610160015160240160ff16600a0a90508260c001518360a00151101561294d576040517f4496547d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825160208401516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af11580156129ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a119190614583565b90506000804286610120015165ffffffffffff16612a2f9190614352565b60095490925063ffffffff70010000000000000000000000000000000090910481169083161080612a80575060095461014087015163ffffffff6c0100000000000000000000000090920482169116105b80612a9b57508163ffffffff1686610140015163ffffffff16115b15612ad2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008661014001516005612ae691906144c1565b60095490915063ffffffff808316680100000000000000009092041611612b0d5780612b23565b60095468010000000000000000900463ffffffff165b600954610140890151919350600091612b7b9163ffffffff908116911611612b535760095463ffffffff16612b5a565b8861014001515b63ffffffff168563ffffffff168a608001516133359092919063ffffffff16565b60408051610140808201835265ffffffffffff4216808352602083015263ffffffff808916938301939093528b01805183166060830152600954905193945090926080840192918216911611612bd95760095463ffffffff16612be0565b8961014001515b63ffffffff9081168252600954640100000000900481166020830152851660408201526060810183905260808a810151910190612c1e908490614352565b8152602001612c5c8563ffffffff168763ffffffff168c60600151612c47578c60800151611e2b565b60a08d015160808e0151611e2b918d90613335565b90526000868152600460209081526040808320845181549386015192860151606080880151608089015160a08a015160c08b015165ffffffffffff9687167fffffffffffffffffffffffffffffffffffffffff000000000000000000000000909a169990991766010000000000009690981695909502969096177fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff166c0100000000000000000000000063ffffffff948516027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff161770010000000000000000000000000000000091841691909102177fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000958316959095027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1694909417780100000000000000000000000000000000000000000000000092821692909202919091177bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167c0100000000000000000000000000000000000000000000000000000000919094160292909217825560e08401516001830155610100840151600283015561012090930151600390910155908901519092508291508190612e59578860800151612e6e565b60a089015160808a0151612e6e918990613335565b9050612e878163ffffffff808716908881169061333516565b9250612eaf89610140015163ffffffff168663ffffffff16836133359092919063ffffffff16565b9150506040518061018001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001896000015173ffffffffffffffffffffffffffffffffffffffff168152602001896020015173ffffffffffffffffffffffffffffffffffffffff168152602001896040015173ffffffffffffffffffffffffffffffffffffffff168152602001896060015115158152602001896080015181526020018381526020018960c0015181526020018281526020016000815260200160008152602001878152506002600087815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a01559050506000600960149054906101000a900463ffffffff1663ffffffff1661314f620186a065ffffffffffff1685856133359092919063ffffffff16565b1161317a5760095474010000000000000000000000000000000000000000900463ffffffff16613188565b61318882620186a085613335565b905060006131bd828b60e0015163ffffffff16116131a657826131b2565b8a60e0015163ffffffff165b8590620186a0613335565b6131c790856144a9565b60a08b01519091506000906131dd908a87613335565b905060405180608001604052808281526020018381526020018c610100015165ffffffffffff1681526020018c610120015165ffffffffffff16815250600360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160020160066101000a81548165ffffffffffff021916908365ffffffffffff1602179055509050508a6020015173ffffffffffffffffffffffffffffffffffffffff168b6000015173ffffffffffffffffffffffffffffffffffffffff16897f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d8e61010001518f60a0015160405161331e92919065ffffffffffff929092168252602082015260400190565b60405180910390a450959998505050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361338c576000841161338157600080fd5b508290049050610b4c565b80841161339857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000818152600360209081526040808320600290810180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff1666010000000000004265ffffffffffff16021790559091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6000838152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a015461016082015281908161355b876116bd565b600088815260026020908152604080832060059081018590559091529020600101549091506c01000000000000000000000000900460ff16156136a35760008781526005602052604081209080806135b28b612402565b60008e8152600360205260408120805494975092955090935085926135d8908490614352565b9091555050801561367357828460000160008282546135f79190614352565b90915550506001840180548391906006906136259084906601000000000000900465ffffffffffff1661450a565b92506101000a81548165ffffffffffff021916908365ffffffffffff160217905550888460010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555061369e565b6001840180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b505050505b6136ac87613f48565b60e0830151909450808510156136c0578094505b6101608301516136d290889087613335565b600089815260046020526040812080546003909101549296507c0100000000000000000000000000000000000000000000000000000000810463ffffffff9081169392660100000000000090920465ffffffffffff16919061373a9085908a9086906125ee16565b60008d81526004602052604090208054919250829160069061376f9084906601000000000000900465ffffffffffff1661459c565b92506101000a81548165ffffffffffff021916908365ffffffffffff1602179055506000828b65ffffffffffff16116137c3576137b465ffffffffffff8c1684614352565b6137be90866144a9565b6137fe565b6137d58365ffffffffffff8d16614352565b85116137e25760006137fe565b6137f48365ffffffffffff8d16614352565b6137fe9086614352565b9050886138178661380f85856144a9565b8a9190613335565b61382191906144a9565b61382c9060016144a9565b60009d8e5260026020526040909d206005019c909c5550969a95995094975050505050505050565b600060046000858152602001908152602001600020604051806101400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152602001600282015481526020016003820154815250509050600060026000868152602001908152602001600020604051806101800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff16151515158152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152505090506000846003600088815260200190815260200160002060020160069054906101000a900465ffffffffffff16613bbd919061450a565b65ffffffffffff16905060008260800151613bdc578260a00151613bf1565b61016083015160a0840151613bf19187613335565b905060008360800151613c0957836101200151613c1f565b610160840151610140850151613c1f9188613335565b613c2990836144a9565b9050600082613c6285886040015163ffffffff16613c479190614352565b886040015163ffffffff16856133359092919063ffffffff16565b613c6c91906144a9565b90508561010001518560a00151108015613c8557508181105b80613cc0575060808601518651613ca29163ffffffff169061459c565b65ffffffffffff168865ffffffffffff1610158015613cc057508181115b15613f3d57613ce4866060015163ffffffff1685856133359092919063ffffffff16565b60008a8152600260205260408082206007019290925560c0880151918801519091613d1d91849163ffffffff9081169181169061333516565b60008b81526003602052604081205461016089015192935091613d42908b90856125ee565b60408051848152602081018390529192508d917f78f9c01d72705dba80d6ce051d36a1f987bf2a3800fee938c111a2ae741e57d1910160405180910390a281811015613e70576000613d948284614352565b905060405180608001604052808281526020018d65ffffffffffff1681526020018b60a0015163ffffffff1665ffffffffffff16815260200160011515815250600560008f81526020019081526020016000206000820151816000015560208201518160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060408201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550606082015181600101600c6101000a81548160ff02191690831515021790555090505050613eb5565b60008c81526003602090815260408083208490556005909152902060010180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b60008c815260046020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff8d1617905560e089015160a089015111613f09576000613f1d565b8860e001518860a00151613f1d9190614352565b60008d815260046020526040902060028101919091556003019290925550505b505050505050505050565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff908116825260018301548116828601529482015485168184015260038083015495861660608301527401000000000000000000000000000000000000000090950460ff1615156080820152600482015460a0820152600582015460c08201819052600683015460e0830152600783015461010083015260088301546101208301526009830154610140830152600a90920154610160820181905287875294909352908420549192610b4c9291906125ee565b60006020828403121561403d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146115d057600080fd5b803561407181614044565b919050565b60006020828403121561408857600080fd5b8135610b4c81614044565b600080602083850312156140a657600080fd5b823567ffffffffffffffff808211156140be57600080fd5b818501915085601f8301126140d257600080fd5b8135818111156140e157600080fd5b8660208285010111156140f357600080fd5b60209290920196919550909350505050565b80151581146115d057600080fd5b803561407181614105565b60006020828403121561413057600080fd5b8135610b4c81614105565b6000806080838503121561414e57600080fd5b823591508360808401111561416257600080fd5b50926020919091019150565b6000806040838503121561418157600080fd5b823561418c81614044565b9150602083013561419c81614105565b809150509250929050565b600080604083850312156141ba57600080fd5b82359150602083013561419c81614044565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561421f5761421f6141cc565b60405290565b803563ffffffff8116811461407157600080fd5b600060c0828403121561424b57600080fd5b82601f83011261425a57600080fd5b60405160c0810181811067ffffffffffffffff8211171561427d5761427d6141cc565b6040528060c084018581111561429257600080fd5b845b818110156142b3576142a581614225565b835260209283019201614294565b509195945050505050565b6000806000606084860312156142d357600080fd5b833592506020840135915060408401356142ec81614044565b809150509250925092565b60008060006060848603121561430c57600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561436457614364614323565b500390565b65ffffffffffff811681146115d057600080fd5b803561407181614369565b8035600081900b811461407157600080fd5b600061018082840312156143ad57600080fd5b6143b56141fb565b6143be83614066565b81526143cc60208401614066565b60208201526143dd60408401614066565b60408201526143ee60608401614113565b60608201526080830135608082015260a083013560a082015260c083013560c082015261441d60e08401614225565b60e082015261010061443081850161437d565b9082015261012061444284820161437d565b90820152610140614454848201614225565b90820152610160614466848201614388565b908201529392505050565b60006020828403121561448357600080fd5b610b4c82614225565b60006020828403121561449e57600080fd5b8151610b4c81614105565b600082198211156144bc576144bc614323565b500190565b600063ffffffff808316818516818304811182151516156144e4576144e4614323565b02949350505050565b6000602082840312156144ff57600080fd5b8151610b4c81614369565b600065ffffffffffff8381169083168181101561452957614529614323565b039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006020828403121561457257600080fd5b815160ff81168114610b4c57600080fd5b60006020828403121561459557600080fd5b5051919050565b600065ffffffffffff8083168185168083038211156145bd576145bd614323565b0194935050505056fea26469706673582212200bf7175d0d1400b965b0064707968c4951c99e6c4fdaa7e69f5dae4f87184dc664736f6c634300080f003360e06040523480156200001157600080fd5b5060405162001222380380620012228339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610db16200047160003960006104b501526000610480015260006101540152610db16000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146101d8578063a9059cbb146101e0578063d505accf146101f3578063dd62ed3e1461020657600080fd5b806340c10f191461019057806370a08231146101a557806379cc6790146101c557600080fd5b806323b872dd116100bd57806323b872dd1461013c578063313ce5671461014f5780633644e5151461018857600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610231565b6040516100f99190610a2a565b60405180910390f35b610115610110366004610ac6565b6102bf565b60405190151581526020016100f9565b61012e60025481565b6040519081526020016100f9565b61011561014a366004610af0565b610338565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61012e61047c565b6101a361019e366004610ac6565b6104d7565b005b61012e6101b3366004610b2c565b60036020526000908152604090205481565b6101a36101d3366004610ac6565b6104e5565b6100ec6104ef565b6101156101ee366004610ac6565b6104fc565b6101a3610201366004610b4e565b610581565b61012e610214366004610bc1565b600460209081526000928352604080842090915290825290205481565b6000805461023e90610bf4565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610bf4565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103279086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103cc5761039a8382610c76565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610401908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104699087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104b2576104ad610889565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104e18282610923565b5050565b6104e1828261099c565b6001805461023e90610bf4565b3360009081526003602052604081208054839190839061051d908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103279086815260200190565b428410156105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016105fc61047c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9602082015273ffffffffffffffffffffffffffffffffffffffff808d1692820192909252908a1660608201526080810189905260a0810188905260c001604051602081830303815290604052805190602001206040516020016106b69291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610732573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107ad57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016105e7565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516108bb9190610c8d565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109359190610d63565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906109d1908490610c76565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610990565b600060208083528351808285015260005b81811015610a5757858101830151858201604001528201610a3b565b81811115610a69576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ac157600080fd5b919050565b60008060408385031215610ad957600080fd5b610ae283610a9d565b946020939093013593505050565b600080600060608486031215610b0557600080fd5b610b0e84610a9d565b9250610b1c60208501610a9d565b9150604084013590509250925092565b600060208284031215610b3e57600080fd5b610b4782610a9d565b9392505050565b600080600080600080600060e0888a031215610b6957600080fd5b610b7288610a9d565b9650610b8060208901610a9d565b95506040880135945060608801359350608088013560ff81168114610ba457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bd457600080fd5b610bdd83610a9d565b9150610beb60208401610a9d565b90509250929050565b600181811c90821680610c0857607f821691505b602082108103610c41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610c8857610c88610c47565b500390565b600080835481600182811c915080831680610ca957607f831692505b60208084108203610ce1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610cf55760018114610d2857610d55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d55565b60008a81526020902060005b86811015610d4d5781548b820152908501908301610d34565b505084890196505b509498975050505050505050565b60008219821115610d7657610d76610c47565b50019056fea2646970667358221220839aca5fdc11524a182347f7285138a2adca857ebdece8b94f17c8ea1bfefbc764736f6c634300080f003360e06040523480156200001157600080fd5b5060405162001222380380620012228339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610db16200047160003960006104b501526000610480015260006101540152610db16000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101cd578063a9059cbb146101e0578063d505accf146101f3578063dd62ed3e1461020657600080fd5b806340c10f191461019057806370a08231146101a557806395d89b41146101c557600080fd5b806323b872dd116100bd57806323b872dd1461013c578063313ce5671461014f5780633644e5151461018857600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610231565b6040516100f99190610a2a565b60405180910390f35b610115610110366004610ac6565b6102bf565b60405190151581526020016100f9565b61012e60025481565b6040519081526020016100f9565b61011561014a366004610af0565b610338565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61012e61047c565b6101a361019e366004610ac6565b6104d7565b005b61012e6101b3366004610b2c565b60036020526000908152604090205481565b6100ec6104e5565b6101a36101db366004610ac6565b6104f2565b6101156101ee366004610ac6565b6104fc565b6101a3610201366004610b4e565b610581565b61012e610214366004610bc1565b600460209081526000928352604080842090915290825290205481565b6000805461023e90610bf4565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610bf4565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103279086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103cc5761039a8382610c76565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610401908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104699087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104b2576104ad610889565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104e18282610923565b5050565b6001805461023e90610bf4565b6104e1828261099c565b3360009081526003602052604081208054839190839061051d908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103279086815260200190565b428410156105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016105fc61047c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9602082015273ffffffffffffffffffffffffffffffffffffffff808d1692820192909252908a1660608201526080810189905260a0810188905260c001604051602081830303815290604052805190602001206040516020016106b69291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610732573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107ad57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016105e7565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516108bb9190610c8d565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109359190610d63565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906109d1908490610c76565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610990565b600060208083528351808285015260005b81811015610a5757858101830151858201604001528201610a3b565b81811115610a69576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ac157600080fd5b919050565b60008060408385031215610ad957600080fd5b610ae283610a9d565b946020939093013593505050565b600080600060608486031215610b0557600080fd5b610b0e84610a9d565b9250610b1c60208501610a9d565b9150604084013590509250925092565b600060208284031215610b3e57600080fd5b610b4782610a9d565b9392505050565b600080600080600080600060e0888a031215610b6957600080fd5b610b7288610a9d565b9650610b8060208901610a9d565b95506040880135945060608801359350608088013560ff81168114610ba457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bd457600080fd5b610bdd83610a9d565b9150610beb60208401610a9d565b90509250929050565b600181811c90821680610c0857607f821691505b602082108103610c41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610c8857610c88610c47565b500390565b600080835481600182811c915080831680610ca957607f831692505b60208084108203610ce1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610cf55760018114610d2857610d55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d55565b60008a81526020902060005b86811015610d4d5781548b820152908501908301610d34565b505084890196505b509498975050505050505050565b60008219821115610d7657610d76610c47565b50019056fea2646970667358221220a211ff0c0cc0b55b4779ce1a573a8bb826b46e808e5015092bacc3b27af7352664736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611eaa806100326000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c8063b4dc00b411610081578063dbb61ee71161005b578063dbb61ee714610235578063e52223bb14610248578063f166d9eb1461026b57600080fd5b8063b4dc00b4146101ca578063c34c08e514610200578063c4d1f8f11461022057600080fd5b80635af099c9116100b25780635af099c91461014357806363a6e3b514610156578063ae5f76fa1461017657600080fd5b80620dd95d146100cd57806303c02f421461010a575b600080fd5b6100e06100db3660046119e8565b61029f565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610135610118366004611a36565b600560209081526000928352604080842090915290825290205481565b604051908152602001610101565b6100e0610151366004611a6f565b6102e4565b610135610164366004611a88565b60086020526000908152604090205481565b610199610184366004611a88565b60036020526000908152604090205460d81b81565b6040517fffffffffff0000000000000000000000000000000000000000000000000000009091168152602001610101565b6100e06101d8366004611aac565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000546100e09073ffffffffffffffffffffffffffffffffffffffff1681565b61023361022e366004611ac9565b61031b565b005b610199610243366004611a6f565b6105c7565b61025b610256366004611a88565b6105fe565b6040519015158152602001610101565b61025b610279366004611b19565b600660209081526000938452604080852082529284528284209052825290205460ff1681565b600460205281600052604060002081815481106102bb57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b600781815481106102f457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610372576040517e37c7b30000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600082600581111561038657610386611b64565b036104195761039481610672565b61040b8173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104069190611b93565b6106de565b610414816107ff565b610571565b600182600581111561042d5761042d611b64565b036104925761043b81610672565b6104898173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b61041481610a83565b60028260058111156104a6576104a6611b64565b036104bd576104b481610672565b61041481610cfc565b60038260058111156104d1576104d1611b64565b036104e8576104df81610672565b61041481611058565b60048260058111156104fc576104fc611b64565b0361054657600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055610571565b600582600581111561055a5761055a611b64565b036105715761056881610672565b610571816112c2565b8073ffffffffffffffffffffffffffffffffffffffff1682600581111561059a5761059a611b64565b6040517f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c9090600090a35050565b600181815481106105d757600080fd5b9060005260206000209060069182820401919006600502915054906101000a900460d81b81565b6007546000901580159061066c575073ffffffffffffffffffffffffffffffffffffffff821660008181526008602052604090205460078054909190811061064857610648611bb0565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b92915050565b8073ffffffffffffffffffffffffffffffffffffffff163b6000036106db576040517f6f46ea7400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b50565b8060005b60058110156107fa5760008282600581106106ff576106ff611bb0565b1a60f81b90507f41000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216108061079657507f5a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b156107f1576040517f3afbb8280000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000085166004820152602401610369565b506001016106e2565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615610916576040517f8806c6660000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000082166004820152602401610369565b7fffffffffff0000000000000000000000000000000000000000000000000000008116600090815260026020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155808452600390925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001660d886901c9081179091556001805480820182559085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600680830491909101805464ffffffffff929093066005026101000a91820219909216920291909117905580517fea6439140000000000000000000000000000000000000000000000000000000081529051919263ea6439149260048084019382900301818387803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16801580610b7757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610bd2576040517f073e07310000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000083166004820152602401610369565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000908116909155938716808452818420805490951660d888901c179094557fffffffffff00000000000000000000000000000000000000000000000000000086168352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905580517fea643914000000000000000000000000000000000000000000000000000000008152905163ea6439149260048084019391929182900301818387803b158015610cdb57600080fd5b505af1158015610cef573d6000803e3d6000fd5b505050506107fa8261148f565b610d05816105fe565b15610d54576040517f224b187700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b600780546001808201835560008390527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790559054610dd29190611bdf565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600860205260408082209390935582517f9459b87500000000000000000000000000000000000000000000000000000000815292519092639459b8759160048083019286929190829003018183875af1158015610e4f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e959190810190611ce8565b805190915060005b81811015610fb0576000838281518110610eb957610eb9611bb0565b6020908102919091018101517fffffffffff0000000000000000000000000000000000000000000000000000008116600081815260048452604081208054600180820183558284529583200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8c1617905591905254909250610f549190611bdf565b7fffffffffff000000000000000000000000000000000000000000000000000000909116600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168452909152902055600101610e9d565b5060008373ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110449190810190611d87565b9050611052848260016115ea565b50505050565b611061816105fe565b6110af576040517f22cd55c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b60008173ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111429190810190611d87565b9050611150828260006115ea565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600860205260408120546007805491929161118990600190611bdf565b8154811061119957611199611bb0565b6000918252602090912001546007805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106111d5576111d5611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600780548061122e5761122e611e45565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff83811683526008909152604080832085905590861682528120556110528461171e565b60015460005b818110156113ce57600060026000600184815481106112e9576112e9611bb0565b6000918252602080832060068084049091015492066005026101000a90910460d81b7fffffffffff00000000000000000000000000000000000000000000000000000016835282019290925260409081019091205490517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911691508190634657b36c90602401600060405180830381600087803b1580156113aa57600080fd5b505af11580156113be573d6000803e3d6000fd5b50505050816001019150506112c8565b5060075460005b81811015611052576000600782815481106113f2576113f2611bb0565b6000918252602090912001546040517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015290911691508190634657b36c90602401600060405180830381600087803b15801561146b57600080fd5b505af115801561147f573d6000803e3d6000fd5b50505050816001019150506113d5565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004602090815260408083208054825181850281018501909352808352919290919083018282801561151f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116114f4575b505083519394506000925050505b818110156110525782818151811061154757611547611bb0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561159b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115e19190810190611ce8565b5060010161152d565b815160005b8181101561171757600084828151811061160b5761160b611bb0565b60209081029190910181015180517fffffffffff000000000000000000000000000000000000000000000000000000908116600090815260068452604080822073ffffffffffffffffffffffffffffffffffffffff8c1680845290865281832085870180517fffffffff0000000000000000000000000000000000000000000000000000000090811686529188529383902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168c1515908117909155865194518451921682529681019690965293955092939116917ff3cdd20c5574ce87c347ea71e37b8fa7a095894be4b7f2bb1533e8d2342965f1910160405180910390a3506001016115ef565b5050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117b39190810190611ce8565b805190915060005b818110156110525760008382815181106117d7576117d7611bb0565b6020908102919091018101517fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004835260408082206005855281832073ffffffffffffffffffffffffffffffffffffffff8b168452909452812054835492945091839061184e90600190611bdf565b8154811061185e5761185e611bb0565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061189e5761189e611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806118f6576118f6611e45565b600082815260208082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908401810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092557fffffffffff00000000000000000000000000000000000000000000000000000095909516815260058552604080822073ffffffffffffffffffffffffffffffffffffffff9384168352909552848120929092558716815291822091909155506001016117bb565b7fffffffffff000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080604083850312156119fb57600080fd5b8235611a06816119ba565b946020939093013593505050565b73ffffffffffffffffffffffffffffffffffffffff811681146106db57600080fd5b60008060408385031215611a4957600080fd5b8235611a54816119ba565b91506020830135611a6481611a14565b809150509250929050565b600060208284031215611a8157600080fd5b5035919050565b600060208284031215611a9a57600080fd5b8135611aa581611a14565b9392505050565b600060208284031215611abe57600080fd5b8135611aa5816119ba565b60008060408385031215611adc57600080fd5b823560068110611a5457600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080600060608486031215611b2e57600080fd5b8335611b39816119ba565b92506020840135611b4981611a14565b91506040840135611b5981611aeb565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215611ba557600080fd5b8151611aa5816119ba565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082821015611c18577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611c6f57611c6f611c1d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611cbc57611cbc611c1d565b604052919050565b600067ffffffffffffffff821115611cde57611cde611c1d565b5060051b60200190565b60006020808385031215611cfb57600080fd5b825167ffffffffffffffff811115611d1257600080fd5b8301601f81018513611d2357600080fd5b8051611d36611d3182611cc4565b611c75565b81815260059190911b82018301908381019087831115611d5557600080fd5b928401925b82841015611d7c578351611d6d816119ba565b82529284019290840190611d5a565b979650505050505050565b60006020808385031215611d9a57600080fd5b825167ffffffffffffffff811115611db157600080fd5b8301601f81018513611dc257600080fd5b8051611dd0611d3182611cc4565b81815260069190911b82018301908381019087831115611def57600080fd5b928401925b82841015611d7c5760408489031215611e0d5760008081fd5b611e15611c4c565b8451611e20816119ba565b815284860151611e2f81611aeb565b8187015282526040939093019290840190611df4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220da155c75aff1987347cd8c8703a6eef45da0f991c20678951a039e404be7c5a064736f6c634300080f0033608060405234801561001057600080fd5b5060405161093338038061093383398101604081905261002f91610083565b600080546001600160a01b039094166001600160a01b0319909416939093179092556004805465ffffffffffff909216620100000267ffffffffffffff0019909216919091176101001790556005556100dd565b60008060006060848603121561009857600080fd5b83516001600160a01b03811681146100af57600080fd5b602085015190935065ffffffffffff811681146100cb57600080fd5b80925050604084015190509250925092565b610847806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80637e20be3b116100f9578063d266f5d011610097578063ea64391411610071578063ea64391414610469578063eb91d37e14610471578063f4b4dc2e14610479578063ffa1ad74146104be57600080fd5b8063d266f5d0146103fe578063d4aae0c41461041c578063d8cf24fd1461046157600080fd5b8063902a35b9116100d3578063902a35b9146103d35780639d1b464a146103e5578063b5e71305146103ee578063bd01bb32146103f657600080fd5b80637e20be3b1461036757806386db7df0146103ba5780638a157337146103c257600080fd5b80634657b36c116101665780636d2c2808116101405780636d2c2808146102a05780637321f100146102a95780637a1395aa146102d85780637d4dce761461031a57600080fd5b80634657b36c14610258578063653721471461026b5780636cb56dbc1461028d57600080fd5b80632c19abb9116101975780632c19abb91461021d578063313ce567146102305780633ccec9c41461024f57600080fd5b8063053f14da146101be57806318b20071146101da5780631ae7ec2e146101ef575b600080fd5b6101c760025481565b6040519081526020015b60405180910390f35b6101ed6101e8366004610623565b600355565b005b6040517f505249434500000000000000000000000000000000000000000000000000000081526020016101d1565b6101ed61022b366004610623565b600255565b60045461023d9060ff1681565b60405160ff90911681526020016101d1565b6101c760015481565b6101ed61026636600461063c565b6104d3565b60045461027d90610100900460ff1681565b60405190151581526020016101d1565b6101ed61029b366004610623565b600155565b6101c760055481565b6004546102c19062010000900465ffffffffffff1681565b60405165ffffffffffff90911681526020016101d1565b6101ed6102e6366004610679565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b6101ed6103283660046106b7565b6004805465ffffffffffff90921662010000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffff909216919091179055565b6101ed6103753660046106b7565b6004805465ffffffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffff909216919091179055565b6101ed610572565b6101ed6103d03660046106b7565b50565b6101ed6103e1366004610701565b5050565b6101c760035481565b6001546101c7565b6101c76105b5565b6004546102c19068010000000000000000900465ffffffffffff1681565b60005461043c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d1565b6002546101c7565b6101ed6105d0565b6003546101c7565b6101ed6104873660046107ef565b60048054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b604080516001815260006020820152016101d1565b60005473ffffffffffffffffffffffffffffffffffffffff16331461052b576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600454610100900460ff166105b3576040517f2cd2cbf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000600554600154116105c9575060055490565b5060015490565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105b3576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610522565b60006020828403121561063557600080fd5b5035919050565b60006020828403121561064e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461067257600080fd5b9392505050565b60006020828403121561068b57600080fd5b813560ff8116811461067257600080fd5b803565ffffffffffff811681146106b257600080fd5b919050565b6000602082840312156106c957600080fd5b6106728261069c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561071457600080fd5b823567ffffffffffffffff8082111561072c57600080fd5b818501915085601f83011261074057600080fd5b8135602082821115610754576107546106d2565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108682111715610797576107976106d2565b6040529283528183019350848101820192898411156107b557600080fd5b948201945b838610156107d3578535855294820194938201936107ba565b96506107e2905087820161069c565b9450505050509250929050565b60006020828403121561080157600080fd5b8135801515811461067257600080fdfea2646970667358221220d251eb98359526f34b75a509dee50f2a4cf3f702c825b97ba6510c25b3f89e4e64736f6c634300080f003360806040523480156200001157600080fd5b5060405162001a7338038062001a738339810160408190526200003491620002f9565b600080546001600160a01b0319166001600160a01b03881617905561271081101580620000615750606481105b806200006f57506127108210155b806200007b5750606482105b806200008657508082115b806200009457506127108310155b80620000a05750606483105b15620000bf5760405163c51f44ab60e01b815260040160405180910390fd5b60408051610120810182526000608080830182815265ffffffffffff42811660a080870182905260c0870186905260e087018690526000196101008089018290529488528851918201895286825260208281019390935281890187905260608083018890528287019190915282880191825288518087018a52808201888152815289518085018b5288815281850152808a018c9052888a0190815289518088018b5280830189815281528a518086018c52988952808501988952808b018c8152838b018290529951805160018054838901518a168b0266ffffffffffff0019931515841666ffffffffffffff199283161717909155828e015160025582860151600355918a01516004559451805160058054838a0151909a16909a0290151590961697909116969096179390931790955583890151600655830151600755919093015160085590518051516009559182015151600a5590840151600b555151600c555151600d5551600e55600f849055601080546001600160a01b038089166001600160a01b0319928316179092556011805492881692909116919091179055517ff9f6bac7789241c1f8bc37f72defbdc6b5482ec2c96cb91f7ebf917c7ef7ff9890620002999084908490918252602082015260400190565b60405180910390a16040518381527f66df6e0040d88b0d9e6e482ec0ef8983562d1186b0b94f9747f64f3c7e3863359060200160405180910390a150505050505062000369565b6001600160a01b0381168114620002f657600080fd5b50565b60008060008060008060c087890312156200031357600080fd5b86516200032081620002e0565b60208801519096506200033381620002e0565b60408801519095506200034681620002e0565b80945050606087015192506080870151915060a087015190509295509295509295565b6116fa80620003796000396000f3fe608060405234801561001057600080fd5b506004361061018c5760003560e01c8063ae7e8d81116100e3578063d4aae0c41161008c578063e97206a911610066578063e97206a91461037a578063ea6439141461043d578063ffa1ad741461044557600080fd5b8063d4aae0c41461033e578063dd0081c71461035e578063e69f3c4e1461036757600080fd5b8063c21e6652116100bd578063c21e665214610302578063c45e91d61461030b578063cd3293de1461031e57600080fd5b8063ae7e8d81146102d4578063bb2eb4d2146102e7578063bf30142b146102ef57600080fd5b806341f19a46116101455780636d9a9a621161011f5780636d9a9a62146102695780638c3f914a1461027c578063a29a0d901461028f57600080fd5b806341f19a46146102205780634657b36c1461023357806359d236e61461024657600080fd5b806333bd33b41161017657806333bd33b4146101d95780633778c2b2146101ec5780633e56993a1461020d57600080fd5b8062d16739146101915780631ae7ec2e146101a6575b600080fd5b6101a461019f3660046114a2565b61045a565b005b6040517f52414e474500000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b6101a46101e73660046114ce565b6106de565b6101ff6101fa3660046114e7565b610884565b6040519081526020016101d0565b6101a461021b366004611520565b6108be565b6101a461022e366004611555565b610af9565b6101a4610241366004611577565b610cce565b6102596102543660046115b4565b610d68565b60405190151581526020016101d0565b6101a46102773660046114a2565b610d86565b6101ff61028a3660046115b4565b610feb565b6010546102af9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d0565b6101a46102e23660046114ce565b611003565b6101ff606481565b6101ff6102fd3660046115b4565b61120f565b6101ff600f5481565b6101ff6103193660046115b4565b611227565b6011546102af9073ffffffffffffffffffffffffffffffffffffffff1681565b6000546102af9073ffffffffffffffffffffffffffffffffffffffff1681565b6101ff61271081565b6101ff6103753660046115b4565b61123f565b610382611271565b60408051825180511515825260208082015165ffffffffffff9081168285015282850151848601526060808401518186015260809384015184860152828701518051151560a08701528084015190921660c08601528186015160e0860152818101516101008601529201516101208401528484015180515161014085015280820151516101608501528401516101808401529301518051516101a083015292830151516101c08201529101516101e0820152610200016101d0565b6101a461136e565b604080516001815260006020820152016101d0565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054591906115d1565b610582576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b6000612710600f5483610595919061161d565b61059f919061165a565b90508215610621576040805160a08101825260018082524265ffffffffffff166020830181905292820185905260608201849052600854608090920191909152600580547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101009093029290921717905560068290556007819055610696565b6040805160a08101825260018082524265ffffffffffff16602083018190529282018590526060820184905260045460809092019190915280547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101009092029190911781179055600282905560038190555b6040805184151581524260208201529081018390527f518b1eea6c42d5d25b8983db58076556c4eb12d0f58f403100e037bbdf629cc3906060015b60405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c991906115d1565b610801576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b612710811015806108125750606481105b15610849576040517fc51f44ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f8190556040518181527f66df6e0040d88b0d9e6e482ec0ef8983562d1186b0b94f9747f64f3c7e3863359060200160405180910390a150565b600082156108a457811561089b5750600c546108b8565b50600d546108b8565b81156108b357506009546108b8565b50600a545b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a991906115d1565b6109e1576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82148015610a0f57508015155b15610a46576040517fc51f44ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8215610a56576008829055610a5c565b60048290555b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aba576040805184151581524260208201527fc0be2d89ec6f4d478c644e7dcb37ec5372fb158563c955066b91b5650e37e32791016106d1565b6040805184151581524260208201529081018290527f6addeb12ca5495dd878280b56a2ebcc0c18eda83a3d30ea01f9c661b03209001906060016106d1565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be491906115d1565b610c1c576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b61271081101580610c2d5750606481105b80610c3a57506127108210155b80610c455750606482105b80610c4f57508082115b15610c86576040517fc51f44ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e819055600b82905560408051838152602081018390527ff9f6bac7789241c1f8bc37f72defbdc6b5482ec2c96cb91f7ebf917c7ef7ff9891015b60405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d21576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008115610d7b57505060055460ff1690565b505060015460ff1690565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7191906115d1565b610ea9576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b8115610f5157600681905560075481108015610ec7575060055460ff165b15610f4d57600580547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101004265ffffffffffff811691909102919091179091556040805160018152602081019290925281018290527fc897c3dfa8334f335974948095373e499dbc757ce1133f2980bcfca098c736bf9060600160405180910390a15b5050565b600281905560035481108015610f69575060015460ff165b15610f4d57600180547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101004265ffffffffffff811691909102919091179091556040805160008152602081019290925281018290527fc897c3dfa8334f335974948095373e499dbc757ce1133f2980bcfca098c736bf90606001610cc2565b60008115610ffb575050600e5490565b5050600b5490565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156110ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ee91906115d1565b611126576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b600e54600b546127106111398382611695565b611143908561161d565b61114d919061165a565b600d5561271061115d83826116ac565b611167908561161d565b611171919061165a565b600c556127106111818282611695565b61118b908561161d565b611195919061165a565b600a556127106111a582826116ac565b6111af908561161d565b6111b9919061165a565b6009819055600d54600a54600c546040517f7f3eb23042093bdf239802495c60dece3a6249a51e7d0830afa71dc7bb184da9946106d1949392909193845260208401929092526040830152606082015260800190565b6000811561121f57505060065490565b505060025490565b6000811561123757505060085490565b505060045490565b6000811561125c575050600554610100900465ffffffffffff1690565b5050600154610100900465ffffffffffff1690565b6112796113c3565b50604080516101208101825260015460ff8082161515608080850191825265ffffffffffff61010094859004811660a08088019190915260025460c088015260035460e08801526004548688015292865286519283018752600554938416151583529390920490921660208381019190915260065483860152600754606080850191909152600854848401528185019390935284518083018652600954818501908152815285518083018752600a54815281830152600b54818701528486015284519182018552600c54828401908152825284518082018652600d54815290820152600e549381019390935281019190915290565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113c1576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b565b60408051610120810182526000608080830182815260a080850184905260c0850184905260e08501849052610100850184905290845284519081018552828152602080820184905281860184905260608201849052918101929092528201529081016114566040805160808101825260006060820181815282528251602080820185528282528301529181019190915290565b815260200161148c6040805160808101825260006060820181815282528251602080820185528282528301529181019190915290565b905290565b801515811461149f57600080fd5b50565b600080604083850312156114b557600080fd5b82356114c081611491565b946020939093013593505050565b6000602082840312156114e057600080fd5b5035919050565b600080604083850312156114fa57600080fd5b823561150581611491565b9150602083013561151581611491565b809150509250929050565b60008060006060848603121561153557600080fd5b833561154081611491565b95602085013595506040909401359392505050565b6000806040838503121561156857600080fd5b50508035926020909101359150565b60006020828403121561158957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146115ad57600080fd5b9392505050565b6000602082840312156115c657600080fd5b81356115ad81611491565b6000602082840312156115e357600080fd5b81516115ad81611491565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611655576116556115ee565b500290565b600082611690577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156116a7576116a76115ee565b500390565b600082198211156116bf576116bf6115ee565b50019056fea2646970667358221220728103d0e0db7097c20e643317ceca31aa9888645f83878b4295b6590de69cf564736f6c634300080f00336080604052600160055534801561001557600080fd5b50604051620021113803806200211183398101604081905261003691610060565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b179055610090565b60006020828403121561007257600080fd5b81516001600160a01b038116811461008957600080fd5b9392505050565b61207180620000a06000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80634aae164b116100d8578063d4aae0c41161008c578063f5b92c7311610066578063f5b92c731461038a578063fb393f241461039d578063ffa1ad74146103b057600080fd5b8063d4aae0c41461032a578063e6eb207a1461036f578063ea6439141461038257600080fd5b80635f0736a1116100bd5780635f0736a1146102d9578063724000c1146103045780638b7f3fb91461031757600080fd5b80634aae164b146102be57806351b42b00146102d157600080fd5b80631ff517ff1161012f5780632f42aef5116101145780632f42aef51461026d57806332b43ad2146102805780634657b36c146102ab57600080fd5b80631ff517ff1461022257806328a4ace51461024257600080fd5b80630f15f4c0116101605780630f15f4c0146101cb57806315226b54146101d35780631ae7ec2e146101f457600080fd5b806301a91e5c1461017c57806302fb0c5e14610191575b600080fd5b61018f61018a366004611e9d565b6103c5565b005b6000546101b69074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61018f6105a4565b6101e66101e1366004611ede565b610708565b6040519081526020016101c2565b6040517f545253525900000000000000000000000000000000000000000000000000000081526020016101c2565b6101e6610230366004611ede565b60036020526000908152604090205481565b6101e6610250366004611f02565b600460209081526000928352604080842090915290825290205481565b61018f61027b366004611e9d565b6107b8565b6101e661028e366004611f02565b600260209081526000928352604080842090915290825290205481565b61018f6102b9366004611ede565b610a19565b61018f6102cc366004611e9d565b610ab3565b61018f610d04565b6101e66102e7366004611f02565b600160209081526000928352604080842090915290825290205481565b61018f610312366004611f3b565b610e51565b61018f610325366004611e9d565b6110ff565b60005461034a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c2565b61018f61037d366004611e9d565b6112ea565b61018f611512565b61018f610398366004611e9d565b611567565b61018f6103ab366004611e9d565b6119bf565b604080516001815260006020820152016101c2565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190611f67565b6104ed576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600090815260026020908152604080832093861683529290529081205461052d908390611fb8565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917f9afc1acde4b7ec0d84d924e5b530aecfb57d117a7122b80904cb9912badbff5991015b60405180910390a350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611f67565b6106c7576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b73ffffffffffffffffffffffffffffffffffffffff81166000818152600360205260408082205490517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152919290916370a0823190602401602060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611fd0565b6107b29190611fb8565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190611f67565b6108db576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff1661092f576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091528120805483929061096f908490611fe9565b90915550610996905073ffffffffffffffffffffffffffffffffffffffff83168483611b8f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e84604051610a0c91815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a6c576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190611f67565b610bd6576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260046020908152604080832093871683529290522080549082905581811015610c6057610c208183611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c55908490611fb8565b90915550610ca59050565b610c6a8282611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c9f908490611fe9565b90915550505b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4417d205f6349e66a581332b36195e74d10f878e80db907b4fd3a814aad4049d8460405161059691815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def9190611f67565b610e27576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c9190611f67565b610f74576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff16610fc8576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281208054839290611008908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526004602090815260408083203384529091528120805483929061104d908490611fb8565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290611087908490611fb8565b909155506110ae905073ffffffffffffffffffffffffffffffffffffffff83163383611b8f565b604051818152339073ffffffffffffffffffffffffffffffffffffffff8416907f7f04a714958851e1d87b504651ba77ab02f62bae8879f577bf3e07cf8567aba29060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190611f67565b611222576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908282111561126f5761126a8383611fe9565b611272565b60005b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f40730d80659c76c95521f0340872d27fdc8b3c47befe2ca569d2c2eedc8a049e91015b60405180910390a35050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190611f67565b61140d576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908261146e837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fe9565b11156114835761147e8383611fb8565b6114a5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f8bbc2784c9e4073e20f60d8c7218cbd211c43ca2ee041bc037f977693a0c8c1b91016112db565b60005473ffffffffffffffffffffffffffffffffffffffff163314611565576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561162e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116529190611f67565b61168a576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b6005546001146116f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104e4565b600260055573ffffffffffffffffffffffffffffffffffffffff80831660009081526004602090815260408083209387168352929052908120549003611768576040517fa4255dc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f99190611fd0565b905061181d73ffffffffffffffffffffffffffffffffffffffff8416333085611cff565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090829073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa15801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b09190611fd0565b6118ba9190611fe9565b9050828111156118c75750815b73ffffffffffffffffffffffffffffffffffffffff80851660009081526004602090815260408083209389168352929052908120805483929061190b908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054839290611945908490611fe9565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf836040516119ab91815260200190565b60405180910390a350506001600555505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015611a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaa9190611f67565b611ae2576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260209081526040808320938616835292905290812054611b22908390611fe9565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917fbb8caa1e59333c99899b67ccacb2b942c5a5ebf1a2bff4932b50274da81fe8d59101610596565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611c269190612000565b6000604051808303816000865af19150503d8060008114611c63576040519150601f19603f3d011682016040523d82523d6000602084013e611c68565b606091505b5091509150818015611c92575080511580611c92575080806020019051810190611c929190611f67565b611cf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104e4565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611d9e9190612000565b6000604051808303816000865af19150503d8060008114611ddb576040519150601f19603f3d011682016040523d82523d6000602084013e611de0565b606091505b5091509150818015611e0a575080511580611e0a575080806020019051810190611e0a9190611f67565b611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104e4565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611e9a57600080fd5b50565b600080600060608486031215611eb257600080fd5b8335611ebd81611e78565b92506020840135611ecd81611e78565b929592945050506040919091013590565b600060208284031215611ef057600080fd5b8135611efb81611e78565b9392505050565b60008060408385031215611f1557600080fd5b8235611f2081611e78565b91506020830135611f3081611e78565b809150509250929050565b60008060408385031215611f4e57600080fd5b8235611f5981611e78565b946020939093013593505050565b600060208284031215611f7957600080fd5b81518015158114611efb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611fcb57611fcb611f89565b500190565b600060208284031215611fe257600080fd5b5051919050565b600082821015611ffb57611ffb611f89565b500390565b6000825160005b818110156120215760208186018101518583015201612007565b81811115612030576000828501525b50919091019291505056fea26469706673582212206634c68cd62b3d0f45d7635a2fd1aa8019825f1f21deea0c546dc1f7677635a164736f6c634300080f0033608060405234801561001057600080fd5b5060405161116c38038061116c83398101604081905261002f91610085565b600080546001600160a01b039384166001600160a01b0319909116179055600180546001600160a81b0319169190921617600160a01b1790556100bf565b6001600160a01b038116811461008257600080fd5b50565b6000806040838503121561009857600080fd5b82516100a38161006d565b60208401519092506100b48161006d565b809150509250929050565b61109e806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806351b42b001161008c578063bbaed5cb11610066578063bbaed5cb14610228578063d4aae0c41461023b578063ea6439141461025b578063ffa1ad741461026357600080fd5b806351b42b00146101ad578063664aecb0146101b5578063a29a0d90146101e357600080fd5b80631ae7ec2e116100c85780631ae7ec2e146101465780631b0a68f214610174578063359fe780146101875780634657b36c1461019a57600080fd5b80630152a5ea146100ef57806302fb0c5e146101045780630f15f4c01461013e575b600080fd5b6101026100fd366004610f98565b610278565b005b6001546101299074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61010261050b565b6040517f4d494e54520000000000000000000000000000000000000000000000000000008152602001610135565b610102610182366004610f98565b61066f565b610102610195366004610f98565b61083f565b6101026101a8366004610fc4565b610a49565b610102610ae3565b6101d56101c3366004610fc4565b60026020526000908152604090205481565b604051908152602001610135565b6001546102039073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610135565b610102610236366004610f98565b610c30565b6000546102039073ffffffffffffffffffffffffffffffffffffffff1681565b610102610f1e565b60408051600181526000602082015201610135565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190610fe8565b6103a0576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b60015474010000000000000000000000000000000000000000900460ff166103f4576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361042e576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f79cc679000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906379cc679090604401600060405180830381600087803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b505060405183815273ffffffffffffffffffffffffffffffffffffffff851692503391507fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b94539060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f69190610fe8565b61062e576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610fe8565b610792576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490828211156107d0576107cb8383611039565b6107d3565b60005b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f08c666f5d7ad747c595b189947464cfac5e56befa6bd12ced49a49adb3f8166d906108319084815260200190565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190610fe8565b610962576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490826109b4837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611039565b11156109c9576109c48383611050565b6109eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f2f612f30164b43d77b321f13922cb2190f7f7956b9483d817271d30679a1aa7b906108319084815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a9c576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610fe8565b610c06576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190610fe8565b610d53576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b60015474010000000000000000000000000000000000000000900460ff16610da7576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610de1576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090205481811015610e2b576040517fd20075ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090819020838303905560015490517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610eb457600080fd5b505af1158015610ec8573d6000803e3d6000fd5b505060405184815273ffffffffffffffffffffffffffffffffffffffff861692503391507fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89060200160405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f71576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b565b73ffffffffffffffffffffffffffffffffffffffff81168114610f9557600080fd5b50565b60008060408385031215610fab57600080fd5b8235610fb681610f73565b946020939093013593505050565b600060208284031215610fd657600080fd5b8135610fe181610f73565b9392505050565b600060208284031215610ffa57600080fd5b81518015158114610fe157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561104b5761104b61100a565b500390565b600082198211156110635761106361100a565b50019056fea26469706673582212201993dbcafb4ea2c30aab7698fb16e989fa8c88b736ca2bc4e2d2383cdf01a68064736f6c634300080f0033608060405234801561001057600080fd5b50604051610b11380380610b1183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610a7e806100936000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063d09a20c511610076578063ea6439141161005b578063ea643914146101c7578063f6ba0007146101cf578063ffa1ad74146101e257600080fd5b8063d09a20c51461016f578063d4aae0c41461018257600080fd5b80634657b36c116100a75780634657b36c1461010b578063656361ff1461011e578063ac4ab3fb1461013157600080fd5b80631ae7ec2e146100c357806340e312f8146100f6575b600080fd5b6040517f524f4c455300000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b610109610104366004610939565b6101f7565b005b610109610119366004610977565b610375565b61010961012c36600461099b565b61040f565b61015f61013f3660046109cb565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ed565b61010961017d36600461099b565b61064a565b6000546101a29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b6101096106b7565b6101096101dd36600461099b565b61070c565b604080516001815260006020820152016100ed565b60005b6020811015610371576000828260208110610217576102176109f7565b1a60f81b90507f61000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610806102ae57507f7a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b80156102fc57507f5f000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821614155b801561032957507fff00000000000000000000000000000000000000000000000000000000000000811615155b15610368576040517f0eebce88000000000000000000000000000000000000000000000000000000008152600481018490526024015b60405180910390fd5b506001016101fa565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103c8576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610a26565b610532576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16156105bc576040517fbfa0c12400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b6105c5826101f7565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020818152604080842087855290915280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169092179091555184917f2ae6a113c0ed5b78a53413ffbb7679881f11145ccfba4fb92e863dfcd5a1d2f391a35050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16610371576040517f7de30f410000000000000000000000000000000000000000000000000000000081526004810183905260240161035f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461070a576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190610a26565b61082f576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff166108b8576040517fb2a720cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020908152604080832086845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555184917f155aaafb6329a2098580462df33ec4b7441b19729b9601c5fc17ae1cf99a8a5291a35050565b60006020828403121561094b57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461097457600080fd5b50565b60006020828403121561098957600080fd5b813561099481610952565b9392505050565b600080604083850312156109ae57600080fd5b8235915060208301356109c081610952565b809150509250929050565b600080604083850312156109de57600080fd5b82356109e981610952565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a3857600080fd5b8151801515811461099457600080fdfea26469706673582212204a2123866fc4f0206298105956e8d49e6e18ef63350ef4ff4f3ce47b11f9527764736f6c634300080f0033608060405234801561001057600080fd5b50604051610caa380380610caa83398101604081905261002f9161005d565b600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b610c0e8061009c6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806372b0bb4911610081578063d4aae0c41161005b578063d4aae0c4146101c8578063d547741f146101e8578063f851a440146101fb57600080fd5b806372b0bb491461018b578063923cb952146101935780639459b875146101b357600080fd5b80633ea26384116100b25780633ea263841461011e5780634657b36c146101635780635924be701461017657600080fd5b806303346696146100d957806322f3e2d4146100ee5780632f2ff15d1461010b575b600080fd5b6100ec6100e7366004610a1d565b61021b565b005b6100f66102db565b60405190151581526020015b60405180910390f35b6100ec610119366004610a41565b610373565b60025461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610102565b6100ec610171366004610a1d565b610455565b61017e6104f4565b6040516101029190610a71565b6100ec610645565b60035461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb61070f565b6040516101029190610b04565b60005461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ec6101f6366004610a41565b61081a565b60015461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff16331461026c576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa2c5878324891aaeaaa631341c00e3c30a2b70c1b6a1e9411b903402d40df5c990600090a250565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610b6a565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103c4576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517f656361ff0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063656361ff906044015b600060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104ad576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051600280825260608281019093527f524f4c45530000000000000000000000000000000000000000000000000000009190602082015b604080518082019091526000808252602082015281526020019060019003908161052d575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000831681527f656361ff00000000000000000000000000000000000000000000000000000000602082015281519193509083906000906105bf576105bf610b8c565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163f6ba000760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260018151811061063657610636610b8c565b60200260200101819052505090565b60025473ffffffffffffffffffffffffffffffffffffffff163314610696576040517fc5c898b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280546001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040517fecf24556cb4f08854c12350ad47cc1bf4bfe9ada0935ffb3d3de5f2f3f5a0ad690600090a2565b604080516001808252818301909252606091602080830190803683370190505090507f524f4c45530000000000000000000000000000000000000000000000000000008160008151811061076557610765610b8c565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506107d2816000815181106107c5576107c5610b8c565b60200260200101516108ca565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b60015473ffffffffffffffffffffffffffffffffffffffff16331461086b576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517ff6ba00070000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063f6ba00079060440161041f565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190610bbb565b905073ffffffffffffffffffffffffffffffffffffffff81166109f2576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016104a4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a1a57600080fd5b50565b600060208284031215610a2f57600080fd5b8135610a3a816109f8565b9392505050565b60008060408385031215610a5457600080fd5b823591506020830135610a66816109f8565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610af757815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101610a8e565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610b5e5783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101610b20565b50909695505050505050565b600060208284031215610b7c57600080fd5b81518015158114610a3a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610bcd57600080fd5b8151610a3a816109f856fea264697066735822122001208111947b361206645450d449a9dd0789147dbff53a2ceda894ae5da69b6664736f6c634300080f00336080604052600180553480156200001557600080fd5b5060405162002a3538038062002a35833981016040819052620000389162000094565b600080546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000e8565b6001600160a01b03811681146200009157600080fd5b50565b600080600060608486031215620000aa57600080fd5b8351620000b7816200007b565b6020850151909350620000ca816200007b565b6040850151909250620000dd816200007b565b809150509250925092565b61293d80620000f86000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063650d6ed6116100cd5780639459b87511610081578063a29a0d9011610066578063a29a0d9014610347578063b3ab15fb14610367578063d4aae0c41461037a57600080fd5b80639459b8751461031f57806398fc55d81461033457600080fd5b8063853dc0da116100b2578063853dc0da146102a95780638aeb40fd146102d7578063923cb952146102ff57600080fd5b8063650d6ed61461025b57806380cee4ab1461028957600080fd5b80634657b36c11610124578063570ca73511610109578063570ca73514610206578063577de7d0146102265780635924be701461024657600080fd5b80634657b36c146101e05780634b9de77c146101f357600080fd5b806309c2c843146101565780631074bce51461016b57806322f3e2d41461017e578063245a7bfc1461019b575b600080fd5b610169610164366004612413565b61039a565b005b6101696101793660046124f6565b6105f1565b6101866107eb565b60405190151581526020015b60405180910390f35b6009546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610192565b6101696101ee366004612522565b610883565b61016961020136600461253f565b610922565b6008546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b6007546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b61024e611173565b604051610192919061256b565b61027b610269366004612522565b60056020526000908152604090205481565b604051908152602001610192565b6006546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b6101866102b73660046124f6565b600360209081526000928352604080842090915290825290205460ff1681565b6102ea6102e53660046125fe565b611533565b60408051928352602083019190915201610192565b6002546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b61032761159a565b6040516101929190612617565b6101696103423660046124f6565b611858565b600a546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b610169610375366004612522565b611d96565b6000546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f61646d696e000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561042c57600080fd5b505af1158015610440573d6000803e3d6000fd5b5050835160009250829150815b818110156105e9578581815181106104675761046761267d565b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156104df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050391906126ac565b60065490935061052d9073ffffffffffffffffffffffffffffffffffffffff868116911685611ed6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb91906126ac565b73ffffffffffffffffffffffffffffffffffffffff851660009081526005602052604090205560010161044d565b505050505050565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c6973740000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b50506009546040517f78b5a87a0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911692506378b5a87a9150602401602060405180830381865afa15801561070a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072e91906126c5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610792576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff90911660009081526003602090815260408083209383529290522080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e91906126f2565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108db576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015460011461098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016108d2565b600260015533600090815260036020908152604080832086845290915290205460ff166109ea576040517f2c60e167000000000000000000000000000000000000000000000000000000008152600481018490526024016108d2565b6009546040517f5204794200000000000000000000000000000000000000000000000000000000815260048101859052600091829173ffffffffffffffffffffffffffffffffffffffff90911690635204794290602401602060405180830381865afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906126c5565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c866040518263ffffffff1660e01b8152600401610abc91815260200190565b60c060405180830381865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd919061270d565b505073ffffffffffffffffffffffffffffffffffffffff81166000908152600560205260409020549195509350610b379250869150612795565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc591906126ac565b1015610bfd576040517f8136384900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148015610c525750600a5473ffffffffffffffffffffffffffffffffffffffff8281169116145b15610d71576007546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081523060048201526024810186905273ffffffffffffffffffffffffffffffffffffffff90911690630152a5ea90604401600060405180830381600087803b158015610cc957600080fd5b505af1158015610cdd573d6000803e3d6000fd5b50506007546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff909116925063bbaed5cb91506044015b600060405180830381600087803b158015610d5457600080fd5b505af1158015610d68573d6000803e3d6000fd5b50505050610f38565b600a5473ffffffffffffffffffffffffffffffffffffffff90811690821603610e83576006546040517f2f42aef500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff84811660248301526044820186905290911690632f42aef590606401600060405180830381600087803b158015610e0e57600080fd5b505af1158015610e22573d6000803e3d6000fd5b50506007546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081523060048201526024810188905273ffffffffffffffffffffffffffffffffffffffff9091169250630152a5ea9150604401610d3a565b600a5473ffffffffffffffffffffffffffffffffffffffff90811690831603610f03576007546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081523360048201526024810185905273ffffffffffffffffffffffffffffffffffffffff9091169063bbaed5cb90604401610d3a565b6040517f2c60e167000000000000000000000000000000000000000000000000000000008152600481018690526024016108d2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc691906126ac565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260056020526040908190209290925590517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152908316906370a0823190602401602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b91906126ac565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600560209081526040808320939093558782526004905290812080548692906110b1908490612795565b90915550506000858152600460205260409020839060010160008282546110d89190612795565b90915550506008546040517fab104771000000000000000000000000000000000000000000000000000000008152600481018790526024810185905273ffffffffffffffffffffffffffffffffffffffff9091169063ab10477190604401600060405180830381600087803b15801561115057600080fd5b505af1158015611164573d6000803e3d6000fd5b50506001805550505050505050565b60606000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120891906127d4565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d91906127d4565b60408051600580825260c08201909252919250816020015b60408051808201909152600080825260208201528152602001906001900390816112b5575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000841681527fe6eb207a00000000000000000000000000000000000000000000000000000000602082015281519194509084906000906113475761134761267d565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001632f42aef560e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836001815181106113be576113be61267d565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163bbaed5cb60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836002815181106114355761143561267d565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630152a5ea60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836003815181106114ac576114ac61267d565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163359fe78060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836004815181106115235761152361267d565b6020026020010181905250505090565b600081815260046020526040808220815180830192839052839283929060029082845b8154815260200190600101908083116115565750505050509050806000600281106115835761158361267d565b602002015181600160200201519250925050915091565b604080516003808252608082019092526060916020820183803683370190505090507f5452535259000000000000000000000000000000000000000000000000000000816000815181106115f0576115f061267d565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526116487f4d494e545200000000000000000000000000000000000000000000000000000090565b8160018151811061165b5761165b61267d565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526116b37f524f4c455300000000000000000000000000000000000000000000000000000090565b816002815181106116c6576116c661267d565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050611733816000815181106117265761172661267d565b6020026020010151612046565b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611789816001815181106117265761172661267d565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117df816002815181106117265761172661267d565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055600754600a546118559290811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612174565b90565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c6973740000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156118ea57600080fd5b505af11580156118fe573d6000803e3d6000fd5b50506009546040517f78b5a87a0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911692506378b5a87a9150602401602060405180830381865afa158015611971573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199591906126c5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146119f9576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff838116600090815260036020908152604080832086845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560095490517f520479420000000000000000000000000000000000000000000000000000000081526004810186905291928392911690635204794290602401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906126c5565b73ffffffffffffffffffffffffffffffffffffffff1684604051602401611afd91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb1283e770000000000000000000000000000000000000000000000000000000017905251611b7e9190612816565b6000604051808303816000865af19150503d8060008114611bbb576040519150601f19603f3d011682016040523d82523d6000602084013e611bc0565b606091505b509150915081611bfc576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600080600085806020019051810190611c189190612851565b9b50505050985050975097505050955050600084611c365783611c41565b611c418483856122dd565b600a5490915073ffffffffffffffffffffffffffffffffffffffff90811690871603611cf6576007546040517f359fe7800000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063359fe78090604401600060405180830381600087803b158015611cd957600080fd5b505af1158015611ced573d6000803e3d6000fd5b50505050611d89565b6006546040517fe6eb207a00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8881166024830152604482018490529091169063e6eb207a90606401600060405180830381600087803b158015611d7057600080fd5b505af1158015611d84573d6000803e3d6000fd5b505050505b5050505050505050505050565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f61646d696e000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015611e2857600080fd5b505af1158015611e3c573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff83169050611e8e576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611f6d9190612816565b6000604051808303816000865af19150503d8060008114611faa576040519150601f19603f3d011682016040523d82523d6000602084013e611faf565b606091505b5091509150818015611fd9575080511580611fd9575080806020019051810190611fd991906126f2565b61203f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016108d2565b5050505050565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa1580156120d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fb91906126c5565b905073ffffffffffffffffffffffffffffffffffffffff811661216e576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016108d2565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052915160009283929087169161220b9190612816565b6000604051808303816000865af19150503d8060008114612248576040519150601f19603f3d011682016040523d82523d6000602084013e61224d565b606091505b509150915081801561227757508051158061227757508080602001905181019061227791906126f2565b61203f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016108d2565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612334576000841161232957600080fd5b5082900490506123a8565b80841161234057600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461240057600080fd5b50565b803561240e816123de565b919050565b6000602080838503121561242657600080fd5b823567ffffffffffffffff8082111561243e57600080fd5b818501915085601f83011261245257600080fd5b813581811115612464576124646123af565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156124a7576124a76123af565b6040529182528482019250838101850191888311156124c557600080fd5b938501935b828510156124ea576124db85612403565b845293850193928501926124ca565b98975050505050505050565b6000806040838503121561250957600080fd5b8235612514816123de565b946020939093013593505050565b60006020828403121561253457600080fd5b81356123a8816123de565b60008060006060848603121561255457600080fd5b505081359360208301359350604090920135919050565b602080825282518282018190526000919060409081850190868401855b828110156125f157815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101612588565b5091979650505050505050565b60006020828403121561261057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156126715783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101612633565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156126be57600080fd5b5051919050565b6000602082840312156126d757600080fd5b81516123a8816123de565b8051801515811461240e57600080fd5b60006020828403121561270457600080fd5b6123a8826126e2565b60008060008060008060c0878903121561272657600080fd5b8651612731816123de565b6020880151909650612742816123de565b6040880151909550612753816123de565b6060880151909450612764816123de565b608088015190935065ffffffffffff8116811461278057600080fd5b8092505060a087015190509295509295509295565b600082198211156127cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000602082840312156127e657600080fd5b81517fffffffffff000000000000000000000000000000000000000000000000000000811681146123a857600080fd5b6000825160005b81811015612837576020818601810151858301520161281d565b81811115612846576000828501525b509190910192915050565b6000806000806000806000806000806000806101808d8f03121561287457600080fd5b8c5161287f816123de565b60208e0151909c50612890816123de565b60408e0151909b506128a1816123de565b60608e0151909a506128b2816123de565b98506128c060808e016126e2565b975060a08d0151965060c08d0151955060e08d015194506101008d015193506101208d015192506101408d015191506101608d015190509295989b509295989b509295989b56fea2646970667358221220abd5ddd2b793c4b2be821bd9e5c56fd66bac29d2c6d2f5491e8265e57ee9316d64736f6c634300080f003361010060405260016002553480156200001757600080fd5b5060405162008114380380620081148339810160408190526200003a9162000a75565b600080546001600160a01b0319166001600160a01b0387811691909117909155841615806200007057506001600160a01b038316155b156200008f5760405163042a67ad60e41b815260040160405180910390fd5b62093a80816001602002015163ffffffff161180620000bd575062015180816001602002015163ffffffff16105b15620000dc5760405163042a67ad60e41b815260040160405180910390fd5b612710816002602002015163ffffffff1610156200010d5760405163042a67ad60e41b815260040160405180910390fd5b610e10816003602002015163ffffffff1610806200013c57506020810151606082015163ffffffff9182169116115b156200015b5760405163042a67ad60e41b815260040160405180910390fd5b805161271063ffffffff90911611806200017e57508051606463ffffffff909116105b156200019d5760405163042a67ad60e41b815260040160405180910390fd5b612710816004602002015163ffffffff161180620001c857506064816004602002015163ffffffff16105b15620001e75760405163042a67ad60e41b815260040160405180910390fd5b610e10816005602002015163ffffffff16108062000216575060e081015160c082015163ffffffff9182169116115b806200022a575060e081015163ffffffff16155b806200023e575060c081015163ffffffff16155b156200025d5760405163042a67ad60e41b815260040160405180910390fd5b600c80546001600160a01b038681166001600160a01b031992831617909255600d805486841692169190911790558251811660805282516040805163313ce56760e01b81529051919092169163313ce5679160048083019260209291908290030181865afa158015620002d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002fa919062000b52565b60ff1660a05281600160200201516001600160a01b031660c05281600160200201516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000380919062000b52565b60ff1660e05260408051608081018252600080825265ffffffffffff4216602083015291810182905260608101836007602002015163ffffffff166001600160401b03811115620003d557620003d562000994565b604051908082528060200260200182016040528015620003ff578160200160208202803683370190505b5090526040805161010081018252845163ffffffff908116825260208087015182169083015285830151169181019190915290915060608101836003602002015163ffffffff1681526020018360046008811062000461576200046162000b3c565b602002015163ffffffff1681526020018360056008811062000487576200048762000b3c565b602002015163ffffffff16815260200183600660088110620004ad57620004ad62000b3c565b602002015163ffffffff16815260200183600760088110620004d357620004d362000b3c565b602002015163ffffffff16815250600760008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160000160106101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160000160186101000a81548163ffffffff021916908363ffffffff16021790555060e082015181600001601c6101000a81548163ffffffff021916908363ffffffff160217905550905050604051806040016040528082815260200182815250600360008201518160000160008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548165ffffffffffff021916908365ffffffffffff160217905550604082015181600001600a6101000a81548163ffffffff021916908363ffffffff1602179055506060820151816001019080519060200190620006d5929190620008b8565b505050602082810151805160028401805483850151604085015163ffffffff9081166a01000000000000000000000263ffffffff60501b1965ffffffffffff909316640100000000026001600160501b0319909416919095161791909117169190911781556060820151805192939192620007579260038701920190620008b8565b5050509050507f5760955ed2acbd2b290c0a6edf1c0bc845f64f1da0b9f89582fac3daade8dff58260006008811062000794576200079462000b3c565b6020020151604051620007b3919063ffffffff91909116815260200190565b60405180910390a1602080830151604080850151606080870151835163ffffffff95861681529285169583019590955292909316908301527f6627cd780fa2d7faf558f4d9d700a0852b79903fd60ce8c0f734103cf8aa12b8910160405180910390a1608082015160405163ffffffff90911681527fb3f67f3c41e3a7c2c87b93a1c1fe4581744242b44b44d4a873ca8facec1ee8a59060200160405180910390a160a082015160c083015160e08401516040805163ffffffff9485168152928416602084015292168183015290517f9f11b1d829316eb1d4d6f91541c83d9f78bc1e309f755c759d190c973f7b4fae9181900360600190a150505050505062000b7e565b82805482825590600052602060002090601f01602090048101928215620009525791602002820160005b838211156200092157835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302620008e2565b8015620009505782816101000a81549060ff021916905560010160208160000104928301926001030262000921565b505b506200096092915062000964565b5090565b5b8082111562000960576000815560010162000965565b6001600160a01b03811681146200099157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715620009db57634e487b7160e01b600052604160045260246000fd5b60405290565b600082601f830112620009f357600080fd5b6040516101008082016001600160401b038111838210171562000a2657634e487b7160e01b600052604160045260246000fd5b6040528301818582111562000a3a57600080fd5b845b8281101562000a6a57805163ffffffff8116811462000a5b5760008081fd5b82526020918201910162000a3c565b509195945050505050565b60008060008060006101a0868803121562000a8f57600080fd5b855162000a9c816200097b565b8095505060208087015162000ab1816200097b565b604088015190955062000ac4816200097b565b9350607f8701881362000ad657600080fd5b62000ae0620009aa565b8060a089018a81111562000af357600080fd5b60608a015b8181101562000b1c57805162000b0e816200097b565b845292840192840162000af8565b5081955062000b2c8b82620009e1565b9450505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562000b6557600080fd5b815160ff8116811462000b7757600080fd5b9392505050565b60805160a05160c05160e05161747c62000c98600039600081816103bf01528181612bef0152818161399101528181614fc4015281816150cc0152818161578c01526157da0152600081816105fc0152818161294901528181613054015281816130d801528181613152015281816132bb0152818161339e01528181613b380152818161439d01528181614435015281816144fe015281816152f8015261597101526000818161038601528181612b2d01528181613a4801528181614fe5015281816150ab0152818161576b01526157fb01526000818161057f015281816128ca01528181612e2101528181612f78015281816130fd01528181613379015281816138c1015281816152c901526159a0015261747c6000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80636e703c2e11610145578063aa9760a1116100bd578063cd3293de1161008c578063dd0081c711610071578063dd0081c714610631578063f2f6d5bb1461063a578063f2fa47371461064d57600080fd5b8063cd3293de146105f7578063d4aae0c41461061e57600080fd5b8063aa9760a1146105a1578063ab104771146105b4578063bb2eb4d2146105c7578063ca706bcf146105e457600080fd5b8063923cb952116101145780639e897711116100f95780639e897711146105465780639f1d0f5914610567578063a29a0d901461057a57600080fd5b8063923cb9521461051e5780639459b8751461053157600080fd5b80636e703c2e146103ba5780637159a618146103e157806379502c55146103e95780638129fc1c1461051657600080fd5b80632ecd1f20116101d85780634657b36c116101a75780635924be701161018c5780635924be70146103595780635ec2c7bf1461036e5780636a839ed61461038157600080fd5b80634657b36c1461033e57806351b42b001461035157600080fd5b80632ecd1f20146102f257806333bd33b4146103055780633a3f54bc1461031857806341f19a461461032b57600080fd5b8063158ef93e11610214578063158ef93e146102b557806319f63dd7146102c2578063200d2ed2146102d557806322f3e2d4146102ea57600080fd5b806301de9ba81461024657806302fb0c5e1461025b578063083b2732146102825780630f15f4c0146102ad575b600080fd5b610259610254366004616683565b610660565b005b60085461026d90610100900460ff1681565b60405190151581526020015b60405180910390f35b600d54610295906001600160a01b031681565b6040516001600160a01b039091168152602001610279565b6102596107d7565b60085461026d9060ff1681565b6102596102d03660046166b3565b6108a3565b6102dd6109db565b604051610279919061676c565b61026d610bc4565b6102596103003660046167da565b610c4f565b6102596103133660046167f7565b610cf9565b610259610326366004616810565b610e12565b610259610339366004616853565b6111f7565b61025961034c366004616875565b61131f565b6102596113a4565b610361611481565b6040516102799190616892565b600c54610295906001600160a01b031681565b6103a87f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610279565b6103a87f000000000000000000000000000000000000000000000000000000000000000081565b610259611c41565b6105096040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250604080516101008101825260075463ffffffff80821683526401000000008204811660208401526801000000000000000082048116938301939093526c01000000000000000000000000810483166060830152700100000000000000000000000000000000810483166080830152740100000000000000000000000000000000000000008104831660a083015278010000000000000000000000000000000000000000000000008104831660c08301527c0100000000000000000000000000000000000000000000000000000000900490911660e082015290565b6040516102799190616925565b610259612406565b600154610295906001600160a01b031681565b61053961252d565b60405161027991906169ac565b6105596105543660046167da565b612916565b604051908152602001610279565b610559610575366004616a12565b612c45565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b6102596105af366004616683565b613426565b6102596105c2366004616853565b61357f565b6105cf606481565b60405163ffffffff9091168152602001610279565b6105596105f2366004616a47565b6138bd565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b600054610295906001600160a01b031681565b6105cf61271081565b6102596106483660046167da565b613c18565b61025961065b366004616810565b613cbe565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b5050505061271063ffffffff168263ffffffff16118061071f5750606463ffffffff8316105b15610756576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000063ffffffff8516908102919091179091556040519081527fb3f67f3c41e3a7c2c87b93a1c1fe4581744242b44b44d4a873ca8facec1ee8a5906020015b60405180910390a15050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561085c57600080fd5b505af1158015610870573d6000803e3d6000fd5b5050600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b505050506001600160a01b038316158061095d57506001600160a01b038216155b15610994576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600c80546001600160a01b039384167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600d8054929093169116179055565b610a346040805160c08101825260009181018281526060808301849052608083019390935260a0820192909252908190815260408051608081018252600080825260208281018290529282015260608082015291015290565b6040805160c0810182526003805463ffffffff80821684860190815265ffffffffffff64010000000084041660608601526a0100000000000000000000909204166080840152600480548551602082810282018101909752818152949593948694869360a08701939091830182828015610aed57602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411610abc5790505b5050509190925250505081526040805160808101825260028401805463ffffffff808216845265ffffffffffff6401000000008304166020858101919091526a010000000000000000000090920416838501526003860180548551818402810184019096528086529582019593949293606086019392830182828015610bb257602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411610b815790505b50505050508152505081525050905090565b600080546040517fe52223bb0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169063e52223bb90602401602060405180830381865afa158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a9190616a73565b905090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b50505050610cf582613f33565b5050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b50506009546040517f33bd33b4000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0390911692506333bd33b491506024015b600060405180830381600087803b158015610df657600080fd5b505af1158015610e0a573d6000803e3d6000fd5b505050505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015610e9757600080fd5b505af1158015610eab573d6000803e3d6000fd5b50505050610e108463ffffffff161080610ed057508163ffffffff168363ffffffff16115b80610edf575063ffffffff8216155b80610eee575063ffffffff8316155b80610f955750610efe8383616abf565b63ffffffff16600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b9190616afa565b610f8b9063ffffffff8716616b44565b65ffffffffffff16105b15610fcc576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000063ffffffff878116919091027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1691909117780100000000000000000000000000000000000000000000000086831602177bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167c010000000000000000000000000000000000000000000000000000000091851691820217909155600580547fffffffffffffffffffffffffffffffffffff00000000ffffffffffff0000000016905567ffffffffffffffff8111156110df576110df616b69565b604051908082528060200260200182016040528015611108578160200160208202803683370190505b50805161111d916006916020909101906165b0565b50600380547fffffffffffffffffffffffffffffffffffff00000000ffffffffffff0000000016905563ffffffff821667ffffffffffffffff81111561116557611165616b69565b60405190808252806020026020018201604052801561118e578160200160208202803683370190505b5080516111a3916004916020909101906165b0565b506040805163ffffffff808716825280861660208301528416918101919091527f9f11b1d829316eb1d4d6f91541c83d9f78bc1e309f755c759d190c973f7b4fae906060015b60405180910390a150505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561127c57600080fd5b505af1158015611290573d6000803e3d6000fd5b50506009546040517f41f19a4600000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160a01b0390911692506341f19a469150604401600060405180830381600087803b1580156112fa57600080fd5b505af115801561130e573d6000803e3d6000fd5b5050505061131a6145f6565b505050565b6000546001600160a01b0316331461136a576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561142957600080fd5b505af115801561143d573d6000803e3d6000fd5b5050600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550611474905060016146ea565b61147e60006146ea565b50565b60606000600960009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fc9190616b98565b90506000600a60009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611553573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115779190616b98565b90506000600b60009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f29190616b98565b60408051600d8082526101c08201909252919250816020015b604080518082019091526000808252602082015281526020019060019003908161160b575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000851681527f6d9a9a62000000000000000000000000000000000000000000000000000000006020820152815191955090859060009061169d5761169d616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001633e56993a60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460018151811061171457611714616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163ae7e8d8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460028151811061178b5761178b616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200162d1673960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460038151811061180157611801616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016341f19a4660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460048151811061187857611878616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016333bd33b460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250846005815181106118ef576118ef616bda565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001632f42aef560e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460068151811061196657611966616bda565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163e6eb207a60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250846007815181106119dd576119dd616bda565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001638b7f3fb960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600881518110611a5457611a54616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163bbaed5cb60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600981518110611acb57611acb616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630152a5ea60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600a81518110611b4257611b42616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163359fe78060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600b81518110611bb957611bb9616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001631b0a68f260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600c81518110611c3057611c30616bda565b602002602001018190525050505090565b600854610100900460ff161580611d695750600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190616afa565b611cd5906003616c09565b600860029054906101000a90046001600160a01b03166001600160a01b031663d266f5d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4c9190616afa565b611d569190616c37565b65ffffffffffff164265ffffffffffff16115b15611da0576040517f5ac0916c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f6f7065726174650000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015611e2557600080fd5b505af1158015611e39573d6000803e3d6000fd5b505060085460ff169150611e7b9050576040517f79709bae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e836145f6565b611e8b6148ed565b604080516101008101825260075463ffffffff80821683526401000000008204811660208401526801000000000000000082048116838501526c01000000000000000000000000820481166060840152700100000000000000000000000000000000820481166080840152740100000000000000000000000000000000000000008204811660a0840181905278010000000000000000000000000000000000000000000000008304821660c08501527c01000000000000000000000000000000000000000000000000000000009092041660e083015260095492517fe69f3c4e00000000000000000000000000000000000000000000000000000000815260016004820152919290916001600160a01b039091169063e69f3c4e90602401602060405180830381865afa158015611fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fea9190616c61565b611ff49190616c7a565b4265ffffffffffff161015801561201b575060c081015160055463ffffffff918216911610155b1561202a5761202a6001613f33565b60a08101516009546040517fe69f3c4e0000000000000000000000000000000000000000000000000000000081526000600482015263ffffffff909216916001600160a01b039091169063e69f3c4e90602401602060405180830381865afa15801561209a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120be9190616c61565b6120c89190616c7a565b4265ffffffffffff16101580156120ef575060c081015160035463ffffffff918216911610155b156120fe576120fe6000613f33565b600954604080517fe97206a900000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163e97206a9916004808301926102009291908290030181865afa158015612162573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121869190616e33565b90506000600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122019190616c61565b8251519091501561230557600c548251608001516040517f275074580000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163275074589161225d9160040190815260200190565b602060405180830381865afa15801561227a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229e9190616a73565b156122d657604082015160200151518111806122c257506060820151602001515181105b156122d1576122d160006146ea565b612305565b60408201516020015151811080156122f657506060820151602001515181115b15612305576123056000614f0d565b6020820151511561240057600c546020830151608001516040517f275074580000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916327507458916123649160040190815260200190565b602060405180830381865afa158015612381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a59190616a73565b156123d757604082015151518110806123c357506060820151515181115b156123d2576123d260016146ea565b612400565b60408201515151811180156123f157506060820151515181105b15612400576124006001614f0d565b50505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f61646d696e00000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561248b57600080fd5b505af115801561249f573d6000803e3d6000fd5b505060085460ff161591506124e29050576040517f58b8d27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6124ea6145f6565b6124f46001613f33565b6124fe6000613f33565b50600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101179055565b60408051600580825260c082019092526060916020820160a0803683370190505090507f50524943450000000000000000000000000000000000000000000000000000008160008151811061258457612584616bda565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526125dc7f52414e474500000000000000000000000000000000000000000000000000000090565b816001815181106125ef576125ef616bda565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526126477f545253525900000000000000000000000000000000000000000000000000000090565b8160028151811061265a5761265a616bda565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526126b27f4d494e545200000000000000000000000000000000000000000000000000000090565b816003815181106126c5576126c5616bda565b7fffffffffff0000000000000000000000000000000000000000000000000000009092166020928302919091019091015261271d7f524f4c455300000000000000000000000000000000000000000000000000000090565b8160048151811061273057612730616bda565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505061279d8160008151811061279057612790616bda565b6020026020010151615cb1565b600860026101000a8154816001600160a01b0302191690836001600160a01b031602179055506127d98160018151811061279057612790616bda565b600960006101000a8154816001600160a01b0302191690836001600160a01b031602179055506128158160028151811061279057612790616bda565b600a60006101000a8154816001600160a01b0302191690836001600160a01b031602179055506128518160038151811061279057612790616bda565b600b60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061288d8160048151811061279057612790616bda565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b54612913917f0000000000000000000000000000000000000000000000000000000000000000811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff615dbf565b90565b600a546040517f15226b540000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009283929116906315226b5490602401602060405180830381865afa15801561299d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c19190616c61565b600754909150600090612710906129f290700100000000000000000000000000000000900463ffffffff1684616ede565b6129fc9190616f1b565b90508315612c3e576009546040517f8c3f914a00000000000000000000000000000000000000000000000000000000815260016004820152612710916001600160a01b031690638c3f914a90602401602060405180830381865afa158015612a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8c9190616c61565b612a97906002616ede565b612aa390612710616c7a565b612c27600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1d9190616f2f565b612b2890600a617072565b612b537f0000000000000000000000000000000000000000000000000000000000000000600a617072565b612b5d9190616ede565b6009546040517f3778c2b200000000000000000000000000000000000000000000000000000000815260016004820181905260248201526001600160a01b0390911690633778c2b290604401602060405180830381865afa158015612bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bea9190616c61565b612c157f0000000000000000000000000000000000000000000000000000000000000000600a617072565b612c1f9190616ede565b859190615f1b565b612c319190616ede565b612c3b9190616f1b565b90505b9392505050565b600854600090610100900460ff161580612d705750600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd19190616afa565b612cdc906003616c09565b600860029054906101000a90046001600160a01b03166001600160a01b031663d266f5d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d539190616afa565b612d5d9190616c37565b65ffffffffffff164265ffffffffffff16115b15612da7576040517f5ac0916c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254600114612e13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401611361565b600280556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690851603613150576009546040517f59d236e6000000000000000000000000000000000000000000000000000000008152600060048201526001600160a01b03909116906359d236e690602401602060405180830381865afa158015612eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ed09190616a73565b612f06576040517f1c184ff500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612f1084846138bd565b905081811015612f56576040517fc2d2c7430000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401611361565b612f61600082615fe6565b612f6b60006160cf565b612fa06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330866163a0565b600b546040517f0152a5ea000000000000000000000000000000000000000000000000000000008152306004820152602481018590526001600160a01b0390911690630152a5ea90604401600060405180830381600087803b15801561300557600080fd5b505af1158015613019573d6000803e3d6000fd5b5050600a546040517f2f42aef50000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018690529091169250632f42aef59150606401600060405180830381600087803b1580156130aa57600080fd5b505af11580156130be573d6000803e3d6000fd5b505060408051868152602081018590526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694507f00000000000000000000000000000000000000000000000000000000000000001692507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe23591015b60405180910390a361341a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316036133e8576009546040517f59d236e6000000000000000000000000000000000000000000000000000000008152600160048201526001600160a01b03909116906359d236e690602401602060405180830381865afa1580156131eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061320f9190616a73565b613245576040517f1c184ff500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61324f84846138bd565b905081811015613295576040517fc2d2c7430000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401611361565b6132a0600182615fe6565b6132aa60016160cf565b600a546132e6906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691339116866163a0565b600b546040517fbbaed5cb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063bbaed5cb90604401600060405180830381600087803b15801561334b57600080fd5b505af115801561335f573d6000803e3d6000fd5b505060408051868152602081018590526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694507f00000000000000000000000000000000000000000000000000000000000000001692507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe2359101613143565b6040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002559392505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b1580156134ab57600080fd5b505af11580156134bf573d6000803e3d6000fd5b5050505061271063ffffffff168263ffffffff1611806134e55750606463ffffffff8316105b1561351c576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff84169081179091556040519081527f5760955ed2acbd2b290c0a6edf1c0bc845f64f1da0b9f89582fac3daade8dff5906020016107cb565b600854610100900460ff1615806136a75750600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136089190616afa565b613613906003616c09565b600860029054906101000a90046001600160a01b03166001600160a01b031663d266f5d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015613666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061368a9190616afa565b6136949190616c37565b65ffffffffffff164265ffffffffffff16115b156136de576040517f5ac0916c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f7265706f7274657200000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561376357600080fd5b505af1158015613777573d6000803e3d6000fd5b50506009546040517fc45e91d6000000000000000000000000000000000000000000000000000000008152600160048201526001600160a01b03909116925063c45e91d69150602401602060405180830381865afa1580156137dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138019190616c61565b830361381c57613812600183615fe6565b61381c60016160cf565b6009546040517fc45e91d6000000000000000000000000000000000000000000000000000000008152600060048201526001600160a01b039091169063c45e91d690602401602060405180830381865afa15801561387e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138a29190616c61565b830361131a576138b3600083615fe6565b61131a60006160cf565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031603613b36576009546040517f3778c2b20000000000000000000000000000000000000000000000000000000081526001600482015260006024820181905291613a6e916001600160a01b0390911690633778c2b290604401602060405180830381865afa158015613968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061398c9190616c61565b6139b77f0000000000000000000000000000000000000000000000000000000000000000600a617072565b6139c19190616ede565b600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a389190616f2f565b613a4390600a617072565b612c157f0000000000000000000000000000000000000000000000000000000000000000600a617072565b6009546040517fbf30142b000000000000000000000000000000000000000000000000000000008152600060048201529192506001600160a01b03169063bf30142b906024015b602060405180830381865afa158015613ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613af69190616c61565b811115613b2f576040517f2c05036100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9050613c12565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316036133e8576000613bc7600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612af9573d6000803e3d6000fd5b6009546040517fbf30142b000000000000000000000000000000000000000000000000000000008152600160048201529192506001600160a01b03169063bf30142b90602401613ab5565b92915050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015613c9d57600080fd5b505af1158015613cb1573d6000803e3d6000fd5b50505050610cf5826146ea565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015613d4357600080fd5b505af1158015613d57573d6000803e3d6000fd5b5050505062093a808463ffffffff161180613d7a5750620151808463ffffffff16105b15613db1576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61271063ffffffff84161015613df3576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1063ffffffff83161080613e1457508363ffffffff168263ffffffff16115b15613e4b576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffff1664010000000063ffffffff8781169182027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff169290921768010000000000000000878416908102919091177fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff166c0100000000000000000000000093871693840217909355604080519182526020820193909352918201527f6627cd780fa2d7faf558f4d9d700a0852b79903fd60ce8c0f734103cf8aa12b8906060016111e9565b613f3c816146ea565b801561427857600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001690556007547c0100000000000000000000000000000000000000000000000000000000900463ffffffff1667ffffffffffffffff811115613fab57613fab616b69565b604051908082528060200260200182016040528015613fd4578160200160208202803683370190505b508051613fe9916006916020909101906165b0565b50600580547fffffffffffffffffffffffffffffffffffff00000000000000000000ffffffff166401000000004265ffffffffffff1602179055600061402f6001612916565b600b546040517f664aecb00000000000000000000000000000000000000000000000000000000081523060048201529192506000916001600160a01b039091169063664aecb090602401602060405180830381865afa158015614096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140ba9190616c61565b90508181101561415b57600b546001600160a01b031663359fe780306140e08486617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561413e57600080fd5b505af1158015614152573d6000803e3d6000fd5b505050506141f6565b818111156141f657600b546001600160a01b0316631b0a68f23061417f8585617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156141dd57600080fd5b505af11580156141f1573d6000803e3d6000fd5b505050505b6009546040517ed1673900000000000000000000000000000000000000000000000000000000815260016004820152602481018490526001600160a01b039091169062d16739906044015b600060405180830381600087803b15801561425b57600080fd5b505af115801561426f573d6000803e3d6000fd5b50505050505050565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001690556007547c0100000000000000000000000000000000000000000000000000000000900463ffffffff1667ffffffffffffffff8111156142e1576142e1616b69565b60405190808252806020026020018201604052801561430a578160200160208202803683370190505b50805161431f916004916020909101906165b0565b50600380547fffffffffffffffffffffffffffffffffffff00000000000000000000ffffffff166401000000004265ffffffffffff1602179055600061436481612916565b600a546040517f5f0736a10000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015292935060009290911690635f0736a190604401602060405180830381865afa1580156143f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144179190616c61565b9050818110156144e257600a546001600160a01b031663e6eb207a307f000000000000000000000000000000000000000000000000000000000000000061445e8587617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156144c557600080fd5b505af11580156144d9573d6000803e3d6000fd5b505050506145a7565b818111156145a757600a546001600160a01b0316638b7f3fb9307f00000000000000000000000000000000000000000000000000000000000000006145278686617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561458e57600080fd5b505af11580156145a2573d6000803e3d6000fd5b505050505b6009546040517ed1673900000000000000000000000000000000000000000000000000000000815260006004820152602481018490526001600160a01b039091169062d1673990604401614241565b6000600860029054906101000a90046001600160a01b03166001600160a01b031663bd01bb326040518163ffffffff1660e01b8152600401602060405180830381865afa15801561464b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061466f9190616c61565b6009546040517fae7e8d81000000000000000000000000000000000000000000000000000000008152600481018390529192506001600160a01b03169063ae7e8d8190602401600060405180830381600087803b1580156146cf57600080fd5b505af11580156146e3573d6000803e3d6000fd5b5050505050565b6009546040517fc45e91d600000000000000000000000000000000000000000000000000000000815282151560048201526000916001600160a01b03169063c45e91d690602401602060405180830381865afa15801561474e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147729190616c61565b600c546040517f27507458000000000000000000000000000000000000000000000000000000008152600481018390529192506001600160a01b031690632750745890602401602060405180830381865afa1580156147d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147f99190616a73565b15610cf557600c546040517fae418095000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b039091169063ae41809590602401600060405180830381600087803b15801561485d57600080fd5b505af1158015614871573d6000803e3d6000fd5b50506009546040517f3e56993a00000000000000000000000000000000000000000000000000000000815285151560048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6024820152600060448201526001600160a01b039091169250633e56993a9150606401610ddc565b6000600860029054906101000a90046001600160a01b03166001600160a01b031663bd01bb326040518163ffffffff1660e01b8152600401602060405180830381865afa158015614942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149669190616c61565b90506000600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156149bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e19190616c61565b600754604080516080810182526003805463ffffffff818116845265ffffffffffff6401000000008304166020808601919091526a0100000000000000000000909204811684860152600480548651818502810185019097528087529798507c0100000000000000000000000000000000000000000000000000000000909604169560009593949293606086019392909190830182828015614ac257602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411614a915790505b5050505050815250509050838310614b86578060600151816040015163ffffffff1681518110614af457614af4616bda565b6020026020010151614b815760408101516004805460019263ffffffff16908110614b2157614b21616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556003805463ffffffff1691614b6183617098565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b614c34565b8060600151816040015163ffffffff1681518110614ba657614ba6616bda565b602002602001015115614c345760408101516004805460009263ffffffff16908110614bd457614bd4616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556003805463ffffffff1691614c14836170bb565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b8181604001516001614c4691906170f9565b614c509190617118565b600380547fffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffff166a010000000000000000000063ffffffff93841681029190911790915560408051608081018252600580548086168352640100000000810465ffffffffffff16602080850191909152949004909416818301526006805483518186028101860190945280845291949360608601939290830182828015614d3557602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411614d045790505b5050505050815250509050838311614df9578060600151816040015163ffffffff1681518110614d6757614d67616bda565b6020026020010151614df45760408101516006805460019263ffffffff16908110614d9457614d94616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556005805463ffffffff1691614dd483617098565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b614ea7565b8060600151816040015163ffffffff1681518110614e1957614e19616bda565b602002602001015115614ea75760408101516006805460009263ffffffff16908110614e4757614e47616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556005805463ffffffff1691614e87836170bb565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b8181604001516001614eb991906170f9565b614ec39190617118565b6005805463ffffffff929092166a0100000000000000000000027fffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffff90921691909117905550505050565b600954604080517fe97206a900000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163e97206a9916004808301926102009291908290030181865afa158015614f71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f959190616e33565b905081156156065760408101515151600090614fb090616504565b90506000614fbf60028361713b565b6150097f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006171af565b6150139190617211565b9050600082600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561506b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061508f9190616f2f565b61509991906171af565b6150a490600a617072565b90506000837f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006150f6866024617211565b6151009190617211565b61510a91906171af565b61511491906171af565b61511f90600a617072565b905060006151a68284600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561517b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061519f9190616c61565b9190615f1b565b604087015151519091506000906151be908486615f1b565b604080516101008101825260075463ffffffff808216808452640100000000830482166020808601919091526801000000000000000084048316858701526c01000000000000000000000000840483166060860152700100000000000000000000000000000000840483166080860152740100000000000000000000000000000000000000008404831660a086015278010000000000000000000000000000000000000000000000008404831660c08601527c0100000000000000000000000000000000000000000000000000000000909304821660e0850152918c01519093015193945090926000926152b7929061271090615f1b16565b905060006040518061018001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600d60009054906101000a90046001600160a01b03166001600160a01b03168152602001600015158152602001838152602001868152602001858152602001846040015163ffffffff168152602001600065ffffffffffff168152602001846020015163ffffffff16426153999190616c7a565b65ffffffffffff168152602001846060015163ffffffff1681526020018960000b81525090506000600c60009054906101000a90046001600160a01b03166001600160a01b03166353c7f8e0836040516020016153f69190617272565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401615421919061737c565b6020604051808303816000875af1158015615440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906154649190616c61565b600d54600c54604080517f9787d10700000000000000000000000000000000000000000000000000000000815290519394506001600160a01b03928316936398fc55d89390921691639787d107916004808201926020929091908290030181865afa1580156154d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906154fb91906173cd565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b15801561555b57600080fd5b505af115801561556f573d6000803e3d6000fd5b50506009546040517f3e56993a0000000000000000000000000000000000000000000000000000000081526001600482015260248101859052604481018790526001600160a01b039091169250633e56993a9150606401600060405180830381600087803b1580156155e057600080fd5b505af11580156155f4573d6000803e3d6000fd5b50505050505050505050505050505050565b6000600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561565b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061567f9190616f2f565b6040830151602001515190915060009061569a8360026173ea565b6156a590600a617072565b6156af9190616f1b565b90506000600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015615706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061572a9190616c61565b6157358460026173ea565b61574090600a617072565b61574a9190616f1b565b9050600061575783616504565b9050600061576660028361713b565b6157b07f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006171af565b6157ba9190617211565b905060006157c883876171af565b6157d390600a617072565b90506000837f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000615825866024617211565b61582f9190617211565b61583991906171af565b61584391906171af565b61584e90600a617072565b9050600061585d868385615f1b565b9050600061586c888486615f1b565b604080516101008101825260075463ffffffff8082168084526401000000008304821660208501526801000000000000000083048216848601526c01000000000000000000000000830482166060850152700100000000000000000000000000000000830482166080850152740100000000000000000000000000000000000000008304821660a085015278010000000000000000000000000000000000000000000000008304821660c08501527c0100000000000000000000000000000000000000000000000000000000909204811660e08401528e5190930151939450909260009261595f929061271090615f1b16565b905060006040518061018001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600d60009054906101000a90046001600160a01b03166001600160a01b03168152602001600015158152602001838152602001868152602001858152602001846040015163ffffffff168152602001600065ffffffffffff168152602001846020015163ffffffff1642615a419190616c7a565b65ffffffffffff168152602001846060015163ffffffff1681526020018960000b81525090506000600c60009054906101000a90046001600160a01b03166001600160a01b03166353c7f8e083604051602001615a9e9190617272565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401615ac9919061737c565b6020604051808303816000875af1158015615ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615b0c9190616c61565b600d54600c54604080517f9787d10700000000000000000000000000000000000000000000000000000000815290519394506001600160a01b03928316936398fc55d89390921691639787d107916004808201926020929091908290030181865afa158015615b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615ba391906173cd565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b158015615c0357600080fd5b505af1158015615c17573d6000803e3d6000fd5b50506009546040517f3e56993a0000000000000000000000000000000000000000000000000000000081526000600482015260248101859052604481018790526001600160a01b039091169250633e56993a9150606401600060405180830381600087803b158015615c8857600080fd5b505af1158015615c9c573d6000803e3d6000fd5b50505050505050505050505050505050505050565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff0000000000000000000000000000000000000000000000000000008416600482015282916001600160a01b03169063b4dc00b490602401602060405180830381865afa158015615d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615d5991906173cd565b90506001600160a01b038116613c12576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152602401611361565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691615e49919061740b565b6000604051808303816000865af19150503d8060008114615e86576040519150601f19603f3d011682016040523d82523d6000602084013e615e8b565b606091505b5091509150818015615eb5575080511580615eb5575080806020019051810190615eb59190616a73565b6146e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401611361565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003615f725760008411615f6757600080fd5b508290049050612c3e565b808411615f7e57600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6009546040517fbf30142b000000000000000000000000000000000000000000000000000000008152831515600482015260009183916001600160a01b039091169063bf30142b90602401602060405180830381865afa15801561604e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906160729190616c61565b61607c9190617081565b6009546040517f6d9a9a620000000000000000000000000000000000000000000000000000000081528515156004820152602481018390529192506001600160a01b031690636d9a9a6290604401614241565b6009546040517f59d236e600000000000000000000000000000000000000000000000000000000815282151560048201526000916001600160a01b0316906359d236e690602401602060405180830381865afa158015616133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906161579190616a73565b6009546040517fc45e91d600000000000000000000000000000000000000000000000000000000815284151560048201529192506000916001600160a01b039091169063c45e91d690602401602060405180830381865afa1580156161c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906161e49190616c61565b9050811580616392575081801561627c5750600c546040517f27507458000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0390911690632750745890602401602060405180830381865afa158015616258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061627c9190616a73565b80156163925750600c546040517f1c063a6c000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0390911690631c063a6c90602401602060405180830381865afa1580156162e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906163099190616c61565b6009546040517fbf30142b00000000000000000000000000000000000000000000000000000000815285151560048201526001600160a01b039091169063bf30142b90602401602060405180830381865afa15801561636c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906163909190616c61565b105b1561131a5761131a836146ea565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691616432919061740b565b6000604051808303816000865af19150503d806000811461646f576040519150601f19603f3d011682016040523d82523d6000602084013e616474565b606091505b509150915081801561649e57508051158061649e57508080602001905181019061649e9190616a73565b610e0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401611361565b6000805b600a831061652f5761651b600a84616f1b565b92508061652781617427565b915050616508565b600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015616582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906165a69190616f2f565b612c3e90826171af565b82805482825590600052602060002090601f016020900481019282156166455791602002820160005b8382111561661657835183826101000a81548160ff02191690831515021790555092602001926001016020816000010492830192600103026165d9565b80156166435782816101000a81549060ff0219169055600101602081600001049283019260010302616616565b505b50616651929150616655565b5090565b5b808211156166515760008155600101616656565b803563ffffffff8116811461667e57600080fd5b919050565b60006020828403121561669557600080fd5b612c3e8261666a565b6001600160a01b038116811461147e57600080fd5b600080604083850312156166c657600080fd5b82356166d18161669e565b915060208301356166e18161669e565b809150509250929050565b60006080830163ffffffff808451168552602065ffffffffffff818601511681870152816040860151166040870152606085015191506080606087015282825180855260a0880191508284019450600093505b808410156167615784511515825293820193600193909301929082019061673f565b509695505050505050565b60208152600082516040602084015261678860608401826166ec565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160408501526167c382826166ec565b95945050505050565b801515811461147e57600080fd5b6000602082840312156167ec57600080fd5b8135612c3e816167cc565b60006020828403121561680957600080fd5b5035919050565b60008060006060848603121561682557600080fd5b61682e8461666a565b925061683c6020850161666a565b915061684a6040850161666a565b90509250925092565b6000806040838503121561686657600080fd5b50508035926020909101359150565b60006020828403121561688757600080fd5b8135612c3e8161669e565b602080825282518282018190526000919060409081850190868401855b8281101561691857815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff00000000000000000000000000000000000000000000000000000000168685015292840192908501906001016168af565b5091979650505050505050565b60006101008201905063ffffffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401525060c083015161698d60c084018263ffffffff169052565b5060e08301516169a560e084018263ffffffff169052565b5092915050565b6020808252825182820181905260009190848201906040850190845b81811015616a065783517fffffffffff00000000000000000000000000000000000000000000000000000016835292840192918401916001016169c8565b50909695505050505050565b600080600060608486031215616a2757600080fd5b8335616a328161669e565b95602085013595506040909401359392505050565b60008060408385031215616a5a57600080fd5b8235616a658161669e565b946020939093013593505050565b600060208284031215616a8557600080fd5b8151612c3e816167cc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff83811690831681811015616adc57616adc616a90565b039392505050565b805165ffffffffffff8116811461667e57600080fd5b600060208284031215616b0c57600080fd5b612c3e82616ae4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80841680616b5d57616b5d616b15565b92169190910492915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215616baa57600080fd5b81517fffffffffff00000000000000000000000000000000000000000000000000000081168114612c3e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600065ffffffffffff80831681851681830481118215151615616c2e57616c2e616a90565b02949350505050565b600065ffffffffffff808316818516808303821115616c5857616c58616a90565b01949350505050565b600060208284031215616c7357600080fd5b5051919050565b60008219821115616c8d57616c8d616a90565b500190565b600060a08284031215616ca457600080fd5b60405160a0810181811067ffffffffffffffff82111715616cee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80604052508091508251616d01816167cc565b8152616d0f60208401616ae4565b60208201526040830151604082015260608301516060820152608083015160808201525092915050565b600060208284031215616d4b57600080fd5b6040516020810181811067ffffffffffffffff82111715616d95577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040529151825250919050565b600060608284031215616db457600080fd5b6040516060810181811067ffffffffffffffff82111715616dfe577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052905080616e0e8484616d39565b8152616e1d8460208501616d39565b6020820152604083015160408201525092915050565b60006102008284031215616e4657600080fd5b6040516080810181811067ffffffffffffffff82111715616e90577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052616e9d8484616c92565b8152616eac8460a08501616c92565b6020820152616ebf846101408501616da2565b6040820152616ed2846101a08501616da2565b60608201529392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615616f1657616f16616a90565b500290565b600082616f2a57616f2a616b15565b500490565b600060208284031215616f4157600080fd5b815160ff81168114612c3e57600080fd5b600181815b80851115616fab57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115616f9157616f91616a90565b80851615616f9e57918102915b93841c9390800290616f57565b509250929050565b600082616fc257506001613c12565b81616fcf57506000613c12565b8160018114616fe55760028114616fef5761700b565b6001915050613c12565b60ff84111561700057617000616a90565b50506001821b613c12565b5060208310610133831016604e8410600b841016171561702e575081810a613c12565b6170388383616f52565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561706a5761706a616a90565b029392505050565b6000612c3e60ff841683616fb3565b60008282101561709357617093616a90565b500390565b600063ffffffff8083168181036170b1576170b1616a90565b6001019392505050565b600063ffffffff8216806170d1576170d1616a90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b600063ffffffff808316818516808303821115616c5857616c58616a90565b600063ffffffff8084168061712f5761712f616b15565b92169190910692915050565b60008160000b8360000b8061715257617152616b15565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80831416156171a6576171a6616a90565b90059392505050565b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018312811516156171f2576171f2616a90565b81607f01831381161561720757617207616a90565b5090039392505050565b60008160000b8360000b6000821282607f0382138115161561723557617235616a90565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003821281161561726957617269616a90565b50019392505050565b81516001600160a01b031681526101808101602083015161729e60208401826001600160a01b03169052565b5060408301516172b960408401826001600160a01b03169052565b5060608301516172cd606084018215159052565b506080830151608083015260a083015160a083015260c083015160c083015260e083015161730360e084018263ffffffff169052565b506101008381015165ffffffffffff9081169184019190915261012080850151909116908301526101408084015163ffffffff16908301526101609283015160000b929091019190915290565b60005b8381101561736b578181015183820152602001617353565b838111156124005750506000910152565b602081526000825180602084015261739b816040850160208701617350565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156173df57600080fd5b8151612c3e8161669e565b600060ff821660ff84168160ff048111821515161561706a5761706a616a90565b6000825161741d818460208701617350565b9190910192915050565b60008160000b607f810361743d5761743d616a90565b6001019291505056fea2646970667358221220508effc4646a5b8fa6c8f451a19e87d1c5a98f86d4f0cf7a8548f2c7cd4dd7c064736f6c634300080f0033a26469706673582212201ba3340633d0f272a02bb1e8d97c0d20bb4358d6d8084994c51eab8b23689ace64736f6c634300080f0033",
    "sourceMap": "1822:23291:166:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;1822:23291:166;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063ba414fa61162000097578063de5f3102116200006e578063de5f310214620001b2578063f2b2afce14620001bc578063f8ccbf4714620001c6578063fa7626d414620001da57600080fd5b8063ba414fa61462000179578063c7d81eff1462000194578063ce597df314620001a857600080fd5b80633be2213211620000d85780633be2213214620001515780634b59caab146200015b578063570af26114620001655780639e0c5608146200016f57600080fd5b80630a9254e4146200010257806338906dbd146200010e5780633a7684631462000118575b600080fd5b6200010c620001e8565b005b6200010c620028c0565b62000134737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6200010c620030f0565b6200010c620033e1565b6200010c6200471d565b6200010c620053a9565b62000183620056f3565b604051901515815260200162000148565b60085462000134906001600160a01b031681565b6200010c6200585d565b6200010c62005e2b565b6200010c62006185565b600054620001839062010000900460ff1681565b600054620001839060ff1681565b6040517fe5d6bf02000000000000000000000000000000000000000000000000000000008152635fdd42806004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e5d6bf0290602401600060405180830381600087803b1580156200025257600080fd5b505af115801562000267573d6000803e3d6000fd5b50505050604051620002799062007043565b604051809103906000f08015801562000296573d6000803e3d6000fd5b50600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040517f780900dc0000000000000000000000000000000000000000000000000000000081526004808201526000919063780900dc906024016000604051808303816000875af115801562000327573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200036f919081019062007175565b90508060008151811062000387576200038762007266565b6020026020010151600960006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600181518110620003cb57620003cb62007266565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806002815181106200040f576200040f62007266565b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060038151811062000453576200045362007266565b6020908102919091010151600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b54604051911690600090620004a99062007051565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620004dd573d6000803e3d6000fd5b50600d80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316908117909155600b5460405192169162000529906200705f565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200055d573d6000803e3d6000fd5b50600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316908117909155600b54600d54604051918416938492911690620005b2906200706d565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f080158015620005f7573d6000803e3d6000fd5b50600f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316908117909155600e54600b54600d5460405193949283169391831692169062000652906200707b565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f08015801562000697573d6000803e3d6000fd5b50601080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200071d57600080fd5b505af115801562000732573d6000803e3d6000fd5b5050600e546010546040517f66b382ee0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152911692506366b382ee9150602401600060405180830381600087803b1580156200079957600080fd5b505af1158015620007ae573d6000803e3d6000fd5b50505050506009604051620007c39062007089565b6060808252600a908201527f476f65726c692044414f00000000000000000000000000000000000000000000608082015260a0602082018190526004908201527f4744414f0000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000853573d6000803e3d6000fd5b50601180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790556040516012906200089d9062007097565b60608082526007908201527f5265736572766500000000000000000000000000000000000000000000000000608082015260a0602082018190526003908201527f525356000000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f0801580156200092d573d6000803e3d6000fd5b50601280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091178155604051620009749062007097565b60608082526005908201527f4f74686572000000000000000000000000000000000000000000000000000000608082015260a0602082018190526003908201527f4f5448000000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000a04573d6000803e3d6000fd5b50601380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905560405162000a4b90620070a5565b604051809103906000f08015801562000a68573d6000803e3d6000fd5b50601480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216918217905560405161708090678ac7230489e800009062000abc90620070b3565b6001600160a01b03909316835265ffffffffffff90911660208301526040820152606001604051809103906000f08015801562000afd573d6000803e3d6000fd5b50601580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460115460125460405192841693918216929116906064906103e8906107d09062000b5f90620070c1565b6001600160a01b03968716815294861660208601529490921660408401526060830152608082015260a081019190915260c001604051809103906000f08015801562000baf573d6000803e3d6000fd5b50601680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460405191169062000bf890620070cf565b6001600160a01b039091168152602001604051809103906000f08015801562000c25573d6000803e3d6000fd5b50601780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460115460405191831692169062000c7490620070dd565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000ca8573d6000803e3d6000fd5b50601880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392831617905560145460405191169062000cf190620070eb565b6001600160a01b039091168152602001604051809103906000f08015801562000d1e573d6000803e3d6000fd5b50601980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283161790556015546040517f6cb56dbc00000000000000000000000000000000000000000000000000000000815268056bc75e2d631000006004820152911690636cb56dbc90602401600060405180830381600087803b15801562000db257600080fd5b505af115801562000dc7573d6000803e3d6000fd5b50506015546040517f2c19abb900000000000000000000000000000000000000000000000000000000815268056bc75e2d6310000060048201526001600160a01b039091169250632c19abb99150602401600060405180830381600087803b15801562000e3357600080fd5b505af115801562000e48573d6000803e3d6000fd5b50506015546040517f7a1395aa000000000000000000000000000000000000000000000000000000008152601260048201526001600160a01b039091169250637a1395aa9150602401600060405180830381600087803b15801562000eac57600080fd5b505af115801562000ec1573d6000803e3d6000fd5b50506015546040517f7e20be3b00000000000000000000000000000000000000000000000000000000815265ffffffffffff421660048201526001600160a01b039091169250637e20be3b9150602401600060405180830381600087803b15801562000f2c57600080fd5b505af115801562000f41573d6000803e3d6000fd5b50506014546040516001600160a01b03909116925062000f629150620070f9565b6001600160a01b039091168152602001604051809103906000f08015801562000f8f573d6000803e3d6000fd5b50601c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601454600e54601154604051928416939182169291169062000fe69062007107565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001023573d6000803e3d6000fd5b50601b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556014546010546040805180820182526011548616815260125486166020808301919091528251610100810184526107d081526206978091810191909152620186a081840152610e10606082018190526103e8608083015260a0820152600560c0820152600760e0820152915193861695929092169392620010dc9062007115565b620010ec95949392919062007295565b604051809103906000f08015801562001109573d6000803e3d6000fd5b50601a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200118f57600080fd5b505af1158015620011a4573d6000803e3d6000fd5b5050601054601a546040517fbbbdd95a0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600160248201529116925063bbbdd95a9150604401600060405180830381600087803b1580156200121257600080fd5b505af115801562001227573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200128557600080fd5b505af11580156200129a573d6000803e3d6000fd5b50506010546040517fbbbdd95a000000000000000000000000000000000000000000000000000000008152306004820152600160248201526001600160a01b03909116925063bbbdd95a9150604401600060405180830381600087803b1580156200130457600080fd5b505af115801562001319573d6000803e3d6000fd5b50506014546015546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f193506200136e9260009216906004016200732f565b600060405180830381600087803b1580156200138957600080fd5b505af11580156200139e573d6000803e3d6000fd5b50506014546016546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620013f39260009216906004016200732f565b600060405180830381600087803b1580156200140e57600080fd5b505af115801562001423573d6000803e3d6000fd5b50506014546017546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620014789260009216906004016200732f565b600060405180830381600087803b1580156200149357600080fd5b505af1158015620014a8573d6000803e3d6000fd5b50506014546018546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620014fd9260009216906004016200732f565b600060405180830381600087803b1580156200151857600080fd5b505af11580156200152d573d6000803e3d6000fd5b50506014546019546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620015829260009216906004016200732f565b600060405180830381600087803b1580156200159d57600080fd5b505af1158015620015b2573d6000803e3d6000fd5b5050601454601a546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620016079260029216906004016200732f565b600060405180830381600087803b1580156200162257600080fd5b505af115801562001637573d6000803e3d6000fd5b5050601454601b546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f193506200168c9260029216906004016200732f565b600060405180830381600087803b158015620016a757600080fd5b505af1158015620016bc573d6000803e3d6000fd5b5050601454601c546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f19350620017119260029216906004016200732f565b600060405180830381600087803b1580156200172c57600080fd5b505af115801562001741573d6000803e3d6000fd5b5050601c54600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f6f7065726174650000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b158015620017ce57600080fd5b505af1158015620017e3573d6000803e3d6000fd5b5050601c54601b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f7265706f7274657200000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b1580156200187057600080fd5b505af115801562001885573d6000803e3d6000fd5b5050601c54600c546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b1580156200191257600080fd5b505af115801562001927573d6000803e3d6000fd5b5050601c54600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f61646d696e00000000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b158015620019b457600080fd5b505af1158015620019c9573d6000803e3d6000fd5b5050601c54601a546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c697374000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562001a5657600080fd5b505af115801562001a6b573d6000803e3d6000fd5b5050601c54600c546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c697374000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562001af857600080fd5b505af115801562001b0d573d6000803e3d6000fd5b5050601c54600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f61646d696e00000000000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562001b9a57600080fd5b505af115801562001baf573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001c0d57600080fd5b505af115801562001c22573d6000803e3d6000fd5b5050601b54601a546040517fb3ab15fb0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529116925063b3ab15fb9150602401600060405180830381600087803b15801562001c8957600080fd5b505af115801562001c9e573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001cfc57600080fd5b505af115801562001d11573d6000803e3d6000fd5b50505050601a60009054906101000a90046001600160a01b03166001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001d6657600080fd5b505af115801562001d7b573d6000803e3d6000fd5b505060115460095466038d7ea4c68000935069d3c21bcecceda100000092506001600160a01b03918216916340c10f19911662001dba856014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001e1957600080fd5b505af115801562001e2e573d6000803e3d6000fd5b50506012546009546001600160a01b0391821693506340c10f1992501662001e58846014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001eb757600080fd5b505af115801562001ecc573d6000803e3d6000fd5b50506012546017546001600160a01b0391821693506340c10f1992501662001ef6846064620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001f5557600080fd5b505af115801562001f6a573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001fc857600080fd5b505af115801562001fdd573d6000803e3d6000fd5b5050601154601a546001600160a01b03918216935063095ea7b392501662002007856014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156200206b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020919190620073f2565b5060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620020ec57600080fd5b505af115801562002101573d6000803e3d6000fd5b5050601254601a546001600160a01b03918216935063095ea7b39250166200212b846014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156200218f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021b59190620073f2565b5060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200221057600080fd5b505af115801562002225573d6000803e3d6000fd5b5050601154600f546001600160a01b03918216935063095ea7b39250166200224f856014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620022b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022d99190620073f2565b5060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200233457600080fd5b505af115801562002349573d6000803e3d6000fd5b5050601254600f546001600160a01b03918216935063095ea7b392501662002373846014620073b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620023d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023fd9190620073f2565b5060125460115462002422916001600160a01b0390811691166000600160036200695e565b601d5560115460125462002449916001600160a01b0390811691166001600060036200695e565b601e556011546200246a906001600160a01b0316806001600060086200695e565b601f55601254620024aa906001600160a01b03168060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60086200695e565b602055601254601154620024d1916001600160a01b0390811691166000600160036200695e565b602155600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200252e57600080fd5b505af115801562002543573d6000803e3d6000fd5b5050601b54600f54601d546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620025b557600080fd5b505af1158015620025ca573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200262857600080fd5b505af11580156200263d573d6000803e3d6000fd5b5050601b54600f54601e546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620026af57600080fd5b505af1158015620026c4573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200272257600080fd5b505af115801562002737573d6000803e3d6000fd5b5050601b54600f54601f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620027a957600080fd5b505af1158015620027be573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200281c57600080fd5b505af115801562002831573d6000803e3d6000fd5b5050601b54600f546020546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810191909152911692506398fc55d89150604401600060405180830381600087803b158015620028a357600080fd5b505af1158015620028b8573d6000803e3d6000fd5b505050505050565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a60248201529116906340c10f1990604401600060405180830381600087803b1580156200292a57600080fd5b505af11580156200293f573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562002993573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029b991906200741d565b90506000602154604051602401620029d391815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c60e16700000000000000000000000000000000000000000000000000000000179052600f54905163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002aa557600080fd5b505af115801562002aba573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062002b1090849060040162007466565b600060405180830381600087803b15801562002b2b57600080fd5b505af115801562002b40573d6000803e3d6000fd5b5050601b546021546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b15801562002bb657600080fd5b505af115801562002bcb573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562002c1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c4591906200741d565b905062002c53818462006c98565b600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002cad57600080fd5b505af115801562002cc2573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b15801562002d3857600080fd5b505af115801562002d4d573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562002d9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002dc491906200741d565b905062002dde8162002dd885600a620074b9565b62006c98565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002e3857600080fd5b505af115801562002e4d573d6000803e3d6000fd5b5050601b54600f54601d546040517f1074bce50000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152602481019190915291169250631074bce59150604401600060405180830381600087803b15801562002ebf57600080fd5b505af115801562002ed4573d6000803e3d6000fd5b50505050601d5460405160240162002eee91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c60e16700000000000000000000000000000000000000000000000000000000179052600f54905163ca669fa760e01b81526001600160a01b039091166004820152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002fc057600080fd5b505af115801562002fd5573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506200302b90859060040162007466565b600060405180830381600087803b1580156200304657600080fd5b505af11580156200305b573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c91506064015b600060405180830381600087803b158015620030d257600080fd5b505af1158015620030e7573d6000803e3d6000fd5b50505050505050565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a60248201529116906340c10f1990604401600060405180830381600087803b1580156200315a57600080fd5b505af11580156200316f573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd000000000000000000000000000000000000000000000000000000008152600094508493506001600160a01b0390921691638aeb40fd91620031c79160040190815260200190565b6040805180830381865afa158015620031e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200320a9190620074d4565b915091506200321b82600062006c98565b6200322881600062006c98565b600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200328257600080fd5b505af115801562003297573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200330d57600080fd5b505af115801562003322573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd000000000000000000000000000000000000000000000000000000008152600094508493506001600160a01b0390921691638aeb40fd916200337a9160040190815260200190565b6040805180830381865afa15801562003397573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033bd9190620074d4565b91509150620033ce82600a62006c98565b620033db81600a62006c98565b50505050565b60135460115460009162003408916001600160a01b0391821691166002600160056200695e565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200346557600080fd5b505af11580156200347a573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101869052911692506398fc55d89150604401600060405180830381600087803b158015620034e857600080fd5b505af1158015620034fd573d6000803e3d6000fd5b505060408051808201918290526012546017546370a0823160e01b9093526001600160a01b039283166044830152600094509092508291166370a0823160648301602060405180830381865afa1580156200355c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200358291906200741d565b81526013546017546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa158015620035d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035fd91906200741d565b9052601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152601e602482015292935016906340c10f1990604401600060405180830381600087803b1580156200366b57600080fd5b505af115801562003680573d6000803e3d6000fd5b5050601354601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b158015620036ee57600080fd5b505af115801562003703573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200376157600080fd5b505af115801562003776573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152601e6024820152600160448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b158015620037ec57600080fd5b505af115801562003801573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200385f57600080fd5b505af115801562003874573d6000803e3d6000fd5b5050601b546040517f4b9de77c00000000000000000000000000000000000000000000000000000000815260048101869052600a602482015260c860448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b158015620038e657600080fd5b505af1158015620038fb573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b039182166004820152620039809450911691506370a08231906024015b602060405180830381865afa15801562003952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200397891906200741d565b601e62006c98565b601354601b546040516370a0823160e01b81526001600160a01b03918216600482015262003a039291909116906370a08231906024015b602060405180830381865afa158015620039d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039fb91906200741d565b600a62006c98565b60408051600180825281830190925260009160208083019080368337505060125482519293506001600160a01b03169183915060009062003a485762003a4862007266565b6001600160a01b03928316602091820292909201810191909152604080517f63616c6c6261636b5f61646d696e0000000000000000000000000000000000006024808301919091528251808303820181526044909201835292810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f4100000000000000000000000000000000000000000000000000000000179052600954825163ca669fa760e01b81529416600485015290519092737109709ecfa91a80626ff3989d68f67f5b1dd12d9263ca669fa792828201926000929082900301818387803b15801562003b3b57600080fd5b505af115801562003b50573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062003ba690849060040162007466565b600060405180830381600087803b15801562003bc157600080fd5b505af115801562003bd6573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c843915062003c25908590600401620074f9565b600060405180830381600087803b15801562003c4057600080fd5b505af115801562003c55573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063ca669fa792506024019050600060405180830381600087803b15801562003cb557600080fd5b505af115801562003cca573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c843915062003d19908490600401620074f9565b600060405180830381600087803b15801562003d3457600080fd5b505af115801562003d49573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b03918216600482015262003dce9450911691506370a08231906024015b602060405180830381865afa15801562003da0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dc691906200741d565b600062006c98565b6012546017546040516370a0823160e01b81526001600160a01b03918216600482015262003e589291909116906370a08231906024015b602060405180830381865afa15801562003e23573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e4991906200741d565b835162002dd890601e620074b9565b60135481516001600160a01b0390911690829060009062003e7d5762003e7d62007266565b6001600160a01b039283166020918202929092010152600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562003ee457600080fd5b505af115801562003ef9573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c843915062003f48908490600401620074f9565b600060405180830381600087803b15801562003f6357600080fd5b505af115801562003f78573d6000803e3d6000fd5b5050601354601b546040516370a0823160e01b81526001600160a01b03918216600482015262003fb69450911691506370a082319060240162003d82565b6013546017546040516370a0823160e01b81526001600160a01b039182166004820152620040439291909116906370a08231906024015b602060405180830381865afa1580156200400b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200403191906200741d565b602084015162002dd890600a620074b9565b60408051808201918290526012546017546370a0823160e01b9093526001600160a01b03928316604483015290918291166370a0823160648301602060405180830381865afa1580156200409b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040c191906200741d565b81526013546017546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562004116573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200413c91906200741d565b9052601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152601e602482015292945016906340c10f1990604401600060405180830381600087803b158015620041aa57600080fd5b505af1158015620041bf573d6000803e3d6000fd5b5050601354601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b1580156200422d57600080fd5b505af115801562004242573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620042a057600080fd5b505af1158015620042b5573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152601e6024820152600160448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200432b57600080fd5b505af115801562004340573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200439e57600080fd5b505af1158015620043b3573d6000803e3d6000fd5b5050601b546040517f4b9de77c00000000000000000000000000000000000000000000000000000000815260048101879052600a602482015260c860448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200442557600080fd5b505af11580156200443a573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b039182166004820152620044789450911691506370a082319060240162003934565b601354601b546040516370a0823160e01b81526001600160a01b039182166004820152620044b49291909116906370a0823190602401620039b7565b6040805160028082526060820183529091602083019080368337505060125482519293506001600160a01b031691839150600090620044f757620044f762007266565b6001600160a01b0392831660209182029290920101526013548251911690829060019081106200452b576200452b62007266565b6001600160a01b039283166020918202929092010152600b5460405163ca669fa760e01b815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200459257600080fd5b505af1158015620045a7573d6000803e3d6000fd5b5050601b546040517f09c2c8430000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506309c2c8439150620045f6908490600401620074f9565b600060405180830381600087803b1580156200461157600080fd5b505af115801562004626573d6000803e3d6000fd5b5050601254601b546040516370a0823160e01b81526001600160a01b039182166004820152620046649450911691506370a082319060240162003d82565b6012546017546040516370a0823160e01b81526001600160a01b039182166004820152620046a09291909116906370a082319060240162003e05565b601354601b546040516370a0823160e01b81526001600160a01b039182166004820152620046dc9291909116906370a082319060240162003d82565b6013546017546040516370a0823160e01b81526001600160a01b039182166004820152620047189291909116906370a082319060240162003fed565b505050565b601154600f546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa1580156200476f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200479591906200741d565b601254601b546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015620047e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200480e91906200741d565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015261012c602482015292935016906340c10f1990604401600060405180830381600087803b1580156200487b57600080fd5b505af115801562004890573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620048ee57600080fd5b505af115801562004903573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481019190915261012c6024820152600a60448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200497a57600080fd5b505af11580156200498f573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015262004a189450911691506370a0823190602401602060405180830381865afa158015620049e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a0b91906200741d565b62002dd884600a620074b9565b601254601b546040516370a0823160e01b81526001600160a01b03918216600482015262004aa09291909116906370a0823190602401602060405180830381865afa15801562004a6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a9291906200741d565b62002dd88361012c620074b9565b601254600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562004aed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b1391906200741d565b601154601b546040516370a0823160e01b81526001600160a01b03918216600482015292945016906370a0823190602401602060405180830381865afa15801562004b62573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b8891906200741d565b601154601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600a602482015292935016906340c10f1990604401600060405180830381600087803b15801562004bf457600080fd5b505af115801562004c09573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562004c6757600080fd5b505af115801562004c7c573d6000803e3d6000fd5b5050601b54601e546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a602482015261012c60448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b15801562004cf357600080fd5b505af115801562004d08573d6000803e3d6000fd5b5050601254600f546040516370a0823160e01b81526001600160a01b03918216600482015262004d929450911691506370a0823190602401602060405180830381865afa15801562004d5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d8491906200741d565b62002dd88461012c620074b9565b601154601b546040516370a0823160e01b81526001600160a01b03918216600482015262004e149291909116906370a08231906024015b602060405180830381865afa15801562004de7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e0d91906200741d565b8262006c98565b601154600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562004e61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e8791906200741d565b601154601b546040516370a0823160e01b81526001600160a01b03918216600482015292945016906370a0823190602401602060405180830381865afa15801562004ed6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004efc91906200741d565b601154601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526064602482015292935016906340c10f1990604401600060405180830381600087803b15801562004f6857600080fd5b505af115801562004f7d573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562004fdb57600080fd5b505af115801562004ff0573d6000803e3d6000fd5b5050601b54601f546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152606460248201819052609660448301526001600160a01b039092169350634b9de77c925001600060405180830381600087803b1580156200506657600080fd5b505af11580156200507b573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b039182166004820152620051049450911691506370a0823190602401602060405180830381865afa158015620050d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620050f791906200741d565b62002dd8846096620074b9565b601154601b546040516370a0823160e01b81526001600160a01b039182166004820152620051409291909116906370a082319060240162004dc9565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152606460248201529116906340c10f1990604401600060405180830381600087803b158015620051aa57600080fd5b505af1158015620051bf573d6000803e3d6000fd5b505050506000602054604051602401620051db91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c60e16700000000000000000000000000000000000000000000000000000000179052600f54905163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620052ad57600080fd5b505af1158015620052c2573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506200531890849060040162007466565b600060405180830381600087803b1580156200533357600080fd5b505af115801562005348573d6000803e3d6000fd5b5050601b546020546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152606460248201819052609660448301526001600160a01b039092169350634b9de77c925001620030b7565b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc7a4111e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620054519185910162007466565b600060405180830381600087803b1580156200546c57600080fd5b505af115801562005481573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620054df57600080fd5b505af1158015620054f4573d6000803e3d6000fd5b5050601b546040517fb3ab15fb000000000000000000000000000000000000000000000000000000008152600060048201526001600160a01b03909116925063b3ab15fb9150602401600060405180830381600087803b1580156200555857600080fd5b505af11580156200556d573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620055cb57600080fd5b505af1158015620055e0573d6000803e3d6000fd5b5050601b546009546040517fb3ab15fb0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529116925063b3ab15fb9150602401600060405180830381600087803b1580156200564757600080fd5b505af11580156200565c573d6000803e3d6000fd5b50505050620056f0601b60009054906101000a90046001600160a01b03166001600160a01b031663570ca7356040518163ffffffff1660e01b8152600401602060405180830381865afa158015620056b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620056de919062007548565b6009546001600160a01b031662006dae565b50565b60008054610100900460ff1615620057145750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620058585760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091620057bc917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162007568565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620057f691620075b2565b6000604051808303816000865af19150503d806000811462005835576040519150601f19603f3d011682016040523d82523d6000602084013e6200583a565b606091505b5091505080806020019051810190620058549190620073f2565b9150505b919050565b60125460115460009162005883916001600160a01b03918216911683600160036200695e565b601254601154919250600091620058ac916001600160a01b03908116911683600160036200695e565b6040517f63616c6c6261636b5f77686974656c697374000000000000000000000000000060248201529091506000907f7de30f410000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009490941693909317909252600954915163ca669fa760e01b81526001600160a01b0390921660048301529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620059d957600080fd5b505af1158015620059ee573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062005a4490849060040162007466565b600060405180830381600087803b15801562005a5f57600080fd5b505af115801562005a74573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101889052911692506398fc55d89150604401600060405180830381600087803b15801562005ae257600080fd5b505af115801562005af7573d6000803e3d6000fd5b5050600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562005b5557600080fd5b505af115801562005b6a573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101889052911692506398fc55d89150604401600060405180830381600087803b15801562005bd857600080fd5b505af115801562005bed573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018890529116925063853dc0da9150604401602060405180830381865afa15801562005c5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c849190620073f2565b62005c935762005c93620075d0565b601a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005ced57600080fd5b505af115801562005d02573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101879052911692506398fc55d89150604401600060405180830381600087803b15801562005d7057600080fd5b505af115801562005d85573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018790529116925063853dc0da9150604401602060405180830381865afa15801562005df6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e1c9190620073f2565b620047185762004718620075d0565b60125460115460009162005e51916001600160a01b03918216911683600160036200695e565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005eae57600080fd5b505af115801562005ec3573d6000803e3d6000fd5b5050601b54600f546040517f98fc55d80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101869052911692506398fc55d89150604401600060405180830381600087803b15801562005f3157600080fd5b505af115801562005f46573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018690529116925063853dc0da9150604401602060405180830381865afa15801562005fb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005fdd9190620073f2565b62005fec5762005fec620075d0565b600c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200604657600080fd5b505af11580156200605b573d6000803e3d6000fd5b5050601b54600f546040517f1074bce50000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810186905291169250631074bce59150604401600060405180830381600087803b158015620060c957600080fd5b505af1158015620060de573d6000803e3d6000fd5b5050601b54600f546040517f853dc0da0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018690529116925063853dc0da9150604401602060405180830381865afa1580156200614f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620061759190620073f2565b15620056f057620056f0620075d0565b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8136384900000000000000000000000000000000000000000000000000000000179052600f54925163ca669fa760e01b81529192737109709ecfa91a80626ff3989d68f67f5b1dd12d9263ca669fa7926200622d926001600160a01b031691016001600160a01b0391909116815260200190565b600060405180830381600087803b1580156200624857600080fd5b505af11580156200625d573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb39150620062b390849060040162007466565b600060405180830381600087803b158015620062ce57600080fd5b505af1158015620062e3573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200635957600080fd5b505af11580156200636e573d6000803e3d6000fd5b5050601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260056024820152911692506340c10f199150604401600060405180830381600087803b158015620063dc57600080fd5b505af1158015620063f1573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200644f57600080fd5b505af115801562006464573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb39150620064ba90849060040162007466565b600060405180830381600087803b158015620064d557600080fd5b505af1158015620064ea573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200656057600080fd5b505af115801562006575573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620065d357600080fd5b505af1158015620065e8573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481019190915260056024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200665e57600080fd5b505af115801562006673573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd000000000000000000000000000000000000000000000000000000008152600094508493506001600160a01b0390921691638aeb40fd91620066cb9160040190815260200190565b6040805180830381865afa158015620066e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200670e9190620074d4565b915091506200671f82600562006c98565b6200672c81600562006c98565b601254601b546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152601460248201529116906340c10f1990604401600060405180830381600087803b1580156200679657600080fd5b505af1158015620067ab573d6000803e3d6000fd5b5050600f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200680957600080fd5b505af11580156200681e573d6000803e3d6000fd5b5050601b54601d546040517f4b9de77c0000000000000000000000000000000000000000000000000000000081526004810191909152600a6024820181905260448201526001600160a01b039091169250634b9de77c9150606401600060405180830381600087803b1580156200689457600080fd5b505af1158015620068a9573d6000803e3d6000fd5b5050601b54601d546040517f8aeb40fd0000000000000000000000000000000000000000000000000000000081526001600160a01b039092169350638aeb40fd9250620068fc9160040190815260200190565b6040805180830381865afa15801562006919573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200693f9190620074d4565b90925090506200695182600f62006c98565b6200471881600f62006c98565b600080856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620069a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620069c69190620075ff565b90506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562006a09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006a2f9190620075ff565b9050600062006a3f868462007624565b62006a4c90600a620077c7565b62006a5b90620186a0620073b2565b90506000600262006a6d898962007624565b62006a79919062007807565b62006a85848662007624565b62006a91919062007624565b905060008888838762006aa688602462007881565b62006ab29190620078a9565b62006abe9190620078cf565b62006aca9190620078cf565b62006ad6919062007624565b62006ae390600a620077c7565b62006aef9088620073b2565b905060008989848862006b0489602462007881565b62006b109190620078a9565b62006b1c9190620078cf565b62006b289190620078cf565b62006b34919062007624565b62006b4190600a620077c7565b62006b4e60028a62007936565b62006b5a9190620073b2565b60408051610180810182526001600160a01b03808f1682528f81166020830152601b5416918101919091526000606082018190526080820187905260a0820185905260c0820183905261c35060e08301526101008201819052919250610120810162006bca4262093a80620074b9565b65ffffffffffff16815262015180602080830191909152600087900b60409283015260105491519293506001600160a01b03909116916353c7f8e09162006c14918591016200794d565b6040516020818303038152906040526040518263ffffffff1660e01b815260040162006c41919062007466565b6020604051808303816000875af115801562006c61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c8791906200741d565b9d9c50505050505050505050505050565b80821462006daa577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162006d269060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162006d5f919062007a2f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162006d98919062007a7b565b60405180910390a162006daa62006ec0565b5050565b806001600160a01b0316826001600160a01b03161462006daa577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162006e4e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162006e87919062007ab9565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162006d98919062007b0e565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620070155760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262006f92929160200162007568565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262006fcc91620075b2565b6000604051808303816000865af19150503d80600081146200700b576040519150601f19603f3d011682016040523d82523d6000602084013e62007010565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b61040a8062007b4d83390190565b610f7a8062007f5783390190565b61216a8062008ed183390190565b614d95806200b03b83390190565b6147e3806200fdd083390190565b61122280620145b383390190565b61122280620157d583390190565b611edc80620169f783390190565b61093380620188d383390190565b611a73806201920683390190565b612111806201ac7983390190565b61116c806201cd8a83390190565b610b11806201def683390190565b610caa806201ea0783390190565b612a35806201f6b183390190565b61811480620220e683390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6001600160a01b0381168114620056f057600080fd5b8051620058588162007152565b600060208083850312156200718957600080fd5b825167ffffffffffffffff80821115620071a257600080fd5b818501915085601f830112620071b757600080fd5b815181811115620071cc57620071cc62007123565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171562007212576200721262007123565b6040529182528482019250838101850191888311156200723157600080fd5b938501935b828510156200725a576200724a8562007168565b8452938501939285019262007236565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006101a0820190506001600160a01b03808816835260208188168185015281871660408501526060840191508560005b6002811015620072f05781516001600160a01b0316845260208401935090820190600101620072c6565b505060a0840191508460005b60088110156200732157815163ffffffff1684529282019290820190600101620072fc565b505050509695505050505050565b60408101600684106200736b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9281526001600160a01b039190911660209091015290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620073ed57620073ed62007383565b500290565b6000602082840312156200740557600080fd5b815180151581146200741657600080fd5b9392505050565b6000602082840312156200743057600080fd5b5051919050565b60005b83811015620074545781810151838201526020016200743a565b83811115620033db5750506000910152565b60208152600082518060208401526200748781604085016020870162007437565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115620074cf57620074cf62007383565b500190565b60008060408385031215620074e857600080fd5b505080516020909101519092909150565b6020808252825182820181905260009190848201906040850190845b818110156200753c5783516001600160a01b03168352928401929184019160010162007515565b50909695505050505050565b6000602082840312156200755b57600080fd5b8151620074168162007152565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251620075a481600485016020870162007437565b919091016004019392505050565b60008251620075c681846020870162007437565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000602082840312156200761257600080fd5b815160ff811681146200741657600080fd5b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018312811516156200766a576200766a62007383565b81607f01831381161562007682576200768262007383565b5090039392505050565b600181815b80851115620076eb57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115620076cf57620076cf62007383565b80851615620076dd57918102915b93841c939080029062007691565b509250929050565b6000826200770457506001620077c1565b816200771357506000620077c1565b81600181146200772c5760028114620077375762007757565b6001915050620077c1565b60ff8411156200774b576200774b62007383565b50506001821b620077c1565b5060208310610133831016604e8410600b84101617156200777c575081810a620077c1565b6200778883836200768c565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115620077bd57620077bd62007383565b0290505b92915050565b60006200741660ff841683620076f3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160000b8360000b80620078215762007821620077d8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808314161562007878576200787862007383565b90059392505050565b600060ff821660ff84168060ff03821115620078a157620078a162007383565b019392505050565b600060ff821660ff841680821015620078c657620078c662007383565b90039392505050565b60008160000b8360000b6000821282607f03821381151615620078f657620078f662007383565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800382128116156200792d576200792d62007383565b50019392505050565b600082620079485762007948620077d8565b500490565b81516001600160a01b03168152610180810160208301516200797a60208401826001600160a01b03169052565b5060408301516200799660408401826001600160a01b03169052565b506060830151620079ab606084018215159052565b506080830151608083015260a083015160a083015260c083015160c083015260e0830151620079e260e084018263ffffffff169052565b506101008381015165ffffffffffff9081169184019190915261012080850151909116908301526101408084015163ffffffff16908301526101609283015160000b929091019190915290565b60408152600062007a6d60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b60408152600062007a6d60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b60408152600062007af760408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b90506001600160a01b038316602083015292915050565b60408152600062007af760408301600a81527f202020202052696768740000000000000000000000000000000000000000000060208201526040019056fe737109709ecfa91a80626ff3989d68f67f5b1dd12d60805264757365727360d81b60c052600560a05260c56040527f39b41f4ff9d03853a3e5e26ffad8712de4330b640064cfa05d0a29978dea11c660005534801561005d57600080fd5b50608051610391610079600039600061017b01526103916000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c8fe5261461003b578063780900dc1461008a575b600080fd5b6000805460408051602080820184905282518083038201815282840193849052805191012090935573ffffffffffffffffffffffffffffffffffffffff90911690526060015b60405180910390f35b61009d61009836600461022b565b6100aa565b6040516100819190610244565b606060008267ffffffffffffffff8111156100c7576100c761029e565b6040519080825280602002602001820160405280156100f0578160200160208202803683370190505b50905060005b838110156102245760008054604080516020808201849052825180830382018152918301909252805191012082556040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b1580156101c157600080fd5b505af11580156101d5573d6000803e3d6000fd5b50505050808383815181106101ec576101ec6102cd565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152508061021c816102fc565b9150506100f6565b5092915050565b60006020828403121561023d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561029257835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610260565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220deda93e03e4b234ba90d8fbed2cf2ce390afbc8778d16cf98dd284e98ba0270264736f6c634300080f0033608060405234801561001057600080fd5b50604051610f7a380380610f7a83398101604081905261002f916100e1565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505061011b565b6001600160a01b03811681146100de57600080fd5b50565b600080604083850312156100f457600080fd5b82516100ff816100c9565b6020840151909250610110816100c9565b809150509250929050565b610e508061012a6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80637d40583d1161008c578063b700961311610066578063b700961314610285578063bf7e214f14610298578063c6b0263e146102b8578063ea7ca276146102cb57600080fd5b80637d40583d146101bb5780638da5cb5b146101ce578063b4bad06a1461021357600080fd5b806367aff484116100bd57806367aff4841461016a5780637917b7941461017d5780637a9e5e4b146101a857600080fd5b806306a36aee146100e457806313af4035146101175780632f47571f1461012c575b600080fd5b6101046100f2366004610bf0565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b61012a610125366004610bf0565b61030f565b005b61015a61013a366004610c49565b600360209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161010e565b61012a610178366004610c9d565b610418565b61010461018b366004610c49565b600460209081526000928352604080842090915290825290205481565b61012a6101b6366004610bf0565b610576565b61012a6101c9366004610ce6565b6106d3565b6000546101ee9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61015a610221366004610d3e565b73ffffffffffffffffffffffffffffffffffffffff9190911660009081526004602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000090941683529290522054600160ff929092161c16151590565b61015a610293366004610d83565b6108ac565b6001546101ee9073ffffffffffffffffffffffffffffffffffffffff1681565b61012a6102c6366004610da3565b610975565b61015a6102d9366004610dd1565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260026020526040902054600160ff9092161c16151590565b61033d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b6103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b610446336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b6104ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161039f565b80156104e85773ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090208054600160ff85161b17905561051b565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf283604051610569911515815260200190565b60405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061065957506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190610dfd565b61066257600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b610701336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161039f565b80156107d05773ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290208054600160ff87161b179055610830565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290208054600160ff87161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff168560ff167fa52ea92e6e955aa8ac66420b86350f7139959adfcc7e6a14eee1bd116d09860e8460405161089e911515815260200190565b60405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008516845290915281205460ff168061096d575073ffffffffffffffffffffffffffffffffffffffff80841660009081526004602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452825280832054938816835260029091529020541615155b949350505050565b6109a3336000357fffffffff0000000000000000000000000000000000000000000000000000000016610abb565b610a09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161039f565b73ffffffffffffffffffffffffffffffffffffffff831660008181526003602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f950a343f5d10445e82a71036d3f4fb3016180a25805141932543b83e2078a93e9101610569565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590610b9f57506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190610dfd565b8061096d575060005473ffffffffffffffffffffffffffffffffffffffff858116911614949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610bed57600080fd5b50565b600060208284031215610c0257600080fd5b8135610c0d81610bcb565b9392505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610c4457600080fd5b919050565b60008060408385031215610c5c57600080fd5b8235610c6781610bcb565b9150610c7560208401610c14565b90509250929050565b803560ff81168114610c4457600080fd5b8015158114610bed57600080fd5b600080600060608486031215610cb257600080fd5b8335610cbd81610bcb565b9250610ccb60208501610c7e565b91506040840135610cdb81610c8f565b809150509250925092565b60008060008060808587031215610cfc57600080fd5b610d0585610c7e565b93506020850135610d1581610bcb565b9250610d2360408601610c14565b91506060850135610d3381610c8f565b939692955090935050565b600080600060608486031215610d5357600080fd5b610d5c84610c7e565b92506020840135610d6c81610bcb565b9150610d7a60408501610c14565b90509250925092565b600080600060608486031215610d9857600080fd5b8335610d5c81610bcb565b600080600060608486031215610db857600080fd5b8335610dc381610bcb565b9250610ccb60208501610c14565b60008060408385031215610de457600080fd5b8235610def81610bcb565b9150610c7560208401610c7e565b600060208284031215610e0f57600080fd5b8151610c0d81610c8f56fea2646970667358221220dfd749908e831712a926fd9bb183575f79dcb2c4a9d00d07bf08be2330e39c8164736f6c634300080f003360806040523480156200001157600080fd5b506040516200216a3803806200216a8339810160408190526200003491620000e8565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505062000127565b6001600160a01b0381168114620000e557600080fd5b50565b60008060408385031215620000fc57600080fd5b82516200010981620000cf565b60208401519092506200011c81620000cf565b809150509250929050565b61203380620001376000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638da5cb5b116100ee578063bf48582b11610097578063c3b7b13611610071578063c3b7b136146103c1578063c7bf8ca0146103d4578063ea5e0c60146103e7578063f9e709df1461041d57600080fd5b8063bf48582b1461037b578063bf7e214f1461038e578063c0680e20146103ae57600080fd5b8063b4359143116100c8578063b435914314610342578063bb6e75de14610355578063bbfe3a321461036857600080fd5b80638da5cb5b146102fc578063946824cd1461031c5780639a0fae9b1461032f57600080fd5b80634938a3fe1161015057806378b5a87a1161012a57806378b5a87a146102c35780637a9e5e4b146102d65780638b098db3146102e957600080fd5b80634938a3fe14610235578063520479421461025557806366b382ee146102b057600080fd5b8063247608071161018157806324760807146101f657806327507458146101ff5780633adec5a71461022257600080fd5b806306b40ea3146101a857806313af4035146101ce5780631c063a6c146101e3575b600080fd5b6101bb6101b6366004611c24565b610430565b6040519081526020015b60405180910390f35b6101e16101dc366004611c50565b610461565b005b6101bb6101f1366004611c6d565b61056a565b6101bb60025481565b61021261020d366004611c6d565b610613565b60405190151581526020016101c5565b6101bb610230366004611c6d565b6106b5565b610248610243366004611c86565b61071a565b6040516101c59190611cbb565b61028b610263366004611c6d565b60009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c5565b6101e16102be366004611c50565b610a96565b61028b6102d1366004611c6d565b610c4c565b6101e16102e4366004611c50565b610cea565b6102126102f7366004611c6d565b610e47565b60005461028b9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb61032a366004611c6d565b610eac565b6101bb61033d366004611cff565b610f11565b6101bb610350366004611d50565b6111ba565b610248610363366004611d89565b611317565b610248610376366004611d50565b6113f6565b6101bb610389366004611dab565b61177c565b60015461028b9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb6103bc366004611c24565b611835565b61028b6103cf366004611c6d565b611851565b6101bb6103e2366004611de4565b611888565b61028b6103f5366004611c6d565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61024861042b366004611e17565b611939565b6006602052816000526040600020818154811061044c57600080fd5b90600052602060002001600091509150505481565b61048f336000357fffffffff0000000000000000000000000000000000000000000000000000000016611aee565b6104fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000818152600560205260408082205490517f1c063a6c0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116908190631c063a6c906024015b602060405180830381865afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611e45565b9392505050565b6000818152600560205260408082205490517f275074580000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169081906327507458906024015b602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611e5e565b6000818152600560205260408082205490517f3adec5a70000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116908190633adec5a7906024016105cb565b6060600080845b848110156108a057600081815260056020526040908190205490517f275074580000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911692508290632750745890602401602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190611e5e565b801561087f57506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff8089169190841690636352211e90602401602060405180830381865afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190611e7b565b73ffffffffffffffffffffffffffffffffffffffff16145b156108905761088d83611ec7565b92505b61089981611ec7565b9050610721565b5060008267ffffffffffffffff8111156108bc576108bc611eff565b6040519080825280602002602001820160405280156108e5578160200160208202803683370190505b50600093509050855b85811015610a8b57600081815260056020526040908190205490517f275074580000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911693508390632750745890602401602060405180830381865afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190611e5e565b8015610a4c57506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff808a169190851690636352211e90602401602060405180830381865afa158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a349190611e7b565b73ffffffffffffffffffffffffffffffffffffffff16145b15610a7b5780828581518110610a6457610a64611f2e565b6020908102919091010152610a7884611ec7565b93505b610a8481611ec7565b90506108ee565b509695505050505050565b610ac4336000357fffffffff0000000000000000000000000000000000000000000000000000000016611aee565b610b2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104f1565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460ff1615610ba2576040517fcba9dee200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016104f1565b6003805460018181019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff9093167fffffffffffffffffffffffff00000000000000000000000000000000000000009093168317905560009182526004602052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b60008181526005602090815260408083205481517f9787d107000000000000000000000000000000000000000000000000000000008152915173ffffffffffffffffffffffffffffffffffffffff909116928392639787d10792600480830193928290030181865afa158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611e7b565b60005473ffffffffffffffffffffffffffffffffffffffff16331480610dcd57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd9190611e5e565b610dd657600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6000818152600560205260408082205490517f8b098db30000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116908190638b098db390602401610674565b6000818152600560205260408082205490517f946824cd0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690819063946824cd906024016105cb565b600080610f1e87876113f6565b805190915060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818080805b868110156111a85760056000898381518110610f6957610f69611f2e565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff1663acc5570c898381518110610fd057610fd0611f2e565b60200260200101516040518263ffffffff1660e01b8152600401610ff691815260200190565b60c060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190611f5d565b9098509650600093505050635dba240065ffffffffffff871611159050611066578465ffffffffffff16611078565b61107865ffffffffffff861642611fe5565b90508a811161119757838c11611197578273ffffffffffffffffffffffffffffffffffffffff1663bf48582b8e8b85815181106110b7576110b7611f2e565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252602482015260006044820152606401602060405180830381865afa92505050801561115c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261115991810190611e45565b60015b1561119757878111801561117057508c8110155b156111955780975089838151811061118a5761118a611f2e565b602002602001015196505b505b506111a181611ec7565b9050610f4b565b50929c9b505050505050505050505050565b3360009081526004602052604081205460ff16611203576040517f8feeaaa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316158061123a575073ffffffffffffffffffffffffffffffffffffffff8216155b15611271576040517f018c362a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060028054600081815260056020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905573ffffffffffffffffffffffffffffffffffffffff8781168452600683528184208054600181810183559186528486200186905590871684526007835290832080549182018155835290822001829055825491929161130d90611ec7565b9091555092915050565b60606000835b8381101561134f5761132e81610613565b1561133f5761133c82611ec7565b91505b61134881611ec7565b905061131d565b5060008167ffffffffffffffff81111561136b5761136b611eff565b604051908082528060200260200182016040528015611394578160200160208202803683370190505b50600092509050845b848110156113ed576113ae81610613565b156113dd57808284815181106113c6576113c6611f2e565b60209081029190910101526113da83611ec7565b92505b6113e681611ec7565b905061139d565b50949350505050565b60606000611405846001611939565b90506000806000808451905060005b81811015611585576005600087838151811061143257611432611f2e565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508273ffffffffffffffffffffffffffffffffffffffff1663acc5570c87838151811061149957611499611f2e565b60200260200101516040518263ffffffff1660e01b81526004016114bf91815260200190565b60c060405180830381865afa1580156114dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115009190611f5d565b5050895190975061152d9350899250849150811061152057611520611f2e565b6020026020010151610613565b801561156457508773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156115755761157285611ec7565b94505b61157e81611ec7565b9050611414565b5060008467ffffffffffffffff8111156115a1576115a1611eff565b6040519080825280602002602001820160405280156115ca578160200160208202803683370190505b5090506000945060005b8281101561176f57600560008883815181106115f2576115f2611f2e565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff1663acc5570c88838151811061165957611659611f2e565b60200260200101516040518263ffffffff1660e01b815260040161167f91815260200190565b60c060405180830381865afa15801561169c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c09190611f5d565b50508a519098506116e093508a9250849150811061152057611520611f2e565b801561171757508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b1561175f5786818151811061172e5761172e611f2e565b602002602001015182878151811061174857611748611f2e565b602090810291909101015261175c86611ec7565b95505b61176881611ec7565b90506115d4565b5098975050505050505050565b6000828152600560205260408082205490517fbf48582b000000000000000000000000000000000000000000000000000000008152600481018690526024810185905273ffffffffffffffffffffffffffffffffffffffff848116604483015290911690819063bf48582b90606401602060405180830381865afa158015611808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182c9190611e45565b95945050505050565b6007602052816000526040600020818154811061044c57600080fd5b6003818154811061186157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000828152600560205260408082205490517fc7bf8ca00000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff848116602483015290911690819063c7bf8ca090604401602060405180830381865afa15801561190d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119319190611e45565b949350505050565b6060808261196b5773ffffffffffffffffffffffffffffffffffffffff84166000908152600760205260409020611991565b73ffffffffffffffffffffffffffffffffffffffff841660009081526006602052604090205b8054806020026020016040519081016040528092919081815260200182805480156119db57602002820191906000526020600020905b8154815260200190600101908083116119c7575b505050505090506000808251905060005b81811015611a2a57611a0984828151811061152057611520611f2e565b15611a1a57611a1783611ec7565b92505b611a2381611ec7565b90506119ec565b5060008267ffffffffffffffff811115611a4657611a46611eff565b604051908082528060200260200182016040528015611a6f578160200160208202803683370190505b5090506000925060005b82811015610a8b57611a9685828151811061152057611520611f2e565b15611ade57848181518110611aad57611aad611f2e565b6020026020010151828581518110611ac757611ac7611f2e565b6020908102919091010152611adb84611ec7565b93505b611ae781611ec7565b9050611a79565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590611bd257506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd29190611e5e565b80611931575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611c2157600080fd5b50565b60008060408385031215611c3757600080fd5b8235611c4281611bff565b946020939093013593505050565b600060208284031215611c6257600080fd5b813561060c81611bff565b600060208284031215611c7f57600080fd5b5035919050565b600080600060608486031215611c9b57600080fd5b8335611ca681611bff565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b81811015611cf357835183529284019291840191600101611cd7565b50909695505050505050565b600080600080600060a08688031215611d1757600080fd5b8535611d2281611bff565b94506020860135611d3281611bff565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215611d6357600080fd5b8235611d6e81611bff565b91506020830135611d7e81611bff565b809150509250929050565b60008060408385031215611d9c57600080fd5b50508035926020909101359150565b600080600060608486031215611dc057600080fd5b83359250602084013591506040840135611dd981611bff565b809150509250925092565b60008060408385031215611df757600080fd5b823591506020830135611d7e81611bff565b8015158114611c2157600080fd5b60008060408385031215611e2a57600080fd5b8235611e3581611bff565b91506020830135611d7e81611e09565b600060208284031215611e5757600080fd5b5051919050565b600060208284031215611e7057600080fd5b815161060c81611e09565b600060208284031215611e8d57600080fd5b815161060c81611bff565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ef857611ef8611e98565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008060008060008060c08789031215611f7657600080fd5b8651611f8181611bff565b6020880151909650611f9281611bff565b6040880151909550611fa381611bff565b6060880151909450611fb481611bff565b608088015190935065ffffffffffff81168114611fd057600080fd5b8092505060a087015190509295509295509295565b60008219821115611ff857611ff8611e98565b50019056fea2646970667358221220f0cf1cca015ad2efc40c7e687a09f9bfba668e47e0cf11d53c4e94c9fad16b7064736f6c634300080f003360c060405260016002553480156200001657600080fd5b5060405162004d9538038062004d9583398101604081905262000039916200011e565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a0525050600480546001600160601b031916905550620001869050565b6001600160a01b03811681146200011b57600080fd5b50565b600080600080608085870312156200013557600080fd5b8451620001428162000105565b6020860151909450620001558162000105565b6040860151909350620001688162000105565b60608601519092506200017b8162000105565b939692955090935050565b60805160a051614bdb620001ba600039600081816111a20152612a310152600081816114060152611d920152614bdb6000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613b75565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613bcf565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613c00565b6106ca565b005b61027a61028a366004613c1d565b6107ce565b61027a61029d366004613dde565b6108d2565b61027a6102b0366004613e8c565b610cdd565b6102c86102c3366004613f38565b610e10565b604051610208929190613fc7565b6102e96102e4366004613ff5565b610eca565b60405161020891906140f2565b610380610304366004613f38565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc366004614105565b61103a565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c1d565b6114f1565b61027a61041e366004614156565b61164e565b61027a610431366004613c00565b6116d1565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe610489366004614178565b6117f0565b61027a61049c3660046141bf565b6118a5565b6004546102509065ffffffffffff1681565b61027a6104c1366004613c00565b61193c565b6104d96104d43660046141ed565b611a4d565b60408051928352602083019190915201610208565b6102506104fc366004613c1d565b611e3d565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c1d565b60036020526000908152604090205465ffffffffffff1681565b6101fe610557366004614178565b611e7b565b610250620186a081565b6101fe61057436600461422e565b600560209081526000928352604080842090915290825290205481565b61022461059f36600461422e565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd3660046142a8565b611f29565b61027a6105e0366004614314565b612035565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b82518251811461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff87161480610992575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b83811015610af057868181518110610a1857610a1861437d565b60200260200101519250858181518110610a3457610a3461437d565b6020026020010151915081600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610a9e91906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff8816600090815260066020908152604080832086845290915281208054849290610ae39084906143f2565b90915550506001016109fe565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989604051610b6792919061440a565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff87163b15610c53576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff89169063bc197c8190610be89033908d908c908c908c9060040161442f565b6020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c6d565b73ffffffffffffffffffffffffffffffffffffffff871615155b610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050505050565b600254600114610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610e05576000848281518110610d6e57610d6e61437d565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610df25733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610df290868361244d565b505080610dfe906144b7565b9050610d52565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ebd916125b6565b9097909650945050505050565b81518151606091908114610f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8067ffffffffffffffff811115610f5357610f53613c3a565b604051908082528060200260200182016040528015610f7c578160200160208202803683370190505b50915060005b818110156110325760066000868381518110610fa057610fa061437d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858381518110610ff657610ff661437d565b602002602001015181526020019081526020016000205483828151811061101f5761101f61437d565b6020908102919091010152600101610f82565b505092915050565b6000806002546001146110a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110f2908a9065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152600360205260408120546004549293509091839161114e9161113b9165ffffffffffff90811691166144ef565b8c9065ffffffffffff16620186a0612957565b61115891906143db565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d9190614519565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a29190614536565b50919b509950975090915060009050836112bc868f6143db565b6112c691906143db565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611316939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135991906145b3565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ea91906143f2565b909155505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938916835292905290812080548392906114539084906143f2565b9091555061146e90508b8b8561146985876143f2565b612a29565b600061147c8e8589886130d1565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114d0929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115d457506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d491906145cc565b6115dd57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116c88282613168565b50506001600255565b6116ff336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b611765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff90811690821611156117ad576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b600080836118016201518085614618565b60405160200161186792919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61196a336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b6119d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a14576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611acf6201518086614618565b611adc906201518061463d565b9050428165ffffffffffff161015611b20576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b2c87836117f0565b60008181526008602052604090205490915060ff16611b9d576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e91906145b3565b9050611c5273ffffffffffffffffffffffffffffffffffffffff89163330896132ce565b611c5c86826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea91906145b3565b1015611d22576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e1657600454600090611d7b90611d689065ffffffffffff660100000000000082048116911661466b565b889065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611de49084906143f2565b90915550611dfe90503384611df9848b6143db565b613447565b82611e0982896143db565b9550955050505050611e2e565b611e21338388613447565b509250839150611e2e9050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff90811691166144ef565b6000600254600114611ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ef984846117f0565b60008181526008602052604090205490915060ff16611f1d57611f1d81858561348a565b60016002559392505050565b600254600114611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fd3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561202857612018868683818110611ff357611ff361437d565b9050602002013585858481811061200c5761200c61437d565b90506020020135613168565b612021816144b7565b9050611fd6565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff86161480612089575073ffffffffffffffffffffffffffffffffffffffff8516600090815260076020908152604080832033845290915290205460ff165b6120ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff851660009081526006602090815260408083208684529091528120805484929061212f9084906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906121749084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff808716929088169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b156122b5576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e619061224a9033908a90899089908990600401614692565b6020604051808303816000875af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d919061449a565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122cf565b73ffffffffffffffffffffffffffffffffffffffff841615155b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061242057506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242091906145cc565b80612445575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124e491906146e2565b6000604051808303816000865af19150503d8060008114612521576040519150601f19603f3d011682016040523d82523d6000602084013e612526565b606091505b509150915081801561255057508051158061255057508080602001905181019061255091906145cc565b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b60608060008080806125cb62015180886146fe565b905060006125dc8262010bd9614712565b6125e99062253d8c614712565b9050600062023ab16125fc836004614786565b6126069190614842565b905060046126178262023ab1614786565b612622906003614712565b61262c9190614842565b61263690836148aa565b9150600062164b09612649846001614712565b61265590610fa0614786565b61265f9190614842565b9050600461266f826105b5614786565b6126799190614842565b61268390846148aa565b61268e90601f614712565b9250600061098f6126a0856050614786565b6126aa9190614842565b9050600060506126bc8361098f614786565b6126c69190614842565b6126d090866148aa565b90506126dd600b83614842565b94506126ea85600c614786565b6126f5836002614712565b6126ff91906148aa565b9150848361270e6031876148aa565b612719906064614786565b6127239190614712565b61272d9190614712565b9850909650945060009350612752925061274d915061271090508661491e565b613708565b90506000600a841061276c5761276784613708565b612795565b61277584613708565b6040516020016127859190614932565b6040516020818303038152906040525b90506000600a84106127af576127aa84613708565b6127d8565b6127b884613708565b6040516020016127c89190614932565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612825573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261286b9190810190614977565b83838360405160200161288194939291906149e5565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156128dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526129239190810190614977565b8383836040516020016129399493929190614a9a565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129ae57600084116129a357600080fd5b508290049050612a22565b8084116129ba57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612a8a91815260200190565b602060405180830381865afa158015612aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612acb9190614519565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b0591815260200190565b60c060405180830381865afa158015612b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b469190614536565b5050935093509350935060008588612b5e91906143db565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf291906145b3565b9050612c1673ffffffffffffffffffffffffffffffffffffffff841633308c6132ce565b612c2089826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cae91906145b3565b1015612ce6576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f1d57612d2373ffffffffffffffffffffffffffffffffffffffff8416868461244d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db491906145b3565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e2d57600080fd5b505af1158015612e41573d6000803e3d6000fd5b505050508881612e5191906143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612edf91906145b3565b1015612f17576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506130c5565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fae91906145b3565b9050612fd273ffffffffffffffffffffffffffffffffffffffff861688308c6132ce565b612fdc89826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306a91906145b3565b10156130a2576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130c373ffffffffffffffffffffffffffffffffffffffff8516888561244d565b505b50505050505050505050565b600065ffffffffffff8216156131475762015180806130f042856144ef565b6130fa9190614618565b613104919061463d565b9050600061311284836117f0565b60008181526008602052604090205490915060ff166131365761313681858461348a565b613141868287613447565b50612445565b61244573ffffffffffffffffffffffffffffffffffffffff8416868661244d565b60008281526008602052604090205460ff166131b0576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132985760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b6132a3338484613868565b60208101516132c99073ffffffffffffffffffffffffffffffffffffffff16338461244d565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161336d91906146e2565b6000604051808303816000865af19150503d80600081146133aa576040519150601f19603f3d011682016040523d82523d6000602084013e6133af565b606091505b50915091508180156133d95750805115806133d95750808060200190518101906133d991906145cc565b61343f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b505050505050565b600082815260086020526040812060010180548392906134689084906143f2565b925050819055506132c98383836040518060200160405280600081525061389a565b60006134996201518083614618565b6134a6906201518061463d565b9050428165ffffffffffff1610156134ea576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135899190614b20565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361374b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613775578061375f816144b7565b915061376e9050600a836146fe565b915061374f565b60008167ffffffffffffffff81111561379057613790613c3a565b6040519080825280601f01601f1916602001820160405280156137ba576020820181803683370190505b509050815b851561385f576137d06001826143db565b905060006137df600a886146fe565b6137ea90600a614b43565b6137f490886143db565b6137ff906030614b80565b905060008160f81b90508084848151811061381c5761381c61437d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613856600a896146fe565b975050506137bf565b50949350505050565b600082815260086020526040812060010180548392906138899084906143db565b909155506132c99050838383613aa0565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906138da9084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a1a576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e61906139af903390600090899089908990600401614692565b6020604051808303816000875af11580156139ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139f2919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a34565b73ffffffffffffffffffffffffffffffffffffffff841615155b613a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613ae09084906143db565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613b6257600080fd5b50565b8035613b7081613b40565b919050565b60008060408385031215613b8857600080fd5b8235613b9381613b40565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613b6257600080fd5b600060208284031215613be157600080fd5b8135612a2281613ba1565b65ffffffffffff81168114613b6257600080fd5b600060208284031215613c1257600080fd5b8135612a2281613bec565b600060208284031215613c2f57600080fd5b8135612a2281613b40565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613cb057613cb0613c3a565b604052919050565b600067ffffffffffffffff821115613cd257613cd2613c3a565b5060051b60200190565b600082601f830112613ced57600080fd5b81356020613d02613cfd83613cb8565b613c69565b82815260059290921b84018101918181019086841115613d2157600080fd5b8286015b84811015613d3c5780358352918301918301613d25565b509695505050505050565b600067ffffffffffffffff821115613d6157613d61613c3a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112613d9e57600080fd5b8135613dac613cfd82613d47565b818152846020838601011115613dc157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215613df657600080fd5b8535613e0181613b40565b94506020860135613e1181613b40565b9350604086013567ffffffffffffffff80821115613e2e57600080fd5b613e3a89838a01613cdc565b94506060880135915080821115613e5057600080fd5b613e5c89838a01613cdc565b93506080880135915080821115613e7257600080fd5b50613e7f88828901613d8d565b9150509295509295909350565b60008060408385031215613e9f57600080fd5b823567ffffffffffffffff811115613eb657600080fd5b8301601f81018513613ec757600080fd5b80356020613ed7613cfd83613cb8565b82815260059290921b83018101918181019088841115613ef657600080fd5b938201935b83851015613f1d578435613f0e81613b40565b82529382019390820190613efb565b9550613f2c9050868201613b65565b93505050509250929050565b600060208284031215613f4a57600080fd5b5035919050565b60005b83811015613f6c578181015183820152602001613f54565b83811115613a9a5750506000910152565b60008151808452613f95816020860160208601613f51565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000613fda6040830185613f7d565b8281036020840152613fec8185613f7d565b95945050505050565b6000806040838503121561400857600080fd5b823567ffffffffffffffff8082111561402057600080fd5b818501915085601f83011261403457600080fd5b81356020614044613cfd83613cb8565b82815260059290921b8401810191818101908984111561406357600080fd5b948201945b8386101561408a57853561407b81613b40565b82529482019490820190614068565b965050860135925050808211156140a057600080fd5b506140ad85828601613cdc565b9150509250929050565b600081518084526020808501945080840160005b838110156140e7578151875295820195908201906001016140cb565b509495945050505050565b602081526000612a2260208301846140b7565b600080600080600060a0868803121561411d57600080fd5b853561412881613b40565b9450602086013561413881613b40565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561416957600080fd5b50508035926020909101359150565b6000806040838503121561418b57600080fd5b823561419681613b40565b915060208301356141a681613bec565b809150509250929050565b8015158114613b6257600080fd5b600080604083850312156141d257600080fd5b82356141dd81613b40565b915060208301356141a6816141b1565b60008060006060848603121561420257600080fd5b833561420d81613b40565b9250602084013561421d81613bec565b929592945050506040919091013590565b6000806040838503121561424157600080fd5b823561424c81613b40565b915060208301356141a681613b40565b60008083601f84011261426e57600080fd5b50813567ffffffffffffffff81111561428657600080fd5b6020830191508360208260051b85010111156142a157600080fd5b9250929050565b600080600080604085870312156142be57600080fd5b843567ffffffffffffffff808211156142d657600080fd5b6142e28883890161425c565b909650945060208701359150808211156142fb57600080fd5b506143088782880161425c565b95989497509550505050565b600080600080600060a0868803121561432c57600080fd5b853561433781613b40565b9450602086013561434781613b40565b93506040860135925060608601359150608086013567ffffffffffffffff81111561437157600080fd5b613e7f88828901613d8d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156143ed576143ed6143ac565b500390565b60008219821115614405576144056143ac565b500190565b60408152600061441d60408301856140b7565b8281036020840152613fec81856140b7565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261446860a08301866140b7565b828103606084015261447a81866140b7565b9050828103608084015261448e8185613f7d565b98975050505050505050565b6000602082840312156144ac57600080fd5b8151612a2281613ba1565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036144e8576144e86143ac565b5060010190565b600065ffffffffffff808316818516808303821115614510576145106143ac565b01949350505050565b60006020828403121561452b57600080fd5b8151612a2281613b40565b60008060008060008060c0878903121561454f57600080fd5b865161455a81613b40565b602088015190965061456b81613b40565b604088015190955061457c81613b40565b606088015190945061458d81613b40565b608088015190935061459e81613bec565b8092505060a087015190509295509295509295565b6000602082840312156145c557600080fd5b5051919050565b6000602082840312156145de57600080fd5b8151612a22816141b1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80841680614631576146316145e9565b92169190910492915050565b600065ffffffffffff80831681851681830481118215151615614662576146626143ac565b02949350505050565b600065ffffffffffff8381169083168181101561468a5761468a6143ac565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526146d760a0830184613f7d565b979650505050505050565b600082516146f4818460208701613f51565b9190910192915050565b60008261470d5761470d6145e9565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561474c5761474c6143ac565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615614780576147806143ac565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156147c7576147c76143ac565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615614802576148026143ac565b6000871292508782058712848416161561481e5761481e6143ac565b87850587128184161615614834576148346143ac565b505050929093029392505050565b600082614851576148516145e9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156148a5576148a56143ac565b500590565b6000808312837f8000000000000000000000000000000000000000000000000000000000000000018312811516156148e4576148e46143ac565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615614918576149186143ac565b50500390565b60008261492d5761492d6145e9565b500690565b7f300000000000000000000000000000000000000000000000000000000000000081526000825161496a816001850160208701613f51565b9190910160010192915050565b60006020828403121561498957600080fd5b815167ffffffffffffffff8111156149a057600080fd5b8201601f810184136149b157600080fd5b80516149bf613cfd82613d47565b8181528560208385010111156149d457600080fd5b613fec826020830160208601613f51565b600085516149f7818460208a01613f51565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551614a31816001840160208a01613f51565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551614a71816002850160208a01613f51565b60029201918201528351614a8c816003840160208801613f51565b016003019695505050505050565b60008551614aac818460208a01613f51565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614ae6816001840160208a01613f51565b8551910190614afc816001840160208901613f51565b8451910190614b12816001840160208801613f51565b016001019695505050505050565b600060208284031215614b3257600080fd5b815160ff81168114612a2257600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614b7b57614b7b6143ac565b500290565b600060ff821660ff84168060ff03821115614b9d57614b9d6143ac565b01939250505056fea2646970667358221220c10ea4b06a86647b13ebdaa04f3e2482dfa627bbaef97658048bb27d315bd1d064736f6c634300080f003360c06040523480156200001157600080fd5b50604051620047e3380380620047e383398101604081905262000034916200013d565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050506001600160a01b039081166080521660a0525050600980546001600160c01b0319167527100001518000000e100003f48000000e100001518017905550506007805460ff19166001179055620001a5565b6001600160a01b03811681146200013a57600080fd5b50565b600080600080608085870312156200015457600080fd5b8451620001618162000124565b6020860151909450620001748162000124565b6040860151909350620001878162000124565b60608601519092506200019a8162000124565b939692955090935050565b60805160a0516145fc620001e76000396000818161051001528181611d7e0152818161201001526120c301526000818161034801526129a401526145fc6000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c8063acc5570c1161017b578063bf7e214f116100d8578063d9ccdc931161008c578063e3684e3911610071578063e3684e39146109af578063e922067314610aed578063ea0aca3314610b0957600080fd5b8063d9ccdc931461098c578063e007fa971461099c57600080fd5b8063c7bf8ca0116100bd578063c7bf8ca014610935578063d204068714610948578063d2bee3231461096857600080fd5b8063bf7e214f146108a2578063c0aa0e8a146108c257600080fd5b8063bc3b2b121161012f578063bcf6cde811610114578063bcf6cde814610869578063bd1f3a5e1461087c578063bf48582b1461088f57600080fd5b8063bc3b2b12146107d2578063bcb296671461085657600080fd5b8063afa9d3b011610160578063afa9d3b0146106a1578063b1283e77146106ae578063bbbdd95a146107bf57600080fd5b8063acc5570c14610534578063ae4180951461068e57600080fd5b80635f77274e116102295780638973082c116101dd5780638da5cb5b116101c25780638da5cb5b146104cb578063946824cd146104eb5780639787d1071461050e57600080fd5b80638973082c1461047b5780638b098db3146104b857600080fd5b80636729a41e1161020e5780636729a41e1461041f578063699e17d9146104555780637a9e5e4b1461046857600080fd5b80635f77274e146103d65780636352211e146103e957600080fd5b806327507458116102805780633adec5a7116102655780633adec5a71461038d57806353c7f8e0146103a05780635dc4d16b146103b357600080fd5b806327507458146103235780633ad59dbc1461034657600080fd5b80630a9d85eb146102b257806310b05317146102d857806313af4035146102ed5780631c063a6c14610300575b600080fd5b6102c56102c036600461402b565b610b21565b6040519081526020015b60405180910390f35b6102eb6102e636600461402b565b610b53565b005b6102eb6102fb366004614076565b610c0e565b6102c561030e36600461402b565b60009081526002602052604090206004015490565b61033661033136600461402b565b610d17565b60405190151581526020016102cf565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102cf565b6102c561039b36600461402b565b610d60565b6102c56103ae366004614093565b610dc3565b6103366103c1366004614076565b60086020526000908152604090205460ff1681565b6102eb6103e436600461411e565b610e6b565b6103686103f736600461402b565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b61036861042d36600461402b565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102eb61046336600461413b565b610f30565b6102eb610476366004614076565b6113d7565b6009546104a39074010000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102cf565b6103366104c636600461402b565b611534565b6000546103689073ffffffffffffffffffffffffffffffffffffffff1681565b6102c56104f936600461402b565b6000908152600260205260409020600a015490565b7f0000000000000000000000000000000000000000000000000000000000000000610368565b61063861054236600461402b565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff90811680835260018401548216838701819052848801548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007870154610100870190815260088801546101208801526009880154610140880152600a90970154610160909601959095529989529290955292909520909301549251919590949265ffffffffffff169190565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c0016102cf565b6102eb61069c36600461402b565b61156a565b6007546103369060ff1681565b6107456106bc36600461402b565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860154600787015460088801546009890154600a9099015473ffffffffffffffffffffffffffffffffffffffff9889169a891699978916988716977401000000000000000000000000000000000000000090970460ff1696908c565b6040805173ffffffffffffffffffffffffffffffffffffffff9d8e1681529b8d1660208d0152998c16998b0199909952999096166060890152931515608088015260a087019290925260c086015260e0850152610100840152610120830152610140820192909252610160810191909152610180016102cf565b6102eb6107cd36600461416e565b6115d3565b6108256107e036600461402b565b6005602052600090815260409020805460019091015465ffffffffffff8082169166010000000000008104909116906c01000000000000000000000000900460ff1684565b6040516102cf949392919093845265ffffffffffff9283166020850152911660408301521515606082015260800190565b6102c561086436600461402b565b6116bd565b6102eb6108773660046141a7565b611851565b6102eb61088a366004614239565b611901565b6102c561089d3660046142be565b611d30565b6001546103689073ffffffffffffffffffffffffffffffffffffffff1681565b6109076108d036600461402b565b60036020526000908152604090208054600182015460029092015490919065ffffffffffff80821691660100000000000090041684565b60408051948552602085019390935265ffffffffffff918216928401929092521660608201526080016102cf565b6102c56109433660046141a7565b611e89565b6009546104a3906c01000000000000000000000000900463ffffffff1681565b6009546104a390700100000000000000000000000000000000900463ffffffff1681565b6009546104a39063ffffffff1681565b6102c56109aa3660046142f7565b6120a9565b610a876109bd36600461402b565b600460205260009081526040902080546001820154600283015460039093015465ffffffffffff80841694660100000000000085049091169363ffffffff6c0100000000000000000000000082048116947001000000000000000000000000000000008304821694740100000000000000000000000000000000000000008404831694780100000000000000000000000000000000000000000000000085048416947c0100000000000000000000000000000000000000000000000000000000900490931692908a565b6040805165ffffffffffff9b8c1681529a90991660208b015263ffffffff978816988a01989098529486166060890152928516608088015290841660a08701529290921660c085015260e0840191909152610100830152610120820152610140016102cf565b6009546104a39068010000000000000000900463ffffffff1681565b6009546104a390640100000000900463ffffffff1681565b600080610b2d83612402565b5050600084815260036020526040902054909150610b4c908290614352565b9392505050565b60008181526006602052604090205473ffffffffffffffffffffffffffffffffffffffff163314610bb0576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260066020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610c3c336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b610ca7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610d5a575060008281526003602052604090206002015442660100000000000090910465ffffffffffff16115b92915050565b600080610d91610d6f846116bd565b6000858152600260205260409020600a0154610d8a86610b21565b91906125ee565b6000848152600260205260409020600601549091508111610d5a57600083815260026020526040902060060154610b4c565b600080610dd28385018561439a565b905080610100015165ffffffffffff16600014158015610e2357506201518081610100015165ffffffffffff161080610e235750635dba240065ffffffffffff1681610100015165ffffffffffff16115b15610e5a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e638161264c565b949350505050565b610e99336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b610eff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b610f3982610d17565b610f6f576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f7c6020820182614471565b63ffffffff161580610fa15750610f996040820160208301614471565b63ffffffff16155b80610fbf5750610fb76060820160408301614471565b63ffffffff16155b15610ff6576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110066040820160208301614471565b63ffffffff166110196020830183614471565b63ffffffff161015611057576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526004602090815260409091208054909170010000000000000000000000000000000090910463ffffffff169061109490840184614471565b63ffffffff1610156110d2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60095468010000000000000000900463ffffffff166110f76060840160408501614471565b63ffffffff161015611135576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083815260026020818152604092839020835161018081018552815473ffffffffffffffffffffffffffffffffffffffff908116808352600184015482169483019490945293820154841694810194909452600381015492831660608501527401000000000000000000000000000000000000000090920460ff1615156080840152600482015460a0840152600582015460c0840152600682015460e0840152600782015461010084015260088201546101208401526009820154610140840152600a90910154610160830152331461123b576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112486020840184614471565b825463ffffffff9190911674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff9091161782556112e66112a16020850185614471565b60008681526003602052604090206002015463ffffffff91909116906112da9042906601000000000000900465ffffffffffff16614352565b60a08401519190613335565b6001830181905560a0820151116112fe576000611312565b81600101548160a001516113129190614352565b60028301556113276040840160208501614471565b825463ffffffff919091167801000000000000000000000000000000000000000000000000027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff9091161782556113846060840160408501614471565b825463ffffffff919091167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90911617909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806114ba57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015611496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ba919061448c565b6114c357600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206002015465ffffffffffff16635dba24008111156115635742811115610b4c565b1592915050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146115c7576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115d081613401565b50565b611601336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000818152600460209081526040808320815161014081018352815465ffffffffffff8082168352660100000000000082041694820185905263ffffffff6c0100000000000000000000000082048116948301949094527001000000000000000000000000000000008104841660608301527401000000000000000000000000000000000000000081048416608083015278010000000000000000000000000000000000000000000000008104841660a08301527c0100000000000000000000000000000000000000000000000000000000900490921660c0830152600181015460e08301526002810154610100830152600301546101208201529042808211156118125760c083015181830390611808906117e090839063ffffffff166144a9565b60c0860151600089815260026020526040902060050154919063ffffffff9081169061333516565b9695505050505050565b60c08301518282039063ffffffff16811161184557611840818560c0015163ffffffff166117e09190614352565b611808565b60009695505050505050565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146118ae576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526006602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61192f336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b611995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b6020810151815163ffffffff918216911610156119de576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151815163ffffffff91821691161015611a27576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810151606082015163ffffffff91821691161115611a73576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151611a839060056144c1565b63ffffffff16816002602002015163ffffffff161015611acf576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060006020020151600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff90921691909117905580600160200201516009805463ffffffff909216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff90921691909117905580600260200201516009805463ffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff90921691909117905580600360200201516009805463ffffffff9092166c01000000000000000000000000027fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff90921691909117905580600460200201516009805463ffffffff909216700100000000000000000000000000000000027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff90921691909117905580600560209081029190910151600980547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff81167401000000000000000000000000000000000000000063ffffffff9485168102918217938490556040805193861692861692909217835264010000000084048516958301959095526801000000000000000083048416908201526c010000000000000000000000008204831660608201527001000000000000000000000000000000008204831660808201529290041660a08201527fbbc02fa2138d26ec5ecb379612618d1b291bf5140167f3028178080953459c5a9060c00160405180910390a150565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291611dfe917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611deb91906144ed565b869065ffffffffffff16620186a0613335565b6000858152600260205260408120600a015491925090611e3290611e2187610d60565b611e2b858a614352565b9190613335565b600086815260026020526040902060070154909150811115611e80576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9150610b4c9050565b6000828152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a015461016082015281611f5d85610d60565b905060008260800151611f855761016083015160a0840151611f80918490613335565b611f8b565b8260a001515b90506000611fae838561016001518661010001516133359092919063ffffffff16565b90506000818310611fbf5781611fc1565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152919250600091612090917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d91906144ed565b839065ffffffffffff16620186a0613335565b905061209c81836144a9565b9998505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461211a576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526002602081815260408084206003808452948290208251608081018452815481526001820154948101949094529093015465ffffffffffff80821692840192909252660100000000000090041660608201529181015490919073ffffffffffffffffffffffffffffffffffffffff16158015906121c35750815473ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205460ff16155b156121fa576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000429050816060015165ffffffffffff168165ffffffffffff161061225c5760608201516040517f07fc4a7000000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610c9e565b6000612269888842613485565b95509050858510156122a7576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600701548511156122e5576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384015474010000000000000000000000000000000000000000900460ff16612315578360040154851161231d565b836004015487115b15612354576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384015474010000000000000000000000000000000000000000900460ff1661237e5784612380565b865b8460040160008282546123939190614352565b92505081905550868460090160008282546123ae91906144a9565b92505081905550848460080160008282546123c991906144a9565b90915550506005840154602084015110156123ec576123e788613401565b6123f7565b6123f7888383613854565b505050509392505050565b600081815260056020908152604080832081516080810183528154815260019091015465ffffffffffff8082169483019490945266010000000000008104909316918101919091526c0100000000000000000000000090910460ff1615156060820181905282918291612480576000806000935093509350506124d6565b602081015161248f904261450a565b9250806040015165ffffffffffff168365ffffffffffff16109150816124b65780516124d2565b604081015181516124d29165ffffffffffff8087169116613335565b9350505b9193909250565b60015460009073ffffffffffffffffffffffffffffffffffffffff1680158015906125c157506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa15801561259d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c1919061448c565b80610e63575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b60006125fb848484613335565b90506000828061260d5761260d614531565b8486091115610b4c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061264257600080fd5b6001019392505050565b60075460009060ff1661268b576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127009190614560565b90506000836020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127779190614560565b905060068260ff16108061278e575060128260ff16115b156127c5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff1610806127da575060128160ff16115b15612811576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe884610160015160000b128061284f5750601884610160015160000b135b15612886576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526008602052604090205460ff161580156128bf5750604084015173ffffffffffffffffffffffffffffffffffffffff1615155b156128f6576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600082610160015160240160ff16600a0a90508260c001518360a00151101561294d576040517f4496547d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825160208401516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af11580156129ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a119190614583565b90506000804286610120015165ffffffffffff16612a2f9190614352565b60095490925063ffffffff70010000000000000000000000000000000090910481169083161080612a80575060095461014087015163ffffffff6c0100000000000000000000000090920482169116105b80612a9b57508163ffffffff1686610140015163ffffffff16115b15612ad2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008661014001516005612ae691906144c1565b60095490915063ffffffff808316680100000000000000009092041611612b0d5780612b23565b60095468010000000000000000900463ffffffff165b600954610140890151919350600091612b7b9163ffffffff908116911611612b535760095463ffffffff16612b5a565b8861014001515b63ffffffff168563ffffffff168a608001516133359092919063ffffffff16565b60408051610140808201835265ffffffffffff4216808352602083015263ffffffff808916938301939093528b01805183166060830152600954905193945090926080840192918216911611612bd95760095463ffffffff16612be0565b8961014001515b63ffffffff9081168252600954640100000000900481166020830152851660408201526060810183905260808a810151910190612c1e908490614352565b8152602001612c5c8563ffffffff168763ffffffff168c60600151612c47578c60800151611e2b565b60a08d015160808e0151611e2b918d90613335565b90526000868152600460209081526040808320845181549386015192860151606080880151608089015160a08a015160c08b015165ffffffffffff9687167fffffffffffffffffffffffffffffffffffffffff000000000000000000000000909a169990991766010000000000009690981695909502969096177fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff166c0100000000000000000000000063ffffffff948516027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff161770010000000000000000000000000000000091841691909102177fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000958316959095027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1694909417780100000000000000000000000000000000000000000000000092821692909202919091177bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167c0100000000000000000000000000000000000000000000000000000000919094160292909217825560e08401516001830155610100840151600283015561012090930151600390910155908901519092508291508190612e59578860800151612e6e565b60a089015160808a0151612e6e918990613335565b9050612e878163ffffffff808716908881169061333516565b9250612eaf89610140015163ffffffff168663ffffffff16836133359092919063ffffffff16565b9150506040518061018001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001896000015173ffffffffffffffffffffffffffffffffffffffff168152602001896020015173ffffffffffffffffffffffffffffffffffffffff168152602001896040015173ffffffffffffffffffffffffffffffffffffffff168152602001896060015115158152602001896080015181526020018381526020018960c0015181526020018281526020016000815260200160008152602001878152506002600087815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a01559050506000600960149054906101000a900463ffffffff1663ffffffff1661314f620186a065ffffffffffff1685856133359092919063ffffffff16565b1161317a5760095474010000000000000000000000000000000000000000900463ffffffff16613188565b61318882620186a085613335565b905060006131bd828b60e0015163ffffffff16116131a657826131b2565b8a60e0015163ffffffff165b8590620186a0613335565b6131c790856144a9565b60a08b01519091506000906131dd908a87613335565b905060405180608001604052808281526020018381526020018c610100015165ffffffffffff1681526020018c610120015165ffffffffffff16815250600360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160020160066101000a81548165ffffffffffff021916908365ffffffffffff1602179055509050508a6020015173ffffffffffffffffffffffffffffffffffffffff168b6000015173ffffffffffffffffffffffffffffffffffffffff16897f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d8e61010001518f60a0015160405161331e92919065ffffffffffff929092168252602082015260400190565b60405180910390a450959998505050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361338c576000841161338157600080fd5b508290049050610b4c565b80841161339857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000818152600360209081526040808320600290810180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff1666010000000000004265ffffffffffff16021790559091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6000838152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a015461016082015281908161355b876116bd565b600088815260026020908152604080832060059081018590559091529020600101549091506c01000000000000000000000000900460ff16156136a35760008781526005602052604081209080806135b28b612402565b60008e8152600360205260408120805494975092955090935085926135d8908490614352565b9091555050801561367357828460000160008282546135f79190614352565b90915550506001840180548391906006906136259084906601000000000000900465ffffffffffff1661450a565b92506101000a81548165ffffffffffff021916908365ffffffffffff160217905550888460010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555061369e565b6001840180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b505050505b6136ac87613f48565b60e0830151909450808510156136c0578094505b6101608301516136d290889087613335565b600089815260046020526040812080546003909101549296507c0100000000000000000000000000000000000000000000000000000000810463ffffffff9081169392660100000000000090920465ffffffffffff16919061373a9085908a9086906125ee16565b60008d81526004602052604090208054919250829160069061376f9084906601000000000000900465ffffffffffff1661459c565b92506101000a81548165ffffffffffff021916908365ffffffffffff1602179055506000828b65ffffffffffff16116137c3576137b465ffffffffffff8c1684614352565b6137be90866144a9565b6137fe565b6137d58365ffffffffffff8d16614352565b85116137e25760006137fe565b6137f48365ffffffffffff8d16614352565b6137fe9086614352565b9050886138178661380f85856144a9565b8a9190613335565b61382191906144a9565b61382c9060016144a9565b60009d8e5260026020526040909d206005019c909c5550969a95995094975050505050505050565b600060046000858152602001908152602001600020604051806101400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152602001600282015481526020016003820154815250509050600060026000868152602001908152602001600020604051806101800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff16151515158152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152505090506000846003600088815260200190815260200160002060020160069054906101000a900465ffffffffffff16613bbd919061450a565b65ffffffffffff16905060008260800151613bdc578260a00151613bf1565b61016083015160a0840151613bf19187613335565b905060008360800151613c0957836101200151613c1f565b610160840151610140850151613c1f9188613335565b613c2990836144a9565b9050600082613c6285886040015163ffffffff16613c479190614352565b886040015163ffffffff16856133359092919063ffffffff16565b613c6c91906144a9565b90508561010001518560a00151108015613c8557508181105b80613cc0575060808601518651613ca29163ffffffff169061459c565b65ffffffffffff168865ffffffffffff1610158015613cc057508181115b15613f3d57613ce4866060015163ffffffff1685856133359092919063ffffffff16565b60008a8152600260205260408082206007019290925560c0880151918801519091613d1d91849163ffffffff9081169181169061333516565b60008b81526003602052604081205461016089015192935091613d42908b90856125ee565b60408051848152602081018390529192508d917f78f9c01d72705dba80d6ce051d36a1f987bf2a3800fee938c111a2ae741e57d1910160405180910390a281811015613e70576000613d948284614352565b905060405180608001604052808281526020018d65ffffffffffff1681526020018b60a0015163ffffffff1665ffffffffffff16815260200160011515815250600560008f81526020019081526020016000206000820151816000015560208201518160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060408201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550606082015181600101600c6101000a81548160ff02191690831515021790555090505050613eb5565b60008c81526003602090815260408083208490556005909152902060010180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b60008c815260046020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff8d1617905560e089015160a089015111613f09576000613f1d565b8860e001518860a00151613f1d9190614352565b60008d815260046020526040902060028101919091556003019290925550505b505050505050505050565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff908116825260018301548116828601529482015485168184015260038083015495861660608301527401000000000000000000000000000000000000000090950460ff1615156080820152600482015460a0820152600582015460c08201819052600683015460e0830152600783015461010083015260088301546101208301526009830154610140830152600a90920154610160820181905287875294909352908420549192610b4c9291906125ee565b60006020828403121561403d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146115d057600080fd5b803561407181614044565b919050565b60006020828403121561408857600080fd5b8135610b4c81614044565b600080602083850312156140a657600080fd5b823567ffffffffffffffff808211156140be57600080fd5b818501915085601f8301126140d257600080fd5b8135818111156140e157600080fd5b8660208285010111156140f357600080fd5b60209290920196919550909350505050565b80151581146115d057600080fd5b803561407181614105565b60006020828403121561413057600080fd5b8135610b4c81614105565b6000806080838503121561414e57600080fd5b823591508360808401111561416257600080fd5b50926020919091019150565b6000806040838503121561418157600080fd5b823561418c81614044565b9150602083013561419c81614105565b809150509250929050565b600080604083850312156141ba57600080fd5b82359150602083013561419c81614044565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561421f5761421f6141cc565b60405290565b803563ffffffff8116811461407157600080fd5b600060c0828403121561424b57600080fd5b82601f83011261425a57600080fd5b60405160c0810181811067ffffffffffffffff8211171561427d5761427d6141cc565b6040528060c084018581111561429257600080fd5b845b818110156142b3576142a581614225565b835260209283019201614294565b509195945050505050565b6000806000606084860312156142d357600080fd5b833592506020840135915060408401356142ec81614044565b809150509250925092565b60008060006060848603121561430c57600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561436457614364614323565b500390565b65ffffffffffff811681146115d057600080fd5b803561407181614369565b8035600081900b811461407157600080fd5b600061018082840312156143ad57600080fd5b6143b56141fb565b6143be83614066565b81526143cc60208401614066565b60208201526143dd60408401614066565b60408201526143ee60608401614113565b60608201526080830135608082015260a083013560a082015260c083013560c082015261441d60e08401614225565b60e082015261010061443081850161437d565b9082015261012061444284820161437d565b90820152610140614454848201614225565b90820152610160614466848201614388565b908201529392505050565b60006020828403121561448357600080fd5b610b4c82614225565b60006020828403121561449e57600080fd5b8151610b4c81614105565b600082198211156144bc576144bc614323565b500190565b600063ffffffff808316818516818304811182151516156144e4576144e4614323565b02949350505050565b6000602082840312156144ff57600080fd5b8151610b4c81614369565b600065ffffffffffff8381169083168181101561452957614529614323565b039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006020828403121561457257600080fd5b815160ff81168114610b4c57600080fd5b60006020828403121561459557600080fd5b5051919050565b600065ffffffffffff8083168185168083038211156145bd576145bd614323565b0194935050505056fea26469706673582212200bf7175d0d1400b965b0064707968c4951c99e6c4fdaa7e69f5dae4f87184dc664736f6c634300080f003360e06040523480156200001157600080fd5b5060405162001222380380620012228339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610db16200047160003960006104b501526000610480015260006101540152610db16000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146101d8578063a9059cbb146101e0578063d505accf146101f3578063dd62ed3e1461020657600080fd5b806340c10f191461019057806370a08231146101a557806379cc6790146101c557600080fd5b806323b872dd116100bd57806323b872dd1461013c578063313ce5671461014f5780633644e5151461018857600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610231565b6040516100f99190610a2a565b60405180910390f35b610115610110366004610ac6565b6102bf565b60405190151581526020016100f9565b61012e60025481565b6040519081526020016100f9565b61011561014a366004610af0565b610338565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61012e61047c565b6101a361019e366004610ac6565b6104d7565b005b61012e6101b3366004610b2c565b60036020526000908152604090205481565b6101a36101d3366004610ac6565b6104e5565b6100ec6104ef565b6101156101ee366004610ac6565b6104fc565b6101a3610201366004610b4e565b610581565b61012e610214366004610bc1565b600460209081526000928352604080842090915290825290205481565b6000805461023e90610bf4565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610bf4565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103279086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103cc5761039a8382610c76565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610401908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104699087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104b2576104ad610889565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104e18282610923565b5050565b6104e1828261099c565b6001805461023e90610bf4565b3360009081526003602052604081208054839190839061051d908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103279086815260200190565b428410156105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016105fc61047c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9602082015273ffffffffffffffffffffffffffffffffffffffff808d1692820192909252908a1660608201526080810189905260a0810188905260c001604051602081830303815290604052805190602001206040516020016106b69291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610732573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107ad57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016105e7565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516108bb9190610c8d565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109359190610d63565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906109d1908490610c76565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610990565b600060208083528351808285015260005b81811015610a5757858101830151858201604001528201610a3b565b81811115610a69576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ac157600080fd5b919050565b60008060408385031215610ad957600080fd5b610ae283610a9d565b946020939093013593505050565b600080600060608486031215610b0557600080fd5b610b0e84610a9d565b9250610b1c60208501610a9d565b9150604084013590509250925092565b600060208284031215610b3e57600080fd5b610b4782610a9d565b9392505050565b600080600080600080600060e0888a031215610b6957600080fd5b610b7288610a9d565b9650610b8060208901610a9d565b95506040880135945060608801359350608088013560ff81168114610ba457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bd457600080fd5b610bdd83610a9d565b9150610beb60208401610a9d565b90509250929050565b600181811c90821680610c0857607f821691505b602082108103610c41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610c8857610c88610c47565b500390565b600080835481600182811c915080831680610ca957607f831692505b60208084108203610ce1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610cf55760018114610d2857610d55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d55565b60008a81526020902060005b86811015610d4d5781548b820152908501908301610d34565b505084890196505b509498975050505050505050565b60008219821115610d7657610d76610c47565b50019056fea2646970667358221220839aca5fdc11524a182347f7285138a2adca857ebdece8b94f17c8ea1bfefbc764736f6c634300080f003360e06040523480156200001157600080fd5b5060405162001222380380620012228339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610db16200047160003960006104b501526000610480015260006101540152610db16000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101cd578063a9059cbb146101e0578063d505accf146101f3578063dd62ed3e1461020657600080fd5b806340c10f191461019057806370a08231146101a557806395d89b41146101c557600080fd5b806323b872dd116100bd57806323b872dd1461013c578063313ce5671461014f5780633644e5151461018857600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610231565b6040516100f99190610a2a565b60405180910390f35b610115610110366004610ac6565b6102bf565b60405190151581526020016100f9565b61012e60025481565b6040519081526020016100f9565b61011561014a366004610af0565b610338565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61012e61047c565b6101a361019e366004610ac6565b6104d7565b005b61012e6101b3366004610b2c565b60036020526000908152604090205481565b6100ec6104e5565b6101a36101db366004610ac6565b6104f2565b6101156101ee366004610ac6565b6104fc565b6101a3610201366004610b4e565b610581565b61012e610214366004610bc1565b600460209081526000928352604080842090915290825290205481565b6000805461023e90610bf4565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610bf4565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103279086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103cc5761039a8382610c76565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610401908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104699087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104b2576104ad610889565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104e18282610923565b5050565b6001805461023e90610bf4565b6104e1828261099c565b3360009081526003602052604081208054839190839061051d908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103279086815260200190565b428410156105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016105fc61047c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9602082015273ffffffffffffffffffffffffffffffffffffffff808d1692820192909252908a1660608201526080810189905260a0810188905260c001604051602081830303815290604052805190602001206040516020016106b69291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610732573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107ad57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016105e7565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516108bb9190610c8d565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109359190610d63565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906109d1908490610c76565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610990565b600060208083528351808285015260005b81811015610a5757858101830151858201604001528201610a3b565b81811115610a69576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ac157600080fd5b919050565b60008060408385031215610ad957600080fd5b610ae283610a9d565b946020939093013593505050565b600080600060608486031215610b0557600080fd5b610b0e84610a9d565b9250610b1c60208501610a9d565b9150604084013590509250925092565b600060208284031215610b3e57600080fd5b610b4782610a9d565b9392505050565b600080600080600080600060e0888a031215610b6957600080fd5b610b7288610a9d565b9650610b8060208901610a9d565b95506040880135945060608801359350608088013560ff81168114610ba457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bd457600080fd5b610bdd83610a9d565b9150610beb60208401610a9d565b90509250929050565b600181811c90821680610c0857607f821691505b602082108103610c41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610c8857610c88610c47565b500390565b600080835481600182811c915080831680610ca957607f831692505b60208084108203610ce1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610cf55760018114610d2857610d55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d55565b60008a81526020902060005b86811015610d4d5781548b820152908501908301610d34565b505084890196505b509498975050505050505050565b60008219821115610d7657610d76610c47565b50019056fea2646970667358221220a211ff0c0cc0b55b4779ce1a573a8bb826b46e808e5015092bacc3b27af7352664736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611eaa806100326000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c8063b4dc00b411610081578063dbb61ee71161005b578063dbb61ee714610235578063e52223bb14610248578063f166d9eb1461026b57600080fd5b8063b4dc00b4146101ca578063c34c08e514610200578063c4d1f8f11461022057600080fd5b80635af099c9116100b25780635af099c91461014357806363a6e3b514610156578063ae5f76fa1461017657600080fd5b80620dd95d146100cd57806303c02f421461010a575b600080fd5b6100e06100db3660046119e8565b61029f565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610135610118366004611a36565b600560209081526000928352604080842090915290825290205481565b604051908152602001610101565b6100e0610151366004611a6f565b6102e4565b610135610164366004611a88565b60086020526000908152604090205481565b610199610184366004611a88565b60036020526000908152604090205460d81b81565b6040517fffffffffff0000000000000000000000000000000000000000000000000000009091168152602001610101565b6100e06101d8366004611aac565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000546100e09073ffffffffffffffffffffffffffffffffffffffff1681565b61023361022e366004611ac9565b61031b565b005b610199610243366004611a6f565b6105c7565b61025b610256366004611a88565b6105fe565b6040519015158152602001610101565b61025b610279366004611b19565b600660209081526000938452604080852082529284528284209052825290205460ff1681565b600460205281600052604060002081815481106102bb57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b600781815481106102f457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610372576040517e37c7b30000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600082600581111561038657610386611b64565b036104195761039481610672565b61040b8173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104069190611b93565b6106de565b610414816107ff565b610571565b600182600581111561042d5761042d611b64565b036104925761043b81610672565b6104898173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b61041481610a83565b60028260058111156104a6576104a6611b64565b036104bd576104b481610672565b61041481610cfc565b60038260058111156104d1576104d1611b64565b036104e8576104df81610672565b61041481611058565b60048260058111156104fc576104fc611b64565b0361054657600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055610571565b600582600581111561055a5761055a611b64565b036105715761056881610672565b610571816112c2565b8073ffffffffffffffffffffffffffffffffffffffff1682600581111561059a5761059a611b64565b6040517f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c9090600090a35050565b600181815481106105d757600080fd5b9060005260206000209060069182820401919006600502915054906101000a900460d81b81565b6007546000901580159061066c575073ffffffffffffffffffffffffffffffffffffffff821660008181526008602052604090205460078054909190811061064857610648611bb0565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b92915050565b8073ffffffffffffffffffffffffffffffffffffffff163b6000036106db576040517f6f46ea7400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b50565b8060005b60058110156107fa5760008282600581106106ff576106ff611bb0565b1a60f81b90507f41000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216108061079657507f5a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b156107f1576040517f3afbb8280000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000085166004820152602401610369565b506001016106e2565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615610916576040517f8806c6660000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000082166004820152602401610369565b7fffffffffff0000000000000000000000000000000000000000000000000000008116600090815260026020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155808452600390925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001660d886901c9081179091556001805480820182559085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600680830491909101805464ffffffffff929093066005026101000a91820219909216920291909117905580517fea6439140000000000000000000000000000000000000000000000000000000081529051919263ea6439149260048084019382900301818387803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16801580610b7757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610bd2576040517f073e07310000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000083166004820152602401610369565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000908116909155938716808452818420805490951660d888901c179094557fffffffffff00000000000000000000000000000000000000000000000000000086168352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905580517fea643914000000000000000000000000000000000000000000000000000000008152905163ea6439149260048084019391929182900301818387803b158015610cdb57600080fd5b505af1158015610cef573d6000803e3d6000fd5b505050506107fa8261148f565b610d05816105fe565b15610d54576040517f224b187700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b600780546001808201835560008390527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790559054610dd29190611bdf565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600860205260408082209390935582517f9459b87500000000000000000000000000000000000000000000000000000000815292519092639459b8759160048083019286929190829003018183875af1158015610e4f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e959190810190611ce8565b805190915060005b81811015610fb0576000838281518110610eb957610eb9611bb0565b6020908102919091018101517fffffffffff0000000000000000000000000000000000000000000000000000008116600081815260048452604081208054600180820183558284529583200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8c1617905591905254909250610f549190611bdf565b7fffffffffff000000000000000000000000000000000000000000000000000000909116600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168452909152902055600101610e9d565b5060008373ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110449190810190611d87565b9050611052848260016115ea565b50505050565b611061816105fe565b6110af576040517f22cd55c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b60008173ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111429190810190611d87565b9050611150828260006115ea565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600860205260408120546007805491929161118990600190611bdf565b8154811061119957611199611bb0565b6000918252602090912001546007805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106111d5576111d5611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600780548061122e5761122e611e45565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff83811683526008909152604080832085905590861682528120556110528461171e565b60015460005b818110156113ce57600060026000600184815481106112e9576112e9611bb0565b6000918252602080832060068084049091015492066005026101000a90910460d81b7fffffffffff00000000000000000000000000000000000000000000000000000016835282019290925260409081019091205490517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911691508190634657b36c90602401600060405180830381600087803b1580156113aa57600080fd5b505af11580156113be573d6000803e3d6000fd5b50505050816001019150506112c8565b5060075460005b81811015611052576000600782815481106113f2576113f2611bb0565b6000918252602090912001546040517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015290911691508190634657b36c90602401600060405180830381600087803b15801561146b57600080fd5b505af115801561147f573d6000803e3d6000fd5b50505050816001019150506113d5565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004602090815260408083208054825181850281018501909352808352919290919083018282801561151f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116114f4575b505083519394506000925050505b818110156110525782818151811061154757611547611bb0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561159b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115e19190810190611ce8565b5060010161152d565b815160005b8181101561171757600084828151811061160b5761160b611bb0565b60209081029190910181015180517fffffffffff000000000000000000000000000000000000000000000000000000908116600090815260068452604080822073ffffffffffffffffffffffffffffffffffffffff8c1680845290865281832085870180517fffffffff0000000000000000000000000000000000000000000000000000000090811686529188529383902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168c1515908117909155865194518451921682529681019690965293955092939116917ff3cdd20c5574ce87c347ea71e37b8fa7a095894be4b7f2bb1533e8d2342965f1910160405180910390a3506001016115ef565b5050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117b39190810190611ce8565b805190915060005b818110156110525760008382815181106117d7576117d7611bb0565b6020908102919091018101517fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004835260408082206005855281832073ffffffffffffffffffffffffffffffffffffffff8b168452909452812054835492945091839061184e90600190611bdf565b8154811061185e5761185e611bb0565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061189e5761189e611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806118f6576118f6611e45565b600082815260208082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908401810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092557fffffffffff00000000000000000000000000000000000000000000000000000095909516815260058552604080822073ffffffffffffffffffffffffffffffffffffffff9384168352909552848120929092558716815291822091909155506001016117bb565b7fffffffffff000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080604083850312156119fb57600080fd5b8235611a06816119ba565b946020939093013593505050565b73ffffffffffffffffffffffffffffffffffffffff811681146106db57600080fd5b60008060408385031215611a4957600080fd5b8235611a54816119ba565b91506020830135611a6481611a14565b809150509250929050565b600060208284031215611a8157600080fd5b5035919050565b600060208284031215611a9a57600080fd5b8135611aa581611a14565b9392505050565b600060208284031215611abe57600080fd5b8135611aa5816119ba565b60008060408385031215611adc57600080fd5b823560068110611a5457600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080600060608486031215611b2e57600080fd5b8335611b39816119ba565b92506020840135611b4981611a14565b91506040840135611b5981611aeb565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215611ba557600080fd5b8151611aa5816119ba565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082821015611c18577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611c6f57611c6f611c1d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611cbc57611cbc611c1d565b604052919050565b600067ffffffffffffffff821115611cde57611cde611c1d565b5060051b60200190565b60006020808385031215611cfb57600080fd5b825167ffffffffffffffff811115611d1257600080fd5b8301601f81018513611d2357600080fd5b8051611d36611d3182611cc4565b611c75565b81815260059190911b82018301908381019087831115611d5557600080fd5b928401925b82841015611d7c578351611d6d816119ba565b82529284019290840190611d5a565b979650505050505050565b60006020808385031215611d9a57600080fd5b825167ffffffffffffffff811115611db157600080fd5b8301601f81018513611dc257600080fd5b8051611dd0611d3182611cc4565b81815260069190911b82018301908381019087831115611def57600080fd5b928401925b82841015611d7c5760408489031215611e0d5760008081fd5b611e15611c4c565b8451611e20816119ba565b815284860151611e2f81611aeb565b8187015282526040939093019290840190611df4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220da155c75aff1987347cd8c8703a6eef45da0f991c20678951a039e404be7c5a064736f6c634300080f0033608060405234801561001057600080fd5b5060405161093338038061093383398101604081905261002f91610083565b600080546001600160a01b039094166001600160a01b0319909416939093179092556004805465ffffffffffff909216620100000267ffffffffffffff0019909216919091176101001790556005556100dd565b60008060006060848603121561009857600080fd5b83516001600160a01b03811681146100af57600080fd5b602085015190935065ffffffffffff811681146100cb57600080fd5b80925050604084015190509250925092565b610847806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80637e20be3b116100f9578063d266f5d011610097578063ea64391411610071578063ea64391414610469578063eb91d37e14610471578063f4b4dc2e14610479578063ffa1ad74146104be57600080fd5b8063d266f5d0146103fe578063d4aae0c41461041c578063d8cf24fd1461046157600080fd5b8063902a35b9116100d3578063902a35b9146103d35780639d1b464a146103e5578063b5e71305146103ee578063bd01bb32146103f657600080fd5b80637e20be3b1461036757806386db7df0146103ba5780638a157337146103c257600080fd5b80634657b36c116101665780636d2c2808116101405780636d2c2808146102a05780637321f100146102a95780637a1395aa146102d85780637d4dce761461031a57600080fd5b80634657b36c14610258578063653721471461026b5780636cb56dbc1461028d57600080fd5b80632c19abb9116101975780632c19abb91461021d578063313ce567146102305780633ccec9c41461024f57600080fd5b8063053f14da146101be57806318b20071146101da5780631ae7ec2e146101ef575b600080fd5b6101c760025481565b6040519081526020015b60405180910390f35b6101ed6101e8366004610623565b600355565b005b6040517f505249434500000000000000000000000000000000000000000000000000000081526020016101d1565b6101ed61022b366004610623565b600255565b60045461023d9060ff1681565b60405160ff90911681526020016101d1565b6101c760015481565b6101ed61026636600461063c565b6104d3565b60045461027d90610100900460ff1681565b60405190151581526020016101d1565b6101ed61029b366004610623565b600155565b6101c760055481565b6004546102c19062010000900465ffffffffffff1681565b60405165ffffffffffff90911681526020016101d1565b6101ed6102e6366004610679565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b6101ed6103283660046106b7565b6004805465ffffffffffff90921662010000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffff909216919091179055565b6101ed6103753660046106b7565b6004805465ffffffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffff909216919091179055565b6101ed610572565b6101ed6103d03660046106b7565b50565b6101ed6103e1366004610701565b5050565b6101c760035481565b6001546101c7565b6101c76105b5565b6004546102c19068010000000000000000900465ffffffffffff1681565b60005461043c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d1565b6002546101c7565b6101ed6105d0565b6003546101c7565b6101ed6104873660046107ef565b60048054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b604080516001815260006020820152016101d1565b60005473ffffffffffffffffffffffffffffffffffffffff16331461052b576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600454610100900460ff166105b3576040517f2cd2cbf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000600554600154116105c9575060055490565b5060015490565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105b3576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610522565b60006020828403121561063557600080fd5b5035919050565b60006020828403121561064e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461067257600080fd5b9392505050565b60006020828403121561068b57600080fd5b813560ff8116811461067257600080fd5b803565ffffffffffff811681146106b257600080fd5b919050565b6000602082840312156106c957600080fd5b6106728261069c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561071457600080fd5b823567ffffffffffffffff8082111561072c57600080fd5b818501915085601f83011261074057600080fd5b8135602082821115610754576107546106d2565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108682111715610797576107976106d2565b6040529283528183019350848101820192898411156107b557600080fd5b948201945b838610156107d3578535855294820194938201936107ba565b96506107e2905087820161069c565b9450505050509250929050565b60006020828403121561080157600080fd5b8135801515811461067257600080fdfea2646970667358221220d251eb98359526f34b75a509dee50f2a4cf3f702c825b97ba6510c25b3f89e4e64736f6c634300080f003360806040523480156200001157600080fd5b5060405162001a7338038062001a738339810160408190526200003491620002f9565b600080546001600160a01b0319166001600160a01b03881617905561271081101580620000615750606481105b806200006f57506127108210155b806200007b5750606482105b806200008657508082115b806200009457506127108310155b80620000a05750606483105b15620000bf5760405163c51f44ab60e01b815260040160405180910390fd5b60408051610120810182526000608080830182815265ffffffffffff42811660a080870182905260c0870186905260e087018690526000196101008089018290529488528851918201895286825260208281019390935281890187905260608083018890528287019190915282880191825288518087018a52808201888152815289518085018b5288815281850152808a018c9052888a0190815289518088018b5280830189815281528a518086018c52988952808501988952808b018c8152838b018290529951805160018054838901518a168b0266ffffffffffff0019931515841666ffffffffffffff199283161717909155828e015160025582860151600355918a01516004559451805160058054838a0151909a16909a0290151590961697909116969096179390931790955583890151600655830151600755919093015160085590518051516009559182015151600a5590840151600b555151600c555151600d5551600e55600f849055601080546001600160a01b038089166001600160a01b0319928316179092556011805492881692909116919091179055517ff9f6bac7789241c1f8bc37f72defbdc6b5482ec2c96cb91f7ebf917c7ef7ff9890620002999084908490918252602082015260400190565b60405180910390a16040518381527f66df6e0040d88b0d9e6e482ec0ef8983562d1186b0b94f9747f64f3c7e3863359060200160405180910390a150505050505062000369565b6001600160a01b0381168114620002f657600080fd5b50565b60008060008060008060c087890312156200031357600080fd5b86516200032081620002e0565b60208801519096506200033381620002e0565b60408801519095506200034681620002e0565b80945050606087015192506080870151915060a087015190509295509295509295565b6116fa80620003796000396000f3fe608060405234801561001057600080fd5b506004361061018c5760003560e01c8063ae7e8d81116100e3578063d4aae0c41161008c578063e97206a911610066578063e97206a91461037a578063ea6439141461043d578063ffa1ad741461044557600080fd5b8063d4aae0c41461033e578063dd0081c71461035e578063e69f3c4e1461036757600080fd5b8063c21e6652116100bd578063c21e665214610302578063c45e91d61461030b578063cd3293de1461031e57600080fd5b8063ae7e8d81146102d4578063bb2eb4d2146102e7578063bf30142b146102ef57600080fd5b806341f19a46116101455780636d9a9a621161011f5780636d9a9a62146102695780638c3f914a1461027c578063a29a0d901461028f57600080fd5b806341f19a46146102205780634657b36c1461023357806359d236e61461024657600080fd5b806333bd33b41161017657806333bd33b4146101d95780633778c2b2146101ec5780633e56993a1461020d57600080fd5b8062d16739146101915780631ae7ec2e146101a6575b600080fd5b6101a461019f3660046114a2565b61045a565b005b6040517f52414e474500000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b6101a46101e73660046114ce565b6106de565b6101ff6101fa3660046114e7565b610884565b6040519081526020016101d0565b6101a461021b366004611520565b6108be565b6101a461022e366004611555565b610af9565b6101a4610241366004611577565b610cce565b6102596102543660046115b4565b610d68565b60405190151581526020016101d0565b6101a46102773660046114a2565b610d86565b6101ff61028a3660046115b4565b610feb565b6010546102af9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d0565b6101a46102e23660046114ce565b611003565b6101ff606481565b6101ff6102fd3660046115b4565b61120f565b6101ff600f5481565b6101ff6103193660046115b4565b611227565b6011546102af9073ffffffffffffffffffffffffffffffffffffffff1681565b6000546102af9073ffffffffffffffffffffffffffffffffffffffff1681565b6101ff61271081565b6101ff6103753660046115b4565b61123f565b610382611271565b60408051825180511515825260208082015165ffffffffffff9081168285015282850151848601526060808401518186015260809384015184860152828701518051151560a08701528084015190921660c08601528186015160e0860152818101516101008601529201516101208401528484015180515161014085015280820151516101608501528401516101808401529301518051516101a083015292830151516101c08201529101516101e0820152610200016101d0565b6101a461136e565b604080516001815260006020820152016101d0565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054591906115d1565b610582576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b6000612710600f5483610595919061161d565b61059f919061165a565b90508215610621576040805160a08101825260018082524265ffffffffffff166020830181905292820185905260608201849052600854608090920191909152600580547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101009093029290921717905560068290556007819055610696565b6040805160a08101825260018082524265ffffffffffff16602083018190529282018590526060820184905260045460809092019190915280547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101009092029190911781179055600282905560038190555b6040805184151581524260208201529081018390527f518b1eea6c42d5d25b8983db58076556c4eb12d0f58f403100e037bbdf629cc3906060015b60405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c991906115d1565b610801576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b612710811015806108125750606481105b15610849576040517fc51f44ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f8190556040518181527f66df6e0040d88b0d9e6e482ec0ef8983562d1186b0b94f9747f64f3c7e3863359060200160405180910390a150565b600082156108a457811561089b5750600c546108b8565b50600d546108b8565b81156108b357506009546108b8565b50600a545b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a991906115d1565b6109e1576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82148015610a0f57508015155b15610a46576040517fc51f44ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8215610a56576008829055610a5c565b60048290555b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aba576040805184151581524260208201527fc0be2d89ec6f4d478c644e7dcb37ec5372fb158563c955066b91b5650e37e32791016106d1565b6040805184151581524260208201529081018290527f6addeb12ca5495dd878280b56a2ebcc0c18eda83a3d30ea01f9c661b03209001906060016106d1565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be491906115d1565b610c1c576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b61271081101580610c2d5750606481105b80610c3a57506127108210155b80610c455750606482105b80610c4f57508082115b15610c86576040517fc51f44ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e819055600b82905560408051838152602081018390527ff9f6bac7789241c1f8bc37f72defbdc6b5482ec2c96cb91f7ebf917c7ef7ff9891015b60405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d21576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008115610d7b57505060055460ff1690565b505060015460ff1690565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7191906115d1565b610ea9576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b8115610f5157600681905560075481108015610ec7575060055460ff165b15610f4d57600580547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101004265ffffffffffff811691909102919091179091556040805160018152602081019290925281018290527fc897c3dfa8334f335974948095373e499dbc757ce1133f2980bcfca098c736bf9060600160405180910390a15b5050565b600281905560035481108015610f69575060015460ff165b15610f4d57600180547fffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000166101004265ffffffffffff811691909102919091179091556040805160008152602081019290925281018290527fc897c3dfa8334f335974948095373e499dbc757ce1133f2980bcfca098c736bf90606001610cc2565b60008115610ffb575050600e5490565b5050600b5490565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f52414e47450000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156110ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ee91906115d1565b611126576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b600e54600b546127106111398382611695565b611143908561161d565b61114d919061165a565b600d5561271061115d83826116ac565b611167908561161d565b611171919061165a565b600c556127106111818282611695565b61118b908561161d565b611195919061165a565b600a556127106111a582826116ac565b6111af908561161d565b6111b9919061165a565b6009819055600d54600a54600c546040517f7f3eb23042093bdf239802495c60dece3a6249a51e7d0830afa71dc7bb184da9946106d1949392909193845260208401929092526040830152606082015260800190565b6000811561121f57505060065490565b505060025490565b6000811561123757505060085490565b505060045490565b6000811561125c575050600554610100900465ffffffffffff1690565b5050600154610100900465ffffffffffff1690565b6112796113c3565b50604080516101208101825260015460ff8082161515608080850191825265ffffffffffff61010094859004811660a08088019190915260025460c088015260035460e08801526004548688015292865286519283018752600554938416151583529390920490921660208381019190915260065483860152600754606080850191909152600854848401528185019390935284518083018652600954818501908152815285518083018752600a54815281830152600b54818701528486015284519182018552600c54828401908152825284518082018652600d54815290820152600e549381019390935281019190915290565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113c1576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610579565b565b60408051610120810182526000608080830182815260a080850184905260c0850184905260e08501849052610100850184905290845284519081018552828152602080820184905281860184905260608201849052918101929092528201529081016114566040805160808101825260006060820181815282528251602080820185528282528301529181019190915290565b815260200161148c6040805160808101825260006060820181815282528251602080820185528282528301529181019190915290565b905290565b801515811461149f57600080fd5b50565b600080604083850312156114b557600080fd5b82356114c081611491565b946020939093013593505050565b6000602082840312156114e057600080fd5b5035919050565b600080604083850312156114fa57600080fd5b823561150581611491565b9150602083013561151581611491565b809150509250929050565b60008060006060848603121561153557600080fd5b833561154081611491565b95602085013595506040909401359392505050565b6000806040838503121561156857600080fd5b50508035926020909101359150565b60006020828403121561158957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146115ad57600080fd5b9392505050565b6000602082840312156115c657600080fd5b81356115ad81611491565b6000602082840312156115e357600080fd5b81516115ad81611491565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611655576116556115ee565b500290565b600082611690577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156116a7576116a76115ee565b500390565b600082198211156116bf576116bf6115ee565b50019056fea2646970667358221220728103d0e0db7097c20e643317ceca31aa9888645f83878b4295b6590de69cf564736f6c634300080f00336080604052600160055534801561001557600080fd5b50604051620021113803806200211183398101604081905261003691610060565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b179055610090565b60006020828403121561007257600080fd5b81516001600160a01b038116811461008957600080fd5b9392505050565b61207180620000a06000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80634aae164b116100d8578063d4aae0c41161008c578063f5b92c7311610066578063f5b92c731461038a578063fb393f241461039d578063ffa1ad74146103b057600080fd5b8063d4aae0c41461032a578063e6eb207a1461036f578063ea6439141461038257600080fd5b80635f0736a1116100bd5780635f0736a1146102d9578063724000c1146103045780638b7f3fb91461031757600080fd5b80634aae164b146102be57806351b42b00146102d157600080fd5b80631ff517ff1161012f5780632f42aef5116101145780632f42aef51461026d57806332b43ad2146102805780634657b36c146102ab57600080fd5b80631ff517ff1461022257806328a4ace51461024257600080fd5b80630f15f4c0116101605780630f15f4c0146101cb57806315226b54146101d35780631ae7ec2e146101f457600080fd5b806301a91e5c1461017c57806302fb0c5e14610191575b600080fd5b61018f61018a366004611e9d565b6103c5565b005b6000546101b69074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61018f6105a4565b6101e66101e1366004611ede565b610708565b6040519081526020016101c2565b6040517f545253525900000000000000000000000000000000000000000000000000000081526020016101c2565b6101e6610230366004611ede565b60036020526000908152604090205481565b6101e6610250366004611f02565b600460209081526000928352604080842090915290825290205481565b61018f61027b366004611e9d565b6107b8565b6101e661028e366004611f02565b600260209081526000928352604080842090915290825290205481565b61018f6102b9366004611ede565b610a19565b61018f6102cc366004611e9d565b610ab3565b61018f610d04565b6101e66102e7366004611f02565b600160209081526000928352604080842090915290825290205481565b61018f610312366004611f3b565b610e51565b61018f610325366004611e9d565b6110ff565b60005461034a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c2565b61018f61037d366004611e9d565b6112ea565b61018f611512565b61018f610398366004611e9d565b611567565b61018f6103ab366004611e9d565b6119bf565b604080516001815260006020820152016101c2565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190611f67565b6104ed576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600090815260026020908152604080832093861683529290529081205461052d908390611fb8565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917f9afc1acde4b7ec0d84d924e5b530aecfb57d117a7122b80904cb9912badbff5991015b60405180910390a350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611f67565b6106c7576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b73ffffffffffffffffffffffffffffffffffffffff81166000818152600360205260408082205490517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152919290916370a0823190602401602060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611fd0565b6107b29190611fb8565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190611f67565b6108db576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff1661092f576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091528120805483929061096f908490611fe9565b90915550610996905073ffffffffffffffffffffffffffffffffffffffff83168483611b8f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e84604051610a0c91815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a6c576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190611f67565b610bd6576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260046020908152604080832093871683529290522080549082905581811015610c6057610c208183611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c55908490611fb8565b90915550610ca59050565b610c6a8282611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c9f908490611fe9565b90915550505b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4417d205f6349e66a581332b36195e74d10f878e80db907b4fd3a814aad4049d8460405161059691815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def9190611f67565b610e27576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c9190611f67565b610f74576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff16610fc8576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281208054839290611008908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526004602090815260408083203384529091528120805483929061104d908490611fb8565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290611087908490611fb8565b909155506110ae905073ffffffffffffffffffffffffffffffffffffffff83163383611b8f565b604051818152339073ffffffffffffffffffffffffffffffffffffffff8416907f7f04a714958851e1d87b504651ba77ab02f62bae8879f577bf3e07cf8567aba29060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190611f67565b611222576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908282111561126f5761126a8383611fe9565b611272565b60005b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f40730d80659c76c95521f0340872d27fdc8b3c47befe2ca569d2c2eedc8a049e91015b60405180910390a35050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190611f67565b61140d576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908261146e837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fe9565b11156114835761147e8383611fb8565b6114a5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f8bbc2784c9e4073e20f60d8c7218cbd211c43ca2ee041bc037f977693a0c8c1b91016112db565b60005473ffffffffffffffffffffffffffffffffffffffff163314611565576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561162e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116529190611f67565b61168a576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b6005546001146116f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104e4565b600260055573ffffffffffffffffffffffffffffffffffffffff80831660009081526004602090815260408083209387168352929052908120549003611768576040517fa4255dc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f99190611fd0565b905061181d73ffffffffffffffffffffffffffffffffffffffff8416333085611cff565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090829073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa15801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b09190611fd0565b6118ba9190611fe9565b9050828111156118c75750815b73ffffffffffffffffffffffffffffffffffffffff80851660009081526004602090815260408083209389168352929052908120805483929061190b908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054839290611945908490611fe9565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf836040516119ab91815260200190565b60405180910390a350506001600555505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015611a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaa9190611f67565b611ae2576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260209081526040808320938616835292905290812054611b22908390611fe9565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917fbb8caa1e59333c99899b67ccacb2b942c5a5ebf1a2bff4932b50274da81fe8d59101610596565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611c269190612000565b6000604051808303816000865af19150503d8060008114611c63576040519150601f19603f3d011682016040523d82523d6000602084013e611c68565b606091505b5091509150818015611c92575080511580611c92575080806020019051810190611c929190611f67565b611cf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104e4565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611d9e9190612000565b6000604051808303816000865af19150503d8060008114611ddb576040519150601f19603f3d011682016040523d82523d6000602084013e611de0565b606091505b5091509150818015611e0a575080511580611e0a575080806020019051810190611e0a9190611f67565b611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104e4565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611e9a57600080fd5b50565b600080600060608486031215611eb257600080fd5b8335611ebd81611e78565b92506020840135611ecd81611e78565b929592945050506040919091013590565b600060208284031215611ef057600080fd5b8135611efb81611e78565b9392505050565b60008060408385031215611f1557600080fd5b8235611f2081611e78565b91506020830135611f3081611e78565b809150509250929050565b60008060408385031215611f4e57600080fd5b8235611f5981611e78565b946020939093013593505050565b600060208284031215611f7957600080fd5b81518015158114611efb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611fcb57611fcb611f89565b500190565b600060208284031215611fe257600080fd5b5051919050565b600082821015611ffb57611ffb611f89565b500390565b6000825160005b818110156120215760208186018101518583015201612007565b81811115612030576000828501525b50919091019291505056fea26469706673582212206634c68cd62b3d0f45d7635a2fd1aa8019825f1f21deea0c546dc1f7677635a164736f6c634300080f0033608060405234801561001057600080fd5b5060405161116c38038061116c83398101604081905261002f91610085565b600080546001600160a01b039384166001600160a01b0319909116179055600180546001600160a81b0319169190921617600160a01b1790556100bf565b6001600160a01b038116811461008257600080fd5b50565b6000806040838503121561009857600080fd5b82516100a38161006d565b60208401519092506100b48161006d565b809150509250929050565b61109e806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806351b42b001161008c578063bbaed5cb11610066578063bbaed5cb14610228578063d4aae0c41461023b578063ea6439141461025b578063ffa1ad741461026357600080fd5b806351b42b00146101ad578063664aecb0146101b5578063a29a0d90146101e357600080fd5b80631ae7ec2e116100c85780631ae7ec2e146101465780631b0a68f214610174578063359fe780146101875780634657b36c1461019a57600080fd5b80630152a5ea146100ef57806302fb0c5e146101045780630f15f4c01461013e575b600080fd5b6101026100fd366004610f98565b610278565b005b6001546101299074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61010261050b565b6040517f4d494e54520000000000000000000000000000000000000000000000000000008152602001610135565b610102610182366004610f98565b61066f565b610102610195366004610f98565b61083f565b6101026101a8366004610fc4565b610a49565b610102610ae3565b6101d56101c3366004610fc4565b60026020526000908152604090205481565b604051908152602001610135565b6001546102039073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610135565b610102610236366004610f98565b610c30565b6000546102039073ffffffffffffffffffffffffffffffffffffffff1681565b610102610f1e565b60408051600181526000602082015201610135565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190610fe8565b6103a0576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b60015474010000000000000000000000000000000000000000900460ff166103f4576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361042e576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f79cc679000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906379cc679090604401600060405180830381600087803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b505060405183815273ffffffffffffffffffffffffffffffffffffffff851692503391507fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b94539060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f69190610fe8565b61062e576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610fe8565b610792576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490828211156107d0576107cb8383611039565b6107d3565b60005b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f08c666f5d7ad747c595b189947464cfac5e56befa6bd12ced49a49adb3f8166d906108319084815260200190565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190610fe8565b610962576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490826109b4837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611039565b11156109c9576109c48383611050565b6109eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f2f612f30164b43d77b321f13922cb2190f7f7956b9483d817271d30679a1aa7b906108319084815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a9c576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610fe8565b610c06576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190610fe8565b610d53576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b60015474010000000000000000000000000000000000000000900460ff16610da7576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610de1576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090205481811015610e2b576040517fd20075ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090819020838303905560015490517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610eb457600080fd5b505af1158015610ec8573d6000803e3d6000fd5b505060405184815273ffffffffffffffffffffffffffffffffffffffff861692503391507fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89060200160405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f71576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b565b73ffffffffffffffffffffffffffffffffffffffff81168114610f9557600080fd5b50565b60008060408385031215610fab57600080fd5b8235610fb681610f73565b946020939093013593505050565b600060208284031215610fd657600080fd5b8135610fe181610f73565b9392505050565b600060208284031215610ffa57600080fd5b81518015158114610fe157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561104b5761104b61100a565b500390565b600082198211156110635761106361100a565b50019056fea26469706673582212201993dbcafb4ea2c30aab7698fb16e989fa8c88b736ca2bc4e2d2383cdf01a68064736f6c634300080f0033608060405234801561001057600080fd5b50604051610b11380380610b1183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610a7e806100936000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063d09a20c511610076578063ea6439141161005b578063ea643914146101c7578063f6ba0007146101cf578063ffa1ad74146101e257600080fd5b8063d09a20c51461016f578063d4aae0c41461018257600080fd5b80634657b36c116100a75780634657b36c1461010b578063656361ff1461011e578063ac4ab3fb1461013157600080fd5b80631ae7ec2e146100c357806340e312f8146100f6575b600080fd5b6040517f524f4c455300000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b610109610104366004610939565b6101f7565b005b610109610119366004610977565b610375565b61010961012c36600461099b565b61040f565b61015f61013f3660046109cb565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ed565b61010961017d36600461099b565b61064a565b6000546101a29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b6101096106b7565b6101096101dd36600461099b565b61070c565b604080516001815260006020820152016100ed565b60005b6020811015610371576000828260208110610217576102176109f7565b1a60f81b90507f61000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610806102ae57507f7a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b80156102fc57507f5f000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821614155b801561032957507fff00000000000000000000000000000000000000000000000000000000000000811615155b15610368576040517f0eebce88000000000000000000000000000000000000000000000000000000008152600481018490526024015b60405180910390fd5b506001016101fa565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103c8576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610a26565b610532576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16156105bc576040517fbfa0c12400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b6105c5826101f7565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020818152604080842087855290915280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169092179091555184917f2ae6a113c0ed5b78a53413ffbb7679881f11145ccfba4fb92e863dfcd5a1d2f391a35050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16610371576040517f7de30f410000000000000000000000000000000000000000000000000000000081526004810183905260240161035f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461070a576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190610a26565b61082f576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff166108b8576040517fb2a720cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020908152604080832086845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555184917f155aaafb6329a2098580462df33ec4b7441b19729b9601c5fc17ae1cf99a8a5291a35050565b60006020828403121561094b57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461097457600080fd5b50565b60006020828403121561098957600080fd5b813561099481610952565b9392505050565b600080604083850312156109ae57600080fd5b8235915060208301356109c081610952565b809150509250929050565b600080604083850312156109de57600080fd5b82356109e981610952565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a3857600080fd5b8151801515811461099457600080fdfea26469706673582212204a2123866fc4f0206298105956e8d49e6e18ef63350ef4ff4f3ce47b11f9527764736f6c634300080f0033608060405234801561001057600080fd5b50604051610caa380380610caa83398101604081905261002f9161005d565b600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b610c0e8061009c6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806372b0bb4911610081578063d4aae0c41161005b578063d4aae0c4146101c8578063d547741f146101e8578063f851a440146101fb57600080fd5b806372b0bb491461018b578063923cb952146101935780639459b875146101b357600080fd5b80633ea26384116100b25780633ea263841461011e5780634657b36c146101635780635924be701461017657600080fd5b806303346696146100d957806322f3e2d4146100ee5780632f2ff15d1461010b575b600080fd5b6100ec6100e7366004610a1d565b61021b565b005b6100f66102db565b60405190151581526020015b60405180910390f35b6100ec610119366004610a41565b610373565b60025461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610102565b6100ec610171366004610a1d565b610455565b61017e6104f4565b6040516101029190610a71565b6100ec610645565b60035461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb61070f565b6040516101029190610b04565b60005461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ec6101f6366004610a41565b61081a565b60015461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff16331461026c576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa2c5878324891aaeaaa631341c00e3c30a2b70c1b6a1e9411b903402d40df5c990600090a250565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610b6a565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103c4576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517f656361ff0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063656361ff906044015b600060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104ad576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051600280825260608281019093527f524f4c45530000000000000000000000000000000000000000000000000000009190602082015b604080518082019091526000808252602082015281526020019060019003908161052d575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000831681527f656361ff00000000000000000000000000000000000000000000000000000000602082015281519193509083906000906105bf576105bf610b8c565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163f6ba000760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260018151811061063657610636610b8c565b60200260200101819052505090565b60025473ffffffffffffffffffffffffffffffffffffffff163314610696576040517fc5c898b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280546001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040517fecf24556cb4f08854c12350ad47cc1bf4bfe9ada0935ffb3d3de5f2f3f5a0ad690600090a2565b604080516001808252818301909252606091602080830190803683370190505090507f524f4c45530000000000000000000000000000000000000000000000000000008160008151811061076557610765610b8c565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506107d2816000815181106107c5576107c5610b8c565b60200260200101516108ca565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b60015473ffffffffffffffffffffffffffffffffffffffff16331461086b576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517ff6ba00070000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063f6ba00079060440161041f565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190610bbb565b905073ffffffffffffffffffffffffffffffffffffffff81166109f2576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016104a4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a1a57600080fd5b50565b600060208284031215610a2f57600080fd5b8135610a3a816109f8565b9392505050565b60008060408385031215610a5457600080fd5b823591506020830135610a66816109f8565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610af757815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101610a8e565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610b5e5783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101610b20565b50909695505050505050565b600060208284031215610b7c57600080fd5b81518015158114610a3a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610bcd57600080fd5b8151610a3a816109f856fea264697066735822122001208111947b361206645450d449a9dd0789147dbff53a2ceda894ae5da69b6664736f6c634300080f00336080604052600180553480156200001557600080fd5b5060405162002a3538038062002a35833981016040819052620000389162000094565b600080546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000e8565b6001600160a01b03811681146200009157600080fd5b50565b600080600060608486031215620000aa57600080fd5b8351620000b7816200007b565b6020850151909350620000ca816200007b565b6040850151909250620000dd816200007b565b809150509250925092565b61293d80620000f86000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063650d6ed6116100cd5780639459b87511610081578063a29a0d9011610066578063a29a0d9014610347578063b3ab15fb14610367578063d4aae0c41461037a57600080fd5b80639459b8751461031f57806398fc55d81461033457600080fd5b8063853dc0da116100b2578063853dc0da146102a95780638aeb40fd146102d7578063923cb952146102ff57600080fd5b8063650d6ed61461025b57806380cee4ab1461028957600080fd5b80634657b36c11610124578063570ca73511610109578063570ca73514610206578063577de7d0146102265780635924be701461024657600080fd5b80634657b36c146101e05780634b9de77c146101f357600080fd5b806309c2c843146101565780631074bce51461016b57806322f3e2d41461017e578063245a7bfc1461019b575b600080fd5b610169610164366004612413565b61039a565b005b6101696101793660046124f6565b6105f1565b6101866107eb565b60405190151581526020015b60405180910390f35b6009546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610192565b6101696101ee366004612522565b610883565b61016961020136600461253f565b610922565b6008546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b6007546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b61024e611173565b604051610192919061256b565b61027b610269366004612522565b60056020526000908152604090205481565b604051908152602001610192565b6006546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b6101866102b73660046124f6565b600360209081526000928352604080842090915290825290205460ff1681565b6102ea6102e53660046125fe565b611533565b60408051928352602083019190915201610192565b6002546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b61032761159a565b6040516101929190612617565b6101696103423660046124f6565b611858565b600a546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b610169610375366004612522565b611d96565b6000546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f61646d696e000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561042c57600080fd5b505af1158015610440573d6000803e3d6000fd5b5050835160009250829150815b818110156105e9578581815181106104675761046761267d565b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156104df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050391906126ac565b60065490935061052d9073ffffffffffffffffffffffffffffffffffffffff868116911685611ed6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb91906126ac565b73ffffffffffffffffffffffffffffffffffffffff851660009081526005602052604090205560010161044d565b505050505050565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c6973740000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b50506009546040517f78b5a87a0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911692506378b5a87a9150602401602060405180830381865afa15801561070a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072e91906126c5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610792576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff90911660009081526003602090815260408083209383529290522080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e91906126f2565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108db576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015460011461098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016108d2565b600260015533600090815260036020908152604080832086845290915290205460ff166109ea576040517f2c60e167000000000000000000000000000000000000000000000000000000008152600481018490526024016108d2565b6009546040517f5204794200000000000000000000000000000000000000000000000000000000815260048101859052600091829173ffffffffffffffffffffffffffffffffffffffff90911690635204794290602401602060405180830381865afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906126c5565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c866040518263ffffffff1660e01b8152600401610abc91815260200190565b60c060405180830381865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd919061270d565b505073ffffffffffffffffffffffffffffffffffffffff81166000908152600560205260409020549195509350610b379250869150612795565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc591906126ac565b1015610bfd576040517f8136384900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148015610c525750600a5473ffffffffffffffffffffffffffffffffffffffff8281169116145b15610d71576007546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081523060048201526024810186905273ffffffffffffffffffffffffffffffffffffffff90911690630152a5ea90604401600060405180830381600087803b158015610cc957600080fd5b505af1158015610cdd573d6000803e3d6000fd5b50506007546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff909116925063bbaed5cb91506044015b600060405180830381600087803b158015610d5457600080fd5b505af1158015610d68573d6000803e3d6000fd5b50505050610f38565b600a5473ffffffffffffffffffffffffffffffffffffffff90811690821603610e83576006546040517f2f42aef500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff84811660248301526044820186905290911690632f42aef590606401600060405180830381600087803b158015610e0e57600080fd5b505af1158015610e22573d6000803e3d6000fd5b50506007546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081523060048201526024810188905273ffffffffffffffffffffffffffffffffffffffff9091169250630152a5ea9150604401610d3a565b600a5473ffffffffffffffffffffffffffffffffffffffff90811690831603610f03576007546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081523360048201526024810185905273ffffffffffffffffffffffffffffffffffffffff9091169063bbaed5cb90604401610d3a565b6040517f2c60e167000000000000000000000000000000000000000000000000000000008152600481018690526024016108d2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc691906126ac565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260056020526040908190209290925590517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152908316906370a0823190602401602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b91906126ac565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600560209081526040808320939093558782526004905290812080548692906110b1908490612795565b90915550506000858152600460205260409020839060010160008282546110d89190612795565b90915550506008546040517fab104771000000000000000000000000000000000000000000000000000000008152600481018790526024810185905273ffffffffffffffffffffffffffffffffffffffff9091169063ab10477190604401600060405180830381600087803b15801561115057600080fd5b505af1158015611164573d6000803e3d6000fd5b50506001805550505050505050565b60606000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120891906127d4565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d91906127d4565b60408051600580825260c08201909252919250816020015b60408051808201909152600080825260208201528152602001906001900390816112b5575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000841681527fe6eb207a00000000000000000000000000000000000000000000000000000000602082015281519194509084906000906113475761134761267d565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001632f42aef560e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836001815181106113be576113be61267d565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163bbaed5cb60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836002815181106114355761143561267d565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630152a5ea60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836003815181106114ac576114ac61267d565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163359fe78060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836004815181106115235761152361267d565b6020026020010181905250505090565b600081815260046020526040808220815180830192839052839283929060029082845b8154815260200190600101908083116115565750505050509050806000600281106115835761158361267d565b602002015181600160200201519250925050915091565b604080516003808252608082019092526060916020820183803683370190505090507f5452535259000000000000000000000000000000000000000000000000000000816000815181106115f0576115f061267d565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526116487f4d494e545200000000000000000000000000000000000000000000000000000090565b8160018151811061165b5761165b61267d565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526116b37f524f4c455300000000000000000000000000000000000000000000000000000090565b816002815181106116c6576116c661267d565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050611733816000815181106117265761172661267d565b6020026020010151612046565b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611789816001815181106117265761172661267d565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117df816002815181106117265761172661267d565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055600754600a546118559290811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612174565b90565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f77686974656c6973740000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156118ea57600080fd5b505af11580156118fe573d6000803e3d6000fd5b50506009546040517f78b5a87a0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911692506378b5a87a9150602401602060405180830381865afa158015611971573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199591906126c5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146119f9576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff838116600090815260036020908152604080832086845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560095490517f520479420000000000000000000000000000000000000000000000000000000081526004810186905291928392911690635204794290602401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906126c5565b73ffffffffffffffffffffffffffffffffffffffff1684604051602401611afd91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb1283e770000000000000000000000000000000000000000000000000000000017905251611b7e9190612816565b6000604051808303816000865af19150503d8060008114611bbb576040519150601f19603f3d011682016040523d82523d6000602084013e611bc0565b606091505b509150915081611bfc576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600080600085806020019051810190611c189190612851565b9b50505050985050975097505050955050600084611c365783611c41565b611c418483856122dd565b600a5490915073ffffffffffffffffffffffffffffffffffffffff90811690871603611cf6576007546040517f359fe7800000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063359fe78090604401600060405180830381600087803b158015611cd957600080fd5b505af1158015611ced573d6000803e3d6000fd5b50505050611d89565b6006546040517fe6eb207a00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8881166024830152604482018490529091169063e6eb207a90606401600060405180830381600087803b158015611d7057600080fd5b505af1158015611d84573d6000803e3d6000fd5b505050505b5050505050505050505050565b6002546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f63616c6c6261636b5f61646d696e000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015611e2857600080fd5b505af1158015611e3c573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff83169050611e8e576040517fc7a4111e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611f6d9190612816565b6000604051808303816000865af19150503d8060008114611faa576040519150601f19603f3d011682016040523d82523d6000602084013e611faf565b606091505b5091509150818015611fd9575080511580611fd9575080806020019051810190611fd991906126f2565b61203f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016108d2565b5050505050565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa1580156120d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fb91906126c5565b905073ffffffffffffffffffffffffffffffffffffffff811661216e576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016108d2565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052915160009283929087169161220b9190612816565b6000604051808303816000865af19150503d8060008114612248576040519150601f19603f3d011682016040523d82523d6000602084013e61224d565b606091505b509150915081801561227757508051158061227757508080602001905181019061227791906126f2565b61203f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016108d2565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612334576000841161232957600080fd5b5082900490506123a8565b80841161234057600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461240057600080fd5b50565b803561240e816123de565b919050565b6000602080838503121561242657600080fd5b823567ffffffffffffffff8082111561243e57600080fd5b818501915085601f83011261245257600080fd5b813581811115612464576124646123af565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156124a7576124a76123af565b6040529182528482019250838101850191888311156124c557600080fd5b938501935b828510156124ea576124db85612403565b845293850193928501926124ca565b98975050505050505050565b6000806040838503121561250957600080fd5b8235612514816123de565b946020939093013593505050565b60006020828403121561253457600080fd5b81356123a8816123de565b60008060006060848603121561255457600080fd5b505081359360208301359350604090920135919050565b602080825282518282018190526000919060409081850190868401855b828110156125f157815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101612588565b5091979650505050505050565b60006020828403121561261057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156126715783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101612633565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156126be57600080fd5b5051919050565b6000602082840312156126d757600080fd5b81516123a8816123de565b8051801515811461240e57600080fd5b60006020828403121561270457600080fd5b6123a8826126e2565b60008060008060008060c0878903121561272657600080fd5b8651612731816123de565b6020880151909650612742816123de565b6040880151909550612753816123de565b6060880151909450612764816123de565b608088015190935065ffffffffffff8116811461278057600080fd5b8092505060a087015190509295509295509295565b600082198211156127cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000602082840312156127e657600080fd5b81517fffffffffff000000000000000000000000000000000000000000000000000000811681146123a857600080fd5b6000825160005b81811015612837576020818601810151858301520161281d565b81811115612846576000828501525b509190910192915050565b6000806000806000806000806000806000806101808d8f03121561287457600080fd5b8c5161287f816123de565b60208e0151909c50612890816123de565b60408e0151909b506128a1816123de565b60608e0151909a506128b2816123de565b98506128c060808e016126e2565b975060a08d0151965060c08d0151955060e08d015194506101008d015193506101208d015192506101408d015191506101608d015190509295989b509295989b509295989b56fea2646970667358221220abd5ddd2b793c4b2be821bd9e5c56fd66bac29d2c6d2f5491e8265e57ee9316d64736f6c634300080f003361010060405260016002553480156200001757600080fd5b5060405162008114380380620081148339810160408190526200003a9162000a75565b600080546001600160a01b0319166001600160a01b0387811691909117909155841615806200007057506001600160a01b038316155b156200008f5760405163042a67ad60e41b815260040160405180910390fd5b62093a80816001602002015163ffffffff161180620000bd575062015180816001602002015163ffffffff16105b15620000dc5760405163042a67ad60e41b815260040160405180910390fd5b612710816002602002015163ffffffff1610156200010d5760405163042a67ad60e41b815260040160405180910390fd5b610e10816003602002015163ffffffff1610806200013c57506020810151606082015163ffffffff9182169116115b156200015b5760405163042a67ad60e41b815260040160405180910390fd5b805161271063ffffffff90911611806200017e57508051606463ffffffff909116105b156200019d5760405163042a67ad60e41b815260040160405180910390fd5b612710816004602002015163ffffffff161180620001c857506064816004602002015163ffffffff16105b15620001e75760405163042a67ad60e41b815260040160405180910390fd5b610e10816005602002015163ffffffff16108062000216575060e081015160c082015163ffffffff9182169116115b806200022a575060e081015163ffffffff16155b806200023e575060c081015163ffffffff16155b156200025d5760405163042a67ad60e41b815260040160405180910390fd5b600c80546001600160a01b038681166001600160a01b031992831617909255600d805486841692169190911790558251811660805282516040805163313ce56760e01b81529051919092169163313ce5679160048083019260209291908290030181865afa158015620002d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002fa919062000b52565b60ff1660a05281600160200201516001600160a01b031660c05281600160200201516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000380919062000b52565b60ff1660e05260408051608081018252600080825265ffffffffffff4216602083015291810182905260608101836007602002015163ffffffff166001600160401b03811115620003d557620003d562000994565b604051908082528060200260200182016040528015620003ff578160200160208202803683370190505b5090526040805161010081018252845163ffffffff908116825260208087015182169083015285830151169181019190915290915060608101836003602002015163ffffffff1681526020018360046008811062000461576200046162000b3c565b602002015163ffffffff1681526020018360056008811062000487576200048762000b3c565b602002015163ffffffff16815260200183600660088110620004ad57620004ad62000b3c565b602002015163ffffffff16815260200183600760088110620004d357620004d362000b3c565b602002015163ffffffff16815250600760008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160000160106101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160000160186101000a81548163ffffffff021916908363ffffffff16021790555060e082015181600001601c6101000a81548163ffffffff021916908363ffffffff160217905550905050604051806040016040528082815260200182815250600360008201518160000160008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548165ffffffffffff021916908365ffffffffffff160217905550604082015181600001600a6101000a81548163ffffffff021916908363ffffffff1602179055506060820151816001019080519060200190620006d5929190620008b8565b505050602082810151805160028401805483850151604085015163ffffffff9081166a01000000000000000000000263ffffffff60501b1965ffffffffffff909316640100000000026001600160501b0319909416919095161791909117169190911781556060820151805192939192620007579260038701920190620008b8565b5050509050507f5760955ed2acbd2b290c0a6edf1c0bc845f64f1da0b9f89582fac3daade8dff58260006008811062000794576200079462000b3c565b6020020151604051620007b3919063ffffffff91909116815260200190565b60405180910390a1602080830151604080850151606080870151835163ffffffff95861681529285169583019590955292909316908301527f6627cd780fa2d7faf558f4d9d700a0852b79903fd60ce8c0f734103cf8aa12b8910160405180910390a1608082015160405163ffffffff90911681527fb3f67f3c41e3a7c2c87b93a1c1fe4581744242b44b44d4a873ca8facec1ee8a59060200160405180910390a160a082015160c083015160e08401516040805163ffffffff9485168152928416602084015292168183015290517f9f11b1d829316eb1d4d6f91541c83d9f78bc1e309f755c759d190c973f7b4fae9181900360600190a150505050505062000b7e565b82805482825590600052602060002090601f01602090048101928215620009525791602002820160005b838211156200092157835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302620008e2565b8015620009505782816101000a81549060ff021916905560010160208160000104928301926001030262000921565b505b506200096092915062000964565b5090565b5b8082111562000960576000815560010162000965565b6001600160a01b03811681146200099157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715620009db57634e487b7160e01b600052604160045260246000fd5b60405290565b600082601f830112620009f357600080fd5b6040516101008082016001600160401b038111838210171562000a2657634e487b7160e01b600052604160045260246000fd5b6040528301818582111562000a3a57600080fd5b845b8281101562000a6a57805163ffffffff8116811462000a5b5760008081fd5b82526020918201910162000a3c565b509195945050505050565b60008060008060006101a0868803121562000a8f57600080fd5b855162000a9c816200097b565b8095505060208087015162000ab1816200097b565b604088015190955062000ac4816200097b565b9350607f8701881362000ad657600080fd5b62000ae0620009aa565b8060a089018a81111562000af357600080fd5b60608a015b8181101562000b1c57805162000b0e816200097b565b845292840192840162000af8565b5081955062000b2c8b82620009e1565b9450505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562000b6557600080fd5b815160ff8116811462000b7757600080fd5b9392505050565b60805160a05160c05160e05161747c62000c98600039600081816103bf01528181612bef0152818161399101528181614fc4015281816150cc0152818161578c01526157da0152600081816105fc0152818161294901528181613054015281816130d801528181613152015281816132bb0152818161339e01528181613b380152818161439d01528181614435015281816144fe015281816152f8015261597101526000818161038601528181612b2d01528181613a4801528181614fe5015281816150ab0152818161576b01526157fb01526000818161057f015281816128ca01528181612e2101528181612f78015281816130fd01528181613379015281816138c1015281816152c901526159a0015261747c6000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80636e703c2e11610145578063aa9760a1116100bd578063cd3293de1161008c578063dd0081c711610071578063dd0081c714610631578063f2f6d5bb1461063a578063f2fa47371461064d57600080fd5b8063cd3293de146105f7578063d4aae0c41461061e57600080fd5b8063aa9760a1146105a1578063ab104771146105b4578063bb2eb4d2146105c7578063ca706bcf146105e457600080fd5b8063923cb952116101145780639e897711116100f95780639e897711146105465780639f1d0f5914610567578063a29a0d901461057a57600080fd5b8063923cb9521461051e5780639459b8751461053157600080fd5b80636e703c2e146103ba5780637159a618146103e157806379502c55146103e95780638129fc1c1461051657600080fd5b80632ecd1f20116101d85780634657b36c116101a75780635924be701161018c5780635924be70146103595780635ec2c7bf1461036e5780636a839ed61461038157600080fd5b80634657b36c1461033e57806351b42b001461035157600080fd5b80632ecd1f20146102f257806333bd33b4146103055780633a3f54bc1461031857806341f19a461461032b57600080fd5b8063158ef93e11610214578063158ef93e146102b557806319f63dd7146102c2578063200d2ed2146102d557806322f3e2d4146102ea57600080fd5b806301de9ba81461024657806302fb0c5e1461025b578063083b2732146102825780630f15f4c0146102ad575b600080fd5b610259610254366004616683565b610660565b005b60085461026d90610100900460ff1681565b60405190151581526020015b60405180910390f35b600d54610295906001600160a01b031681565b6040516001600160a01b039091168152602001610279565b6102596107d7565b60085461026d9060ff1681565b6102596102d03660046166b3565b6108a3565b6102dd6109db565b604051610279919061676c565b61026d610bc4565b6102596103003660046167da565b610c4f565b6102596103133660046167f7565b610cf9565b610259610326366004616810565b610e12565b610259610339366004616853565b6111f7565b61025961034c366004616875565b61131f565b6102596113a4565b610361611481565b6040516102799190616892565b600c54610295906001600160a01b031681565b6103a87f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610279565b6103a87f000000000000000000000000000000000000000000000000000000000000000081565b610259611c41565b6105096040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250604080516101008101825260075463ffffffff80821683526401000000008204811660208401526801000000000000000082048116938301939093526c01000000000000000000000000810483166060830152700100000000000000000000000000000000810483166080830152740100000000000000000000000000000000000000008104831660a083015278010000000000000000000000000000000000000000000000008104831660c08301527c0100000000000000000000000000000000000000000000000000000000900490911660e082015290565b6040516102799190616925565b610259612406565b600154610295906001600160a01b031681565b61053961252d565b60405161027991906169ac565b6105596105543660046167da565b612916565b604051908152602001610279565b610559610575366004616a12565b612c45565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b6102596105af366004616683565b613426565b6102596105c2366004616853565b61357f565b6105cf606481565b60405163ffffffff9091168152602001610279565b6105596105f2366004616a47565b6138bd565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b600054610295906001600160a01b031681565b6105cf61271081565b6102596106483660046167da565b613c18565b61025961065b366004616810565b613cbe565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b5050505061271063ffffffff168263ffffffff16118061071f5750606463ffffffff8316105b15610756576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000063ffffffff8516908102919091179091556040519081527fb3f67f3c41e3a7c2c87b93a1c1fe4581744242b44b44d4a873ca8facec1ee8a5906020015b60405180910390a15050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561085c57600080fd5b505af1158015610870573d6000803e3d6000fd5b5050600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b505050506001600160a01b038316158061095d57506001600160a01b038216155b15610994576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600c80546001600160a01b039384167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600d8054929093169116179055565b610a346040805160c08101825260009181018281526060808301849052608083019390935260a0820192909252908190815260408051608081018252600080825260208281018290529282015260608082015291015290565b6040805160c0810182526003805463ffffffff80821684860190815265ffffffffffff64010000000084041660608601526a0100000000000000000000909204166080840152600480548551602082810282018101909752818152949593948694869360a08701939091830182828015610aed57602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411610abc5790505b5050509190925250505081526040805160808101825260028401805463ffffffff808216845265ffffffffffff6401000000008304166020858101919091526a010000000000000000000090920416838501526003860180548551818402810184019096528086529582019593949293606086019392830182828015610bb257602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411610b815790505b50505050508152505081525050905090565b600080546040517fe52223bb0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169063e52223bb90602401602060405180830381865afa158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a9190616a73565b905090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b50505050610cf582613f33565b5050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b50506009546040517f33bd33b4000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0390911692506333bd33b491506024015b600060405180830381600087803b158015610df657600080fd5b505af1158015610e0a573d6000803e3d6000fd5b505050505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015610e9757600080fd5b505af1158015610eab573d6000803e3d6000fd5b50505050610e108463ffffffff161080610ed057508163ffffffff168363ffffffff16115b80610edf575063ffffffff8216155b80610eee575063ffffffff8316155b80610f955750610efe8383616abf565b63ffffffff16600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b9190616afa565b610f8b9063ffffffff8716616b44565b65ffffffffffff16105b15610fcc576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000063ffffffff878116919091027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1691909117780100000000000000000000000000000000000000000000000086831602177bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167c010000000000000000000000000000000000000000000000000000000091851691820217909155600580547fffffffffffffffffffffffffffffffffffff00000000ffffffffffff0000000016905567ffffffffffffffff8111156110df576110df616b69565b604051908082528060200260200182016040528015611108578160200160208202803683370190505b50805161111d916006916020909101906165b0565b50600380547fffffffffffffffffffffffffffffffffffff00000000ffffffffffff0000000016905563ffffffff821667ffffffffffffffff81111561116557611165616b69565b60405190808252806020026020018201604052801561118e578160200160208202803683370190505b5080516111a3916004916020909101906165b0565b506040805163ffffffff808716825280861660208301528416918101919091527f9f11b1d829316eb1d4d6f91541c83d9f78bc1e309f755c759d190c973f7b4fae906060015b60405180910390a150505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561127c57600080fd5b505af1158015611290573d6000803e3d6000fd5b50506009546040517f41f19a4600000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160a01b0390911692506341f19a469150604401600060405180830381600087803b1580156112fa57600080fd5b505af115801561130e573d6000803e3d6000fd5b5050505061131a6145f6565b505050565b6000546001600160a01b0316331461136a576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561142957600080fd5b505af115801561143d573d6000803e3d6000fd5b5050600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550611474905060016146ea565b61147e60006146ea565b50565b60606000600960009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fc9190616b98565b90506000600a60009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611553573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115779190616b98565b90506000600b60009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f29190616b98565b60408051600d8082526101c08201909252919250816020015b604080518082019091526000808252602082015281526020019060019003908161160b575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000851681527f6d9a9a62000000000000000000000000000000000000000000000000000000006020820152815191955090859060009061169d5761169d616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001633e56993a60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460018151811061171457611714616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163ae7e8d8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460028151811061178b5761178b616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200162d1673960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460038151811061180157611801616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016341f19a4660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460048151811061187857611878616bda565b60200260200101819052506040518060400160405280847affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016333bd33b460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250846005815181106118ef576118ef616bda565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001632f42aef560e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508460068151811061196657611966616bda565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163e6eb207a60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250846007815181106119dd576119dd616bda565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001638b7f3fb960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600881518110611a5457611a54616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163bbaed5cb60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600981518110611acb57611acb616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630152a5ea60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600a81518110611b4257611b42616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163359fe78060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600b81518110611bb957611bb9616bda565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001631b0a68f260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525084600c81518110611c3057611c30616bda565b602002602001018190525050505090565b600854610100900460ff161580611d695750600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190616afa565b611cd5906003616c09565b600860029054906101000a90046001600160a01b03166001600160a01b031663d266f5d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4c9190616afa565b611d569190616c37565b65ffffffffffff164265ffffffffffff16115b15611da0576040517f5ac0916c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f6f7065726174650000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015611e2557600080fd5b505af1158015611e39573d6000803e3d6000fd5b505060085460ff169150611e7b9050576040517f79709bae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e836145f6565b611e8b6148ed565b604080516101008101825260075463ffffffff80821683526401000000008204811660208401526801000000000000000082048116838501526c01000000000000000000000000820481166060840152700100000000000000000000000000000000820481166080840152740100000000000000000000000000000000000000008204811660a0840181905278010000000000000000000000000000000000000000000000008304821660c08501527c01000000000000000000000000000000000000000000000000000000009092041660e083015260095492517fe69f3c4e00000000000000000000000000000000000000000000000000000000815260016004820152919290916001600160a01b039091169063e69f3c4e90602401602060405180830381865afa158015611fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fea9190616c61565b611ff49190616c7a565b4265ffffffffffff161015801561201b575060c081015160055463ffffffff918216911610155b1561202a5761202a6001613f33565b60a08101516009546040517fe69f3c4e0000000000000000000000000000000000000000000000000000000081526000600482015263ffffffff909216916001600160a01b039091169063e69f3c4e90602401602060405180830381865afa15801561209a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120be9190616c61565b6120c89190616c7a565b4265ffffffffffff16101580156120ef575060c081015160035463ffffffff918216911610155b156120fe576120fe6000613f33565b600954604080517fe97206a900000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163e97206a9916004808301926102009291908290030181865afa158015612162573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121869190616e33565b90506000600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122019190616c61565b8251519091501561230557600c548251608001516040517f275074580000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163275074589161225d9160040190815260200190565b602060405180830381865afa15801561227a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229e9190616a73565b156122d657604082015160200151518111806122c257506060820151602001515181105b156122d1576122d160006146ea565b612305565b60408201516020015151811080156122f657506060820151602001515181115b15612305576123056000614f0d565b6020820151511561240057600c546020830151608001516040517f275074580000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916327507458916123649160040190815260200190565b602060405180830381865afa158015612381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a59190616a73565b156123d757604082015151518110806123c357506060820151515181115b156123d2576123d260016146ea565b612400565b60408201515151811180156123f157506060820151515181105b15612400576124006001614f0d565b50505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f61646d696e00000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561248b57600080fd5b505af115801561249f573d6000803e3d6000fd5b505060085460ff161591506124e29050576040517f58b8d27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6124ea6145f6565b6124f46001613f33565b6124fe6000613f33565b50600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101179055565b60408051600580825260c082019092526060916020820160a0803683370190505090507f50524943450000000000000000000000000000000000000000000000000000008160008151811061258457612584616bda565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526125dc7f52414e474500000000000000000000000000000000000000000000000000000090565b816001815181106125ef576125ef616bda565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526126477f545253525900000000000000000000000000000000000000000000000000000090565b8160028151811061265a5761265a616bda565b7fffffffffff000000000000000000000000000000000000000000000000000000909216602092830291909101909101526126b27f4d494e545200000000000000000000000000000000000000000000000000000090565b816003815181106126c5576126c5616bda565b7fffffffffff0000000000000000000000000000000000000000000000000000009092166020928302919091019091015261271d7f524f4c455300000000000000000000000000000000000000000000000000000090565b8160048151811061273057612730616bda565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505061279d8160008151811061279057612790616bda565b6020026020010151615cb1565b600860026101000a8154816001600160a01b0302191690836001600160a01b031602179055506127d98160018151811061279057612790616bda565b600960006101000a8154816001600160a01b0302191690836001600160a01b031602179055506128158160028151811061279057612790616bda565b600a60006101000a8154816001600160a01b0302191690836001600160a01b031602179055506128518160038151811061279057612790616bda565b600b60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061288d8160048151811061279057612790616bda565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600b54612913917f0000000000000000000000000000000000000000000000000000000000000000811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff615dbf565b90565b600a546040517f15226b540000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009283929116906315226b5490602401602060405180830381865afa15801561299d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c19190616c61565b600754909150600090612710906129f290700100000000000000000000000000000000900463ffffffff1684616ede565b6129fc9190616f1b565b90508315612c3e576009546040517f8c3f914a00000000000000000000000000000000000000000000000000000000815260016004820152612710916001600160a01b031690638c3f914a90602401602060405180830381865afa158015612a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8c9190616c61565b612a97906002616ede565b612aa390612710616c7a565b612c27600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1d9190616f2f565b612b2890600a617072565b612b537f0000000000000000000000000000000000000000000000000000000000000000600a617072565b612b5d9190616ede565b6009546040517f3778c2b200000000000000000000000000000000000000000000000000000000815260016004820181905260248201526001600160a01b0390911690633778c2b290604401602060405180830381865afa158015612bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bea9190616c61565b612c157f0000000000000000000000000000000000000000000000000000000000000000600a617072565b612c1f9190616ede565b859190615f1b565b612c319190616ede565b612c3b9190616f1b565b90505b9392505050565b600854600090610100900460ff161580612d705750600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd19190616afa565b612cdc906003616c09565b600860029054906101000a90046001600160a01b03166001600160a01b031663d266f5d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d539190616afa565b612d5d9190616c37565b65ffffffffffff164265ffffffffffff16115b15612da7576040517f5ac0916c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254600114612e13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401611361565b600280556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690851603613150576009546040517f59d236e6000000000000000000000000000000000000000000000000000000008152600060048201526001600160a01b03909116906359d236e690602401602060405180830381865afa158015612eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ed09190616a73565b612f06576040517f1c184ff500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612f1084846138bd565b905081811015612f56576040517fc2d2c7430000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401611361565b612f61600082615fe6565b612f6b60006160cf565b612fa06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330866163a0565b600b546040517f0152a5ea000000000000000000000000000000000000000000000000000000008152306004820152602481018590526001600160a01b0390911690630152a5ea90604401600060405180830381600087803b15801561300557600080fd5b505af1158015613019573d6000803e3d6000fd5b5050600a546040517f2f42aef50000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018690529091169250632f42aef59150606401600060405180830381600087803b1580156130aa57600080fd5b505af11580156130be573d6000803e3d6000fd5b505060408051868152602081018590526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694507f00000000000000000000000000000000000000000000000000000000000000001692507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe23591015b60405180910390a361341a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316036133e8576009546040517f59d236e6000000000000000000000000000000000000000000000000000000008152600160048201526001600160a01b03909116906359d236e690602401602060405180830381865afa1580156131eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061320f9190616a73565b613245576040517f1c184ff500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61324f84846138bd565b905081811015613295576040517fc2d2c7430000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401611361565b6132a0600182615fe6565b6132aa60016160cf565b600a546132e6906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691339116866163a0565b600b546040517fbbaed5cb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063bbaed5cb90604401600060405180830381600087803b15801561334b57600080fd5b505af115801561335f573d6000803e3d6000fd5b505060408051868152602081018590526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694507f00000000000000000000000000000000000000000000000000000000000000001692507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe2359101613143565b6040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002559392505050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b1580156134ab57600080fd5b505af11580156134bf573d6000803e3d6000fd5b5050505061271063ffffffff168263ffffffff1611806134e55750606463ffffffff8316105b1561351c576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff84169081179091556040519081527f5760955ed2acbd2b290c0a6edf1c0bc845f64f1da0b9f89582fac3daade8dff5906020016107cb565b600854610100900460ff1615806136a75750600860029054906101000a90046001600160a01b03166001600160a01b0316637321f1006040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136089190616afa565b613613906003616c09565b600860029054906101000a90046001600160a01b03166001600160a01b031663d266f5d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015613666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061368a9190616afa565b6136949190616c37565b65ffffffffffff164265ffffffffffff16115b156136de576040517f5ac0916c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f7265706f7274657200000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b15801561376357600080fd5b505af1158015613777573d6000803e3d6000fd5b50506009546040517fc45e91d6000000000000000000000000000000000000000000000000000000008152600160048201526001600160a01b03909116925063c45e91d69150602401602060405180830381865afa1580156137dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138019190616c61565b830361381c57613812600183615fe6565b61381c60016160cf565b6009546040517fc45e91d6000000000000000000000000000000000000000000000000000000008152600060048201526001600160a01b039091169063c45e91d690602401602060405180830381865afa15801561387e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138a29190616c61565b830361131a576138b3600083615fe6565b61131a60006160cf565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031603613b36576009546040517f3778c2b20000000000000000000000000000000000000000000000000000000081526001600482015260006024820181905291613a6e916001600160a01b0390911690633778c2b290604401602060405180830381865afa158015613968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061398c9190616c61565b6139b77f0000000000000000000000000000000000000000000000000000000000000000600a617072565b6139c19190616ede565b600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a389190616f2f565b613a4390600a617072565b612c157f0000000000000000000000000000000000000000000000000000000000000000600a617072565b6009546040517fbf30142b000000000000000000000000000000000000000000000000000000008152600060048201529192506001600160a01b03169063bf30142b906024015b602060405180830381865afa158015613ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613af69190616c61565b811115613b2f576040517f2c05036100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9050613c12565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316036133e8576000613bc7600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612af9573d6000803e3d6000fd5b6009546040517fbf30142b000000000000000000000000000000000000000000000000000000008152600160048201529192506001600160a01b03169063bf30142b90602401613ab5565b92915050565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015613c9d57600080fd5b505af1158015613cb1573d6000803e3d6000fd5b50505050610cf5826146ea565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f6f70657261746f725f706f6c696379000000000000000000000000000000000060048201819052336024830152916001600160a01b03169063d09a20c590604401600060405180830381600087803b158015613d4357600080fd5b505af1158015613d57573d6000803e3d6000fd5b5050505062093a808463ffffffff161180613d7a5750620151808463ffffffff16105b15613db1576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61271063ffffffff84161015613df3576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1063ffffffff83161080613e1457508363ffffffff168263ffffffff16115b15613e4b576040517f42a67ad000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780547fffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffff1664010000000063ffffffff8781169182027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff169290921768010000000000000000878416908102919091177fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff166c0100000000000000000000000093871693840217909355604080519182526020820193909352918201527f6627cd780fa2d7faf558f4d9d700a0852b79903fd60ce8c0f734103cf8aa12b8906060016111e9565b613f3c816146ea565b801561427857600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001690556007547c0100000000000000000000000000000000000000000000000000000000900463ffffffff1667ffffffffffffffff811115613fab57613fab616b69565b604051908082528060200260200182016040528015613fd4578160200160208202803683370190505b508051613fe9916006916020909101906165b0565b50600580547fffffffffffffffffffffffffffffffffffff00000000000000000000ffffffff166401000000004265ffffffffffff1602179055600061402f6001612916565b600b546040517f664aecb00000000000000000000000000000000000000000000000000000000081523060048201529192506000916001600160a01b039091169063664aecb090602401602060405180830381865afa158015614096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140ba9190616c61565b90508181101561415b57600b546001600160a01b031663359fe780306140e08486617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561413e57600080fd5b505af1158015614152573d6000803e3d6000fd5b505050506141f6565b818111156141f657600b546001600160a01b0316631b0a68f23061417f8585617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156141dd57600080fd5b505af11580156141f1573d6000803e3d6000fd5b505050505b6009546040517ed1673900000000000000000000000000000000000000000000000000000000815260016004820152602481018490526001600160a01b039091169062d16739906044015b600060405180830381600087803b15801561425b57600080fd5b505af115801561426f573d6000803e3d6000fd5b50505050505050565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001690556007547c0100000000000000000000000000000000000000000000000000000000900463ffffffff1667ffffffffffffffff8111156142e1576142e1616b69565b60405190808252806020026020018201604052801561430a578160200160208202803683370190505b50805161431f916004916020909101906165b0565b50600380547fffffffffffffffffffffffffffffffffffff00000000000000000000ffffffff166401000000004265ffffffffffff1602179055600061436481612916565b600a546040517f5f0736a10000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015292935060009290911690635f0736a190604401602060405180830381865afa1580156143f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144179190616c61565b9050818110156144e257600a546001600160a01b031663e6eb207a307f000000000000000000000000000000000000000000000000000000000000000061445e8587617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156144c557600080fd5b505af11580156144d9573d6000803e3d6000fd5b505050506145a7565b818111156145a757600a546001600160a01b0316638b7f3fb9307f00000000000000000000000000000000000000000000000000000000000000006145278686617081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561458e57600080fd5b505af11580156145a2573d6000803e3d6000fd5b505050505b6009546040517ed1673900000000000000000000000000000000000000000000000000000000815260006004820152602481018490526001600160a01b039091169062d1673990604401614241565b6000600860029054906101000a90046001600160a01b03166001600160a01b031663bd01bb326040518163ffffffff1660e01b8152600401602060405180830381865afa15801561464b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061466f9190616c61565b6009546040517fae7e8d81000000000000000000000000000000000000000000000000000000008152600481018390529192506001600160a01b03169063ae7e8d8190602401600060405180830381600087803b1580156146cf57600080fd5b505af11580156146e3573d6000803e3d6000fd5b5050505050565b6009546040517fc45e91d600000000000000000000000000000000000000000000000000000000815282151560048201526000916001600160a01b03169063c45e91d690602401602060405180830381865afa15801561474e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147729190616c61565b600c546040517f27507458000000000000000000000000000000000000000000000000000000008152600481018390529192506001600160a01b031690632750745890602401602060405180830381865afa1580156147d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147f99190616a73565b15610cf557600c546040517fae418095000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b039091169063ae41809590602401600060405180830381600087803b15801561485d57600080fd5b505af1158015614871573d6000803e3d6000fd5b50506009546040517f3e56993a00000000000000000000000000000000000000000000000000000000815285151560048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6024820152600060448201526001600160a01b039091169250633e56993a9150606401610ddc565b6000600860029054906101000a90046001600160a01b03166001600160a01b031663bd01bb326040518163ffffffff1660e01b8152600401602060405180830381865afa158015614942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149669190616c61565b90506000600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156149bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e19190616c61565b600754604080516080810182526003805463ffffffff818116845265ffffffffffff6401000000008304166020808601919091526a0100000000000000000000909204811684860152600480548651818502810185019097528087529798507c0100000000000000000000000000000000000000000000000000000000909604169560009593949293606086019392909190830182828015614ac257602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411614a915790505b5050505050815250509050838310614b86578060600151816040015163ffffffff1681518110614af457614af4616bda565b6020026020010151614b815760408101516004805460019263ffffffff16908110614b2157614b21616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556003805463ffffffff1691614b6183617098565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b614c34565b8060600151816040015163ffffffff1681518110614ba657614ba6616bda565b602002602001015115614c345760408101516004805460009263ffffffff16908110614bd457614bd4616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556003805463ffffffff1691614c14836170bb565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b8181604001516001614c4691906170f9565b614c509190617118565b600380547fffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffff166a010000000000000000000063ffffffff93841681029190911790915560408051608081018252600580548086168352640100000000810465ffffffffffff16602080850191909152949004909416818301526006805483518186028101860190945280845291949360608601939290830182828015614d3557602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411614d045790505b5050505050815250509050838311614df9578060600151816040015163ffffffff1681518110614d6757614d67616bda565b6020026020010151614df45760408101516006805460019263ffffffff16908110614d9457614d94616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556005805463ffffffff1691614dd483617098565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b614ea7565b8060600151816040015163ffffffff1681518110614e1957614e19616bda565b602002602001015115614ea75760408101516006805460009263ffffffff16908110614e4757614e47616bda565b60009182526020808320908204018054931515601f9092166101000a91820260ff90920219909316179091556005805463ffffffff1691614e87836170bb565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b8181604001516001614eb991906170f9565b614ec39190617118565b6005805463ffffffff929092166a0100000000000000000000027fffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffff90921691909117905550505050565b600954604080517fe97206a900000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163e97206a9916004808301926102009291908290030181865afa158015614f71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f959190616e33565b905081156156065760408101515151600090614fb090616504565b90506000614fbf60028361713b565b6150097f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006171af565b6150139190617211565b9050600082600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561506b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061508f9190616f2f565b61509991906171af565b6150a490600a617072565b90506000837f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006150f6866024617211565b6151009190617211565b61510a91906171af565b61511491906171af565b61511f90600a617072565b905060006151a68284600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561517b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061519f9190616c61565b9190615f1b565b604087015151519091506000906151be908486615f1b565b604080516101008101825260075463ffffffff808216808452640100000000830482166020808601919091526801000000000000000084048316858701526c01000000000000000000000000840483166060860152700100000000000000000000000000000000840483166080860152740100000000000000000000000000000000000000008404831660a086015278010000000000000000000000000000000000000000000000008404831660c08601527c0100000000000000000000000000000000000000000000000000000000909304821660e0850152918c01519093015193945090926000926152b7929061271090615f1b16565b905060006040518061018001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600d60009054906101000a90046001600160a01b03166001600160a01b03168152602001600015158152602001838152602001868152602001858152602001846040015163ffffffff168152602001600065ffffffffffff168152602001846020015163ffffffff16426153999190616c7a565b65ffffffffffff168152602001846060015163ffffffff1681526020018960000b81525090506000600c60009054906101000a90046001600160a01b03166001600160a01b03166353c7f8e0836040516020016153f69190617272565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401615421919061737c565b6020604051808303816000875af1158015615440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906154649190616c61565b600d54600c54604080517f9787d10700000000000000000000000000000000000000000000000000000000815290519394506001600160a01b03928316936398fc55d89390921691639787d107916004808201926020929091908290030181865afa1580156154d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906154fb91906173cd565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b15801561555b57600080fd5b505af115801561556f573d6000803e3d6000fd5b50506009546040517f3e56993a0000000000000000000000000000000000000000000000000000000081526001600482015260248101859052604481018790526001600160a01b039091169250633e56993a9150606401600060405180830381600087803b1580156155e057600080fd5b505af11580156155f4573d6000803e3d6000fd5b50505050505050505050505050505050565b6000600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561565b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061567f9190616f2f565b6040830151602001515190915060009061569a8360026173ea565b6156a590600a617072565b6156af9190616f1b565b90506000600860029054906101000a90046001600160a01b03166001600160a01b031663d8cf24fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015615706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061572a9190616c61565b6157358460026173ea565b61574090600a617072565b61574a9190616f1b565b9050600061575783616504565b9050600061576660028361713b565b6157b07f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006171af565b6157ba9190617211565b905060006157c883876171af565b6157d390600a617072565b90506000837f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000615825866024617211565b61582f9190617211565b61583991906171af565b61584391906171af565b61584e90600a617072565b9050600061585d868385615f1b565b9050600061586c888486615f1b565b604080516101008101825260075463ffffffff8082168084526401000000008304821660208501526801000000000000000083048216848601526c01000000000000000000000000830482166060850152700100000000000000000000000000000000830482166080850152740100000000000000000000000000000000000000008304821660a085015278010000000000000000000000000000000000000000000000008304821660c08501527c0100000000000000000000000000000000000000000000000000000000909204811660e08401528e5190930151939450909260009261595f929061271090615f1b16565b905060006040518061018001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600d60009054906101000a90046001600160a01b03166001600160a01b03168152602001600015158152602001838152602001868152602001858152602001846040015163ffffffff168152602001600065ffffffffffff168152602001846020015163ffffffff1642615a419190616c7a565b65ffffffffffff168152602001846060015163ffffffff1681526020018960000b81525090506000600c60009054906101000a90046001600160a01b03166001600160a01b03166353c7f8e083604051602001615a9e9190617272565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401615ac9919061737c565b6020604051808303816000875af1158015615ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615b0c9190616c61565b600d54600c54604080517f9787d10700000000000000000000000000000000000000000000000000000000815290519394506001600160a01b03928316936398fc55d89390921691639787d107916004808201926020929091908290030181865afa158015615b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615ba391906173cd565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b158015615c0357600080fd5b505af1158015615c17573d6000803e3d6000fd5b50506009546040517f3e56993a0000000000000000000000000000000000000000000000000000000081526000600482015260248101859052604481018790526001600160a01b039091169250633e56993a9150606401600060405180830381600087803b158015615c8857600080fd5b505af1158015615c9c573d6000803e3d6000fd5b50505050505050505050505050505050505050565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff0000000000000000000000000000000000000000000000000000008416600482015282916001600160a01b03169063b4dc00b490602401602060405180830381865afa158015615d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615d5991906173cd565b90506001600160a01b038116613c12576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152602401611361565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691615e49919061740b565b6000604051808303816000865af19150503d8060008114615e86576040519150601f19603f3d011682016040523d82523d6000602084013e615e8b565b606091505b5091509150818015615eb5575080511580615eb5575080806020019051810190615eb59190616a73565b6146e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401611361565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003615f725760008411615f6757600080fd5b508290049050612c3e565b808411615f7e57600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6009546040517fbf30142b000000000000000000000000000000000000000000000000000000008152831515600482015260009183916001600160a01b039091169063bf30142b90602401602060405180830381865afa15801561604e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906160729190616c61565b61607c9190617081565b6009546040517f6d9a9a620000000000000000000000000000000000000000000000000000000081528515156004820152602481018390529192506001600160a01b031690636d9a9a6290604401614241565b6009546040517f59d236e600000000000000000000000000000000000000000000000000000000815282151560048201526000916001600160a01b0316906359d236e690602401602060405180830381865afa158015616133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906161579190616a73565b6009546040517fc45e91d600000000000000000000000000000000000000000000000000000000815284151560048201529192506000916001600160a01b039091169063c45e91d690602401602060405180830381865afa1580156161c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906161e49190616c61565b9050811580616392575081801561627c5750600c546040517f27507458000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0390911690632750745890602401602060405180830381865afa158015616258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061627c9190616a73565b80156163925750600c546040517f1c063a6c000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0390911690631c063a6c90602401602060405180830381865afa1580156162e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906163099190616c61565b6009546040517fbf30142b00000000000000000000000000000000000000000000000000000000815285151560048201526001600160a01b039091169063bf30142b90602401602060405180830381865afa15801561636c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906163909190616c61565b105b1561131a5761131a836146ea565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691616432919061740b565b6000604051808303816000865af19150503d806000811461646f576040519150601f19603f3d011682016040523d82523d6000602084013e616474565b606091505b509150915081801561649e57508051158061649e57508080602001905181019061649e9190616a73565b610e0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401611361565b6000805b600a831061652f5761651b600a84616f1b565b92508061652781617427565b915050616508565b600860029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015616582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906165a69190616f2f565b612c3e90826171af565b82805482825590600052602060002090601f016020900481019282156166455791602002820160005b8382111561661657835183826101000a81548160ff02191690831515021790555092602001926001016020816000010492830192600103026165d9565b80156166435782816101000a81549060ff0219169055600101602081600001049283019260010302616616565b505b50616651929150616655565b5090565b5b808211156166515760008155600101616656565b803563ffffffff8116811461667e57600080fd5b919050565b60006020828403121561669557600080fd5b612c3e8261666a565b6001600160a01b038116811461147e57600080fd5b600080604083850312156166c657600080fd5b82356166d18161669e565b915060208301356166e18161669e565b809150509250929050565b60006080830163ffffffff808451168552602065ffffffffffff818601511681870152816040860151166040870152606085015191506080606087015282825180855260a0880191508284019450600093505b808410156167615784511515825293820193600193909301929082019061673f565b509695505050505050565b60208152600082516040602084015261678860608401826166ec565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160408501526167c382826166ec565b95945050505050565b801515811461147e57600080fd5b6000602082840312156167ec57600080fd5b8135612c3e816167cc565b60006020828403121561680957600080fd5b5035919050565b60008060006060848603121561682557600080fd5b61682e8461666a565b925061683c6020850161666a565b915061684a6040850161666a565b90509250925092565b6000806040838503121561686657600080fd5b50508035926020909101359150565b60006020828403121561688757600080fd5b8135612c3e8161669e565b602080825282518282018190526000919060409081850190868401855b8281101561691857815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff00000000000000000000000000000000000000000000000000000000168685015292840192908501906001016168af565b5091979650505050505050565b60006101008201905063ffffffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401525060c083015161698d60c084018263ffffffff169052565b5060e08301516169a560e084018263ffffffff169052565b5092915050565b6020808252825182820181905260009190848201906040850190845b81811015616a065783517fffffffffff00000000000000000000000000000000000000000000000000000016835292840192918401916001016169c8565b50909695505050505050565b600080600060608486031215616a2757600080fd5b8335616a328161669e565b95602085013595506040909401359392505050565b60008060408385031215616a5a57600080fd5b8235616a658161669e565b946020939093013593505050565b600060208284031215616a8557600080fd5b8151612c3e816167cc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff83811690831681811015616adc57616adc616a90565b039392505050565b805165ffffffffffff8116811461667e57600080fd5b600060208284031215616b0c57600080fd5b612c3e82616ae4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80841680616b5d57616b5d616b15565b92169190910492915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215616baa57600080fd5b81517fffffffffff00000000000000000000000000000000000000000000000000000081168114612c3e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600065ffffffffffff80831681851681830481118215151615616c2e57616c2e616a90565b02949350505050565b600065ffffffffffff808316818516808303821115616c5857616c58616a90565b01949350505050565b600060208284031215616c7357600080fd5b5051919050565b60008219821115616c8d57616c8d616a90565b500190565b600060a08284031215616ca457600080fd5b60405160a0810181811067ffffffffffffffff82111715616cee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80604052508091508251616d01816167cc565b8152616d0f60208401616ae4565b60208201526040830151604082015260608301516060820152608083015160808201525092915050565b600060208284031215616d4b57600080fd5b6040516020810181811067ffffffffffffffff82111715616d95577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040529151825250919050565b600060608284031215616db457600080fd5b6040516060810181811067ffffffffffffffff82111715616dfe577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052905080616e0e8484616d39565b8152616e1d8460208501616d39565b6020820152604083015160408201525092915050565b60006102008284031215616e4657600080fd5b6040516080810181811067ffffffffffffffff82111715616e90577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052616e9d8484616c92565b8152616eac8460a08501616c92565b6020820152616ebf846101408501616da2565b6040820152616ed2846101a08501616da2565b60608201529392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615616f1657616f16616a90565b500290565b600082616f2a57616f2a616b15565b500490565b600060208284031215616f4157600080fd5b815160ff81168114612c3e57600080fd5b600181815b80851115616fab57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115616f9157616f91616a90565b80851615616f9e57918102915b93841c9390800290616f57565b509250929050565b600082616fc257506001613c12565b81616fcf57506000613c12565b8160018114616fe55760028114616fef5761700b565b6001915050613c12565b60ff84111561700057617000616a90565b50506001821b613c12565b5060208310610133831016604e8410600b841016171561702e575081810a613c12565b6170388383616f52565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561706a5761706a616a90565b029392505050565b6000612c3e60ff841683616fb3565b60008282101561709357617093616a90565b500390565b600063ffffffff8083168181036170b1576170b1616a90565b6001019392505050565b600063ffffffff8216806170d1576170d1616a90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b600063ffffffff808316818516808303821115616c5857616c58616a90565b600063ffffffff8084168061712f5761712f616b15565b92169190910692915050565b60008160000b8360000b8061715257617152616b15565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80831416156171a6576171a6616a90565b90059392505050565b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018312811516156171f2576171f2616a90565b81607f01831381161561720757617207616a90565b5090039392505050565b60008160000b8360000b6000821282607f0382138115161561723557617235616a90565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003821281161561726957617269616a90565b50019392505050565b81516001600160a01b031681526101808101602083015161729e60208401826001600160a01b03169052565b5060408301516172b960408401826001600160a01b03169052565b5060608301516172cd606084018215159052565b506080830151608083015260a083015160a083015260c083015160c083015260e083015161730360e084018263ffffffff169052565b506101008381015165ffffffffffff9081169184019190915261012080850151909116908301526101408084015163ffffffff16908301526101609283015160000b929091019190915290565b60005b8381101561736b578181015183820152602001617353565b838111156124005750506000910152565b602081526000825180602084015261739b816040850160208701617350565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156173df57600080fd5b8151612c3e8161669e565b600060ff821660ff84168160ff048111821515161561706a5761706a616a90565b6000825161741d818460208701617350565b9190910192915050565b60008160000b607f810361743d5761743d616a90565b6001019291505056fea2646970667358221220508effc4646a5b8fa6c8f451a19e87d1c5a98f86d4f0cf7a8548f2c7cd4dd7c064736f6c634300080f0033a26469706673582212201ba3340633d0f272a02bb1e8d97c0d20bb4358d6d8084994c51eab8b23689ace64736f6c634300080f0033",
    "sourceMap": "1822:23291:166:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2811:6548;;;:::i;:::-;;16401:1479;;;:::i;321:38:1:-;;250:64;321:38;;;;;-1:-1:-1;;;;;325:55:183;;;307:74;;295:2;280:18;321:38:1;;;;;;;;24298:813:166;;;:::i;20370:3836::-;;;:::i;11728:3283::-;;;:::i;19808:556::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;653:14:183;;646:22;628:41;;616:2;601:18;1819:584:0;488:187:183;1895:30:166;;;;;-1:-1:-1;;;;;1895:30:166;;;18040:1099;;;:::i;19145:657::-;;;:::i;15017:1378::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;2811:6548:166;2845:32;;;;;2853:23;2845:32;;;1095:25:183;250:64:1;;2845:7:166;;1068:18:183;;2845:32:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2969:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:11:166;:31;;;;-1:-1:-1;;;;;2955:31:166;;;;;;;;;3086:21;;;;;3105:1;3086:21;;;1095:25:183;-1:-1:-1;;2955:31:166;3086:18;;1068::183;;3086:21:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3061:46;;3129:5;3135:1;3129:8;;;;;;;;:::i;:::-;;;;;;;3121:5;;:16;;;;;-1:-1:-1;;;;;3121:16:166;;;;;-1:-1:-1;;;;;3121:16:166;;;;;;3157:5;3163:1;3157:8;;;;;;;;:::i;:::-;;;;;;;3151:3;;:14;;;;;-1:-1:-1;;;;;3151:14:166;;;;;-1:-1:-1;;;;;3151:14:166;;;;;;3190:5;3196:1;3190:8;;;;;;;;:::i;:::-;;;;;;;3179;;:19;;;;;-1:-1:-1;;;;;3179:19:166;;;;;-1:-1:-1;;;;;3179:19:166;;;;;;3221:5;3227:1;3221:8;;;;;;;;:::i;:::-;;;;;;;;;;;3212:6;:17;;;;-1:-1:-1;;;;;3212:17:166;;;;;;3269:8;;3250:58;;3269:8;;;-1:-1:-1;;3250:58:166;;;:::i;:::-;-1:-1:-1;;;;;3466:15:183;;;3448:34;;3518:15;;3513:2;3498:18;;3491:43;3375:2;3360:18;3250:58:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3243:4:166;:65;;;;-1:-1:-1;;;;;3243:65:166;;;;;;;;;3394:8;;3375:34;;3394:8;;;3375:34;;;:::i;:::-;-1:-1:-1;;;;;3466:15:183;;;3448:34;;3518:15;;3513:2;3498:18;;3491:43;3375:2;3360:18;3375:34:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3362:10:166;:47;;;;-1:-1:-1;;;;;3362:47:166;;;;;;;;;3456:8;;3488:4;;3432:61;;3456:8;;;;;;3488:4;;;3432:61;;;:::i;:::-;-1:-1:-1;;;;;4259:15:183;;;4241:34;;4311:15;;;4306:2;4291:18;;4284:43;4363:15;;;4358:2;4343:18;;4336:43;4415:15;;;4410:2;4395:18;;4388:43;4167:3;4152:19;3432:61:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3423:6:166;:70;;;;-1:-1:-1;;;;;3423:70:166;;;;;;;;;3549:10;;3561:8;;3571:4;;3520:56;;3423:70;;3549:10;;;;3561:8;;;;3571:4;;3520:56;;;:::i;:::-;-1:-1:-1;;;;;4259:15:183;;;4241:34;;4311:15;;;4306:2;4291:18;;4284:43;4363:15;;;4358:2;4343:18;;4336:43;4415:15;;;4410:2;4395:18;;4388:43;4167:3;4152:19;3520:56:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3507:10:166;:69;;;;-1:-1:-1;;;;;3507:69:166;;;;;;3655:8;;3646:18;;-1:-1:-1;;;3646:18:166;;3655:8;;3646:18;;;307:74:183;250:64:1;;3646:8:166;;280:18:183;;3646::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3678:10:166;;3708;;3678:41;;;;;-1:-1:-1;;;;;3708:10:166;;;3678:41;;;307:74:183;3678:10:166;;;-1:-1:-1;3678:29:166;;-1:-1:-1;280:18:183;;3678:41:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:734;3831:1;3796:37;;;;;:::i;:::-;5837:2:183;5819:21;;;5876:2;5856:18;;;5849:30;5916:12;5910:3;5895:19;;5888:41;5967:3;5960:4;5945:20;;5938:33;;;6008:1;5987:19;;;5980:30;6047:6;6041:3;6026:19;;6019:35;6138:4;6126:17;;;-1:-1:-1;6106:18:183;;6099:45;6086:3;6071:19;3796:37:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3789:4:166;:44;;;;-1:-1:-1;;;;;3789:44:166;;;;;;;;;;3857:35;;3889:2;;3857:35;;;:::i;:::-;6493:2:183;6475:21;;;6532:1;6512:18;;;6505:29;6571:9;6565:3;6550:19;;6543:38;6619:3;6612:4;6597:20;;6590:33;;;6660:1;6639:19;;;6632:30;6699:5;6693:3;6678:19;;6671:34;6789:4;6777:17;;;-1:-1:-1;6757:18:183;;6750:45;6737:3;6722:19;3857:35:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:7:166;:45;;;;-1:-1:-1;;;;;3847:45:166;;;;;;;;;;3914:33;;;;;:::i;:::-;7144:2:183;7126:21;;;7183:1;7163:18;;;7156:29;7222:7;7216:3;7201:19;;7194:36;7268:3;7261:4;7246:20;;7239:33;;;7309:1;7288:19;;;7281:30;7348:5;7342:3;7327:19;;7320:34;7438:4;7426:17;;;-1:-1:-1;7406:18:183;;7399:45;7386:3;7371:19;3914:33:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3906:5:166;:41;;;;-1:-1:-1;;;;;3906:41:166;;;;;;;;;;4021:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4012:6:166;:21;;;;-1:-1:-1;;;;;4012:21:166;;;;;;;;;4138:49;;4167:7;;4177:9;;4138:49;;;:::i;:::-;-1:-1:-1;;;;;7819:55:183;;;7801:74;;7923:14;7911:27;;;7906:2;7891:18;;7884:55;7970:2;7955:18;;7948:34;7789:2;7774:18;4138:49:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4130:5:166;:57;;;;-1:-1:-1;;;;;4130:57:166;;;;;;4245:6;;4275:4;;4304:7;;4209:209;;4245:6;;;;4275:4;;;;4304:7;;;4338:3;;4368:4;;4399;;4209:209;;;:::i;:::-;-1:-1:-1;;;;;8405:15:183;;;8387:34;;8457:15;;;8452:2;8437:18;;8430:43;8509:15;;;;8504:2;8489:18;;8482:43;8556:2;8541:18;;8534:34;8599:3;8584:19;;8577:35;8643:3;8628:19;;8621:35;;;;8313:3;8298:19;4209:209:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4201:5:166;:217;;;;-1:-1:-1;;;;;4201:217:166;;;;;;4465:6;;4443:29;;4465:6;;;4443:29;;;:::i;:::-;-1:-1:-1;;;;;325:55:183;;;307:74;;295:2;280:18;4443:29:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4432:8:166;:40;;;;-1:-1:-1;;;;;4432:40:166;;;;;;4512:6;;4528:4;;4495:39;;4512:6;;;;4528:4;;4495:39;;;:::i;:::-;-1:-1:-1;;;;;3466:15:183;;;3448:34;;3518:15;;3513:2;3498:18;;3491:43;3375:2;3360:18;4495:39:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4486:6:166;:48;;;;-1:-1:-1;;;;;4486:48:166;;;;;;4575:6;;4556:26;;4575:6;;;4556:26;;;:::i;:::-;-1:-1:-1;;;;;325:55:183;;;307:74;;295:2;280:18;4556:26:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4548:5:166;:34;;;;-1:-1:-1;;;;;4548:34:166;;;;;;4629:5;;:34;;;;;4652:10;4629:34;;;1095:25:183;4629:5:166;;;:22;;1068:18:183;;4629:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4677:5:166;;:30;;;;;4696:10;4677:30;;;1095:25:183;-1:-1:-1;;;;;4677:5:166;;;;-1:-1:-1;4677:18:166;;-1:-1:-1;1068:18:183;;4677:30:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4721:5:166;;:21;;;;;4739:2;4721:21;;;9625:36:183;-1:-1:-1;;;;;4721:5:166;;;;-1:-1:-1;4721:17:166;;-1:-1:-1;9598:18:183;;4721:21:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4756:5:166;;:42;;;;;9846:14:183;4781:15:166;9834:27:183;4756:42:166;;;9816:46:183;-1:-1:-1;;;;;4756:5:166;;;;-1:-1:-1;4756:17:166;;-1:-1:-1;9789:18:183;;4756:42:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4896:6:166;;4881:22;;-1:-1:-1;;;;;4896:6:166;;;;-1:-1:-1;4881:22:166;;-1:-1:-1;4881:22:166;:::i;:::-;-1:-1:-1;;;;;325:55:183;;;307:74;;295:2;280:18;4881:22:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4868:10:166;:35;;;;-1:-1:-1;;;;;4868:35:166;;;;;;4983:6;;5015:10;;5029:4;;4966:68;;4983:6;;;;5015:10;;;;5029:4;;;4966:68;;;:::i;:::-;-1:-1:-1;;;;;10213:15:183;;;10195:34;;10265:15;;;10260:2;10245:18;;10238:43;10317:15;;;10312:2;10297:18;;10290:43;10122:2;10107:18;4966:68:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4955:8:166;:79;;;;-1:-1:-1;;;;;4955:79:166;;;;;;;;;5122:6;;5163:10;;5092:672;;;;;;;;5226:4;;;;5092:672;;5239:7;;;;5092:672;;;;;;;;;;4955:79;5092:672;;;;5295:4;5092:672;;5346:6;5092:672;;;;;;;5394:7;5092:672;;;;5445:7;5092:672;;;;;;5501:4;5092:672;;;;;;;;5602:1;5092:672;;;;5651:1;5092:672;;;;;;5122:6;;;;5163:10;;;;;4955:79;5092:672;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5081:8:166;:683;;;;-1:-1:-1;;;;;5081:683:166;;;;;;5861:8;;5852:18;;-1:-1:-1;;;5852:18:166;;5861:8;;5852:18;;;307:74:183;250:64:1;;5852:8:166;;280:18:183;;5852::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5884:10:166;;5925:8;;5884:57;;;;;-1:-1:-1;;;;;5925:8:166;;;5884:57;;;12076:74:183;5884:10:166;12166:18:183;;;12159:50;5884:10:166;;;-1:-1:-1;5884:32:166;;-1:-1:-1;12049:18:183;;5884:57:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6043:8:166;;6034:18;;-1:-1:-1;;;6034:18:166;;-1:-1:-1;;;;;6043:8:166;;;6034:18;;;307:74:183;250:64:1;;-1:-1:-1;6034:8:166;;-1:-1:-1;280:18:183;;6034::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6066:10:166;;:53;;;;;6107:4;6066:53;;;12076:74:183;6066:10:166;12166:18:183;;;12159:50;-1:-1:-1;;;;;6066:10:166;;;;-1:-1:-1;6066:32:166;;-1:-1:-1;12049:18:183;;6066:53:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6232:6:166;;6284:5;;6232:59;;;;;-1:-1:-1;;;;;6232:6:166;;;;-1:-1:-1;6232:20:166;;-1:-1:-1;6232:59:166;;:6;;6284:5;;6232:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6305:6:166;;6357:5;;6305:59;;;;;-1:-1:-1;;;;;6305:6:166;;;;-1:-1:-1;6305:20:166;;-1:-1:-1;6305:59:166;;:6;;6357:5;;6305:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6378:6:166;;6430:8;;6378:62;;;;;-1:-1:-1;;;;;6378:6:166;;;;-1:-1:-1;6378:20:166;;-1:-1:-1;6378:62:166;;:6;;6430:8;;6378:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6454:6:166;;6506;;6454:60;;;;;-1:-1:-1;;;;;6454:6:166;;;;-1:-1:-1;6454:20:166;;-1:-1:-1;6454:60:166;;:6;;6506;;6454:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6528:6:166;;6580:5;;6528:59;;;;;-1:-1:-1;;;;;6528:6:166;;;;-1:-1:-1;6528:20:166;;-1:-1:-1;6528:59:166;;:6;;6580:5;;6528:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6635:6:166;;6688:8;;6635:63;;;;;-1:-1:-1;;;;;6635:6:166;;;;-1:-1:-1;6635:20:166;;-1:-1:-1;6635:63:166;;6656:22;;6688:8;;6635:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6712:6:166;;6765:8;;6712:63;;;;;-1:-1:-1;;;;;6712:6:166;;;;-1:-1:-1;6712:20:166;;-1:-1:-1;6712:63:166;;6733:22;;6765:8;;6712:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6789:6:166;;6842:10;;6789:65;;;;;-1:-1:-1;;;;;6789:6:166;;;;-1:-1:-1;6789:20:166;;-1:-1:-1;6789:65:166;;6810:22;;6842:10;;6789:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6961:10:166;;7002:8;;6961:50;;;;;12998:18:183;6961:50:166;;;12980:37:183;-1:-1:-1;;;;;7002:8:166;;;13033:18:183;;;13026:83;6961:10:166;;;-1:-1:-1;6961:20:166;;-1:-1:-1;12953:18:183;;6961:50:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7025:10:166;;7075:8;;7025:60;;;;;13375:19:183;7025:60:166;;;13357:38:183;-1:-1:-1;;;;;7075:8:166;;;13411:18:183;;;13404:83;7025:10:166;;;-1:-1:-1;7025:20:166;;-1:-1:-1;13330:18:183;;7025:60:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7099:10:166;;7139:6;;7099:47;;;;;13753:17:183;7099:47:166;;;13735:36:183;-1:-1:-1;;;;;7139:6:166;;;13787:18:183;;;13780:83;7099:10:166;;;-1:-1:-1;7099:20:166;;-1:-1:-1;13708:18:183;;7099:47:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7160:10:166;;7199:8;;7160:48;;;;;14129:16:183;7160:48:166;;;14111:35:183;-1:-1:-1;;;;;7199:8:166;;;14162:18:183;;;14155:83;7160:10:166;;;-1:-1:-1;7160:20:166;;-1:-1:-1;14084:18:183;;7160:48:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7259:10:166;;7310:8;;7259:61;;;;;14504:20:183;7259:61:166;;;14486:39:183;-1:-1:-1;;;;;7310:8:166;;;14541:18:183;;;14534:83;7259:10:166;;;-1:-1:-1;7259:20:166;;-1:-1:-1;14459:18:183;;7259:61:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7334:10:166;;7377:6;;7334:50;;;;;14504:20:183;7334:50:166;;;14486:39:183;-1:-1:-1;;;;;7377:6:166;;;14541:18:183;;;14534:83;7334:10:166;;;-1:-1:-1;7334:20:166;;-1:-1:-1;14459:18:183;;7334:50:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7398:10:166;;7437:8;;7398:48;;;;;14883:16:183;7398:48:166;;;14865:35:183;-1:-1:-1;;;;;7437:8:166;;;14916:18:183;;;14909:83;7398:10:166;;;-1:-1:-1;7398:20:166;;-1:-1:-1;14838:18:183;;7398:48:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7517:8:166;;7508:18;;-1:-1:-1;;;7508:18:166;;-1:-1:-1;;;;;7517:8:166;;;7508:18;;;307:74:183;250:64:1;;-1:-1:-1;7508:8:166;;-1:-1:-1;280:18:183;;7508::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7536:8:166;;7557;;7536:30;;;;;-1:-1:-1;;;;;7557:8:166;;;7536:30;;;307:74:183;7536:8:166;;;-1:-1:-1;7536:20:166;;-1:-1:-1;280:18:183;;7536:30:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7622:8:166;;7613:18;;-1:-1:-1;;;7613:18:166;;-1:-1:-1;;;;;7622:8:166;;;7613:18;;;307:74:183;250:64:1;;-1:-1:-1;7613:8:166;;-1:-1:-1;280:18:183;;7613::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7641:8;;;;;;;;;-1:-1:-1;;;;;7641:8:166;-1:-1:-1;;;;;7641:19:166;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7823:4:166;;7833:5;;7749:15;;-1:-1:-1;7796:16:166;;-1:-1:-1;;;;;;7823:4:166;;;;:9;;7833:5;7840:13;7749:15;7851:2;7840:13;:::i;:::-;7823:31;;;;;;;;;;-1:-1:-1;;;;;15866:55:183;;;7823:31:166;;;15848:74:183;15938:18;;;15931:34;15821:18;;7823:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7864:7:166;;7877:5;;-1:-1:-1;;;;;7864:7:166;;;;-1:-1:-1;7864:12:166;;-1:-1:-1;7877:5:166;7884:16;:11;7898:2;7884:16;:::i;:::-;7864:37;;;;;;;;;;-1:-1:-1;;;;;15866:55:183;;;7864:37:166;;;15848:74:183;15938:18;;;15931:34;15821:18;;7864:37:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7912:7:166;;7933:8;;-1:-1:-1;;;;;7912:7:166;;;;-1:-1:-1;7912:12:166;;-1:-1:-1;7933:8:166;7944:17;:11;7958:3;7944:17;:::i;:::-;7912:50;;;;;;;;;;-1:-1:-1;;;;;15866:55:183;;;7912:50:166;;;15848:74:183;15938:18;;;15931:34;15821:18;;7912:50:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8053:5:166;;8044:15;;-1:-1:-1;;;8044:15:166;;-1:-1:-1;;;;;8053:5:166;;;8044:15;;;307:74:183;250:64:1;;-1:-1:-1;8044:8:166;;-1:-1:-1;280:18:183;;8044:15:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8069:4:166;;8090:8;;-1:-1:-1;;;;;8069:4:166;;;;-1:-1:-1;8069:12:166;;-1:-1:-1;8090:8:166;8101:13;:8;8112:2;8101:13;:::i;:::-;8069:46;;;;;;;;;;-1:-1:-1;;;;;15866:55:183;;;8069:46:166;;;15848:74:183;15938:18;;;15931:34;15821:18;;8069:46:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8134:5:166;;8125:15;;-1:-1:-1;;;8125:15:166;;-1:-1:-1;;;;;8134:5:166;;;8125:15;;;307:74:183;250:64:1;;8125:8:166;;280:18:183;;8125:15:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8150:7:166;;8174:8;;-1:-1:-1;;;;;8150:7:166;;;;-1:-1:-1;8150:15:166;;-1:-1:-1;8174:8:166;8185:16;:11;8199:2;8185:16;:::i;:::-;8150:52;;;;;;;;;;-1:-1:-1;;;;;15866:55:183;;;8150:52:166;;;15848:74:183;15938:18;;;15931:34;15821:18;;8150:52:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8222:5:166;;8213:15;;-1:-1:-1;;;8213:15:166;;-1:-1:-1;;;;;8222:5:166;;;8213:15;;;307:74:183;250:64:1;;8213:8:166;;280:18:183;;8213:15:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8238:4:166;;8259:6;;-1:-1:-1;;;;;8238:4:166;;;;-1:-1:-1;8238:12:166;;-1:-1:-1;8259:6:166;8268:13;:8;8279:2;8268:13;:::i;:::-;8238:44;;;;;;;;;;-1:-1:-1;;;;;15866:55:183;;;8238:44:166;;;15848:74:183;15938:18;;;15931:34;15821:18;;8238:44:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8301:5:166;;8292:15;;-1:-1:-1;;;8292:15:166;;-1:-1:-1;;;;;8301:5:166;;;8292:15;;;307:74:183;250:64:1;;8292:8:166;;280:18:183;;8292:15:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8317:7:166;;8341:6;;-1:-1:-1;;;;;8317:7:166;;;;-1:-1:-1;8317:15:166;;-1:-1:-1;8341:6:166;8350:16;:11;8364:2;8350:16;:::i;:::-;8317:50;;;;;;;;;;-1:-1:-1;;;;;15866:55:183;;;8317:50:166;;;15848:74:183;15938:18;;;15931:34;15821:18;;8317:50:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8501:7:166;;8510:4;;8488:36;;-1:-1:-1;;;;;8501:7:166;;;;8510:4;8501:7;;8522:1;8488:12;:36::i;:::-;8478:7;:46;8602:4;;8608:7;;8589:36;;-1:-1:-1;;;;;8602:4:166;;;;8608:7;8602:4;;8623:1;8589:12;:36::i;:::-;8579:7;:46;8706:4;;8693:33;;-1:-1:-1;;;;;8706:4:166;;;;8724:1;8693:12;:33::i;:::-;8678:12;:48;8810:7;;8797:40;;-1:-1:-1;;;;;8810:7:166;;;8831:2;8835:1;8797:12;:40::i;:::-;8782:12;:55;8942:7;;8951:4;;8929:36;;-1:-1:-1;;;;;8942:7:166;;;;8951:4;8942:7;;8963:1;8929:12;:36::i;:::-;8908:18;:57;9038:6;;9029:16;;-1:-1:-1;;;9029:16:166;;-1:-1:-1;;;;;9038:6:166;;;9029:16;;;307:74:183;250:64:1;;9029:8:166;;280:18:183;;9029:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9055:8:166;;9082:6;;9091:7;;9055:44;;;;;-1:-1:-1;;;;;9082:6:166;;;9055:44;;;15848:74:183;15938:18;;;15931:34;;;;9055:8:166;;;-1:-1:-1;9055:18:166;;-1:-1:-1;15821:18:183;;9055:44:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9119:6:166;;9110:16;;-1:-1:-1;;;9110:16:166;;-1:-1:-1;;;;;9119:6:166;;;9110:16;;;307:74:183;250:64:1;;-1:-1:-1;9110:8:166;;-1:-1:-1;280:18:183;;9110:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9136:8:166;;9163:6;;9172:7;;9136:44;;;;;-1:-1:-1;;;;;9163:6:166;;;9136:44;;;15848:74:183;15938:18;;;15931:34;;;;9136:8:166;;;-1:-1:-1;9136:18:166;;-1:-1:-1;15821:18:183;;9136:44:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9200:6:166;;9191:16;;-1:-1:-1;;;9191:16:166;;-1:-1:-1;;;;;9200:6:166;;;9191:16;;;307:74:183;250:64:1;;-1:-1:-1;9191:8:166;;-1:-1:-1;280:18:183;;9191:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9217:8:166;;9244:6;;9253:12;;9217:49;;;;;-1:-1:-1;;;;;9244:6:166;;;9217:49;;;15848:74:183;15938:18;;;15931:34;;;;9217:8:166;;;-1:-1:-1;9217:18:166;;-1:-1:-1;15821:18:183;;9217:49:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9286:6:166;;9277:16;;-1:-1:-1;;;9277:16:166;;-1:-1:-1;;;;;9286:6:166;;;9277:16;;;307:74:183;250:64:1;;-1:-1:-1;9277:8:166;;-1:-1:-1;280:18:183;;9277:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9303:8:166;;9330:6;;9339:12;;9303:49;;;;;-1:-1:-1;;;;;9330:6:166;;;9303:49;;;15848:74:183;15938:18;;;15931:34;;;;9303:8:166;;;-1:-1:-1;9303:18:166;;-1:-1:-1;15821:18:183;;9303:49:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2835:6524;;2811:6548::o;16401:1479::-;16546:7;;16567:8;;16546:35;;;;;-1:-1:-1;;;;;16567:8:166;;;16546:35;;;15848:74:183;16578:2:166;15938:18:183;;;15931:34;16546:7:166;;;:12;;15821:18:183;;16546:35:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16665:4:166;;16688:6;;16665:31;;-1:-1:-1;;;16665:31:166;;-1:-1:-1;;;;;16688:6:166;;;16665:31;;;307:74:183;16642:20:166;;-1:-1:-1;16665:4:166;;;-1:-1:-1;16665:14:166;;280:18:183;;16665:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16642:54;;16788:16;16896:18;;16807:117;;;;;;1095:25:183;;1083:2;1068:18;;932:194;16807:117:166;;;;;;;;;;;;;;;;;;;;;;;;;16951:6;;16934:25;;-1:-1:-1;;;16934:25:166;;-1:-1:-1;;;;;16951:6:166;;;16934:25;;;307:74:183;16807:117:166;;-1:-1:-1;250:64:1;;16934:8:166;;280:18:183;;16934:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16969:20:166;;;;;250:64:1;;-1:-1:-1;16969:15:166;;-1:-1:-1;16969:20:166;;16985:3;;16969:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16999:8:166;;17017:18;;16999:45;;;;;;;;17868:25:183;;;;17037:2:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;16999:8:166;;;;-1:-1:-1;16999:17:166;;-1:-1:-1;17841:18:183;;16999:45:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17136:4:166;;17159:6;;17136:31;;-1:-1:-1;;;17136:31:166;;-1:-1:-1;;;;;17159:6:166;;;17136:31;;;307:74:183;17113:20:166;;-1:-1:-1;17136:4:166;;;-1:-1:-1;17136:14:166;;280:18:183;;17136:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17113:54;;17177:36;17186:12;17200;17177:8;:36::i;:::-;17322:6;;17305:25;;-1:-1:-1;;;17305:25:166;;-1:-1:-1;;;;;17322:6:166;;;17305:25;;;307:74:183;250:64:1;;17305:8:166;;280:18:183;;17305:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17340:8:166;;17358:7;;17340:34;;;;;;;;17868:25:183;;;;17367:2:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;17340:8:166;;;;-1:-1:-1;17340:17:166;;-1:-1:-1;17841:18:183;;17340:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17443:4:166;;17466:6;;17443:31;;-1:-1:-1;;;17443:31:166;;-1:-1:-1;;;;;17466:6:166;;;17443:31;;;307:74:183;17443:4:166;;;-1:-1:-1;17443:14:166;;-1:-1:-1;280:18:183;;17443:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17428:46;-1:-1:-1;17484:41:166;17428:46;17507:17;:12;17522:2;17507:17;:::i;:::-;17484:8;:41::i;:::-;17614:6;;17605:16;;-1:-1:-1;;;17605:16:166;;-1:-1:-1;;;;;17614:6:166;;;17605:16;;;307:74:183;250:64:1;;17605:8:166;;280:18:183;;17605:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17631:8:166;;17658:6;;17667:7;;17631:44;;;;;-1:-1:-1;;;;;17658:6:166;;;17631:44;;;15848:74:183;15938:18;;;15931:34;;;;17631:8:166;;;-1:-1:-1;17631:18:166;;-1:-1:-1;15821:18:183;;17631:44:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17756:7;;17692:72;;;;;;1095:25:183;;1083:2;1068:18;;932:194;17692:72:166;;;;;;;;;;;;;;;;;;;;;;;;;17791:6;;17774:25;;-1:-1:-1;;;17774:25:166;;-1:-1:-1;;;;;17791:6:166;;;17774:25;;;307:74:183;17692:72:166;;-1:-1:-1;250:64:1;;17774:8:166;;280:18:183;;17774:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17809:20:166;;;;;250:64:1;;-1:-1:-1;17809:15:166;;-1:-1:-1;17809:20:166;;17825:3;;17809:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17839:8:166;;17857:7;;17839:34;;;;;;;;17868:25:183;;;;17866:2:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;17839:8:166;;;;-1:-1:-1;17839:17:166;;-1:-1:-1;17841:18:183;;17839:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16469:1411;;;16401:1479::o;24298:813::-;24426:7;;24447:8;;24426:35;;;;;-1:-1:-1;;;;;24447:8:166;;;24426:35;;;15848:74:183;24458:2:166;15938:18:183;;;15931:34;24426:7:166;;;:12;;15821:18:183;;24426:35:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24614:8:166;;24640:7;;24614:34;;;;;24563:22;;-1:-1:-1;24563:22:166;;-1:-1:-1;;;;;;24614:8:166;;;;:25;;:34;;;;1095:25:183;;;1083:2;1068:18;;932:194;24614:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24562:86;;;;24658:27;24667:14;24683:1;24658:8;:27::i;:::-;24695:28;24704:15;24721:1;24695:8;:28::i;:::-;24826:6;;24809:25;;-1:-1:-1;;;24809:25:166;;-1:-1:-1;;;;;24826:6:166;;;24809:25;;;307:74:183;250:64:1;;24809:8:166;;280:18:183;;24809:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24844:8:166;;24862:7;;24844:34;;;;;;;;17868:25:183;;;;24871:2:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;24844:8:166;;;;-1:-1:-1;24844:17:166;;-1:-1:-1;17841:18:183;;24844:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24993:8:166;;25019:7;;24993:34;;;;;24942:22;;-1:-1:-1;24942:22:166;;-1:-1:-1;;;;;;24993:8:166;;;;:25;;:34;;;;1095:25:183;;;1083:2;1068:18;;932:194;24993:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24941:86;;;;25037:28;25046:14;25062:2;25037:8;:28::i;:::-;25075:29;25084:15;25101:2;25075:8;:29::i;:::-;24349:762;;;;24298:813::o;20370:3836::-;20538:5;;20545:4;;20505:17;;20525:34;;-1:-1:-1;;;;;20538:5:166;;;;20545:4;20551:1;20538:5;20557:1;20525:12;:34::i;:::-;20628:6;;20619:16;;-1:-1:-1;;;20619:16:166;;-1:-1:-1;;;;;20628:6:166;;;20619:16;;;307:74:183;20505:54:166;;-1:-1:-1;250:64:1;;20619:8:166;;280:18:183;;20619:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20645:8:166;;20672:6;;20645:46;;;;;-1:-1:-1;;;;;20672:6:166;;;20645:46;;;15848:74:183;15938:18;;;15931:34;;;20645:8:166;;;-1:-1:-1;20645:18:166;;-1:-1:-1;15821:18:183;;20645:46:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20757:142:166;;;;;;;;;;20805:7;;20831:8;;-1:-1:-1;;;20805:36:166;;;-1:-1:-1;;;;;20831:8:166;;;20805:36;;;307:74:183;-1:-1:-1;;;20757:142:166;;-1:-1:-1;20757:142:166;;20805:7;:17;280:18:183;;;20805:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20757:142;;20855:5;;20879:8;;20855:34;;-1:-1:-1;;;20855:34:166;;-1:-1:-1;;;;;20879:8:166;;;20855:34;;;307:74:183;20757:142:166;;;;;20855:5;;;:15;;280:18:183;;20855:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20757:142;;20994:7;;21015:8;;20994:35;;;;;-1:-1:-1;;;;;21015:8:166;;;20994:35;;;15848:74:183;21026:2:166;15938:18:183;;;15931:34;20757:142:166;;-1:-1:-1;20994:7:166;;:12;;15821:18:183;;20994:35:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21039:5:166;;21058:8;;21039:33;;;;;-1:-1:-1;;;;;21058:8:166;;;21039:33;;;15848:74:183;21069:2:166;15938:18:183;;;15931:34;21039:5:166;;;-1:-1:-1;21039:10:166;;-1:-1:-1;15821:18:183;;21039:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21179:6:166;;21162:25;;-1:-1:-1;;;21162:25:166;;-1:-1:-1;;;;;21179:6:166;;;21162:25;;;307:74:183;250:64:1;;-1:-1:-1;21162:8:166;;-1:-1:-1;280:18:183;;21162:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21197:8:166;;21215:7;;21197:33;;;;;;;;17868:25:183;;;;21224:2:166;17909:18:183;;;17902:34;21197:8:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;21197:8:166;;;;-1:-1:-1;21197:17:166;;-1:-1:-1;17841:18:183;;21197:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21258:6:166;;21241:25;;-1:-1:-1;;;21241:25:166;;-1:-1:-1;;;;;21258:6:166;;;21241:25;;;307:74:183;250:64:1;;-1:-1:-1;21241:8:166;;-1:-1:-1;280:18:183;;21241:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21276:8:166;;:37;;;;;;;;17868:25:183;;;21305:2:166;17909:18:183;;;17902:34;21309:3:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;21276:8:166;;;;-1:-1:-1;21276:17:166;;-1:-1:-1;17841:18:183;;21276:37:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21403:7:166;;21429:8;;21403:36;;-1:-1:-1;;;21403:36:166;;-1:-1:-1;;;;;21429:8:166;;;21403:36;;;307:74:183;21394:50:166;;-1:-1:-1;21403:7:166;;;-1:-1:-1;21403:17:166;;280:18:183;;21403:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21441:2;21394:8;:50::i;:::-;21463:5;;21487:8;;21463:34;;-1:-1:-1;;;21463:34:166;;-1:-1:-1;;;;;21487:8:166;;;21463:34;;;307:74:183;21454:48:166;;21463:5;;;;;:15;;280:18:183;;21463:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21499:2;21454:8;:48::i;:::-;21599:14;;;21611:1;21599:14;;;;;;;;;21575:21;;21599:14;;;;;;;;;-1:-1:-1;;21635:7:166;;21623:9;;;;-1:-1:-1;;;;;;21635:7:166;;21623:9;;-1:-1:-1;21635:7:166;;21623:9;;;;:::i;:::-;-1:-1:-1;;;;;21623:19:166;;;:9;;;;;;;;;;:19;;;;21757:131;;;21849:25;21757:131;;;;1095:25:183;;;;21757:131:166;;;;;;;;;1068:18:183;;;;21757:131:166;;;;;;;;;21797:34;21757:131;;;21911:5;;21902:15;;-1:-1:-1;;;21902:15:166;;21911:5;;21902:15;;;307:74:183;21902:15:166;;21757:131;;250:64:1;;21902:8:166;;280:18:183;;;;21738:16:166;;21902:15;;;;;;21738:16;250:64:1;21902:15:166;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21931:20:166;;;;;250:64:1;;-1:-1:-1;21931:15:166;;-1:-1:-1;21931:20:166;;21947:3;;21931:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21965:8:166;;:32;;;;;-1:-1:-1;;;;;21965:8:166;;;;-1:-1:-1;21965:24:166;;-1:-1:-1;21965:32:166;;21990:6;;21965:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22074:8:166;;22065:18;;-1:-1:-1;;;22065:18:166;;-1:-1:-1;;;;;22074:8:166;;;22065:18;;;307:74:183;250:64:1;;-1:-1:-1;22065:8:166;;-1:-1:-1;280:18:183;;;-1:-1:-1;22065:18:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22093:8:166;;:32;;;;;-1:-1:-1;;;;;22093:8:166;;;;-1:-1:-1;22093:24:166;;-1:-1:-1;22093:32:166;;22118:6;;22093:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22227:7:166;;22253:8;;22227:36;;-1:-1:-1;;;22227:36:166;;-1:-1:-1;;;;;22253:8:166;;;22227:36;;;307:74:183;22218:49:166;;-1:-1:-1;22227:7:166;;;-1:-1:-1;22227:17:166;;280:18:183;;22227:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22265:1;22218:8;:49::i;:::-;22286:7;;22312:8;;22286:36;;-1:-1:-1;;;22286:36:166;;-1:-1:-1;;;;;22312:8:166;;;22286:36;;;307:74:183;22277:69:166;;22286:7;;;;;:17;;280:18:183;;22286:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22324:16;;:21;;22343:2;22324:21;:::i;22277:69::-;22425:5;;22413:9;;-1:-1:-1;;;;;22425:5:166;;;;22413:6;;22425:5;;22413:9;;;;:::i;:::-;-1:-1:-1;;;;;22413:17:166;;;:9;;;;;;;;;:17;22497:8;;22488:18;;-1:-1:-1;;;22488:18:166;;22497:8;;22488:18;;;307:74:183;250:64:1;;22488:8:166;;280:18:183;;22488::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22516:8:166;;:32;;;;;-1:-1:-1;;;;;22516:8:166;;;;-1:-1:-1;22516:24:166;;-1:-1:-1;22516:32:166;;22541:6;;22516:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22648:5:166;;22672:8;;22648:34;;-1:-1:-1;;;22648:34:166;;-1:-1:-1;;;;;22672:8:166;;;22648:34;;;307:74:183;22639:47:166;;-1:-1:-1;22648:5:166;;;-1:-1:-1;22648:15:166;;280:18:183;;22648:34:166;150:237:183;22639:47:166;22705:5;;22729:8;;22705:34;;-1:-1:-1;;;22705:34:166;;-1:-1:-1;;;;;22729:8:166;;;22705:34;;;307:74:183;22696:67:166;;22705:5;;;;;:15;;280:18:183;;22705:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22741:16;;;;:21;;22760:2;22741:21;:::i;22696:67::-;22864:90;;;;;;;;;;22881:7;;22907:8;;-1:-1:-1;;;22881:36:166;;;-1:-1:-1;;;;;22907:8:166;;;22881:36;;;307:74:183;22864:90:166;;;;22881:7;:17;280:18:183;;;22881:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22864:90;;22919:5;;22943:8;;22919:34;;-1:-1:-1;;;22919:34:166;;-1:-1:-1;;;;;22943:8:166;;;22919:34;;;307:74:183;22864:90:166;;;;;22919:5;;;:15;;280:18:183;;22919:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22864:90;;23049:7;;23070:8;;23049:35;;;;;-1:-1:-1;;;;;23070:8:166;;;23049:35;;;15848:74:183;23081:2:166;15938:18:183;;;15931:34;22864:90:166;;-1:-1:-1;23049:7:166;;:12;;15821:18:183;;23049:35:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23094:5:166;;23113:8;;23094:33;;;;;-1:-1:-1;;;;;23113:8:166;;;23094:33;;;15848:74:183;23124:2:166;15938:18:183;;;15931:34;23094:5:166;;;-1:-1:-1;23094:10:166;;-1:-1:-1;15821:18:183;;23094:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23234:6:166;;23217:25;;-1:-1:-1;;;23217:25:166;;-1:-1:-1;;;;;23234:6:166;;;23217:25;;;307:74:183;250:64:1;;-1:-1:-1;23217:8:166;;-1:-1:-1;280:18:183;;23217:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23252:8:166;;23270:7;;23252:33;;;;;;;;17868:25:183;;;;23279:2:166;17909:18:183;;;17902:34;23252:8:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;23252:8:166;;;;-1:-1:-1;23252:17:166;;-1:-1:-1;17841:18:183;;23252:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23313:6:166;;23296:25;;-1:-1:-1;;;23296:25:166;;-1:-1:-1;;;;;23313:6:166;;;23296:25;;;307:74:183;250:64:1;;-1:-1:-1;23296:8:166;;-1:-1:-1;280:18:183;;23296:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23331:8:166;;:37;;;;;;;;17868:25:183;;;23360:2:166;17909:18:183;;;17902:34;23364:3:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;23331:8:166;;;;-1:-1:-1;23331:17:166;;-1:-1:-1;17841:18:183;;23331:37:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23451:7:166;;23477:8;;23451:36;;-1:-1:-1;;;23451:36:166;;-1:-1:-1;;;;;23477:8:166;;;23451:36;;;307:74:183;23442:50:166;;-1:-1:-1;23451:7:166;;;-1:-1:-1;23451:17:166;;280:18:183;;23451:36:166;150:237:183;23442:50:166;23511:5;;23535:8;;23511:34;;-1:-1:-1;;;23511:34:166;;-1:-1:-1;;;;;23535:8:166;;;23511:34;;;307:74:183;23502:48:166;;23511:5;;;;;:15;;280:18:183;;23511:34:166;150:237:183;23502:48:166;23622:14;;;23634:1;23622:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;23658:7:166;;23646:9;;;;-1:-1:-1;;;;;;23658:7:166;;23646:9;;-1:-1:-1;23658:7:166;;23646:9;;;;:::i;:::-;-1:-1:-1;;;;;23646:19:166;;;:9;;;;;;;;;:19;23687:5;;23675:9;;23687:5;;;23675:6;;23687:5;;23675:9;;;;;;:::i;:::-;-1:-1:-1;;;;;23675:17:166;;;:9;;;;;;;;;:17;23712:8;;23703:18;;-1:-1:-1;;;23703:18:166;;23712:8;;23703:18;;;307:74:183;250:64:1;;23703:8:166;;280:18:183;;23703::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23731:8:166;;:32;;;;;-1:-1:-1;;;;;23731:8:166;;;;-1:-1:-1;23731:24:166;;-1:-1:-1;23731:32:166;;23756:6;;23731:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23865:7:166;;23891:8;;23865:36;;-1:-1:-1;;;23865:36:166;;-1:-1:-1;;;;;23891:8:166;;;23865:36;;;307:74:183;23856:49:166;;-1:-1:-1;23865:7:166;;;-1:-1:-1;23865:17:166;;280:18:183;;23865:36:166;150:237:183;23856:49:166;23924:7;;23950:8;;23924:36;;-1:-1:-1;;;23924:36:166;;-1:-1:-1;;;;;23950:8:166;;;23924:36;;;307:74:183;23915:69:166;;23924:7;;;;;:17;;280:18:183;;23924:36:166;150:237:183;23915:69:166;24084:5;;24108:8;;24084:34;;-1:-1:-1;;;24084:34:166;;-1:-1:-1;;;;;24108:8:166;;;24084:34;;;307:74:183;24075:47:166;;24084:5;;;;;:15;;280:18:183;;24084:34:166;150:237:183;24075:47:166;24141:5;;24165:8;;24141:34;;-1:-1:-1;;;24141:34:166;;-1:-1:-1;;;;;24165:8:166;;;24141:34;;;307:74:183;24132:67:166;;24141:5;;;;;:15;;280:18:183;;24141:34:166;150:237:183;24132:67:166;20420:3786;;;20370:3836::o;11728:3283::-;12102:4;;12125:6;;12102:31;;-1:-1:-1;;;12102:31:166;;-1:-1:-1;;;;;12125:6:166;;;12102:31;;;307:74:183;12077:22:166;;12102:4;;;;;:14;;280:18:183;;12102:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12170:7;;12196:8;;12170:36;;-1:-1:-1;;;12170:36:166;;-1:-1:-1;;;;;12196:8:166;;;12170:36;;;307:74:183;12077:56:166;;-1:-1:-1;12143:24:166;;12170:7;;;:17;;280:18:183;;12170:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12280:7;;12301:8;;12280:36;;;;;-1:-1:-1;;;;;12301:8:166;;;12280:36;;;15848:74:183;12312:3:166;15938:18:183;;;15931:34;12143:63:166;;-1:-1:-1;12280:7:166;;:12;;15821:18:183;;12280:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12399:6:166;;12382:25;;-1:-1:-1;;;12382:25:166;;-1:-1:-1;;;;;12399:6:166;;;12382:25;;;307:74:183;250:64:1;;-1:-1:-1;12382:8:166;;-1:-1:-1;280:18:183;;12382:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12417:8:166;;12435:7;;12417:35;;;;;;;;17868:25:183;;;;12444:3:166;17909:18:183;;;17902:34;12449:2:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;12417:8:166;;;;-1:-1:-1;12417:17:166;;-1:-1:-1;17841:18:183;;12417:35:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12545:4:166;;12568:6;;12545:31;;-1:-1:-1;;;12545:31:166;;-1:-1:-1;;;;;12568:6:166;;;12545:31;;;307:74:183;12536:62:166;;-1:-1:-1;12545:4:166;;;-1:-1:-1;12545:14:166;;280:18:183;;12545:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12578:19;:14;12595:2;12578:19;:::i;12536:62::-;12617:7;;12643:8;;12617:36;;-1:-1:-1;;;12617:36:166;;-1:-1:-1;;;;;12643:8:166;;;12617:36;;;307:74:183;12608:70:166;;12617:7;;;;;:17;;280:18:183;;12617:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12655:22;:16;12674:3;12655:22;:::i;12608:70::-;12959:7;;12985:6;;12959:34;;-1:-1:-1;;;12959:34:166;;-1:-1:-1;;;;;12985:6:166;;;12959:34;;;307:74:183;12959:7:166;;;:17;;280:18:183;;12959:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13022:4;;13045:8;;13022:33;;-1:-1:-1;;;13022:33:166;;-1:-1:-1;;;;;13045:8:166;;;13022:33;;;307:74:183;12942:51:166;;-1:-1:-1;13022:4:166;;:14;;280:18:183;;13022:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13129:4;;13147:8;;13129:32;;;;;-1:-1:-1;;;;;13147:8:166;;;13129:32;;;15848:74:183;13158:2:166;15938:18:183;;;15931:34;13003:52:166;;-1:-1:-1;13129:4:166;;:9;;15821:18:183;;13129:32:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13244:6:166;;13227:25;;-1:-1:-1;;;13227:25:166;;-1:-1:-1;;;;;13244:6:166;;;13227:25;;;307:74:183;250:64:1;;-1:-1:-1;13227:8:166;;-1:-1:-1;280:18:183;;13227:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13262:8:166;;13280:7;;13262:35;;;;;;;;17868:25:183;;;;13289:2:166;17909:18:183;;;17902:34;13293:3:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;13262:8:166;;;;-1:-1:-1;13262:17:166;;-1:-1:-1;17841:18:183;;13262:35:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13475:7:166;;13501:6;;13475:34;;-1:-1:-1;;;13475:34:166;;-1:-1:-1;;;;;13501:6:166;;;13475:34;;;307:74:183;13466:66:166;;-1:-1:-1;13475:7:166;;;-1:-1:-1;13475:17:166;;280:18:183;;13475:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13511:20;:14;13528:3;13511:20;:::i;13466:66::-;13551:4;;13574:8;;13551:33;;-1:-1:-1;;;13551:33:166;;-1:-1:-1;;;;;13574:8:166;;;13551:33;;;307:74:183;13542:61:166;;13551:4;;;;;:14;;280:18:183;;13551:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13586:16;13542:8;:61::i;:::-;13887:4;;13910:6;;13887:31;;-1:-1:-1;;;13887:31:166;;-1:-1:-1;;;;;13910:6:166;;;13887:31;;;307:74:183;13887:4:166;;;:14;;280:18:183;;13887:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13947:4;;13970:8;;13947:33;;-1:-1:-1;;;13947:33:166;;-1:-1:-1;;;;;13970:8:166;;;13947:33;;;307:74:183;13870:48:166;;-1:-1:-1;13947:4:166;;:14;;280:18:183;;13947:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14054:4;;14072:8;;14054:33;;;;;-1:-1:-1;;;;;14072:8:166;;;14054:33;;;15848:74:183;14083:3:166;15938:18:183;;;15931:34;13928:52:166;;-1:-1:-1;14054:4:166;;:9;;15821:18:183;;14054:33:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14170:6:166;;14153:25;;-1:-1:-1;;;14153:25:166;;-1:-1:-1;;;;;14170:6:166;;;14153:25;;;307:74:183;250:64:1;;-1:-1:-1;14153:8:166;;-1:-1:-1;280:18:183;;14153:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14188:8:166;;14206:12;;14188:41;;;;;;;;17868:25:183;;;;14220:3:166;17909:18:183;;;17902:34;;;14225:3:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;14188:8:166;;;;-1:-1:-1;14188:17:166;;-1:-1:-1;17841:18:183;14188:41:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14322:4:166;;14345:6;;14322:31;;-1:-1:-1;;;14322:31:166;;-1:-1:-1;;;;;14345:6:166;;;14322:31;;;307:74:183;14313:63:166;;-1:-1:-1;14322:4:166;;;-1:-1:-1;14322:14:166;;280:18:183;;14322:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14355:20;:14;14372:3;14355:20;:::i;14313:63::-;14395:4;;14418:8;;14395:33;;-1:-1:-1;;;14395:33:166;;-1:-1:-1;;;;;14418:8:166;;;14395:33;;;307:74:183;14386:61:166;;14395:4;;;;;:14;;280:18:183;;14395:33:166;150:237:183;14386:61:166;14638:7;;14659:8;;14638:36;;;;;-1:-1:-1;;;;;14659:8:166;;;14638:36;;;15848:74:183;14670:3:166;15938:18:183;;;15931:34;14638:7:166;;;:12;;15821:18:183;;14638:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14758:16;14866:12;;14777:111;;;;;;1095:25:183;;1083:2;1068:18;;932:194;14777:111:166;;;;;;;;;;;;;;;;;;;;;;;;;14915:6;;14898:25;;-1:-1:-1;;;14898:25:166;;-1:-1:-1;;;;;14915:6:166;;;14898:25;;;307:74:183;14777:111:166;;-1:-1:-1;250:64:1;;14898:8:166;;280:18:183;;14898:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14933:20:166;;;;;250:64:1;;-1:-1:-1;14933:15:166;;-1:-1:-1;14933:20:166;;14949:3;;14933:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14963:8:166;;14981:12;;14963:41;;;;;;;;17868:25:183;;;;14995:3:166;17909:18:183;;;17902:34;;;15000:3:166;17952:18:183;;;17945:34;-1:-1:-1;;;;;14963:8:166;;;;-1:-1:-1;14963:17:166;;-1:-1:-1;17841:18:183;14963:41:166;17648:337:183;19808:556:166;19962:51;;;;;;;;;;;;;;;;;;;;;;;20023:20;;;;;19962:51;;250:64:1;;20023:15:166;;:20;;19962:51;;20023:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20062:8:166;;20053:18;;-1:-1:-1;;;20053:18:166;;-1:-1:-1;;;;;20062:8:166;;;20053:18;;;307:74:183;250:64:1;;-1:-1:-1;20053:8:166;;-1:-1:-1;280:18:183;;20053::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20081:8:166;;:42;;;;;:8;:42;;;307:74:183;-1:-1:-1;;;;;20081:8:166;;;;-1:-1:-1;20081:20:166;;-1:-1:-1;280:18:183;;20081:42:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20187:8:166;;20178:18;;-1:-1:-1;;;20178:18:166;;-1:-1:-1;;;;;20187:8:166;;;20178:18;;;307:74:183;250:64:1;;-1:-1:-1;20178:8:166;;-1:-1:-1;280:18:183;;20178::166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20206:8:166;;20236:5;;20206:37;;;;;-1:-1:-1;;;;;20236:5:166;;;20206:37;;;307:74:183;20206:8:166;;;-1:-1:-1;20206:20:166;;-1:-1:-1;280:18:183;;20206:37:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20312:45;20329:8;;;;;;;;;-1:-1:-1;;;;;20329:8:166;-1:-1:-1;;;;;20329:17:166;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20351:5;;-1:-1:-1;;;;;20351:5:166;20312:8;:45::i;:::-;19854:510;19808:556::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;15848:74:183;;;2221:17:0;15938:18:183;;;15931:34;2196:43:0;;;;;;;;;15821:18:183;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;18040:1099:166:-;18189:7;;18198:4;;18160:13;;18176:36;;-1:-1:-1;;;;;18189:7:166;;;;18198:4;18160:13;18189:7;18210:1;18176:12;:36::i;:::-;18251:7;;18260:4;;18160:52;;-1:-1:-1;18222:13:166;;18238:36;;-1:-1:-1;;;;;18251:7:166;;;;18260:4;18222:13;18251:7;18272:1;18238:12;:36::i;:::-;18386:123;;18470:29;18386:123;;;1095:25:183;18222:52:166;;-1:-1:-1;18367:16:166;;18422:34;;1068:18:183;;18386:123:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18528:5;;18519:15;;-1:-1:-1;;;18519:15:166;;-1:-1:-1;;;;;18528:5:166;;;18519:15;;;307:74:183;18386:123:166;-1:-1:-1;250:64:1;;18519:8:166;;280:18:183;;18519:15:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18544:20:166;;;;;250:64:1;;-1:-1:-1;18544:15:166;;-1:-1:-1;18544:20:166;;18560:3;;18544:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18574:8:166;;18601:6;;18574:42;;;;;-1:-1:-1;;;;;18601:6:166;;;18574:42;;;15848:74:183;15938:18;;;15931:34;;;18574:8:166;;;-1:-1:-1;18574:18:166;;-1:-1:-1;15821:18:183;;18574:42:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18703:6:166;;18694:16;;-1:-1:-1;;;18694:16:166;;-1:-1:-1;;;;;18703:6:166;;;18694:16;;;307:74:183;250:64:1;;-1:-1:-1;18694:8:166;;-1:-1:-1;280:18:183;;18694:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18720:8:166;;18747:6;;18720:42;;;;;-1:-1:-1;;;;;18747:6:166;;;18720:42;;;15848:74:183;15938:18;;;15931:34;;;18720:8:166;;;-1:-1:-1;18720:18:166;;-1:-1:-1;15821:18:183;;18720:42:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18818:8:166;;18851:6;;18818:48;;;;;-1:-1:-1;;;;;18851:6:166;;;18818:48;;;15848:74:183;15938:18;;;15931:34;;;18818:8:166;;;-1:-1:-1;18818:24:166;;-1:-1:-1;15821:18:183;;18818:48:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18811:56;;;;:::i;:::-;18965:8;;18948:27;;-1:-1:-1;;;18948:27:166;;-1:-1:-1;;;;;18965:8:166;;;18948:27;;;307:74:183;250:64:1;;18948:8:166;;280:18:183;;18948:27:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18985:8:166;;19012:6;;18985:42;;;;;-1:-1:-1;;;;;19012:6:166;;;18985:42;;;15848:74:183;15938:18;;;15931:34;;;18985:8:166;;;-1:-1:-1;18985:18:166;;-1:-1:-1;15821:18:183;;18985:42:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19083:8:166;;19116:6;;19083:48;;;;;-1:-1:-1;;;;;19116:6:166;;;19083:48;;;15848:74:183;15938:18;;;15931:34;;;19083:8:166;;;-1:-1:-1;19083:24:166;;-1:-1:-1;15821:18:183;;19083:48:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19076:56;;;;:::i;19145:657::-;19294:7;;19303:4;;19265:13;;19281:36;;-1:-1:-1;;;;;19294:7:166;;;;19303:4;19265:13;19294:7;19315:1;19281:12;:36::i;:::-;19398:6;;19389:16;;-1:-1:-1;;;19389:16:166;;-1:-1:-1;;;;;19398:6:166;;;19389:16;;;307:74:183;19265:52:166;;-1:-1:-1;250:64:1;;19389:8:166;;280:18:183;;19389:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19415:8:166;;19442:6;;19415:42;;;;;-1:-1:-1;;;;;19442:6:166;;;19415:42;;;15848:74:183;15938:18;;;15931:34;;;19415:8:166;;;-1:-1:-1;19415:18:166;;-1:-1:-1;15821:18:183;;19415:42:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19513:8:166;;19546:6;;19513:48;;;;;-1:-1:-1;;;;;19546:6:166;;;19513:48;;;15848:74:183;15938:18;;;15931:34;;;19513:8:166;;;-1:-1:-1;19513:24:166;;-1:-1:-1;15821:18:183;;19513:48:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19506:56;;;;:::i;:::-;19630:6;;19621:16;;-1:-1:-1;;;19621:16:166;;-1:-1:-1;;;;;19630:6:166;;;19621:16;;;307:74:183;250:64:1;;19621:8:166;;280:18:183;;19621:16:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19647:8:166;;19674:6;;19647:42;;;;;-1:-1:-1;;;;;19674:6:166;;;19647:42;;;15848:74:183;15938:18;;;15931:34;;;19647:8:166;;;-1:-1:-1;19647:18:166;;-1:-1:-1;15821:18:183;;19647:42:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19746:8:166;;19779:6;;19746:48;;;;;-1:-1:-1;;;;;19779:6:166;;;19746:48;;;15848:74:183;15938:18;;;15931:34;;;19746:8:166;;;-1:-1:-1;19746:24:166;;-1:-1:-1;15821:18:183;;19746:48:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19745:49;19738:57;;;;:::i;15017:1378::-;15261:55;;;;;;;;;;;;;;;;;;;;;;;15343:6;;15326:25;;-1:-1:-1;;;15326:25:166;;15261:55;;250:64:1;;15326:8:166;;:25;;-1:-1:-1;;;;;15343:6:166;;15326:25;-1:-1:-1;;;;;325:55:183;;;;307:74;;295:2;280:18;;150:237;15326:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15361:20:166;;;;;250:64:1;;-1:-1:-1;15361:15:166;;-1:-1:-1;15361:20:166;;15377:3;;15361:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15391:8:166;;15409:7;;15391:34;;;;;;;;17868:25:183;;;;15418:2:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;15391:8:166;;;;-1:-1:-1;15391:17:166;;-1:-1:-1;17841:18:183;;15391:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15490:7:166;;15511:8;;15490:34;;;;;-1:-1:-1;;;;;15511:8:166;;;15490:34;;;15848:74:183;15522:1:166;15938:18:183;;;15931:34;15490:7:166;;;-1:-1:-1;15490:12:166;;-1:-1:-1;15821:18:183;;15490:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15552:6:166;;15535:25;;-1:-1:-1;;;15535:25:166;;-1:-1:-1;;;;;15552:6:166;;;15535:25;;;307:74:183;250:64:1;;-1:-1:-1;15535:8:166;;-1:-1:-1;280:18:183;;15535:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15570:20:166;;;;;250:64:1;;-1:-1:-1;15570:15:166;;-1:-1:-1;15570:20:166;;15586:3;;15570:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15600:8:166;;15618:7;;15600:34;;;;;;;;17868:25:183;;;;15627:2:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;15600:8:166;;;;-1:-1:-1;15600:17:166;;-1:-1:-1;17841:18:183;;15600:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15726:6:166;;15709:25;;-1:-1:-1;;;15709:25:166;;-1:-1:-1;;;;;15726:6:166;;;15709:25;;;307:74:183;250:64:1;;-1:-1:-1;15709:8:166;;-1:-1:-1;280:18:183;;15709:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15744:8:166;;15762:7;;15744:32;;;;;;;;17868:25:183;;;;15771:1:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;15744:8:166;;;;-1:-1:-1;15744:17:166;;-1:-1:-1;17841:18:183;;15744:32:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15821:8:166;;15847:7;;15821:34;;;;;15788:13;;-1:-1:-1;15788:13:166;;-1:-1:-1;;;;;;15821:8:166;;;;:25;;:34;;;;1095:25:183;;;1083:2;1068:18;;932:194;15821:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15787:68;;;;15866:18;15875:5;15882:1;15866:8;:18::i;:::-;15894:19;15903:6;15911:1;15894:8;:19::i;:::-;16150:7;;16171:8;;16150:35;;;;;-1:-1:-1;;;;;16171:8:166;;;16150:35;;;15848:74:183;16182:2:166;15938:18:183;;;15931:34;16150:7:166;;;:12;;15821:18:183;;16150:35:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16213:6:166;;16196:25;;-1:-1:-1;;;16196:25:166;;-1:-1:-1;;;;;16213:6:166;;;16196:25;;;307:74:183;250:64:1;;-1:-1:-1;16196:8:166;;-1:-1:-1;280:18:183;;16196:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16231:8:166;;16249:7;;16231:34;;;;;;;;17868:25:183;;;;16258:2:166;17909:18:183;;;17902:34;;;17952:18;;;17945:34;-1:-1:-1;;;;;16231:8:166;;;;-1:-1:-1;16231:17:166;;-1:-1:-1;17841:18:183;;16231:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16294:8:166;;16320:7;;16294:34;;;;;-1:-1:-1;;;;;16294:8:166;;;;-1:-1:-1;16294:25:166;;-1:-1:-1;16294:34:166;;;;1095:25:183;;;1083:2;1068:18;;932:194;16294:34:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16276:52;;-1:-1:-1;16276:52:166;-1:-1:-1;16339:19:166;16276:52;16355:2;16339:8;:19::i;:::-;16368:20;16377:6;16385:2;16368:8;:20::i;9413:2128::-;9615:11;9638:21;9662:11;-1:-1:-1;;;;;9662:20:166;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9638:46;;9694:20;9717:10;-1:-1:-1;;;;;9717:19:166;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9694:44;-1:-1:-1;9749:16:166;9788:44;9812:20;9793:15;9788:44;:::i;:::-;9778:55;;:2;:55;:::i;:::-;9768:65;;:7;:65;:::i;:::-;9749:84;-1:-1:-1;9844:20:166;9997:1;9939:42;9962:19;9939:20;:42;:::i;:::-;9938:60;;;;:::i;:::-;9867:56;9908:14;9872:15;9867:56;:::i;:::-;:131;;;;:::i;:::-;9844:154;-1:-1:-1;10009:20:166;10309:19;10258:20;9844:154;10165:15;10143:19;10148:14;10143:2;:19;:::i;:::-;:37;;;;:::i;:::-;10138:89;;;;:::i;:::-;:140;;;;:::i;:::-;:190;;;;:::i;:::-;10063:305;;:2;:305;:::i;:::-;10032:336;;:16;:336;:::i;:::-;10009:359;-1:-1:-1;10379:20:166;10685:19;10634:20;10588:15;10541;10519:19;10524:14;10519:2;:19;:::i;:::-;:37;;;;:::i;:::-;10514:89;;;;:::i;:::-;:140;;;;:::i;:::-;:190;;;;:::i;:::-;10439:305;;:2;:305;:::i;:::-;10403:20;10422:1;10403:16;:20;:::i;:::-;10402:342;;;;:::i;:::-;10796:677;;;;;;;;-1:-1:-1;;;;;10796:677:166;;;;;;;;;;;;10932:8;;;10796:677;;;;;;;10755:38;10796:677;;;;;;;;;;;;;;;;;;;;;;;;11171:6;10796:677;;;;10932:8;10796:677;;;;;10379:365;;-1:-1:-1;10796:677:166;;;11285:24;:15;11303:6;11285:24;:::i;:::-;10796:677;;;;11364:8;10796:677;;;;;;;;-1:-1:-1;10796:677:166;;;;;;;;11491:10;;11515:18;;10755:718;;-1:-1:-1;;;;;;11491:10:166;;;;:23;;11515:18;;10755:718;;11515:18;;:::i;:::-;;;;;;;;;;;;;11491:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11484:50;9413:2128;-1:-1:-1;;;;;;;;;;;;;9413:2128:166:o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;29811:2:183;29793:21;;;29850:2;29830:18;;;29823:30;29889:34;29884:2;29869:18;;29862:62;29960:4;29955:2;29940:18;;29933:32;29997:3;29982:19;;29609:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;-1:-1:-1;;;;;3685:6:0;:1;-1:-1:-1;;;;;3685:6:0;;3681:212;;3712:44;;;;;31248:2:183;31230:21;;;31287:2;31267:18;;;31260:30;31326:34;31321:2;31306:18;;31299:62;31397:7;31392:2;31377:18;;31370:35;31437:3;31422:19;;31046:401;3712:44:0;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;32458:74:183;;;2677:17:0;32548:18:183;;;32541:34;;;;2712:4:0;32591:18:183;;;32584:34;2489:11:0;;1671:64;2586:43;;32431:18:183;;2652:67:0;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;;;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1321:184:183:-;1373:77;1370:1;1363:88;1470:4;1467:1;1460:15;1494:4;1491:1;1484:15;1510:154;-1:-1:-1;;;;;1589:5:183;1585:54;1578:5;1575:65;1565:93;;1654:1;1651;1644:12;1669:138;1748:13;;1770:31;1748:13;1770:31;:::i;1812:1188::-;1907:6;1938:2;1981;1969:9;1960:7;1956:23;1952:32;1949:52;;;1997:1;1994;1987:12;1949:52;2030:9;2024:16;2059:18;2100:2;2092:6;2089:14;2086:34;;;2116:1;2113;2106:12;2086:34;2154:6;2143:9;2139:22;2129:32;;2199:7;2192:4;2188:2;2184:13;2180:27;2170:55;;2221:1;2218;2211:12;2170:55;2250:2;2244:9;2272:2;2268;2265:10;2262:36;;;2278:18;;:::i;:::-;2324:2;2321:1;2317:10;2356:2;2350:9;2415:66;2410:2;2406;2402:11;2398:84;2390:6;2386:97;2533:6;2521:10;2518:22;2513:2;2501:10;2498:18;2495:46;2492:72;;;2544:18;;:::i;:::-;2580:2;2573:22;2630:18;;;2664:15;;;;-1:-1:-1;2706:11:183;;;2702:20;;;2734:19;;;2731:39;;;2766:1;2763;2756:12;2731:39;2790:11;;;;2810:159;2826:6;2821:3;2818:15;2810:159;;;2892:34;2922:3;2892:34;:::i;:::-;2880:47;;2843:12;;;;2947;;;;2810:159;;;2988:6;1812:1188;-1:-1:-1;;;;;;;;1812:1188:183:o;3005:184::-;3057:77;3054:1;3047:88;3154:4;3151:1;3144:15;3178:4;3175:1;3168:15;10645:1258;11010:4;11052:3;11041:9;11037:19;11029:27;;-1:-1:-1;;;;;11156:2:183;11148:6;11144:15;11133:9;11126:34;11179:2;11229;11221:6;11217:15;11212:2;11201:9;11197:18;11190:43;11281:2;11273:6;11269:15;11264:2;11253:9;11249:18;11242:43;11320:2;11309:9;11305:18;11294:29;;11365:6;11389:1;11399:171;11413:4;11410:1;11407:11;11399:171;;;11503:13;;-1:-1:-1;;;;;10442:55:183;10430:68;;10530:4;10521:14;;11460:62;-1:-1:-1;11545:15:183;;;;11433:1;11426:9;11399:171;;;11403:3;;11607;11596:9;11592:19;11579:32;;11659:6;11685:1;11695:202;11711:4;11706:3;11703:13;11695:202;;;11780:15;;11797:10;11776:32;11762:47;;11831:14;;;;11870:17;;;;11735:1;11726:11;11695:202;;;11699:3;;;;10645:1258;;;;;;;;:::o;12220:518::-;12393:2;12378:18;;12426:1;12415:13;;12405:201;;12462:77;12459:1;12452:88;12563:4;12560:1;12553:15;12591:4;12588:1;12581:15;12405:201;12615:25;;;-1:-1:-1;;;;;12676:55:183;;;;12671:2;12656:18;;;12649:83;12220:518;:::o;15252:184::-;15304:77;15301:1;15294:88;15401:4;15398:1;15391:15;15425:4;15422:1;15415:15;15441:228;15481:7;15607:1;15539:66;15535:74;15532:1;15529:81;15524:1;15517:9;15510:17;15506:105;15503:131;;;15614:18;;:::i;:::-;-1:-1:-1;15654:9:183;;15441:228::o;15976:277::-;16043:6;16096:2;16084:9;16075:7;16071:23;16067:32;16064:52;;;16112:1;16109;16102:12;16064:52;16144:9;16138:16;16197:5;16190:13;16183:21;16176:5;16173:32;16163:60;;16219:1;16216;16209:12;16163:60;16242:5;15976:277;-1:-1:-1;;;15976:277:183:o;16569:184::-;16639:6;16692:2;16680:9;16671:7;16667:23;16663:32;16660:52;;;16708:1;16705;16698:12;16660:52;-1:-1:-1;16731:16:183;;16569:184;-1:-1:-1;16569:184:183:o;16940:258::-;17012:1;17022:113;17036:6;17033:1;17030:13;17022:113;;;17112:11;;;17106:18;17093:11;;;17086:39;17058:2;17051:10;17022:113;;;17153:6;17150:1;17147:13;17144:48;;;-1:-1:-1;;17188:1:183;17170:16;;17163:27;16940:258::o;17203:440::-;17350:2;17339:9;17332:21;17313:4;17382:6;17376:13;17425:6;17420:2;17409:9;17405:18;17398:34;17441:66;17500:6;17495:2;17484:9;17480:18;17475:2;17467:6;17463:15;17441:66;:::i;:::-;17559:2;17547:15;17564:66;17543:88;17528:104;;;;17634:2;17524:113;;17203:440;-1:-1:-1;;17203:440:183:o;17990:128::-;18030:3;18061:1;18057:6;18054:1;18051:13;18048:39;;;18067:18;;:::i;:::-;-1:-1:-1;18103:9:183;;17990:128::o;18123:245::-;18202:6;18210;18263:2;18251:9;18242:7;18238:23;18234:32;18231:52;;;18279:1;18276;18269:12;18231:52;-1:-1:-1;;18302:16:183;;18358:2;18343:18;;;18337:25;18302:16;;18337:25;;-1:-1:-1;18123:245:183:o;19550:696::-;19736:2;19788:21;;;19858:13;;19761:18;;;19880:22;;;19707:4;;19736:2;19959:15;;;;19933:2;19918:18;;;19707:4;20002:218;20016:6;20013:1;20010:13;20002:218;;;20081:13;;-1:-1:-1;;;;;20077:62:183;20065:75;;20195:15;;;;20160:12;;;;20038:1;20031:9;20002:218;;;-1:-1:-1;20237:3:183;;19550:696;-1:-1:-1;;;;;;19550:696:183:o;21905:269::-;21993:6;22046:2;22034:9;22025:7;22021:23;22017:32;22014:52;;;22062:1;22059;22052:12;22014:52;22094:9;22088:16;22113:31;22138:5;22113:31;:::i;22481:417::-;22678:66;22670:6;22666:79;22661:3;22654:92;22636:3;22775:6;22769:13;22791:61;22845:6;22841:1;22836:3;22832:11;22825:4;22817:6;22813:17;22791:61;:::i;:::-;22872:16;;;;22890:1;22868:24;;22481:417;-1:-1:-1;;;22481:417:183:o;22903:274::-;23032:3;23070:6;23064:13;23086:53;23132:6;23127:3;23120:4;23112:6;23108:17;23086:53;:::i;:::-;23155:16;;;;;22903:274;-1:-1:-1;;22903:274:183:o;23182:184::-;23234:77;23231:1;23224:88;23331:4;23328:1;23321:15;23355:4;23352:1;23345:15;24332:273;24400:6;24453:2;24441:9;24432:7;24428:23;24424:32;24421:52;;;24469:1;24466;24459:12;24421:52;24501:9;24495:16;24551:4;24544:5;24540:16;24533:5;24530:27;24520:55;;24571:1;24568;24561:12;24610:391;24647:4;24691:1;24688;24677:16;24727:1;24724;24713:16;24757:1;24752:3;24748:11;24868:3;24800:66;24796:76;24791:3;24787:86;24782:2;24775:10;24771:103;24768:129;;;24877:18;;:::i;:::-;24936:3;24930:4;24926:14;24921:3;24917:24;24913:2;24909:33;24906:59;;;24945:18;;:::i;:::-;-1:-1:-1;24982:13:183;;;24610:391;-1:-1:-1;;;24610:391:183:o;25006:482::-;25095:1;25138:5;25095:1;25152:330;25173:7;25163:8;25160:21;25152:330;;;25292:4;25224:66;25220:77;25214:4;25211:87;25208:113;;;25301:18;;:::i;:::-;25351:7;25341:8;25337:22;25334:55;;;25371:16;;;;25334:55;25450:22;;;;25410:15;;;;25152:330;;;25156:3;25006:482;;;;;:::o;25493:866::-;25542:5;25572:8;25562:80;;-1:-1:-1;25613:1:183;25627:5;;25562:80;25661:4;25651:76;;-1:-1:-1;25698:1:183;25712:5;;25651:76;25743:4;25761:1;25756:59;;;;25829:1;25824:130;;;;25736:218;;25756:59;25786:1;25777:10;;25800:5;;;25824:130;25861:3;25851:8;25848:17;25845:43;;;25868:18;;:::i;:::-;-1:-1:-1;;25924:1:183;25910:16;;25939:5;;25736:218;;26038:2;26028:8;26025:16;26019:3;26013:4;26010:13;26006:36;26000:2;25990:8;25987:16;25982:2;25976:4;25973:12;25969:35;25966:77;25963:159;;;-1:-1:-1;26075:19:183;;;26107:5;;25963:159;26154:34;26179:8;26173:4;26154:34;:::i;:::-;26284:6;26216:66;26212:79;26203:7;26200:92;26197:118;;;26295:18;;:::i;:::-;26333:20;;-1:-1:-1;25493:866:183;;;;;:::o;26364:140::-;26422:5;26451:47;26492:4;26482:8;26478:19;26472:4;26451:47;:::i;26509:184::-;26561:77;26558:1;26551:88;26658:4;26655:1;26648:15;26682:4;26679:1;26672:15;26698:388;26735:1;26776;26773;26762:16;26812:1;26809;26798:16;26833:3;26823:37;;26840:18;;:::i;:::-;26961:66;26956:3;26953:75;26884:66;26879:3;26876:75;26872:157;26869:183;;;27032:18;;:::i;:::-;27066:14;;;26698:388;-1:-1:-1;;;26698:388:183:o;27091:204::-;27129:3;27165:4;27162:1;27158:12;27197:4;27194:1;27190:12;27232:3;27226:4;27222:14;27217:3;27214:23;27211:49;;;27240:18;;:::i;:::-;27276:13;;27091:204;-1:-1:-1;;;27091:204:183:o;27300:195::-;27338:4;27375;27372:1;27368:12;27407:4;27404:1;27400:12;27432:3;27427;27424:12;27421:38;;;27439:18;;:::i;:::-;27476:13;;;27300:195;-1:-1:-1;;;27300:195:183:o;27500:389::-;27537:3;27580:1;27577;27566:16;27616:1;27613;27602:16;27646:1;27641:3;27637:11;27695:3;27689:4;27685:14;27680:3;27676:24;27671:2;27664:10;27660:41;27657:67;;;27704:18;;:::i;:::-;27825:3;27757:66;27753:76;27748:3;27744:86;27740:2;27736:95;27733:121;;;27834:18;;:::i;:::-;-1:-1:-1;27870:13:183;;27500:389;-1:-1:-1;;;27500:389:183:o;27894:120::-;27934:1;27960;27950:35;;27965:18;;:::i;:::-;-1:-1:-1;27999:9:183;;27894:120::o;28114:1490::-;28346:13;;-1:-1:-1;;;;;84:54:183;72:67;;28310:3;28295:19;;28418:4;28410:6;28406:17;28400:24;28433:58;28485:4;28474:9;28470:20;28456:12;-1:-1:-1;;;;;84:54:183;72:67;;14:131;28433:58;;28540:4;28532:6;28528:17;28522:24;28555:60;28609:4;28598:9;28594:20;28578:14;-1:-1:-1;;;;;84:54:183;72:67;;14:131;28555:60;;28664:4;28656:6;28652:17;28646:24;28679:53;28726:4;28715:9;28711:20;28695:14;462:13;455:21;443:34;;392:91;28679:53;;28788:4;28780:6;28776:17;28770:24;28763:4;28752:9;28748:20;28741:54;28851:4;28843:6;28839:17;28833:24;28826:4;28815:9;28811:20;28804:54;28914:4;28906:6;28902:17;28896:24;28889:4;28878:9;28874:20;28867:54;28970:4;28962:6;28958:17;28952:24;28985:55;29034:4;29023:9;29019:20;29003:14;10622:10;10611:22;10599:35;;10546:94;28985:55;-1:-1:-1;29059:6:183;29102:15;;;29096:22;7531:14;7520:26;;;29161:18;;;7508:39;;;;29199:6;29242:15;;;29236:22;7520:26;;;29301:18;;;7508:39;29339:6;29382:15;;;29376:22;10622:10;10611:22;29441:18;;;10599:35;29479:6;29522:15;;;29516:22;-1:-1:-1;28082:20:183;29579:18;;;;28070:33;;;;28114:1490;:::o;30176:348::-;30406:2;30395:9;30388:21;30369:4;30426:49;30471:2;30460:9;30456:18;30089:2;30077:15;;30124:12;30117:4;30108:14;;30101:36;30162:2;30153:12;;30012:159;30426:49;30418:57;;30511:6;30506:2;30495:9;30491:18;30484:34;30176:348;;;;:::o;30693:::-;30923:2;30912:9;30905:21;30886:4;30943:49;30988:2;30977:9;30973:18;30606:2;30594:15;;30641:12;30634:4;30625:14;;30618:36;30679:2;30670:12;;30529:159;31452:397;31682:2;31671:9;31664:21;31645:4;31702:49;31747:2;31736:9;31732:18;30089:2;30077:15;;30124:12;30117:4;30108:14;;30101:36;30162:2;30153:12;;30012:159;31702:49;31694:57;;-1:-1:-1;;;;;31791:6:183;31787:55;31782:2;31771:9;31767:18;31760:83;31452:397;;;;:::o;31854:::-;32084:2;32073:9;32066:21;32047:4;32104:49;32149:2;32138:9;32134:18;30606:2;30594:15;;30641:12;30634:4;30625:14;;30618:36;30679:2;30670:12;;30529:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectness_OnlyWhitelistedMarketsCanCallback()": "38906dbd",
    "testCorrectness_amountsForMarket()": "3be22132",
    "testCorrectness_batchToTreasury()": "4b59caab",
    "testCorrectness_blacklist()": "de5f3102",
    "testCorrectness_callback()": "570af261",
    "testCorrectness_callbackMustReceiveTokens()": "f2b2afce",
    "testCorrectness_setOperator()": "9e0c5608",
    "testCorrectness_whitelist()": "ce597df3",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyWhitelistedMarketsCanCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_amountsForMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_batchToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_callbackMustReceiveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCreator\",\"outputs\":[{\"internalType\":\"contract UserFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testCorrectness_amountsForMarket()\":{\"notice\":\"DONE [X] amountsForMarket\"},\"testCorrectness_callback()\":{\"notice\":\"DONE [X] Callback correctly handles payouts for the 4 market cases [X] Only whitelisted markets can callback\"},\"testCorrectness_whitelist()\":{\"notice\":\"DONE [X] whitelist [X] blacklist [X] setOperator [X] batchToTreasury\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/BondCallback.t.sol\":\"BondCallbackTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/auth/authorities/RolesAuthority.sol\":{\"keccak256\":\"0x6cdd6092b5e72d8d4b1b787a44ef3fd734dbef2d40ac71304c08d3a8a991d910\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a16e2e9ded740c31a2db1d27f9186eb8fb637e3ed4412ffa291f0aa14fac5171\",\"dweb:/ipfs/Qmc29fdWzib5ZJEyM23cZUmcRzEtFdcvty5AwMVXThuQie\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/external/GDAO.sol\":{\"keccak256\":\"0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230\",\"dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18\",\"dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU\"]},\"src/interfaces/IGDAO.sol\":{\"keccak256\":\"0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58\",\"dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj\"]},\"src/interfaces/IOlympusAuthority.sol\":{\"keccak256\":\"0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737\",\"dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ\"]},\"src/libraries/Counters.sol\":{\"keccak256\":\"0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0\",\"dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05\",\"dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/MINTR/GoerliMinter.sol\":{\"keccak256\":\"0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b\",\"dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN\"]},\"src/modules/MINTR/MINTR.v1.sol\":{\"keccak256\":\"0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71\",\"dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/RANGE/GoerliDaoRange.sol\":{\"keccak256\":\"0x9ecf1a16a604082df3c8aec95145df9fa341bd2f584d79997d64d21a61a38294\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ae9d9e128674dc6ebaa034b49c0bda742bb1536cc1cd87c9473415fcf0c94c1d\",\"dweb:/ipfs/Qmf8JKoMHrFFpctjMg9wEtMSe5qttFQjMdJiAJXA7jE315\"]},\"src/modules/RANGE/RANGE.v1.sol\":{\"keccak256\":\"0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85\",\"dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/modules/TRSRY/GoerliDaoTreasury.sol\":{\"keccak256\":\"0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471\",\"dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c\"]},\"src/modules/TRSRY/TRSRY.v1.sol\":{\"keccak256\":\"0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2\",\"dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC\"]},\"src/policies/BondCallback.sol\":{\"keccak256\":\"0xea18d909d70162c8f49503b05df389a8ae6a33e238ac0e59b83002cd59995fe7\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6d9d039762205e2101a30e6d118c7c0460993151b284fb08ed87d2b9d359aed\",\"dweb:/ipfs/QmenfPVTiy8vshK521kLDYd9iXhiuKpBRgt7VRzrBc2gD8\"]},\"src/policies/Operator.sol\":{\"keccak256\":\"0xd1718c6b7c914747d3a0b31ad400c620cb793dbed30c6b9f4b5a1df3111bf379\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://16a0b234ad284299b33607bdcdb2c1f2e2bfbf8012c8d6e79de3b50d6ffb2293\",\"dweb:/ipfs/QmT64hsDCZZKFSjtndDNgkTwdPCXPpbATGC4Gdd4XZzA5r\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/lib/bonds/BondAggregator.sol\":{\"keccak256\":\"0xf3bcab28a7d94f64a0673ecd5b19db92c5f931e2e0dbeb0d0302400b79a5e473\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aa02ade17adb2fbc3b08601b51ee36f91e4fba55cf93b54d5991944a36b68358\",\"dweb:/ipfs/Qme3sZu1yChuxJVhbAjhkigSsJdctT9WSmNPJ3unb3exPW\"]},\"src/test/lib/bonds/BondFixedTermSDA.sol\":{\"keccak256\":\"0xbeed481d8363576ee264a97f62eb734a41b317d02fc914cdb680127012f08271\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://24f687cc843ac0bf72bf636e40296855028cfaa45a1fe9b203d0ab50193ba682\",\"dweb:/ipfs/QmXevwRG5z98cX2hnzEMJ7C8HhKPBJ2RiqzFtFzJ1LyNds\"]},\"src/test/lib/bonds/BondFixedTermTeller.sol\":{\"keccak256\":\"0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97\",\"dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT\"]},\"src/test/lib/bonds/bases/BondBaseSDA.sol\":{\"keccak256\":\"0x39d93e1eb0a1f8c599a4197a2dcd4c3e5c206e13fd7826caf107380d08f2151c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2fe7d154037dd98c969afe6f1c313093ddecc57301cd1bd94cd02e70d46c1a39\",\"dweb:/ipfs/QmfKBTWeujToMu2X2CuEkjMwwWZjfsLhjBeomdKMVq97uP\"]},\"src/test/lib/bonds/bases/BondBaseTeller.sol\":{\"keccak256\":\"0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6\",\"dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH\"]},\"src/test/lib/bonds/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/test/lib/bonds/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/test/lib/bonds/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol\":{\"keccak256\":\"0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9\",\"dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7\"]},\"src/test/lib/bonds/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/test/lib/bonds/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/test/lib/bonds/lib/ERC1155.sol\":{\"keccak256\":\"0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11\",\"dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H\"]},\"src/test/mocks/MockPrice.sol\":{\"keccak256\":\"0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495\",\"dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd\"]},\"src/test/policies/BondCallback.t.sol\":{\"keccak256\":\"0x4a80a1e9006d939e69c1aafae1323b1471e382d5053300131218e7dbec91fb00\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8b3bc3005435eacaf60cfe148dda78295ecbd028c2ca397a9da9d2709280b9f1\",\"dweb:/ipfs/QmXLyDhd3TGRKVzqCaUiUEfkBnzq5ZcgAZWDu6e5og7THW\"]},\"src/types/OlympusAccessControlled.sol\":{\"keccak256\":\"0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1\",\"dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_amountsForMarket"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_batchToTreasury"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_blacklist"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_callback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_callbackMustReceiveTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_whitelist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userCreator",
          "outputs": [
            {
              "internalType": "contract UserFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testCorrectness_amountsForMarket()": {
            "notice": "DONE [X] amountsForMarket"
          },
          "testCorrectness_callback()": {
            "notice": "DONE [X] Callback correctly handles payouts for the 4 market cases [X] Only whitelisted markets can callback"
          },
          "testCorrectness_whitelist()": {
            "notice": "DONE [X] whitelist [X] blacklist [X] setOperator [X] batchToTreasury"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/BondCallback.t.sol": "BondCallbackTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/auth/authorities/RolesAuthority.sol": {
        "keccak256": "0x6cdd6092b5e72d8d4b1b787a44ef3fd734dbef2d40ac71304c08d3a8a991d910",
        "urls": [
          "bzz-raw://a16e2e9ded740c31a2db1d27f9186eb8fb637e3ed4412ffa291f0aa14fac5171",
          "dweb:/ipfs/Qmc29fdWzib5ZJEyM23cZUmcRzEtFdcvty5AwMVXThuQie"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/GDAO.sol": {
        "keccak256": "0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd",
        "urls": [
          "bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230",
          "dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c",
        "urls": [
          "bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18",
          "dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IGDAO.sol": {
        "keccak256": "0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2",
        "urls": [
          "bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58",
          "dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOlympusAuthority.sol": {
        "keccak256": "0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25",
        "urls": [
          "bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737",
          "dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/Counters.sol": {
        "keccak256": "0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c",
        "urls": [
          "bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0",
          "dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeMath.sol": {
        "keccak256": "0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed",
        "urls": [
          "bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05",
          "dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/GoerliMinter.sol": {
        "keccak256": "0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1",
        "urls": [
          "bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b",
          "dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/MINTR.v1.sol": {
        "keccak256": "0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c",
        "urls": [
          "bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71",
          "dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/RANGE/GoerliDaoRange.sol": {
        "keccak256": "0x9ecf1a16a604082df3c8aec95145df9fa341bd2f584d79997d64d21a61a38294",
        "urls": [
          "bzz-raw://ae9d9e128674dc6ebaa034b49c0bda742bb1536cc1cd87c9473415fcf0c94c1d",
          "dweb:/ipfs/Qmf8JKoMHrFFpctjMg9wEtMSe5qttFQjMdJiAJXA7jE315"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/RANGE/RANGE.v1.sol": {
        "keccak256": "0xc803ce25dc001a854d78740cb30a6f288ff3e9ba247e8b41809ed6433c600bfb",
        "urls": [
          "bzz-raw://437361d90ef5e2c4e3defdc8a41dc4c56dd126d68d0445ac94c7f85f68a47b85",
          "dweb:/ipfs/QmTiF1HGzqfzJ42JezGTGNWBC1y7XinJJ7NKwcg91pFWah"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/GoerliDaoTreasury.sol": {
        "keccak256": "0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc",
        "urls": [
          "bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471",
          "dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/TRSRY.v1.sol": {
        "keccak256": "0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1",
        "urls": [
          "bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2",
          "dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/BondCallback.sol": {
        "keccak256": "0xea18d909d70162c8f49503b05df389a8ae6a33e238ac0e59b83002cd59995fe7",
        "urls": [
          "bzz-raw://e6d9d039762205e2101a30e6d118c7c0460993151b284fb08ed87d2b9d359aed",
          "dweb:/ipfs/QmenfPVTiy8vshK521kLDYd9iXhiuKpBRgt7VRzrBc2gD8"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/Operator.sol": {
        "keccak256": "0xd1718c6b7c914747d3a0b31ad400c620cb793dbed30c6b9f4b5a1df3111bf379",
        "urls": [
          "bzz-raw://16a0b234ad284299b33607bdcdb2c1f2e2bfbf8012c8d6e79de3b50d6ffb2293",
          "dweb:/ipfs/QmT64hsDCZZKFSjtndDNgkTwdPCXPpbATGC4Gdd4XZzA5r"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/lib/bonds/BondAggregator.sol": {
        "keccak256": "0xf3bcab28a7d94f64a0673ecd5b19db92c5f931e2e0dbeb0d0302400b79a5e473",
        "urls": [
          "bzz-raw://aa02ade17adb2fbc3b08601b51ee36f91e4fba55cf93b54d5991944a36b68358",
          "dweb:/ipfs/Qme3sZu1yChuxJVhbAjhkigSsJdctT9WSmNPJ3unb3exPW"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/BondFixedTermSDA.sol": {
        "keccak256": "0xbeed481d8363576ee264a97f62eb734a41b317d02fc914cdb680127012f08271",
        "urls": [
          "bzz-raw://24f687cc843ac0bf72bf636e40296855028cfaa45a1fe9b203d0ab50193ba682",
          "dweb:/ipfs/QmXevwRG5z98cX2hnzEMJ7C8HhKPBJ2RiqzFtFzJ1LyNds"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/BondFixedTermTeller.sol": {
        "keccak256": "0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3",
        "urls": [
          "bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97",
          "dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/bases/BondBaseSDA.sol": {
        "keccak256": "0x39d93e1eb0a1f8c599a4197a2dcd4c3e5c206e13fd7826caf107380d08f2151c",
        "urls": [
          "bzz-raw://2fe7d154037dd98c969afe6f1c313093ddecc57301cd1bd94cd02e70d46c1a39",
          "dweb:/ipfs/QmfKBTWeujToMu2X2CuEkjMwwWZjfsLhjBeomdKMVq97uP"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/bases/BondBaseTeller.sol": {
        "keccak256": "0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098",
        "urls": [
          "bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6",
          "dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol": {
        "keccak256": "0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746",
        "urls": [
          "bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9",
          "dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/lib/ERC1155.sol": {
        "keccak256": "0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197",
        "urls": [
          "bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11",
          "dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/mocks/MockPrice.sol": {
        "keccak256": "0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c",
        "urls": [
          "bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495",
          "dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/policies/BondCallback.t.sol": {
        "keccak256": "0x4a80a1e9006d939e69c1aafae1323b1471e382d5053300131218e7dbec91fb00",
        "urls": [
          "bzz-raw://8b3bc3005435eacaf60cfe148dda78295ecbd028c2ca397a9da9d2709280b9f1",
          "dweb:/ipfs/QmXLyDhd3TGRKVzqCaUiUEfkBnzq5ZcgAZWDu6e5og7THW"
        ],
        "license": "Unlicense"
      },
      "src/types/OlympusAccessControlled.sol": {
        "keccak256": "0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf",
        "urls": [
          "bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1",
          "dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/BondCallback.t.sol",
    "id": 78705,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "BondAggregator": [
        54995
      ],
      "BondCallback": [
        45857
      ],
      "BondCallbackTest": [
        78704
      ],
      "BondFixedTermSDA": [
        55071
      ],
      "BondFixedTermTeller": [
        55686
      ],
      "ERC20": [
        25731
      ],
      "FullMath": [
        37546
      ],
      "GDAO": [
        31138
      ],
      "GoerliDaoRange": [
        40362
      ],
      "GoerliDaoRoles": [
        40791
      ],
      "GoerliDaoTreasury": [
        41409
      ],
      "GoerliMinter": [
        38611
      ],
      "IBondAggregator": [
        35812
      ],
      "IBondSDA": [
        36247
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "LibIBondSDA": [
        59440
      ],
      "MockERC20": [
        24679
      ],
      "MockGdao": [
        76380
      ],
      "MockPrice": [
        66805
      ],
      "Module": [
        28577
      ],
      "Operator": [
        49950
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "ROLESv1": [
        40870
      ],
      "RolesAdmin": [
        51234
      ],
      "RolesAuthority": [
        24110
      ],
      "SolmateAuthority": [
        23835
      ],
      "TargetNotAContract": [
        28366
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        54005
      ],
      "console2": [
        23663
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:25076:166",
    "nodes": [
      {
        "id": 76290,
        "nodeType": "PragmaDirective",
        "src": "38:24:166",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 76292,
        "nodeType": "ImportDirective",
        "src": "64:40:166",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76291,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "72:4:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76294,
        "nodeType": "ImportDirective",
        "src": "105:48:166",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76293,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "113:8:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76296,
        "nodeType": "ImportDirective",
        "src": "154:53:166",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 54006,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76295,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54005,
              "src": "162:11:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76298,
        "nodeType": "ImportDirective",
        "src": "209:69:166",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/BondFixedTermSDA.sol",
        "file": "test/lib/bonds/BondFixedTermSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 55072,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76297,
              "name": "BondFixedTermSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55071,
              "src": "217:16:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76300,
        "nodeType": "ImportDirective",
        "src": "279:65:166",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/BondAggregator.sol",
        "file": "test/lib/bonds/BondAggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 54996,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76299,
              "name": "BondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54995,
              "src": "287:14:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76302,
        "nodeType": "ImportDirective",
        "src": "345:75:166",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/BondFixedTermTeller.sol",
        "file": "test/lib/bonds/BondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 55687,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76301,
              "name": "BondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55686,
              "src": "353:19:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76304,
        "nodeType": "ImportDirective",
        "src": "421:79:166",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/interfaces/IBondSDA.sol",
        "file": "test/lib/bonds/interfaces/IBondSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 59441,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76303,
              "name": "IBondSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59440,
              "src": "429:8:166",
              "typeDescriptions": {}
            },
            "local": "LibIBondSDA",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76307,
        "nodeType": "ImportDirective",
        "src": "501:106:166",
        "nodes": [],
        "absolutePath": "lib/solmate/src/auth/authorities/RolesAuthority.sol",
        "file": "solmate/auth/authorities/RolesAuthority.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 24111,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76305,
              "name": "RolesAuthority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24110,
              "src": "509:14:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76306,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23835,
              "src": "525:9:166",
              "typeDescriptions": {}
            },
            "local": "SolmateAuthority",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76310,
        "nodeType": "ImportDirective",
        "src": "609:72:166",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 24680,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76308,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24679,
              "src": "617:9:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76309,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "628:5:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76312,
        "nodeType": "ImportDirective",
        "src": "682:51:166",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockPrice.sol",
        "file": "test/mocks/MockPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 66806,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76311,
              "name": "MockPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66805,
              "src": "690:9:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76314,
        "nodeType": "ImportDirective",
        "src": "735:49:166",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondSDA.sol",
        "file": "interfaces/IBondSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 36248,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76313,
              "name": "IBondSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36247,
              "src": "743:8:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76316,
        "nodeType": "ImportDirective",
        "src": "785:63:166",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondAggregator.sol",
        "file": "interfaces/IBondAggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 35813,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76315,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35812,
              "src": "793:15:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76318,
        "nodeType": "ImportDirective",
        "src": "850:48:166",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 37547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76317,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37546,
              "src": "858:8:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76320,
        "nodeType": "ImportDirective",
        "src": "900:64:166",
        "nodes": [],
        "absolutePath": "src/modules/RANGE/GoerliDaoRange.sol",
        "file": "modules/RANGE/GoerliDaoRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 40363,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76319,
              "name": "GoerliDaoRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40362,
              "src": "908:14:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76322,
        "nodeType": "ImportDirective",
        "src": "965:70:166",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "file": "modules/TRSRY/GoerliDaoTreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 41410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76321,
              "name": "GoerliDaoTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41409,
              "src": "973:17:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76325,
        "nodeType": "ImportDirective",
        "src": "1036:66:166",
        "nodes": [],
        "absolutePath": "src/modules/MINTR/GoerliMinter.sol",
        "file": "modules/MINTR/GoerliMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 38612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76323,
              "name": "GoerliMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38611,
              "src": "1044:12:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76324,
              "name": "GDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31138,
              "src": "1058:4:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76327,
        "nodeType": "ImportDirective",
        "src": "1103:64:166",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 40792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76326,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40791,
              "src": "1111:14:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76329,
        "nodeType": "ImportDirective",
        "src": "1168:51:166",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 40871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76328,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40870,
              "src": "1176:7:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76331,
        "nodeType": "ImportDirective",
        "src": "1220:51:166",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 51235,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76330,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51234,
              "src": "1228:10:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76333,
        "nodeType": "ImportDirective",
        "src": "1272:47:166",
        "nodes": [],
        "absolutePath": "src/policies/Operator.sol",
        "file": "policies/Operator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 49951,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76332,
              "name": "Operator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49950,
              "src": "1280:8:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76335,
        "nodeType": "ImportDirective",
        "src": "1320:55:166",
        "nodes": [],
        "absolutePath": "src/policies/BondCallback.sol",
        "file": "policies/BondCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 45858,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76334,
              "name": "BondCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45857,
              "src": "1328:12:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76336,
        "nodeType": "ImportDirective",
        "src": "1377:24:166",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78705,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76380,
        "nodeType": "ContractDefinition",
        "src": "1403:371:166",
        "nodes": [
          {
            "id": 76353,
            "nodeType": "FunctionDefinition",
            "src": "1436:138:166",
            "nodes": [],
            "body": {
              "id": 76352,
              "nodeType": "Block",
              "src": "1572:2:166",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76347,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76340,
                    "src": "1545:5:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 76348,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76342,
                    "src": "1552:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 76349,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76344,
                    "src": "1561:9:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 76350,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 76346,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25731,
                  "src": "1539:5:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "1539:32:166"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 76345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76340,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1471:5:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 76353,
                  "src": "1457:19:166",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76342,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1500:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 76353,
                  "src": "1486:21:166",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76341,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76344,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "1523:9:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 76353,
                  "src": "1517:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 76343,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:5:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:91:166"
            },
            "returnParameters": {
              "id": 76351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1572:0:166"
            },
            "scope": 76380,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76366,
            "nodeType": "FunctionDefinition",
            "src": "1580:89:166",
            "nodes": [],
            "body": {
              "id": 76365,
              "nodeType": "Block",
              "src": "1636:33:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76361,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76355,
                        "src": "1652:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76362,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76357,
                        "src": "1656:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76360,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25702,
                      "src": "1646:5:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76364,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:16:166"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1589:4:166",
            "parameters": {
              "id": 76358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76355,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1602:2:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 76366,
                  "src": "1594:10:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76357,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1614:5:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 76366,
                  "src": "1606:13:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:27:166"
            },
            "returnParameters": {
              "id": 76359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:0:166"
            },
            "scope": 76380,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 76379,
            "nodeType": "FunctionDefinition",
            "src": "1675:97:166",
            "nodes": [],
            "body": {
              "id": 76378,
              "nodeType": "Block",
              "src": "1737:35:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76374,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76368,
                        "src": "1753:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76375,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76370,
                        "src": "1759:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76373,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25730,
                      "src": "1747:5:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76377,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:18:166"
                }
              ]
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "1684:8:166",
            "parameters": {
              "id": 76371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76368,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1701:4:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 76379,
                  "src": "1693:12:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76370,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1715:5:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 76379,
                  "src": "1707:13:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:29:166"
            },
            "returnParameters": {
              "id": 76372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:166"
            },
            "scope": 76380,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76337,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25731,
              "src": "1424:5:166"
            },
            "id": 76338,
            "nodeType": "InheritanceSpecifier",
            "src": "1424:5:166"
          }
        ],
        "canonicalName": "MockGdao",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          76380,
          25731
        ],
        "name": "MockGdao",
        "nameLocation": "1412:8:166",
        "scope": 78705,
        "usedErrors": []
      },
      {
        "id": 78704,
        "nodeType": "ContractDefinition",
        "src": "1822:23291:166",
        "nodes": [
          {
            "id": 76385,
            "nodeType": "UsingForDirective",
            "src": "1862:27:166",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 76383,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37546,
              "src": "1868:8:166"
            },
            "typeName": {
              "id": 76384,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1881:7:166",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 76388,
            "nodeType": "VariableDeclaration",
            "src": "1895:30:166",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1914:11:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$54005",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 76387,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76386,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54005,
                "src": "1895:11:166"
              },
              "referencedDeclaration": 54005,
              "src": "1895:11:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$54005",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 76390,
            "nodeType": "VariableDeclaration",
            "src": "1931:22:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1948:5:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1931:7:166",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76392,
            "nodeType": "VariableDeclaration",
            "src": "1959:20:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1976:3:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1959:7:166",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76394,
            "nodeType": "VariableDeclaration",
            "src": "1985:25:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "guardian",
            "nameLocation": "2002:8:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76393,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1985:7:166",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76396,
            "nodeType": "VariableDeclaration",
            "src": "2016:23:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "2033:6:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76395,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2016:7:166",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76399,
            "nodeType": "VariableDeclaration",
            "src": "2046:28:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "auth",
            "nameLocation": "2070:4:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAuthority_$24110",
              "typeString": "contract RolesAuthority"
            },
            "typeName": {
              "id": 76398,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76397,
                "name": "RolesAuthority",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24110,
                "src": "2046:14:166"
              },
              "referencedDeclaration": 24110,
              "src": "2046:14:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                "typeString": "contract RolesAuthority"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76402,
            "nodeType": "VariableDeclaration",
            "src": "2080:34:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "aggregator",
            "nameLocation": "2104:10:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondAggregator_$54995",
              "typeString": "contract BondAggregator"
            },
            "typeName": {
              "id": 76401,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76400,
                "name": "BondAggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54995,
                "src": "2080:14:166"
              },
              "referencedDeclaration": 54995,
              "src": "2080:14:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondAggregator_$54995",
                "typeString": "contract BondAggregator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76405,
            "nodeType": "VariableDeclaration",
            "src": "2120:35:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "teller",
            "nameLocation": "2149:6:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
              "typeString": "contract BondFixedTermTeller"
            },
            "typeName": {
              "id": 76404,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76403,
                "name": "BondFixedTermTeller",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55686,
                "src": "2120:19:166"
              },
              "referencedDeclaration": 55686,
              "src": "2120:19:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                "typeString": "contract BondFixedTermTeller"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76408,
            "nodeType": "VariableDeclaration",
            "src": "2161:36:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "auctioneer",
            "nameLocation": "2187:10:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
              "typeString": "contract BondFixedTermSDA"
            },
            "typeName": {
              "id": 76407,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76406,
                "name": "BondFixedTermSDA",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55071,
                "src": "2161:16:166"
              },
              "referencedDeclaration": 55071,
              "src": "2161:16:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                "typeString": "contract BondFixedTermSDA"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76411,
            "nodeType": "VariableDeclaration",
            "src": "2203:22:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "gdao",
            "nameLocation": "2221:4:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockGdao_$76380",
              "typeString": "contract MockGdao"
            },
            "typeName": {
              "id": 76410,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76409,
                "name": "MockGdao",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76380,
                "src": "2203:8:166"
              },
              "referencedDeclaration": 76380,
              "src": "2203:8:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockGdao_$76380",
                "typeString": "contract MockGdao"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76414,
            "nodeType": "VariableDeclaration",
            "src": "2231:26:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "2250:7:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 76413,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76412,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "2231:9:166"
              },
              "referencedDeclaration": 24679,
              "src": "2231:9:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76417,
            "nodeType": "VariableDeclaration",
            "src": "2263:24:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "other",
            "nameLocation": "2282:5:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 76416,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76415,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "2263:9:166"
              },
              "referencedDeclaration": 24679,
              "src": "2263:9:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76420,
            "nodeType": "VariableDeclaration",
            "src": "2294:22:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "2310:6:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$29497",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 76419,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76418,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29497,
                "src": "2294:6:166"
              },
              "referencedDeclaration": 29497,
              "src": "2294:6:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$29497",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76423,
            "nodeType": "VariableDeclaration",
            "src": "2322:24:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "2341:5:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockPrice_$66805",
              "typeString": "contract MockPrice"
            },
            "typeName": {
              "id": 76422,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76421,
                "name": "MockPrice",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66805,
                "src": "2322:9:166"
              },
              "referencedDeclaration": 66805,
              "src": "2322:9:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockPrice_$66805",
                "typeString": "contract MockPrice"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76426,
            "nodeType": "VariableDeclaration",
            "src": "2352:29:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "range",
            "nameLocation": "2376:5:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
              "typeString": "contract GoerliDaoRange"
            },
            "typeName": {
              "id": 76425,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76424,
                "name": "GoerliDaoRange",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40362,
                "src": "2352:14:166"
              },
              "referencedDeclaration": 40362,
              "src": "2352:14:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
                "typeString": "contract GoerliDaoRange"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76429,
            "nodeType": "VariableDeclaration",
            "src": "2387:35:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "2414:8:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
              "typeString": "contract GoerliDaoTreasury"
            },
            "typeName": {
              "id": 76428,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76427,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41409,
                "src": "2387:17:166"
              },
              "referencedDeclaration": 41409,
              "src": "2387:17:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                "typeString": "contract GoerliDaoTreasury"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76432,
            "nodeType": "VariableDeclaration",
            "src": "2428:28:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "2450:6:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
              "typeString": "contract GoerliMinter"
            },
            "typeName": {
              "id": 76431,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76430,
                "name": "GoerliMinter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38611,
                "src": "2428:12:166"
              },
              "referencedDeclaration": 38611,
              "src": "2428:12:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                "typeString": "contract GoerliMinter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76435,
            "nodeType": "VariableDeclaration",
            "src": "2462:29:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "2486:5:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 76434,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76433,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40791,
                "src": "2462:14:166"
              },
              "referencedDeclaration": 40791,
              "src": "2462:14:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76438,
            "nodeType": "VariableDeclaration",
            "src": "2498:26:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "2516:8:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Operator_$49950",
              "typeString": "contract Operator"
            },
            "typeName": {
              "id": 76437,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76436,
                "name": "Operator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49950,
                "src": "2498:8:166"
              },
              "referencedDeclaration": 49950,
              "src": "2498:8:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operator_$49950",
                "typeString": "contract Operator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76441,
            "nodeType": "VariableDeclaration",
            "src": "2530:30:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "callback",
            "nameLocation": "2552:8:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondCallback_$45857",
              "typeString": "contract BondCallback"
            },
            "typeName": {
              "id": 76440,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76439,
                "name": "BondCallback",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45857,
                "src": "2530:12:166"
              },
              "referencedDeclaration": 45857,
              "src": "2530:12:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondCallback_$45857",
                "typeString": "contract BondCallback"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76444,
            "nodeType": "VariableDeclaration",
            "src": "2566:30:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "2586:10:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 76443,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76442,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51234,
                "src": "2566:10:166"
              },
              "referencedDeclaration": 51234,
              "src": "2566:10:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76446,
            "nodeType": "VariableDeclaration",
            "src": "2639:24:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "regBond",
            "nameLocation": "2656:7:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76445,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2639:7:166",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76448,
            "nodeType": "VariableDeclaration",
            "src": "2669:24:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "invBond",
            "nameLocation": "2686:7:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76447,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2669:7:166",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76450,
            "nodeType": "VariableDeclaration",
            "src": "2699:29:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "internalBond",
            "nameLocation": "2716:12:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76449,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2699:7:166",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76452,
            "nodeType": "VariableDeclaration",
            "src": "2734:29:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "externalBond",
            "nameLocation": "2751:12:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76451,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2734:7:166",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76454,
            "nodeType": "VariableDeclaration",
            "src": "2769:35:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nonWhitelistedBond",
            "nameLocation": "2786:18:166",
            "scope": 78704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76453,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2769:7:166",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 77219,
            "nodeType": "FunctionDefinition",
            "src": "2811:6548:166",
            "nodes": [],
            "body": {
              "id": 77218,
              "nodeType": "Block",
              "src": "2835:6524:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 76468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 76466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 76464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 76462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 76460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2853:2:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 76461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2858:3:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "2853:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 76463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2864:2:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "2853:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 76465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2869:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "2853:18:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 76467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2874:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2853:23:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 76457,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "2845:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "2845:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 76469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:32:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76470,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:32:166"
                },
                {
                  "expression": {
                    "id": 76476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76471,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76388,
                      "src": "2955:11:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$54005",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2969:15:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$54005_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 76473,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76472,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54005,
                            "src": "2973:11:166"
                          },
                          "referencedDeclaration": 54005,
                          "src": "2973:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$54005",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 76475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2969:17:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$54005",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "2955:31:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$54005",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 76477,
                  "nodeType": "ExpressionStatement",
                  "src": "2955:31:166"
                },
                {
                  "id": 76569,
                  "nodeType": "Block",
                  "src": "2996:734:166",
                  "statements": [
                    {
                      "assignments": [
                        76482
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 76482,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "3078:5:166",
                          "nodeType": "VariableDeclaration",
                          "scope": 76569,
                          "src": "3061:22:166",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 76480,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3061:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 76481,
                            "nodeType": "ArrayTypeName",
                            "src": "3061:9:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "documentation": "Deploy bond system to test against",
                      "id": 76487,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 76485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3105:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 76483,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76388,
                            "src": "3086:11:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$54005",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 76484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54004,
                          "src": "3086:18:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 76486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3086:21:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3061:46:166"
                    },
                    {
                      "expression": {
                        "id": 76492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76488,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76390,
                          "src": "3121:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76489,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76482,
                            "src": "3129:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76491,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 76490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3135:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3129:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3121:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76493,
                      "nodeType": "ExpressionStatement",
                      "src": "3121:16:166"
                    },
                    {
                      "expression": {
                        "id": 76498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76494,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76392,
                          "src": "3151:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76495,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76482,
                            "src": "3157:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76497,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 76496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3163:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3157:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3151:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76499,
                      "nodeType": "ExpressionStatement",
                      "src": "3151:14:166"
                    },
                    {
                      "expression": {
                        "id": 76504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76500,
                          "name": "guardian",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76394,
                          "src": "3179:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76501,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76482,
                            "src": "3190:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76503,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 76502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3196:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3190:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3179:19:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76505,
                      "nodeType": "ExpressionStatement",
                      "src": "3179:19:166"
                    },
                    {
                      "expression": {
                        "id": 76510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76506,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76396,
                          "src": "3212:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 76507,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76482,
                            "src": "3221:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 76509,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 76508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3227:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3221:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3212:17:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 76511,
                      "nodeType": "ExpressionStatement",
                      "src": "3212:17:166"
                    },
                    {
                      "expression": {
                        "id": 76524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76512,
                          "name": "auth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76399,
                          "src": "3243:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                            "typeString": "contract RolesAuthority"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76516,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76394,
                              "src": "3269:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 76520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3304:1:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 76519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3296:7:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 76518,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3296:7:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3296:10:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76517,
                                "name": "SolmateAuthority",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23835,
                                "src": "3279:16:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Authority_$23835_$",
                                  "typeString": "type(contract Authority)"
                                }
                              },
                              "id": 76522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3279:28:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Authority_$23835",
                                "typeString": "contract Authority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_Authority_$23835",
                                "typeString": "contract Authority"
                              }
                            ],
                            "id": 76515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3250:18:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Authority_$23835_$returns$_t_contract$_RolesAuthority_$24110_$",
                              "typeString": "function (address,contract Authority) returns (contract RolesAuthority)"
                            },
                            "typeName": {
                              "id": 76514,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76513,
                                "name": "RolesAuthority",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24110,
                                "src": "3254:14:166"
                              },
                              "referencedDeclaration": 24110,
                              "src": "3254:14:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          },
                          "id": 76523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3250:58:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                            "typeString": "contract RolesAuthority"
                          }
                        },
                        "src": "3243:65:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                          "typeString": "contract RolesAuthority"
                        }
                      },
                      "id": 76525,
                      "nodeType": "ExpressionStatement",
                      "src": "3243:65:166"
                    },
                    {
                      "documentation": "Deploy the bond system",
                      "expression": {
                        "id": 76533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76526,
                          "name": "aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76402,
                          "src": "3362:10:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondAggregator_$54995",
                            "typeString": "contract BondAggregator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76530,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76394,
                              "src": "3394:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76531,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76399,
                              "src": "3404:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 76529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3375:18:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Authority_$23835_$returns$_t_contract$_BondAggregator_$54995_$",
                              "typeString": "function (address,contract Authority) returns (contract BondAggregator)"
                            },
                            "typeName": {
                              "id": 76528,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76527,
                                "name": "BondAggregator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54995,
                                "src": "3379:14:166"
                              },
                              "referencedDeclaration": 54995,
                              "src": "3379:14:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$54995",
                                "typeString": "contract BondAggregator"
                              }
                            }
                          },
                          "id": 76532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3375:34:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondAggregator_$54995",
                            "typeString": "contract BondAggregator"
                          }
                        },
                        "src": "3362:47:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondAggregator_$54995",
                          "typeString": "contract BondAggregator"
                        }
                      },
                      "id": 76534,
                      "nodeType": "ExpressionStatement",
                      "src": "3362:47:166"
                    },
                    {
                      "expression": {
                        "id": 76544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76535,
                          "name": "teller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76405,
                          "src": "3423:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                            "typeString": "contract BondFixedTermTeller"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76539,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76394,
                              "src": "3456:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76540,
                              "name": "aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76402,
                              "src": "3466:10:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$54995",
                                "typeString": "contract BondAggregator"
                              }
                            },
                            {
                              "id": 76541,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76394,
                              "src": "3478:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76542,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76399,
                              "src": "3488:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondAggregator_$54995",
                                "typeString": "contract BondAggregator"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 76538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3432:23:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IBondAggregator_$58985_$_t_address_$_t_contract$_Authority_$23835_$returns$_t_contract$_BondFixedTermTeller_$55686_$",
                              "typeString": "function (address,contract IBondAggregator,address,contract Authority) returns (contract BondFixedTermTeller)"
                            },
                            "typeName": {
                              "id": 76537,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76536,
                                "name": "BondFixedTermTeller",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 55686,
                                "src": "3436:19:166"
                              },
                              "referencedDeclaration": 55686,
                              "src": "3436:19:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          },
                          "id": 76543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3432:61:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                            "typeString": "contract BondFixedTermTeller"
                          }
                        },
                        "src": "3423:70:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                          "typeString": "contract BondFixedTermTeller"
                        }
                      },
                      "id": 76545,
                      "nodeType": "ExpressionStatement",
                      "src": "3423:70:166"
                    },
                    {
                      "expression": {
                        "id": 76555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76546,
                          "name": "auctioneer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76408,
                          "src": "3507:10:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                            "typeString": "contract BondFixedTermSDA"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76550,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76405,
                              "src": "3541:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            },
                            {
                              "id": 76551,
                              "name": "aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76402,
                              "src": "3549:10:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$54995",
                                "typeString": "contract BondAggregator"
                              }
                            },
                            {
                              "id": 76552,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76394,
                              "src": "3561:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76553,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76399,
                              "src": "3571:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondAggregator_$54995",
                                "typeString": "contract BondAggregator"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$24110",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 76549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3520:20:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IBondTeller_$59499_$_t_contract$_IBondAggregator_$58985_$_t_address_$_t_contract$_Authority_$23835_$returns$_t_contract$_BondFixedTermSDA_$55071_$",
                              "typeString": "function (contract IBondTeller,contract IBondAggregator,address,contract Authority) returns (contract BondFixedTermSDA)"
                            },
                            "typeName": {
                              "id": 76548,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76547,
                                "name": "BondFixedTermSDA",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 55071,
                                "src": "3524:16:166"
                              },
                              "referencedDeclaration": 55071,
                              "src": "3524:16:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                                "typeString": "contract BondFixedTermSDA"
                              }
                            }
                          },
                          "id": 76554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3520:56:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                            "typeString": "contract BondFixedTermSDA"
                          }
                        },
                        "src": "3507:69:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                          "typeString": "contract BondFixedTermSDA"
                        }
                      },
                      "id": 76556,
                      "nodeType": "ExpressionStatement",
                      "src": "3507:69:166"
                    },
                    {
                      "documentation": "Register auctioneer on the bond system",
                      "expression": {
                        "arguments": [
                          {
                            "id": 76560,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76394,
                            "src": "3655:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76557,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "3646:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 76559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7048,
                          "src": "3646:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 76561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3646:18:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76562,
                      "nodeType": "ExpressionStatement",
                      "src": "3646:18:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 76566,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76408,
                            "src": "3708:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          ],
                          "expression": {
                            "id": 76563,
                            "name": "aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76402,
                            "src": "3678:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondAggregator_$54995",
                              "typeString": "contract BondAggregator"
                            }
                          },
                          "id": 76565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "registerAuctioneer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54123,
                          "src": "3678:29:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IBondAuctioneer_$59170_$returns$__$",
                            "typeString": "function (contract IBondAuctioneer) external"
                          }
                        },
                        "id": 76567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3678:41:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76568,
                      "nodeType": "ExpressionStatement",
                      "src": "3678:41:166"
                    }
                  ]
                },
                {
                  "id": 76600,
                  "nodeType": "Block",
                  "src": "3740:218:166",
                  "statements": [
                    {
                      "documentation": "Deploy mock tokens",
                      "expression": {
                        "id": 76578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76570,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "3789:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "476f65726c692044414f",
                              "id": 76574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3809:12:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b2ac737ae102904102db046021be67598648bc8ea68b97fdedb57ea6ef41ea65",
                                "typeString": "literal_string \"Goerli DAO\""
                              },
                              "value": "Goerli DAO"
                            },
                            {
                              "hexValue": "4744414f",
                              "id": 76575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3823:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              "value": "GDAO"
                            },
                            {
                              "hexValue": "39",
                              "id": 76576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3831:1:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b2ac737ae102904102db046021be67598648bc8ea68b97fdedb57ea6ef41ea65",
                                "typeString": "literal_string \"Goerli DAO\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "id": 76573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3796:12:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockGdao_$76380_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockGdao)"
                            },
                            "typeName": {
                              "id": 76572,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76571,
                                "name": "MockGdao",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 76380,
                                "src": "3800:8:166"
                              },
                              "referencedDeclaration": 76380,
                              "src": "3800:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockGdao_$76380",
                                "typeString": "contract MockGdao"
                              }
                            }
                          },
                          "id": 76577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3796:37:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "src": "3789:44:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 76579,
                      "nodeType": "ExpressionStatement",
                      "src": "3789:44:166"
                    },
                    {
                      "expression": {
                        "id": 76588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76580,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76414,
                          "src": "3847:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657365727665",
                              "id": 76584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3871:9:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              "value": "Reserve"
                            },
                            {
                              "hexValue": "525356",
                              "id": 76585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3882:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              "value": "RSV"
                            },
                            {
                              "hexValue": "3138",
                              "id": 76586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3889:2:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 76583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3857:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 76582,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76581,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "3861:9:166"
                              },
                              "referencedDeclaration": 24679,
                              "src": "3861:9:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 76587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3857:35:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "3847:45:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76589,
                      "nodeType": "ExpressionStatement",
                      "src": "3847:45:166"
                    },
                    {
                      "expression": {
                        "id": 76598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76590,
                          "name": "other",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76417,
                          "src": "3906:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "4f74686572",
                              "id": 76594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3928:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0691aa2e8423768d061c955d231ebcfd39568459920cd05dc1ff1ffe2ca6f04a",
                                "typeString": "literal_string \"Other\""
                              },
                              "value": "Other"
                            },
                            {
                              "hexValue": "4f5448",
                              "id": 76595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3937:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2bbdabf55ac2a4142a0f27886b9d660587700fc875eb8ee81b5d15ad4198cf44",
                                "typeString": "literal_string \"OTH\""
                              },
                              "value": "OTH"
                            },
                            {
                              "hexValue": "3138",
                              "id": 76596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3944:2:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0691aa2e8423768d061c955d231ebcfd39568459920cd05dc1ff1ffe2ca6f04a",
                                "typeString": "literal_string \"Other\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2bbdabf55ac2a4142a0f27886b9d660587700fc875eb8ee81b5d15ad4198cf44",
                                "typeString": "literal_string \"OTH\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 76593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3914:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 76592,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76591,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "3918:9:166"
                              },
                              "referencedDeclaration": 24679,
                              "src": "3918:9:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 76597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3914:33:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "3906:41:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 76599,
                      "nodeType": "ExpressionStatement",
                      "src": "3906:41:166"
                    }
                  ]
                },
                {
                  "id": 76709,
                  "nodeType": "Block",
                  "src": "3968:841:166",
                  "statements": [
                    {
                      "documentation": "Deploy kernel",
                      "expression": {
                        "id": 76606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76601,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76420,
                          "src": "4012:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 76604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4021:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$29497_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 76603,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76602,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29497,
                                "src": "4025:6:166"
                              },
                              "referencedDeclaration": 29497,
                              "src": "4025:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 76605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4021:12:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "4012:21:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 76607,
                      "nodeType": "ExpressionStatement",
                      "src": "4012:21:166"
                    },
                    {
                      "documentation": "Deploy modules (some mocks)",
                      "expression": {
                        "id": 76621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76608,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76423,
                          "src": "4130:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66805",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76612,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "4152:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "38",
                                  "id": 76615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4167:7:166",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  },
                                  "value": "8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  }
                                ],
                                "id": 76614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4160:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 76613,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4160:6:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4160:15:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "id": 76619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 76617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4177:2:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 76618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4182:4:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "4177:9:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "id": 76611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4138:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_uint48_$_t_uint256_$returns$_t_contract$_MockPrice_$66805_$",
                              "typeString": "function (contract Kernel,uint48,uint256) returns (contract MockPrice)"
                            },
                            "typeName": {
                              "id": 76610,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76609,
                                "name": "MockPrice",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66805,
                                "src": "4142:9:166"
                              },
                              "referencedDeclaration": 66805,
                              "src": "4142:9:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockPrice_$66805",
                                "typeString": "contract MockPrice"
                              }
                            }
                          },
                          "id": 76620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4138:49:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66805",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "src": "4130:57:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$66805",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 76622,
                      "nodeType": "ExpressionStatement",
                      "src": "4130:57:166"
                    },
                    {
                      "expression": {
                        "id": 76647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76623,
                          "name": "range",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76426,
                          "src": "4201:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
                            "typeString": "contract GoerliDaoRange"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76627,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "4245:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 76629,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76411,
                                  "src": "4275:4:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockGdao_$76380",
                                    "typeString": "contract MockGdao"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockGdao_$76380",
                                    "typeString": "contract MockGdao"
                                  }
                                ],
                                "id": 76628,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25731,
                                "src": "4269:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$25731_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 76630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4269:11:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 76632,
                                  "name": "reserve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76414,
                                  "src": "4304:7:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 76631,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25731,
                                "src": "4298:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$25731_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 76633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4298:14:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 76636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4338:3:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "id": 76635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4330:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 76634,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4330:7:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4330:12:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "31303030",
                                  "id": 76640,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4368:4:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "id": 76639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4360:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 76638,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4360:7:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4360:13:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32303030",
                                  "id": 76644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4399:4:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000_by_1",
                                    "typeString": "int_const 2000"
                                  },
                                  "value": "2000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2000_by_1",
                                    "typeString": "int_const 2000"
                                  }
                                ],
                                "id": 76643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4391:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 76642,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4391:7:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4391:13:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 76626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4209:18:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_GoerliDaoRange_$40362_$",
                              "typeString": "function (contract Kernel,contract ERC20,contract ERC20,uint256,uint256,uint256) returns (contract GoerliDaoRange)"
                            },
                            "typeName": {
                              "id": 76625,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76624,
                                "name": "GoerliDaoRange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40362,
                                "src": "4213:14:166"
                              },
                              "referencedDeclaration": 40362,
                              "src": "4213:14:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
                                "typeString": "contract GoerliDaoRange"
                              }
                            }
                          },
                          "id": 76646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4209:209:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
                            "typeString": "contract GoerliDaoRange"
                          }
                        },
                        "src": "4201:217:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
                          "typeString": "contract GoerliDaoRange"
                        }
                      },
                      "id": 76648,
                      "nodeType": "ExpressionStatement",
                      "src": "4201:217:166"
                    },
                    {
                      "expression": {
                        "id": 76655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76649,
                          "name": "treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76429,
                          "src": "4432:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76653,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "4465:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 76652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4443:21:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoTreasury_$41409_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoTreasury)"
                            },
                            "typeName": {
                              "id": 76651,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76650,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 41409,
                                "src": "4447:17:166"
                              },
                              "referencedDeclaration": 41409,
                              "src": "4447:17:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            }
                          },
                          "id": 76654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4443:29:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "src": "4432:40:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 76656,
                      "nodeType": "ExpressionStatement",
                      "src": "4432:40:166"
                    },
                    {
                      "expression": {
                        "id": 76667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76657,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76432,
                          "src": "4486:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76661,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "4512:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 76664,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76411,
                                  "src": "4528:4:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockGdao_$76380",
                                    "typeString": "contract MockGdao"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockGdao_$76380",
                                    "typeString": "contract MockGdao"
                                  }
                                ],
                                "id": 76663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4520:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 76662,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4520:7:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4520:13:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 76660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4495:16:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_address_$returns$_t_contract$_GoerliMinter_$38611_$",
                              "typeString": "function (contract Kernel,address) returns (contract GoerliMinter)"
                            },
                            "typeName": {
                              "id": 76659,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76658,
                                "name": "GoerliMinter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38611,
                                "src": "4499:12:166"
                              },
                              "referencedDeclaration": 38611,
                              "src": "4499:12:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            }
                          },
                          "id": 76666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4495:39:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "src": "4486:48:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 76668,
                      "nodeType": "ExpressionStatement",
                      "src": "4486:48:166"
                    },
                    {
                      "expression": {
                        "id": 76675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76669,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76435,
                          "src": "4548:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76673,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "4575:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 76672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4556:18:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoRoles_$40791_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 76671,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76670,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40791,
                                "src": "4560:14:166"
                              },
                              "referencedDeclaration": 40791,
                              "src": "4560:14:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 76674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4556:26:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "4548:34:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 76676,
                      "nodeType": "ExpressionStatement",
                      "src": "4548:34:166"
                    },
                    {
                      "documentation": "Configure mocks",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 76682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 76680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4652:3:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 76681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4658:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "4652:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 76677,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76423,
                            "src": "4629:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setMovingAverage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66764,
                          "src": "4629:22:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 76683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76684,
                      "nodeType": "ExpressionStatement",
                      "src": "4629:34:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 76690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 76688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4696:3:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 76689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4702:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "4696:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 76685,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76423,
                            "src": "4677:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66774,
                          "src": "4677:18:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 76691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4677:30:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76692,
                      "nodeType": "ExpressionStatement",
                      "src": "4677:30:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3138",
                            "id": 76696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4739:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "expression": {
                            "id": 76693,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76423,
                            "src": "4721:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDecimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66794,
                          "src": "4721:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) external"
                          }
                        },
                        "id": 76697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4721:21:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76698,
                      "nodeType": "ExpressionStatement",
                      "src": "4721:21:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 76704,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4781:5:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 76705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4781:15:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 76703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4774:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 76702,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "4774:6:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4774:23:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "expression": {
                            "id": 76699,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76423,
                            "src": "4756:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 76701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66804,
                          "src": "4756:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                            "typeString": "function (uint48) external"
                          }
                        },
                        "id": 76707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4756:42:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76708,
                      "nodeType": "ExpressionStatement",
                      "src": "4756:42:166"
                    }
                  ]
                },
                {
                  "id": 76820,
                  "nodeType": "Block",
                  "src": "4819:1311:166",
                  "statements": [
                    {
                      "documentation": "Deploy roles admin",
                      "expression": {
                        "id": 76716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76710,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76444,
                          "src": "4868:10:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76714,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "4896:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 76713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4881:14:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_RolesAdmin_$51234_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 76712,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76711,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51234,
                                "src": "4885:10:166"
                              },
                              "referencedDeclaration": 51234,
                              "src": "4885:10:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 76715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4881:22:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "4868:35:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 76717,
                      "nodeType": "ExpressionStatement",
                      "src": "4868:35:166"
                    },
                    {
                      "documentation": "Deploy bond callback",
                      "expression": {
                        "id": 76731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76718,
                          "name": "callback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76441,
                          "src": "4955:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$45857",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76722,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "4983:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 76726,
                                      "name": "aggregator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76402,
                                      "src": "5015:10:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BondAggregator_$54995",
                                        "typeString": "contract BondAggregator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BondAggregator_$54995",
                                        "typeString": "contract BondAggregator"
                                      }
                                    ],
                                    "id": 76725,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5007:7:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 76724,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5007:7:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5007:19:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76723,
                                "name": "IBondAggregator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35812,
                                "src": "4991:15:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBondAggregator_$35812_$",
                                  "typeString": "type(contract IBondAggregator)"
                                }
                              },
                              "id": 76728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4991:36:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondAggregator_$35812",
                                "typeString": "contract IBondAggregator"
                              }
                            },
                            {
                              "id": 76729,
                              "name": "gdao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76411,
                              "src": "5029:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockGdao_$76380",
                                "typeString": "contract MockGdao"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBondAggregator_$35812",
                                "typeString": "contract IBondAggregator"
                              },
                              {
                                "typeIdentifier": "t_contract$_MockGdao_$76380",
                                "typeString": "contract MockGdao"
                              }
                            ],
                            "id": 76721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4966:16:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_contract$_IBondAggregator_$35812_$_t_contract$_ERC20_$25731_$returns$_t_contract$_BondCallback_$45857_$",
                              "typeString": "function (contract Kernel,contract IBondAggregator,contract ERC20) returns (contract BondCallback)"
                            },
                            "typeName": {
                              "id": 76720,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76719,
                                "name": "BondCallback",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 45857,
                                "src": "4970:12:166"
                              },
                              "referencedDeclaration": 45857,
                              "src": "4970:12:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              }
                            }
                          },
                          "id": 76730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4966:68:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$45857",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "src": "4955:79:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 76732,
                      "nodeType": "ExpressionStatement",
                      "src": "4955:79:166"
                    },
                    {
                      "documentation": "Deploy operator",
                      "expression": {
                        "id": 76786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 76733,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76438,
                          "src": "5081:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Operator_$49950",
                            "typeString": "contract Operator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 76737,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76420,
                              "src": "5122:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 76741,
                                      "name": "auctioneer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76408,
                                      "src": "5163:10:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                                        "typeString": "contract BondFixedTermSDA"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                                        "typeString": "contract BondFixedTermSDA"
                                      }
                                    ],
                                    "id": 76740,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5155:7:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 76739,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5155:7:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5155:19:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76738,
                                "name": "IBondSDA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36247,
                                "src": "5146:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBondSDA_$36247_$",
                                  "typeString": "type(contract IBondSDA)"
                                }
                              },
                              "id": 76743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5146:29:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondSDA_$36247",
                                "typeString": "contract IBondSDA"
                              }
                            },
                            {
                              "id": 76744,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76441,
                              "src": "5193:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "id": 76746,
                                      "name": "gdao",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76411,
                                      "src": "5226:4:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockGdao_$76380",
                                        "typeString": "contract MockGdao"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockGdao_$76380",
                                        "typeString": "contract MockGdao"
                                      }
                                    ],
                                    "id": 76745,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25731,
                                    "src": "5220:5:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$25731_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 76747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5220:11:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25731",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 76749,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76414,
                                      "src": "5239:7:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                                        "typeString": "contract MockERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                                        "typeString": "contract MockERC20"
                                      }
                                    ],
                                    "id": 76748,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25731,
                                    "src": "5233:5:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$25731_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 76750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5233:14:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25731",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "id": 76751,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5219:29:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32303030",
                                      "id": 76754,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5295:4:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      },
                                      "value": "2000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      }
                                    ],
                                    "id": 76753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5288:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76752,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5288:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5288:12:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "35",
                                      "id": 76758,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5346:6:166",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_432000_by_1",
                                        "typeString": "int_const 432000"
                                      },
                                      "value": "5"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_432000_by_1",
                                        "typeString": "int_const 432000"
                                      }
                                    ],
                                    "id": 76757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5339:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76756,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5339:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5339:14:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "3130305f303030",
                                      "id": 76762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5394:7:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100000_by_1",
                                        "typeString": "int_const 100000"
                                      },
                                      "value": "100_000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100000_by_1",
                                        "typeString": "int_const 100000"
                                      }
                                    ],
                                    "id": 76761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5387:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76760,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5387:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5387:15:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 76766,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5445:7:166",
                                      "subdenomination": "hours",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      }
                                    ],
                                    "id": 76765,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5438:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76764,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5438:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5438:15:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31303030",
                                      "id": 76770,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5501:4:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      }
                                    ],
                                    "id": 76769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5494:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76768,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5494:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5494:12:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 76774,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5552:7:166",
                                      "subdenomination": "hours",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      }
                                    ],
                                    "id": 76773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5545:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76772,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5545:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76775,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5545:15:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "35",
                                      "id": 76778,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5602:1:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      },
                                      "value": "5"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      }
                                    ],
                                    "id": 76777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5595:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76776,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5595:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5595:9:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "37",
                                      "id": 76782,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5651:1:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_7_by_1",
                                        "typeString": "int_const 7"
                                      },
                                      "value": "7"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_7_by_1",
                                        "typeString": "int_const 7"
                                      }
                                    ],
                                    "id": 76781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5644:6:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 76780,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5644:6:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 76783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5644:9:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 76784,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5266:484:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$8_memory_ptr",
                                "typeString": "uint32[8] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBondSDA_$36247",
                                "typeString": "contract IBondSDA"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              },
                              {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$8_memory_ptr",
                                "typeString": "uint32[8] memory"
                              }
                            ],
                            "id": 76736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5092:12:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_contract$_IBondSDA_$36247_$_t_contract$_IBondCallback_$36038_$_t_array$_t_contract$_ERC20_$25731_$2_memory_ptr_$_t_array$_t_uint32_$8_memory_ptr_$returns$_t_contract$_Operator_$49950_$",
                              "typeString": "function (contract Kernel,contract IBondSDA,contract IBondCallback,contract ERC20[2] memory,uint32[8] memory) returns (contract Operator)"
                            },
                            "typeName": {
                              "id": 76735,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 76734,
                                "name": "Operator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 49950,
                                "src": "5096:8:166"
                              },
                              "referencedDeclaration": 49950,
                              "src": "5096:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Operator_$49950",
                                "typeString": "contract Operator"
                              }
                            }
                          },
                          "id": 76785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5092:672:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Operator_$49950",
                            "typeString": "contract Operator"
                          }
                        },
                        "src": "5081:683:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      },
                      "id": 76787,
                      "nodeType": "ExpressionStatement",
                      "src": "5081:683:166"
                    },
                    {
                      "documentation": "Registor operator to create bond markets with a callback",
                      "expression": {
                        "arguments": [
                          {
                            "id": 76791,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76394,
                            "src": "5861:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76788,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "5852:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 76790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7048,
                          "src": "5852:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 76792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5852:18:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76793,
                      "nodeType": "ExpressionStatement",
                      "src": "5852:18:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 76799,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76438,
                                "src": "5925:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$49950",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$49950",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 76798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5917:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76797,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5917:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5917:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 76801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5936:4:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 76794,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76408,
                            "src": "5884:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          },
                          "id": 76796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCallbackAuthStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56665,
                          "src": "5884:32:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,bool) external"
                          }
                        },
                        "id": 76802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5884:57:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76803,
                      "nodeType": "ExpressionStatement",
                      "src": "5884:57:166"
                    },
                    {
                      "documentation": "Register this contract to create bond markets with a callback",
                      "expression": {
                        "arguments": [
                          {
                            "id": 76807,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76394,
                            "src": "6043:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76804,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "6034:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 76806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7048,
                          "src": "6034:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 76808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6034:18:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76809,
                      "nodeType": "ExpressionStatement",
                      "src": "6034:18:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 76815,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6107:4:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallbackTest_$78704",
                                  "typeString": "contract BondCallbackTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallbackTest_$78704",
                                  "typeString": "contract BondCallbackTest"
                                }
                              ],
                              "id": 76814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6099:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76813,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6099:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6099:13:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 76817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6114:4:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 76810,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76408,
                            "src": "6066:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                              "typeString": "contract BondFixedTermSDA"
                            }
                          },
                          "id": 76812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCallbackAuthStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56665,
                          "src": "6066:32:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,bool) external"
                          }
                        },
                        "id": 76818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6066:53:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76819,
                      "nodeType": "ExpressionStatement",
                      "src": "6066:53:166"
                    }
                  ]
                },
                {
                  "id": 76909,
                  "nodeType": "Block",
                  "src": "6140:725:166",
                  "statements": [
                    {
                      "documentation": "Install modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76824,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6253:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "6253:21:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76828,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76423,
                                "src": "6284:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPrice_$66805",
                                  "typeString": "contract MockPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPrice_$66805",
                                  "typeString": "contract MockPrice"
                                }
                              ],
                              "id": 76827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6276:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76826,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6276:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6276:14:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76821,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6232:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6232:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6232:59:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76831,
                      "nodeType": "ExpressionStatement",
                      "src": "6232:59:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76835,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6326:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "6326:21:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76839,
                                "name": "range",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76426,
                                "src": "6357:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
                                  "typeString": "contract GoerliDaoRange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRange_$40362",
                                  "typeString": "contract GoerliDaoRange"
                                }
                              ],
                              "id": 76838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6349:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76837,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6349:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6349:14:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76832,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6305:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6305:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6305:59:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76842,
                      "nodeType": "ExpressionStatement",
                      "src": "6305:59:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76846,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6399:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "6399:21:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76850,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76429,
                                "src": "6430:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 76849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6422:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76848,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6422:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6422:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76843,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6378:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6378:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6378:62:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76853,
                      "nodeType": "ExpressionStatement",
                      "src": "6378:62:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76857,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6475:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "6475:21:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76861,
                                "name": "minter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76432,
                                "src": "6506:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                  "typeString": "contract GoerliMinter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                  "typeString": "contract GoerliMinter"
                                }
                              ],
                              "id": 76860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6498:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76859,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6498:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6498:15:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76854,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6454:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6454:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6454:60:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76864,
                      "nodeType": "ExpressionStatement",
                      "src": "6454:60:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76868,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6549:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "6549:21:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76872,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76435,
                                "src": "6580:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 76871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6572:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76870,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6572:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6572:14:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76865,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6528:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6528:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6528:59:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76875,
                      "nodeType": "ExpressionStatement",
                      "src": "6528:59:166"
                    },
                    {
                      "documentation": "Approve policies",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76879,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6656:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "6656:22:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76883,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76438,
                                "src": "6688:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$49950",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$49950",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 76882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6680:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76881,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6680:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6680:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76876,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6635:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6635:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6635:63:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76886,
                      "nodeType": "ExpressionStatement",
                      "src": "6635:63:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76890,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6733:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "6733:22:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76894,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "6765:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 76893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6757:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76892,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6757:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6757:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76887,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6712:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6712:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6712:63:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76897,
                      "nodeType": "ExpressionStatement",
                      "src": "6712:63:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 76901,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "6810:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 76902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "6810:22:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76905,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76444,
                                "src": "6842:10:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 76904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6834:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76903,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6834:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6834:19:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76898,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76420,
                            "src": "6789:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 76900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "6789:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 76907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6789:65:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76908,
                      "nodeType": "ExpressionStatement",
                      "src": "6789:65:166"
                    }
                  ]
                },
                {
                  "id": 76965,
                  "nodeType": "Block",
                  "src": "6874:583:166",
                  "statements": [
                    {
                      "documentation": "Operator roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f6f706572617465",
                            "id": 76913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6982:18:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b4d9fb9a6da4dd32edf1c5c44aad7cf2ce8898cb854309656241b15637477090",
                              "typeString": "literal_string \"operator_operate\""
                            },
                            "value": "operator_operate"
                          },
                          {
                            "id": 76914,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76394,
                            "src": "7002:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b4d9fb9a6da4dd32edf1c5c44aad7cf2ce8898cb854309656241b15637477090",
                              "typeString": "literal_string \"operator_operate\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76910,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76444,
                            "src": "6961:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "6961:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6961:50:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76916,
                      "nodeType": "ExpressionStatement",
                      "src": "6961:50:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f7265706f72746572",
                            "id": 76920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7046:19:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_28152516262ac2847353981fed1fe5d5238d78dae987979d66a82d27b53ceed8",
                              "typeString": "literal_string \"operator_reporter\""
                            },
                            "value": "operator_reporter"
                          },
                          {
                            "arguments": [
                              {
                                "id": 76923,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "7075:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 76922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7067:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76921,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7067:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7067:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_28152516262ac2847353981fed1fe5d5238d78dae987979d66a82d27b53ceed8",
                              "typeString": "literal_string \"operator_reporter\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76917,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76444,
                            "src": "7025:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "7025:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7025:60:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76926,
                      "nodeType": "ExpressionStatement",
                      "src": "7025:60:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f706f6c696379",
                            "id": 76930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7120:17:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8d0cdcbebb48d7e2184369befd6a8f24fb6c9a7341595f6ebf2f1c9404c857df",
                              "typeString": "literal_string \"operator_policy\""
                            },
                            "value": "operator_policy"
                          },
                          {
                            "id": 76931,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76396,
                            "src": "7139:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_8d0cdcbebb48d7e2184369befd6a8f24fb6c9a7341595f6ebf2f1c9404c857df",
                              "typeString": "literal_string \"operator_policy\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76927,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76444,
                            "src": "7099:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "7099:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7099:47:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76933,
                      "nodeType": "ExpressionStatement",
                      "src": "7099:47:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6f70657261746f725f61646d696e",
                            "id": 76937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7181:16:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f0e196562d5c16895b4aadb374572d4ddc8bb46b0044a7ad6ee316a87634a0d5",
                              "typeString": "literal_string \"operator_admin\""
                            },
                            "value": "operator_admin"
                          },
                          {
                            "id": 76938,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76394,
                            "src": "7199:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f0e196562d5c16895b4aadb374572d4ddc8bb46b0044a7ad6ee316a87634a0d5",
                              "typeString": "literal_string \"operator_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76934,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76444,
                            "src": "7160:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "7160:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7160:48:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76940,
                      "nodeType": "ExpressionStatement",
                      "src": "7160:48:166"
                    },
                    {
                      "documentation": "Bond callback roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f77686974656c697374",
                            "id": 76944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7280:20:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            "value": "callback_whitelist"
                          },
                          {
                            "arguments": [
                              {
                                "id": 76947,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76438,
                                "src": "7310:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$49950",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$49950",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 76946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7302:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76945,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7302:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7302:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76941,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76444,
                            "src": "7259:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "7259:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7259:61:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76950,
                      "nodeType": "ExpressionStatement",
                      "src": "7259:61:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f77686974656c697374",
                            "id": 76954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7355:20:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            "value": "callback_whitelist"
                          },
                          {
                            "id": 76955,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76396,
                            "src": "7377:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76951,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76444,
                            "src": "7334:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "7334:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7334:50:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76957,
                      "nodeType": "ExpressionStatement",
                      "src": "7334:50:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f61646d696e",
                            "id": 76961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7419:16:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                              "typeString": "literal_string \"callback_admin\""
                            },
                            "value": "callback_admin"
                          },
                          {
                            "id": 76962,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76394,
                            "src": "7437:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                              "typeString": "literal_string \"callback_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 76958,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76444,
                            "src": "7398:10:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 76960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "7398:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 76963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7398:48:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 76964,
                      "nodeType": "ExpressionStatement",
                      "src": "7398:48:166"
                    }
                  ]
                },
                {
                  "documentation": "Set operator on the callback",
                  "expression": {
                    "arguments": [
                      {
                        "id": 76969,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76394,
                        "src": "7517:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76966,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7508:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7508:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7508:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76971,
                  "nodeType": "ExpressionStatement",
                  "src": "7508:18:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76975,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76438,
                        "src": "7557:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 76972,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "7536:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 76974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45826,
                      "src": "7536:20:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$49950_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 76976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7536:30:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76977,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:30:166"
                },
                {
                  "documentation": "Initialize the operator",
                  "expression": {
                    "arguments": [
                      {
                        "id": 76981,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76394,
                        "src": "7622:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 76978,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7613:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7613:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7613:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76983,
                  "nodeType": "ExpressionStatement",
                  "src": "7613:18:166"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 76984,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76438,
                        "src": "7641:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      },
                      "id": 76986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49700,
                      "src": "7641:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 76987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7641:21:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76988,
                  "nodeType": "ExpressionStatement",
                  "src": "7641:21:166"
                },
                {
                  "assignments": [
                    76990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76990,
                      "mutability": "mutable",
                      "name": "testGdao",
                      "nameLocation": "7738:8:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77218,
                      "src": "7730:16:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76989,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7730:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76994,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "id": 76993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 76991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7749:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "316539",
                      "id": 76992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7761:3:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000_by_1",
                        "typeString": "int_const 1000000000"
                      },
                      "value": "1e9"
                    },
                    "src": "7749:15:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7730:34:166"
                },
                {
                  "assignments": [
                    76996
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76996,
                      "mutability": "mutable",
                      "name": "testReserve",
                      "nameLocation": "7782:11:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77218,
                      "src": "7774:19:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76995,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7774:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77000,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "id": 76999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 76997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7796:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 76998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7808:4:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "7796:16:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7774:38:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77004,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "7833:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77005,
                          "name": "testGdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76990,
                          "src": "7840:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 77006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7851:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7840:13:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77001,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "7823:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76366,
                      "src": "7823:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7823:31:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77009,
                  "nodeType": "ExpressionStatement",
                  "src": "7823:31:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77013,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "7877:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77014,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76996,
                          "src": "7884:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 77015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7898:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7884:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77010,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "7864:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "7864:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7864:37:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77018,
                  "nodeType": "ExpressionStatement",
                  "src": "7864:37:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77024,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76429,
                            "src": "7933:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 77023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7925:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77022,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7925:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7925:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77026,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76996,
                          "src": "7944:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 77027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7958:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "7944:17:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77019,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "7912:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "7912:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7912:50:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77030,
                  "nodeType": "ExpressionStatement",
                  "src": "7912:50:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77034,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "8053:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77031,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8044:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8044:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8044:15:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77036,
                  "nodeType": "ExpressionStatement",
                  "src": "8044:15:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77042,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76438,
                            "src": "8090:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 77041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8082:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8082:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8082:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77044,
                          "name": "testGdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76990,
                          "src": "8101:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 77045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8112:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8101:13:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77037,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "8069:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25452,
                      "src": "8069:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 77047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8069:46:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77048,
                  "nodeType": "ExpressionStatement",
                  "src": "8069:46:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77052,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "8134:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77049,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8125:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8125:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8125:15:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77054,
                  "nodeType": "ExpressionStatement",
                  "src": "8125:15:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77060,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76438,
                            "src": "8174:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 77059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8166:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8166:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8166:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77062,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76996,
                          "src": "8185:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 77063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8199:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8185:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77055,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "8150:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25452,
                      "src": "8150:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 77065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8150:52:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77066,
                  "nodeType": "ExpressionStatement",
                  "src": "8150:52:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77070,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "8222:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77067,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8213:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8213:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8213:15:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77072,
                  "nodeType": "ExpressionStatement",
                  "src": "8213:15:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77078,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "8259:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8251:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77076,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8251:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8251:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77080,
                          "name": "testGdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76990,
                          "src": "8268:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 77081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8279:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8268:13:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77073,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "8238:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25452,
                      "src": "8238:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 77083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8238:44:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77084,
                  "nodeType": "ExpressionStatement",
                  "src": "8238:44:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77088,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "8301:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77085,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8292:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8292:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8292:15:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77090,
                  "nodeType": "ExpressionStatement",
                  "src": "8292:15:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77096,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "8341:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8333:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8333:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8333:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77098,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76996,
                          "src": "8350:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 77099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8364:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "8350:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77091,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "8317:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25452,
                      "src": "8317:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 77101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8317:50:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77102,
                  "nodeType": "ExpressionStatement",
                  "src": "8317:50:166"
                },
                {
                  "expression": {
                    "id": 77111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77103,
                      "name": "regBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76446,
                      "src": "8478:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77105,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76414,
                          "src": "8501:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 77106,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "8510:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 77107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8516:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 77108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8519:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "33",
                          "id": 77109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8522:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 77104,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77384,
                        "src": "8488:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8488:36:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8478:46:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77112,
                  "nodeType": "ExpressionStatement",
                  "src": "8478:46:166"
                },
                {
                  "expression": {
                    "id": 77121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77113,
                      "name": "invBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76448,
                      "src": "8579:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77115,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "8602:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "id": 77116,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76414,
                          "src": "8608:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 77117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8617:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 77118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8620:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "33",
                          "id": 77119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8623:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 77114,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77384,
                        "src": "8589:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8589:36:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8579:46:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77122,
                  "nodeType": "ExpressionStatement",
                  "src": "8579:46:166"
                },
                {
                  "expression": {
                    "id": 77131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77123,
                      "name": "internalBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76450,
                      "src": "8678:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77125,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "8706:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "id": 77126,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "8712:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 77127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8718:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 77128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8721:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "38",
                          "id": 77129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8724:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 77124,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77384,
                        "src": "8693:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8693:33:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8678:48:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77132,
                  "nodeType": "ExpressionStatement",
                  "src": "8678:48:166"
                },
                {
                  "expression": {
                    "id": 77142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77133,
                      "name": "externalBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76452,
                      "src": "8782:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77135,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76414,
                          "src": "8810:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 77136,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76414,
                          "src": "8819:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 77137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8828:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 77139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "8831:2:166",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 77138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8832:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        {
                          "hexValue": "38",
                          "id": 77140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8835:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 77134,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77384,
                        "src": "8797:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8797:40:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8782:55:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77143,
                  "nodeType": "ExpressionStatement",
                  "src": "8782:55:166"
                },
                {
                  "expression": {
                    "id": 77152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77144,
                      "name": "nonWhitelistedBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76454,
                      "src": "8908:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77146,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76414,
                          "src": "8942:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 77147,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "8951:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 77148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8957:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 77149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8960:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "33",
                          "id": 77150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8963:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 77145,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77384,
                        "src": "8929:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 77151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8929:36:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8908:57:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77153,
                  "nodeType": "ExpressionStatement",
                  "src": "8908:57:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77157,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "9038:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77154,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9029:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9029:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9029:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77159,
                  "nodeType": "ExpressionStatement",
                  "src": "9029:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77165,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "9082:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9074:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77163,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9074:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9074:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77167,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "9091:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77160,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "9055:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "9055:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9055:44:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77169,
                  "nodeType": "ExpressionStatement",
                  "src": "9055:44:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77173,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "9119:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77170,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9110:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9110:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9110:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77175,
                  "nodeType": "ExpressionStatement",
                  "src": "9110:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77181,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "9163:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9155:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9155:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9155:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77183,
                        "name": "invBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76448,
                        "src": "9172:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77176,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "9136:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "9136:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9136:44:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77185,
                  "nodeType": "ExpressionStatement",
                  "src": "9136:44:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77189,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "9200:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77186,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9191:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9191:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9191:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77191,
                  "nodeType": "ExpressionStatement",
                  "src": "9191:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77197,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "9244:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9236:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9236:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9236:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77199,
                        "name": "internalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76450,
                        "src": "9253:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77192,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "9217:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "9217:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9217:49:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77201,
                  "nodeType": "ExpressionStatement",
                  "src": "9217:49:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77205,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "9286:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77202,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9277:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9277:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9277:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77207,
                  "nodeType": "ExpressionStatement",
                  "src": "9277:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77213,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "9330:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9322:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9322:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9322:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77215,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76452,
                        "src": "9339:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77208,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "9303:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "9303:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9303:49:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77217,
                  "nodeType": "ExpressionStatement",
                  "src": "9303:49:166"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2820:5:166",
            "parameters": {
              "id": 76455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2825:2:166"
            },
            "returnParameters": {
              "id": 76456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2835:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77384,
            "nodeType": "FunctionDefinition",
            "src": "9413:2128:166",
            "nodes": [],
            "body": {
              "id": 77383,
              "nodeType": "Block",
              "src": "9628:1913:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77237,
                      "mutability": "mutable",
                      "name": "_payoutDecimals",
                      "nameLocation": "9644:15:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77383,
                      "src": "9638:21:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 77236,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9638:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77241,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77238,
                        "name": "payoutToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77225,
                        "src": "9662:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 77239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "9662:20:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 77240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9662:22:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9638:46:166"
                },
                {
                  "assignments": [
                    77243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77243,
                      "mutability": "mutable",
                      "name": "_quoteDecimals",
                      "nameLocation": "9700:14:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77383,
                      "src": "9694:20:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 77242,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9694:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77247,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77244,
                        "name": "quoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77222,
                        "src": "9717:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 77245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "9717:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 77246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9717:21:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9694:44:166"
                },
                {
                  "assignments": [
                    77249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77249,
                      "mutability": "mutable",
                      "name": "capacity",
                      "nameLocation": "9757:8:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77383,
                      "src": "9749:16:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9749:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77263,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130305f303030",
                      "id": 77250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9768:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 77261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 77251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9778:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            },
                            "id": 77259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 77256,
                                  "name": "_payoutDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77237,
                                  "src": "9793:15:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 77255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9788:4:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int8_$",
                                  "typeString": "type(int8)"
                                },
                                "typeName": {
                                  "id": 77254,
                                  "name": "int8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9788:4:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 77257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9788:21:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 77258,
                              "name": "_payoutPriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77229,
                              "src": "9812:20:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "src": "9788:44:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          ],
                          "id": 77253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9782:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 77252,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9782:5:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9782:51:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "9778:55:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9768:65:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9749:84:166"
                },
                {
                  "assignments": [
                    77265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77265,
                      "mutability": "mutable",
                      "name": "scaleAdjustment",
                      "nameLocation": "9849:15:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77383,
                      "src": "9844:20:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "typeName": {
                        "id": 77264,
                        "name": "int8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9844:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77282,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    },
                    "id": 77281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "id": 77274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 77268,
                            "name": "_payoutDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77237,
                            "src": "9872:15:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 77267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9867:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int8_$",
                            "typeString": "type(int8)"
                          },
                          "typeName": {
                            "id": 77266,
                            "name": "int8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9867:4:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9867:21:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 77272,
                            "name": "_quoteDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77243,
                            "src": "9908:14:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 77271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9903:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int8_$",
                            "typeString": "type(int8)"
                          },
                          "typeName": {
                            "id": 77270,
                            "name": "int8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9903:4:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9903:20:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "src": "9867:56:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "id": 77280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            },
                            "id": 77277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 77275,
                              "name": "_payoutPriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77229,
                              "src": "9939:20:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 77276,
                              "name": "_quotePriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77227,
                              "src": "9962:19:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "src": "9939:42:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          }
                        ],
                        "id": 77278,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9938:44:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 77279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9997:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "9938:60:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      }
                    },
                    "src": "9867:131:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9844:154:166"
                },
                {
                  "assignments": [
                    77284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77284,
                      "mutability": "mutable",
                      "name": "initialPrice",
                      "nameLocation": "10017:12:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77383,
                      "src": "10009:20:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10009:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77307,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77285,
                      "name": "priceSignificand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77231,
                      "src": "10032:16:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 77305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 77286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10063:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 77302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  },
                                  "id": 77300,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    },
                                    "id": 77298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 77295,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 77293,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3336",
                                              "id": 77291,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10143:2:166",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_36_by_1",
                                                "typeString": "int_const 36"
                                              },
                                              "value": "36"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 77292,
                                              "name": "_quoteDecimals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 77243,
                                              "src": "10148:14:166",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "src": "10143:19:166",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 77294,
                                            "name": "_payoutDecimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77237,
                                            "src": "10165:15:166",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "10143:37:166",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 77290,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10138:4:166",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int8_$",
                                          "typeString": "type(int8)"
                                        },
                                        "typeName": {
                                          "id": 77289,
                                          "name": "int8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10138:4:166",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 77296,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10138:43:166",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 77297,
                                      "name": "scaleAdjustment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77265,
                                      "src": "10212:15:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "src": "10138:89:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 77299,
                                    "name": "_payoutPriceDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77229,
                                    "src": "10258:20:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "src": "10138:140:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 77301,
                                  "name": "_quotePriceDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77227,
                                  "src": "10309:19:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "10138:190:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 77288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10107:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 77287,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "10107:5:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10107:243:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 77304,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10085:283:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "10063:305:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10032:336:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10009:359:166"
                },
                {
                  "assignments": [
                    77309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77309,
                      "mutability": "mutable",
                      "name": "minimumPrice",
                      "nameLocation": "10387:12:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77383,
                      "src": "10379:20:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10379:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77335,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 77310,
                            "name": "priceSignificand",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77231,
                            "src": "10403:16:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 77311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10422:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "10403:20:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 77313,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10402:22:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 77333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 77314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10439:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 77330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  },
                                  "id": 77328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    },
                                    "id": 77326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 77323,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 77321,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3336",
                                              "id": 77319,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10519:2:166",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_36_by_1",
                                                "typeString": "int_const 36"
                                              },
                                              "value": "36"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 77320,
                                              "name": "_quoteDecimals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 77243,
                                              "src": "10524:14:166",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "src": "10519:19:166",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 77322,
                                            "name": "_payoutDecimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77237,
                                            "src": "10541:15:166",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "10519:37:166",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 77318,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10514:4:166",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int8_$",
                                          "typeString": "type(int8)"
                                        },
                                        "typeName": {
                                          "id": 77317,
                                          "name": "int8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10514:4:166",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 77324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10514:43:166",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 77325,
                                      "name": "scaleAdjustment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77265,
                                      "src": "10588:15:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "src": "10514:89:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 77327,
                                    "name": "_payoutPriceDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77229,
                                    "src": "10634:20:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "src": "10514:140:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 77329,
                                  "name": "_quotePriceDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77227,
                                  "src": "10685:19:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "10514:190:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 77316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10483:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 77315,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "10483:5:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10483:243:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 77332,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10461:283:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "10439:305:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10402:342:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10379:365:166"
                },
                {
                  "assignments": [
                    77340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77340,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10787:6:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77383,
                      "src": "10755:38:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                        "typeString": "struct IBondSDA.MarketParams"
                      },
                      "typeName": {
                        "id": 77339,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77338,
                          "name": "LibIBondSDA.MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59414,
                          "src": "10755:24:166"
                        },
                        "referencedDeclaration": 59414,
                        "src": "10755:24:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$59414_storage_ptr",
                          "typeString": "struct IBondSDA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77374,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77343,
                        "name": "payoutToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77225,
                        "src": "10834:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 77344,
                        "name": "quoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77222,
                        "src": "10880:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77347,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "10932:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10924:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10924:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10924:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10979:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 77350,
                        "name": "capacity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77249,
                        "src": "11022:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77351,
                        "name": "initialPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77284,
                        "src": "11064:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77352,
                        "name": "minimumPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77309,
                        "src": "11114:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "35305f303030",
                            "id": 77355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11171:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            },
                            "value": "50_000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            }
                          ],
                          "id": 77354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11164:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 77353,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11164:6:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11164:14:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 77359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11220:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 77358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11213:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint48_$",
                            "typeString": "type(uint48)"
                          },
                          "typeName": {
                            "id": 77357,
                            "name": "uint48",
                            "nodeType": "ElementaryTypeName",
                            "src": "11213:6:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11213:9:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 77363,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11285:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 77364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11285:15:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "37",
                              "id": 77365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11303:6:166",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                              },
                              "value": "7"
                            },
                            "src": "11285:24:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 77362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11278:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint48_$",
                            "typeString": "type(uint48)"
                          },
                          "typeName": {
                            "id": 77361,
                            "name": "uint48",
                            "nodeType": "ElementaryTypeName",
                            "src": "11278:6:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11278:32:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "3234",
                            "id": 77370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11364:8:166",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "24"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            }
                          ],
                          "id": 77369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11357:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 77368,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11357:6:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11357:16:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 77372,
                        "name": "scaleAdjustment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77265,
                        "src": "11424:15:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      ],
                      "expression": {
                        "id": 77341,
                        "name": "LibIBondSDA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59440,
                        "src": "10796:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBondSDA_$59440_$",
                          "typeString": "type(contract IBondSDA)"
                        }
                      },
                      "id": 77342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MarketParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59414,
                      "src": "10796:24:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MarketParams_$59414_storage_ptr_$",
                        "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                      }
                    },
                    "id": 77373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10796:677:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                      "typeString": "struct IBondSDA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10755:718:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77379,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77340,
                            "src": "11526:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                              "typeString": "struct IBondSDA.MarketParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                              "typeString": "struct IBondSDA.MarketParams memory"
                            }
                          ],
                          "expression": {
                            "id": 77377,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11515:3:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 77378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11515:10:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 77380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11515:18:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77375,
                        "name": "auctioneer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76408,
                        "src": "11491:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermSDA_$55071",
                          "typeString": "contract BondFixedTermSDA"
                        }
                      },
                      "id": 77376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55070,
                      "src": "11491:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 77381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11491:43:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 77235,
                  "id": 77382,
                  "nodeType": "Return",
                  "src": "11484:50:166"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "9422:12:166",
            "parameters": {
              "id": 77232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77222,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "9450:10:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 77384,
                  "src": "9444:16:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 77221,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77220,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "9444:5:166"
                    },
                    "referencedDeclaration": 25731,
                    "src": "9444:5:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77225,
                  "mutability": "mutable",
                  "name": "payoutToken",
                  "nameLocation": "9476:11:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 77384,
                  "src": "9470:17:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 77224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77223,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "9470:5:166"
                    },
                    "referencedDeclaration": 25731,
                    "src": "9470:5:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77227,
                  "mutability": "mutable",
                  "name": "_quotePriceDecimals",
                  "nameLocation": "9502:19:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 77384,
                  "src": "9497:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 77226,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9497:4:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77229,
                  "mutability": "mutable",
                  "name": "_payoutPriceDecimals",
                  "nameLocation": "9536:20:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 77384,
                  "src": "9531:25:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 77228,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9531:4:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77231,
                  "mutability": "mutable",
                  "name": "priceSignificand",
                  "nameLocation": "9574:16:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 77384,
                  "src": "9566:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9566:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9434:162:166"
            },
            "returnParameters": {
              "id": 77235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77234,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "9623:3:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 77384,
                  "src": "9615:11:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9615:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9614:13:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77647,
            "nodeType": "FunctionDefinition",
            "src": "11728:3283:166",
            "nodes": [],
            "body": {
              "id": 77646,
              "nodeType": "Block",
              "src": "11771:3240:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77390,
                      "mutability": "mutable",
                      "name": "startBalTeller",
                      "nameLocation": "12085:14:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77646,
                      "src": "12077:22:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12077:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store start balances of teller and callback",
                  "id": 77398,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77395,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "12125:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12117:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77393,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12117:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12117:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77391,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "12102:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "12102:14:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12102:31:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12077:56:166"
                },
                {
                  "assignments": [
                    77400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77400,
                      "mutability": "mutable",
                      "name": "startBalCallback",
                      "nameLocation": "12151:16:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77646,
                      "src": "12143:24:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12143:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77408,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77405,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "12196:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12188:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12188:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12188:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77401,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "12170:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "12170:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12170:36:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12143:63:166"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77414,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "12301:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12293:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12293:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12293:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030",
                        "id": 77416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12312:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        }
                      ],
                      "expression": {
                        "id": 77409,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "12280:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "12280:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12280:36:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77418,
                  "nodeType": "ExpressionStatement",
                  "src": "12280:36:166"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77424,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "12399:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12391:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77422,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12391:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12391:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77419,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12382:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12382:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12382:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77427,
                  "nodeType": "ExpressionStatement",
                  "src": "12382:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77431,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "12435:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333030",
                        "id": 77432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12444:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12449:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77428,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "12417:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "12417:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12417:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77435,
                  "nodeType": "ExpressionStatement",
                  "src": "12417:35:166"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77441,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76405,
                                "src": "12568:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12560:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77439,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12560:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12560:15:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77437,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76411,
                            "src": "12545:4:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76380",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "12545:14:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12545:31:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77444,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77390,
                          "src": "12578:14:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 77445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12595:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "12578:19:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77436,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12536:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12536:62:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77448,
                  "nodeType": "ExpressionStatement",
                  "src": "12536:62:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77454,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "12643:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 77453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12635:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77452,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12635:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12635:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77450,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "12617:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 77451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "12617:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12617:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77457,
                          "name": "startBalCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77400,
                          "src": "12655:16:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "333030",
                          "id": 77458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12674:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "src": "12655:22:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77449,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12608:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12608:70:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77461,
                  "nodeType": "ExpressionStatement",
                  "src": "12608:70:166"
                },
                {
                  "documentation": "Store start balances of teller and callback",
                  "expression": {
                    "id": 77470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77462,
                      "name": "startBalTeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77390,
                      "src": "12942:14:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77467,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76405,
                              "src": "12985:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 77466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12977:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77465,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12977:7:166",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12977:15:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77463,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76414,
                          "src": "12959:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 77464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "12959:17:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12959:34:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12942:51:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77471,
                  "nodeType": "ExpressionStatement",
                  "src": "12942:51:166"
                },
                {
                  "expression": {
                    "id": 77480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77472,
                      "name": "startBalCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77400,
                      "src": "13003:16:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77477,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76441,
                              "src": "13045:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              }
                            ],
                            "id": 77476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13037:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77475,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13037:7:166",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13037:17:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77473,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "13022:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "13022:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13022:33:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13003:52:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77481,
                  "nodeType": "ExpressionStatement",
                  "src": "13003:52:166"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77487,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "13147:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13139:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77485,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13139:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13139:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13158:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77482,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "13129:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76366,
                      "src": "13129:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13129:32:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77491,
                  "nodeType": "ExpressionStatement",
                  "src": "13129:32:166"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77497,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "13244:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13236:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77495,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13236:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13236:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77492,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13227:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "13227:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13227:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77500,
                  "nodeType": "ExpressionStatement",
                  "src": "13227:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77504,
                        "name": "invBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76448,
                        "src": "13280:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13289:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "333030",
                        "id": 77506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13293:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        }
                      ],
                      "expression": {
                        "id": 77501,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "13262:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "13262:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13262:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77508,
                  "nodeType": "ExpressionStatement",
                  "src": "13262:35:166"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated\n Callback should be the same as the start amount since the GDAO is burned",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77514,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76405,
                                "src": "13501:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13493:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77512,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13493:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13493:15:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77510,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "13475:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 77511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "13475:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13475:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77517,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77390,
                          "src": "13511:14:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "333030",
                          "id": 77518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13528:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "src": "13511:20:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77509,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "13466:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13466:66:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77521,
                  "nodeType": "ExpressionStatement",
                  "src": "13466:66:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77527,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "13574:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 77526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13566:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77525,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13566:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13566:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77523,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76411,
                            "src": "13551:4:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76380",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "13551:14:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13551:33:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77530,
                        "name": "startBalCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77400,
                        "src": "13586:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77522,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "13542:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13542:61:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77532,
                  "nodeType": "ExpressionStatement",
                  "src": "13542:61:166"
                },
                {
                  "documentation": "Store start balances of teller and callback",
                  "expression": {
                    "id": 77541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77533,
                      "name": "startBalTeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77390,
                      "src": "13870:14:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77538,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76405,
                              "src": "13910:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 77537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13902:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77536,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13902:7:166",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13902:15:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77534,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "13887:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "13887:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13887:31:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13870:48:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77542,
                  "nodeType": "ExpressionStatement",
                  "src": "13870:48:166"
                },
                {
                  "expression": {
                    "id": 77551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77543,
                      "name": "startBalCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77400,
                      "src": "13928:16:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77548,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76441,
                              "src": "13970:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              }
                            ],
                            "id": 77547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13962:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77546,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13962:7:166",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13962:17:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77544,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "13947:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "13947:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13947:33:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13928:52:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77552,
                  "nodeType": "ExpressionStatement",
                  "src": "13928:52:166"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77558,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "14072:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14064:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77556,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14064:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14064:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14083:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 77553,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "14054:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76366,
                      "src": "14054:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14054:33:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77562,
                  "nodeType": "ExpressionStatement",
                  "src": "14054:33:166"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77568,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "14170:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14162:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77566,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14162:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14162:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77563,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14153:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "14153:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14153:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77571,
                  "nodeType": "ExpressionStatement",
                  "src": "14153:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77575,
                        "name": "internalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76450,
                        "src": "14206:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14220:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "313530",
                        "id": 77577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14225:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "expression": {
                        "id": 77572,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "14188:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "14188:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14188:41:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77579,
                  "nodeType": "ExpressionStatement",
                  "src": "14188:41:166"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77585,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76405,
                                "src": "14345:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 77584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14337:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77583,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14337:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14337:15:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77581,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76411,
                            "src": "14322:4:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76380",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "14322:14:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14322:31:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77588,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77390,
                          "src": "14355:14:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313530",
                          "id": 77589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14372:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150_by_1",
                            "typeString": "int_const 150"
                          },
                          "value": "150"
                        },
                        "src": "14355:20:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77580,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "14313:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14313:63:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77592,
                  "nodeType": "ExpressionStatement",
                  "src": "14313:63:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77598,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "14418:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 77597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14410:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77596,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14410:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14410:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 77594,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76411,
                            "src": "14395:4:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGdao_$76380",
                              "typeString": "contract MockGdao"
                            }
                          },
                          "id": 77595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "14395:14:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14395:33:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77601,
                        "name": "startBalCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77400,
                        "src": "14430:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77593,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "14386:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14386:61:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77603,
                  "nodeType": "ExpressionStatement",
                  "src": "14386:61:166"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77609,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "14659:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14651:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14651:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14651:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14670:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 77604,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "14638:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "14638:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14638:36:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77613,
                  "nodeType": "ExpressionStatement",
                  "src": "14638:36:166"
                },
                {
                  "assignments": [
                    77616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77616,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "14771:3:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77646,
                      "src": "14758:16:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77615,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14758:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Call the callback function from the teller, expect to revert",
                  "id": 77622,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                        "id": 77619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14814:38:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        "value": "Callback_MarketNotSupported(uint256)"
                      },
                      {
                        "id": 77620,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76452,
                        "src": "14866:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77617,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14777:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "14777:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 77621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14777:111:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14758:130:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77628,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "14915:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14907:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77626,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14907:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14907:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77623,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14898:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "14898:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14898:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77631,
                  "nodeType": "ExpressionStatement",
                  "src": "14898:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77635,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77616,
                        "src": "14949:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77632,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14933:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "14933:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14933:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77637,
                  "nodeType": "ExpressionStatement",
                  "src": "14933:20:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77641,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76452,
                        "src": "14981:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 77642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14995:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "313530",
                        "id": 77643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15000:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "expression": {
                        "id": 77638,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "14963:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "14963:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14963:41:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77645,
                  "nodeType": "ExpressionStatement",
                  "src": "14963:41:166"
                }
              ]
            },
            "documentation": {
              "id": 77385,
              "nodeType": "StructuredDocumentation",
              "src": "11594:129:166",
              "text": "DONE\n [X] Callback correctly handles payouts for the 4 market cases\n [X] Only whitelisted markets can callback"
            },
            "functionSelector": "570af261",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_callback",
            "nameLocation": "11737:24:166",
            "parameters": {
              "id": 77386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11761:2:166"
            },
            "returnParameters": {
              "id": 77387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11771:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77797,
            "nodeType": "FunctionDefinition",
            "src": "15017:1378:166",
            "nodes": [],
            "body": {
              "id": 77796,
              "nodeType": "Block",
              "src": "15077:1318:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77652,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "15255:3:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77796,
                      "src": "15242:16:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77651,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15242:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Case 1: Zero tokens sent in",
                  "id": 77657,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f546f6b656e734e6f7452656365697665642829",
                        "id": 77655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15285:30:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_813638497a651e872deaf3e0c7addfec024776ada558f808abc154ff78cea955",
                          "typeString": "literal_string \"Callback_TokensNotReceived()\""
                        },
                        "value": "Callback_TokensNotReceived()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_813638497a651e872deaf3e0c7addfec024776ada558f808abc154ff78cea955",
                          "typeString": "literal_string \"Callback_TokensNotReceived()\""
                        }
                      ],
                      "expression": {
                        "id": 77653,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "15261:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "15261:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 77656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15261:55:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15242:74:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77663,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "15343:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15335:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15335:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15335:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77658,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15326:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "15326:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15326:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77666,
                  "nodeType": "ExpressionStatement",
                  "src": "15326:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77670,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77652,
                        "src": "15377:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77667,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15361:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "15361:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15361:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77672,
                  "nodeType": "ExpressionStatement",
                  "src": "15361:20:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77676,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "15409:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15418:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15422:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77673,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "15391:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "15391:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15391:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77680,
                  "nodeType": "ExpressionStatement",
                  "src": "15391:34:166"
                },
                {
                  "documentation": "Case 2: Fewer than claimed tokens sent in",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77686,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "15511:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15503:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77684,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15503:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15503:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15522:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 77681,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "15490:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "15490:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15490:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77690,
                  "nodeType": "ExpressionStatement",
                  "src": "15490:34:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77696,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "15552:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15544:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77694,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15544:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15544:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77691,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15535:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "15535:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15535:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77699,
                  "nodeType": "ExpressionStatement",
                  "src": "15535:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77703,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77652,
                        "src": "15586:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77700,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15570:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "15570:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15570:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77705,
                  "nodeType": "ExpressionStatement",
                  "src": "15570:20:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77709,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "15618:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15627:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15631:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77706,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "15600:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "15600:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15600:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77713,
                  "nodeType": "ExpressionStatement",
                  "src": "15600:34:166"
                },
                {
                  "documentation": "Case 3: Exact number of tokens claimed, should work",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77719,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "15726:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15718:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77717,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15718:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15718:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77714,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15709:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "15709:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15709:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77722,
                  "nodeType": "ExpressionStatement",
                  "src": "15709:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77726,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "15762:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15771:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      {
                        "hexValue": "35",
                        "id": 77728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15774:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 77723,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "15744:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "15744:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15744:32:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77730,
                  "nodeType": "ExpressionStatement",
                  "src": "15744:32:166"
                },
                {
                  "assignments": [
                    77732,
                    77734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77732,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "15796:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77796,
                      "src": "15788:13:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15788:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 77734,
                      "mutability": "mutable",
                      "name": "payout",
                      "nameLocation": "15811:6:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77796,
                      "src": "15803:14:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77733,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15803:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77739,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77737,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "15847:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77735,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "15821:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45856,
                      "src": "15821:25:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 77738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15821:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15787:68:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77741,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77732,
                        "src": "15875:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15882:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 77740,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "15866:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15866:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77744,
                  "nodeType": "ExpressionStatement",
                  "src": "15866:18:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77746,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77734,
                        "src": "15903:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 77747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15911:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 77745,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "15894:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15894:19:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77749,
                  "nodeType": "ExpressionStatement",
                  "src": "15894:19:166"
                },
                {
                  "documentation": "Case 4: More tokens sent than claimed, should work\n Will allow a subsequent caller to pay less than they should\n This realistically shouldn't happen since the callback function is whitelisted",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77755,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "16171:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16163:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16163:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16163:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 77757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16182:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 77750,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "16150:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "16150:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16150:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77759,
                  "nodeType": "ExpressionStatement",
                  "src": "16150:35:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77765,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "16213:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16205:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77763,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16205:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16205:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77760,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16196:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "16196:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16196:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77768,
                  "nodeType": "ExpressionStatement",
                  "src": "16196:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77772,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "16249:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16258:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16262:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77769,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "16231:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "16231:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16231:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77776,
                  "nodeType": "ExpressionStatement",
                  "src": "16231:34:166"
                },
                {
                  "expression": {
                    "id": 77784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 77777,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77732,
                          "src": "16277:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 77778,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77734,
                          "src": "16284:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 77779,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16276:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 77782,
                          "name": "regBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76446,
                          "src": "16320:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 77780,
                          "name": "callback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76441,
                          "src": "16294:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$45857",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "id": 77781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountsForMarket",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45856,
                        "src": "16294:25:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 77783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16294:34:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16276:52:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77785,
                  "nodeType": "ExpressionStatement",
                  "src": "16276:52:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77787,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77732,
                        "src": "16348:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 77788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16355:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 77786,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "16339:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16339:19:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77790,
                  "nodeType": "ExpressionStatement",
                  "src": "16339:19:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77792,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77734,
                        "src": "16377:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 77793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16385:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 77791,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "16368:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16368:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77795,
                  "nodeType": "ExpressionStatement",
                  "src": "16368:20:166"
                }
              ]
            },
            "functionSelector": "f2b2afce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_callbackMustReceiveTokens",
            "nameLocation": "15026:41:166",
            "parameters": {
              "id": 77648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15067:2:166"
            },
            "returnParameters": {
              "id": 77649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15077:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77948,
            "nodeType": "FunctionDefinition",
            "src": "16401:1479:166",
            "nodes": [],
            "body": {
              "id": 77947,
              "nodeType": "Block",
              "src": "16469:1411:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77805,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "16567:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 77804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16559:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16559:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16559:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16578:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77800,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "16546:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 77802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "16546:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16546:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77809,
                  "nodeType": "ExpressionStatement",
                  "src": "16546:35:166"
                },
                {
                  "assignments": [
                    77811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77811,
                      "mutability": "mutable",
                      "name": "oldTellerBal",
                      "nameLocation": "16650:12:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77947,
                      "src": "16642:20:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77810,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16642:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77819,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77816,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "16688:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16680:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77814,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16680:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16680:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77812,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "16665:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "16665:14:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16665:31:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16642:54:166"
                },
                {
                  "assignments": [
                    77821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77821,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "16801:3:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77947,
                      "src": "16788:16:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77820,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16788:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77827,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                        "id": 77824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16844:38:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        "value": "Callback_MarketNotSupported(uint256)"
                      },
                      {
                        "id": 77825,
                        "name": "nonWhitelistedBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76454,
                        "src": "16896:18:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77822,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16807:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "16807:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 77826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16807:117:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16788:136:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77833,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "16951:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16943:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16943:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16943:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77828,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16934:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "16934:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16934:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77836,
                  "nodeType": "ExpressionStatement",
                  "src": "16934:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77840,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77821,
                        "src": "16985:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77837,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16969:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "16969:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16969:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77842,
                  "nodeType": "ExpressionStatement",
                  "src": "16969:20:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77846,
                        "name": "nonWhitelistedBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76454,
                        "src": "17017:18:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17037:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17041:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77843,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "16999:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "16999:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16999:45:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77850,
                  "nodeType": "ExpressionStatement",
                  "src": "16999:45:166"
                },
                {
                  "assignments": [
                    77852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77852,
                      "mutability": "mutable",
                      "name": "newTellerBal",
                      "nameLocation": "17121:12:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 77947,
                      "src": "17113:20:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77851,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17113:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77860,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77857,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "17159:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17151:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17151:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17151:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77853,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "17136:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      "id": 77854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "17136:14:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17136:31:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17113:54:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77862,
                        "name": "newTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77852,
                        "src": "17186:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77863,
                        "name": "oldTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77811,
                        "src": "17200:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77861,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "17177:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17177:36:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77865,
                  "nodeType": "ExpressionStatement",
                  "src": "17177:36:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77871,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "17322:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17314:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17314:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17314:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77866,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17305:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "17305:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17305:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77874,
                  "nodeType": "ExpressionStatement",
                  "src": "17305:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77878,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "17358:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17367:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17371:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77875,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "17340:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "17340:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17340:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77882,
                  "nodeType": "ExpressionStatement",
                  "src": "17340:34:166"
                },
                {
                  "expression": {
                    "id": 77891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77883,
                      "name": "newTellerBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77852,
                      "src": "17428:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 77888,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76405,
                              "src": "17466:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 77887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17458:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77886,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17458:7:166",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17458:15:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 77884,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76411,
                          "src": "17443:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGdao_$76380",
                            "typeString": "contract MockGdao"
                          }
                        },
                        "id": 77885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "17443:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 77890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17443:31:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17428:46:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77892,
                  "nodeType": "ExpressionStatement",
                  "src": "17428:46:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77894,
                        "name": "newTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77852,
                        "src": "17493:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77895,
                          "name": "oldTellerBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77811,
                          "src": "17507:12:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 77896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17522:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "17507:17:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77893,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "17484:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 77898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17484:41:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77899,
                  "nodeType": "ExpressionStatement",
                  "src": "17484:41:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77903,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "17614:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77900,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17605:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "17605:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17605:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77905,
                  "nodeType": "ExpressionStatement",
                  "src": "17605:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77911,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "17658:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17650:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77909,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17650:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17650:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77913,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "17667:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77906,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "17631:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45551,
                      "src": "17631:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17631:44:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77915,
                  "nodeType": "ExpressionStatement",
                  "src": "17631:44:166"
                },
                {
                  "expression": {
                    "id": 77922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77916,
                      "name": "err",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77821,
                      "src": "17686:3:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                          "id": 77919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17716:38:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                            "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                          },
                          "value": "Callback_MarketNotSupported(uint256)"
                        },
                        {
                          "id": 77920,
                          "name": "regBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76446,
                          "src": "17756:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                            "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 77917,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "17692:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 77918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeWithSignature",
                        "nodeType": "MemberAccess",
                        "src": "17692:23:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (string memory) pure returns (bytes memory)"
                        }
                      },
                      "id": 77921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17692:72:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17686:78:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 77923,
                  "nodeType": "ExpressionStatement",
                  "src": "17686:78:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77929,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "17791:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 77928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17783:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77927,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17783:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17783:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77924,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17774:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "17774:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17774:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77932,
                  "nodeType": "ExpressionStatement",
                  "src": "17774:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77936,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77821,
                        "src": "17825:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77933,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17809:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "17809:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17809:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77938,
                  "nodeType": "ExpressionStatement",
                  "src": "17809:20:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77942,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "17857:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17866:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 77944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17870:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 77939,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "17839:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "17839:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 77945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17839:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77946,
                  "nodeType": "ExpressionStatement",
                  "src": "17839:34:166"
                }
              ]
            },
            "functionSelector": "38906dbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback",
            "nameLocation": "16410:49:166",
            "parameters": {
              "id": 77798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16459:2:166"
            },
            "returnParameters": {
              "id": 77799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16469:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78065,
            "nodeType": "FunctionDefinition",
            "src": "18040:1099:166",
            "nodes": [],
            "body": {
              "id": 78064,
              "nodeType": "Block",
              "src": "18084:1055:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77953,
                      "mutability": "mutable",
                      "name": "wlOne",
                      "nameLocation": "18168:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78064,
                      "src": "18160:13:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77952,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18160:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77961,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77955,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "18189:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 77956,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "18198:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 77957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18204:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 77958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18207:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 77959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18210:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 77954,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77384,
                      "src": "18176:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 77960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18176:36:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18160:52:166"
                },
                {
                  "assignments": [
                    77963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77963,
                      "mutability": "mutable",
                      "name": "wlTwo",
                      "nameLocation": "18230:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78064,
                      "src": "18222:13:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77962,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18222:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77971,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77965,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "18251:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 77966,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "18260:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 77967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18266:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 77968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18269:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 77969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18272:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 77964,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77384,
                      "src": "18238:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 77970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18238:36:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18222:52:166"
                },
                {
                  "assignments": [
                    77973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77973,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "18380:3:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78064,
                      "src": "18367:16:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 77972,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18367:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77984,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 77976,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "18422:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 77977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "18422:25:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 77978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "18422:34:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f77686974656c697374",
                            "id": 77981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18478:20:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            "value": "callback_whitelist"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            }
                          ],
                          "id": 77980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18470:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 77979,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18470:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18470:29:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 77974,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "18386:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "18386:22:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 77983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18386:123:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18367:142:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77988,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "18528:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 77985,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18519:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18519:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 77989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18519:15:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77990,
                  "nodeType": "ExpressionStatement",
                  "src": "18519:15:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77994,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77973,
                        "src": "18560:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77991,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18544:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "18544:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18544:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77996,
                  "nodeType": "ExpressionStatement",
                  "src": "18544:20:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78002,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "18601:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18593:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78000,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18593:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18593:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78004,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77953,
                        "src": "18610:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77997,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "18574:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 77999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "18574:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18574:42:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78006,
                  "nodeType": "ExpressionStatement",
                  "src": "18574:42:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78010,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "18703:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78007,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18694:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18694:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18694:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78012,
                  "nodeType": "ExpressionStatement",
                  "src": "18694:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78018,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "18747:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18739:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18739:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18739:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78020,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77953,
                        "src": "18756:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78013,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "18720:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "18720:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18720:42:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78022,
                  "nodeType": "ExpressionStatement",
                  "src": "18720:42:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78028,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76405,
                                "src": "18851:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 78027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18843:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78026,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18843:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18843:15:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78030,
                            "name": "wlOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77953,
                            "src": "18860:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 78024,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "18818:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 78025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45150,
                          "src": "18818:24:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 78031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18818:48:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78023,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "18811:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18811:56:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78033,
                  "nodeType": "ExpressionStatement",
                  "src": "18811:56:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78039,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76438,
                            "src": "18965:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 78038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18957:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18957:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18957:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78034,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18948:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18948:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18948:27:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78042,
                  "nodeType": "ExpressionStatement",
                  "src": "18948:27:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78048,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "19012:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19004:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78046,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19004:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19004:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78050,
                        "name": "wlTwo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77963,
                        "src": "19021:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78043,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "18985:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "18985:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18985:42:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78052,
                  "nodeType": "ExpressionStatement",
                  "src": "18985:42:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78058,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76405,
                                "src": "19116:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 78057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19108:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78056,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19108:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19108:15:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78060,
                            "name": "wlTwo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77963,
                            "src": "19125:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 78054,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "19083:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 78055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45150,
                          "src": "19083:24:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 78061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19083:48:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78053,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "19076:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19076:56:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78063,
                  "nodeType": "ExpressionStatement",
                  "src": "19076:56:166"
                }
              ]
            },
            "documentation": {
              "id": 77949,
              "nodeType": "StructuredDocumentation",
              "src": "17930:105:166",
              "text": "DONE\n [X] whitelist\n [X] blacklist\n [X] setOperator\n [X] batchToTreasury"
            },
            "functionSelector": "ce597df3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_whitelist",
            "nameLocation": "18049:25:166",
            "parameters": {
              "id": 77950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18074:2:166"
            },
            "returnParameters": {
              "id": 77951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18084:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78134,
            "nodeType": "FunctionDefinition",
            "src": "19145:657:166",
            "nodes": [],
            "body": {
              "id": 78133,
              "nodeType": "Block",
              "src": "19189:613:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78069,
                      "mutability": "mutable",
                      "name": "wlOne",
                      "nameLocation": "19273:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78133,
                      "src": "19265:13:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78068,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19265:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78077,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78071,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "19294:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 78072,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "19303:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19309:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 78074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19312:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 78075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19315:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 78070,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77384,
                      "src": "19281:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 78076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19281:36:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19265:52:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78081,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "19398:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78078,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "19389:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "19389:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19389:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78083,
                  "nodeType": "ExpressionStatement",
                  "src": "19389:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78089,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "19442:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19434:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78087,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19434:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19434:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78091,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78069,
                        "src": "19451:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78084,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "19415:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "19415:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19415:42:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78093,
                  "nodeType": "ExpressionStatement",
                  "src": "19415:42:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78099,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76405,
                                "src": "19546:6:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 78098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19538:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78097,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19538:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19538:15:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78101,
                            "name": "wlOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78069,
                            "src": "19555:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 78095,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "19513:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 78096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45150,
                          "src": "19513:24:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 78102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19513:48:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78094,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "19506:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19506:56:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78104,
                  "nodeType": "ExpressionStatement",
                  "src": "19506:56:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78108,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "19630:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78105,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "19621:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "19621:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19621:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78110,
                  "nodeType": "ExpressionStatement",
                  "src": "19621:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78116,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "19674:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19666:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19666:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19666:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78118,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78069,
                        "src": "19683:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78111,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "19647:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45551,
                      "src": "19647:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19647:42:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78120,
                  "nodeType": "ExpressionStatement",
                  "src": "19647:42:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "19745:49:166",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78126,
                                  "name": "teller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76405,
                                  "src": "19779:6:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                    "typeString": "contract BondFixedTermTeller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                    "typeString": "contract BondFixedTermTeller"
                                  }
                                ],
                                "id": 78125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19771:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78124,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19771:7:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19771:15:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 78128,
                              "name": "wlOne",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78069,
                              "src": "19788:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 78122,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76441,
                              "src": "19746:8:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$45857",
                                "typeString": "contract BondCallback"
                              }
                            },
                            "id": 78123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approvedMarkets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45150,
                            "src": "19746:24:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view external returns (bool)"
                            }
                          },
                          "id": 78129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19746:48:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78121,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "19738:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19738:57:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78132,
                  "nodeType": "ExpressionStatement",
                  "src": "19738:57:166"
                }
              ]
            },
            "functionSelector": "de5f3102",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_blacklist",
            "nameLocation": "19154:25:166",
            "parameters": {
              "id": 78066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19179:2:166"
            },
            "returnParameters": {
              "id": 78067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19189:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78193,
            "nodeType": "FunctionDefinition",
            "src": "19808:556:166",
            "nodes": [],
            "body": {
              "id": 78192,
              "nodeType": "Block",
              "src": "19854:510:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78139,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "19956:3:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78192,
                      "src": "19943:16:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 78138,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19943:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Attempt to set operator contract to zero address and expect revert",
                  "id": 78144,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f496e76616c6964506172616d732829",
                        "id": 78142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19986:26:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7a4111e846a281e9fec32b9163237b55525e89d386d3bf9b9ca6c05a98ad08e",
                          "typeString": "literal_string \"Callback_InvalidParams()\""
                        },
                        "value": "Callback_InvalidParams()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7a4111e846a281e9fec32b9163237b55525e89d386d3bf9b9ca6c05a98ad08e",
                          "typeString": "literal_string \"Callback_InvalidParams()\""
                        }
                      ],
                      "expression": {
                        "id": 78140,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "19962:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 78141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "19962:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 78143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19962:51:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19943:70:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78148,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78139,
                        "src": "20039:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 78145,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20023:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "20023:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 78149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20023:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78150,
                  "nodeType": "ExpressionStatement",
                  "src": "20023:20:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78154,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76394,
                        "src": "20062:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78151,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20053:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "20053:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20053:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78156,
                  "nodeType": "ExpressionStatement",
                  "src": "20053:18:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 78163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20119:1:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 78162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20111:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78161,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20111:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20111:10:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78160,
                          "name": "Operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49950,
                          "src": "20102:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Operator_$49950_$",
                            "typeString": "type(contract Operator)"
                          }
                        },
                        "id": 78165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20102:20:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 78157,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "20081:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45826,
                      "src": "20081:20:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$49950_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 78166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20081:42:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78167,
                  "nodeType": "ExpressionStatement",
                  "src": "20081:42:166"
                },
                {
                  "documentation": "Update the operator as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78171,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76394,
                        "src": "20187:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78168,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20178:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "20178:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20178:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78173,
                  "nodeType": "ExpressionStatement",
                  "src": "20178:18:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78178,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76390,
                            "src": "20236:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78177,
                          "name": "Operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49950,
                          "src": "20227:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Operator_$49950_$",
                            "typeString": "type(contract Operator)"
                          }
                        },
                        "id": 78179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20227:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$49950",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 78174,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "20206:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45826,
                      "src": "20206:20:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$49950_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 78180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20206:37:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78181,
                  "nodeType": "ExpressionStatement",
                  "src": "20206:37:166"
                },
                {
                  "documentation": "Check that the operator contract has been set",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 78185,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "20329:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              },
                              "id": 78186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45170,
                              "src": "20329:17:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Operator_$49950_$",
                                "typeString": "function () view external returns (contract Operator)"
                              }
                            },
                            "id": 78187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20329:19:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$49950",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 78184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20321:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78183,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20321:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20321:28:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78189,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76390,
                        "src": "20351:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 78182,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "20312:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 78190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20312:45:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78191,
                  "nodeType": "ExpressionStatement",
                  "src": "20312:45:166"
                }
              ]
            },
            "functionSelector": "9e0c5608",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setOperator",
            "nameLocation": "19817:27:166",
            "parameters": {
              "id": 78135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19844:2:166"
            },
            "returnParameters": {
              "id": 78136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19854:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78633,
            "nodeType": "FunctionDefinition",
            "src": "20370:3836:166",
            "nodes": [],
            "body": {
              "id": 78632,
              "nodeType": "Block",
              "src": "20420:3786:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78198,
                      "mutability": "mutable",
                      "name": "otherBond",
                      "nameLocation": "20513:9:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78632,
                      "src": "20505:17:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20505:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Create an extra market with the other token as the quote token",
                  "id": 78206,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78200,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76417,
                        "src": "20538:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 78201,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76411,
                        "src": "20545:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20551:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "31",
                        "id": 78203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20554:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35",
                        "id": 78204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20557:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockGdao_$76380",
                          "typeString": "contract MockGdao"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 78199,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77384,
                      "src": "20525:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_contract$_ERC20_$25731_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 78205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20525:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20505:54:166"
                },
                {
                  "documentation": "Whitelist new market on the callback",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78210,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76396,
                        "src": "20628:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78207,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20619:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "20619:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20619:16:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78212,
                  "nodeType": "ExpressionStatement",
                  "src": "20619:16:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78218,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "20672:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20664:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20664:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20664:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78220,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78198,
                        "src": "20681:9:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78213,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "20645:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45517,
                      "src": "20645:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20645:46:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78222,
                  "nodeType": "ExpressionStatement",
                  "src": "20645:46:166"
                },
                {
                  "assignments": [
                    78228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78228,
                      "mutability": "mutable",
                      "name": "startBalances",
                      "nameLocation": "20775:13:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78632,
                      "src": "20757:31:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20757:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78227,
                        "length": {
                          "hexValue": "32",
                          "id": 78225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20765:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "20757:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store the initial balances of the treasury",
                  "id": 78244,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78233,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76429,
                                "src": "20831:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20823:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78231,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20823:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20823:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78229,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "20805:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "20805:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20805:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78240,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76429,
                                "src": "20879:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20871:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78238,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20871:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20871:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78236,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76417,
                            "src": "20855:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "20855:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20855:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 78243,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "20791:108:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20757:142:166"
                },
                {
                  "documentation": "Send other tokens and reserve tokens to callback to mimic bond purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78250,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "21015:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21007:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21007:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21007:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21026:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 78245,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "20994:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "20994:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20994:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78254,
                  "nodeType": "ExpressionStatement",
                  "src": "20994:35:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78260,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "21058:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21050:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21050:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21050:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21069:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78255,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76417,
                        "src": "21039:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "21039:10:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21039:33:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78264,
                  "nodeType": "ExpressionStatement",
                  "src": "21039:33:166"
                },
                {
                  "documentation": "Call the callback function from the teller to payout the purchases",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78270,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "21179:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21171:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21171:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21171:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78265,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "21162:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "21162:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21162:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78273,
                  "nodeType": "ExpressionStatement",
                  "src": "21162:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78277,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "21215:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21224:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "hexValue": "31",
                        "id": 78279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21228:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 78274,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "21197:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "21197:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21197:33:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78281,
                  "nodeType": "ExpressionStatement",
                  "src": "21197:33:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78287,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "21258:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21250:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21250:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21250:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78282,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "21241:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "21241:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21241:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78290,
                  "nodeType": "ExpressionStatement",
                  "src": "21241:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78294,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78198,
                        "src": "21294:9:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21305:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "323030",
                        "id": 78296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21309:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 78291,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "21276:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "21276:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21276:37:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78298,
                  "nodeType": "ExpressionStatement",
                  "src": "21276:37:166"
                },
                {
                  "documentation": "Check the balance of the callback and ensure it's updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78304,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "21429:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21421:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78302,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21421:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21421:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78300,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "21403:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "21403:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21403:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21441:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 78299,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "21394:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21394:50:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78309,
                  "nodeType": "ExpressionStatement",
                  "src": "21394:50:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78315,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "21487:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21479:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78313,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21479:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21479:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78311,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76417,
                            "src": "21463:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "21463:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21463:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21499:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78310,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "21454:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21454:48:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78320,
                  "nodeType": "ExpressionStatement",
                  "src": "21454:48:166"
                },
                {
                  "assignments": [
                    78325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78325,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "21590:6:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78632,
                      "src": "21575:21:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                        "typeString": "contract ERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78323,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 78322,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25731,
                            "src": "21575:5:166"
                          },
                          "referencedDeclaration": 25731,
                          "src": "21575:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 78324,
                        "nodeType": "ArrayTypeName",
                        "src": "21575:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_storage_ptr",
                          "typeString": "contract ERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Call batch to treasury with each token separately",
                  "id": 78332,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 78330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21611:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 78329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21599:11:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78327,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 78326,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25731,
                            "src": "21603:5:166"
                          },
                          "referencedDeclaration": 25731,
                          "src": "21603:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 78328,
                        "nodeType": "ArrayTypeName",
                        "src": "21603:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_storage_ptr",
                          "typeString": "contract ERC20[]"
                        }
                      }
                    },
                    "id": 78331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21599:14:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21575:38:166"
                },
                {
                  "expression": {
                    "id": 78337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78333,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78325,
                        "src": "21623:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78335,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 78334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21630:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21623:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78336,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76414,
                      "src": "21635:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "21623:19:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78338,
                  "nodeType": "ExpressionStatement",
                  "src": "21623:19:166"
                },
                {
                  "documentation": "Try to call batch to treasury as non-policy, expect revert",
                  "id": 78370,
                  "nodeType": "Block",
                  "src": "21724:284:166",
                  "statements": [
                    {
                      "assignments": [
                        78340
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 78340,
                          "mutability": "mutable",
                          "name": "err",
                          "nameLocation": "21751:3:166",
                          "nodeType": "VariableDeclaration",
                          "scope": 78370,
                          "src": "21738:16:166",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 78339,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "21738:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 78351,
                      "initialValue": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 78343,
                                "name": "ROLESv1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40870,
                                "src": "21797:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                                  "typeString": "type(contract ROLESv1)"
                                }
                              },
                              "id": 78344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ROLES_RequireRole",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40816,
                              "src": "21797:25:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes32) pure"
                              }
                            },
                            "id": 78345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "21797:34:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "63616c6c6261636b5f61646d696e",
                                "id": 78348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21857:16:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                },
                                "value": "callback_admin"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                }
                              ],
                              "id": 78347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21849:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 78346,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "21849:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21849:25:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 78341,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21757:3:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 78342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "21757:22:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 78350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21757:131:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "21738:150:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 78355,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76390,
                            "src": "21911:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78352,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "21902:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 78354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7048,
                          "src": "21902:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 78356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21902:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78357,
                      "nodeType": "ExpressionStatement",
                      "src": "21902:15:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 78361,
                            "name": "err",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78340,
                            "src": "21947:3:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 78358,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "21931:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 78360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expectRevert",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7089,
                          "src": "21931:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes memory) external"
                          }
                        },
                        "id": 78362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21931:20:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78363,
                      "nodeType": "ExpressionStatement",
                      "src": "21931:20:166"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 78367,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78325,
                            "src": "21990:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                              "typeString": "contract ERC20[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                              "typeString": "contract ERC20[] memory"
                            }
                          ],
                          "expression": {
                            "id": 78364,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "21965:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 78366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "batchToTreasury",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45798,
                          "src": "21965:24:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC20[] memory) external"
                          }
                        },
                        "id": 78368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21965:32:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78369,
                      "nodeType": "ExpressionStatement",
                      "src": "21965:32:166"
                    }
                  ]
                },
                {
                  "documentation": "Call batch to treasury as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78374,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76394,
                        "src": "22074:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78371,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "22065:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "22065:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22065:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78376,
                  "nodeType": "ExpressionStatement",
                  "src": "22065:18:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78380,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78325,
                        "src": "22118:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 78377,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "22093:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45798,
                      "src": "22093:24:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 78381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22093:32:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78382,
                  "nodeType": "ExpressionStatement",
                  "src": "22093:32:166"
                },
                {
                  "documentation": "Expect the reserve balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78388,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "22253:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22245:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78386,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22245:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22245:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78384,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "22227:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "22227:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22227:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22265:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78383,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "22218:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22218:49:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78393,
                  "nodeType": "ExpressionStatement",
                  "src": "22218:49:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78399,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76429,
                                "src": "22312:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22304:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78397,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22304:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22304:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78395,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "22286:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "22286:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22286:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78402,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78228,
                            "src": "22324:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78404,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 78403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22338:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22324:16:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 78405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22343:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "22324:21:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78394,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "22277:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22277:69:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78408,
                  "nodeType": "ExpressionStatement",
                  "src": "22277:69:166"
                },
                {
                  "documentation": "Test batch to treasury with the other token",
                  "expression": {
                    "id": 78413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78409,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78325,
                        "src": "22413:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78411,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 78410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22420:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22413:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78412,
                      "name": "other",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76417,
                      "src": "22425:5:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "22413:17:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78414,
                  "nodeType": "ExpressionStatement",
                  "src": "22413:17:166"
                },
                {
                  "documentation": "Call batch to treasury as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 78418,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76394,
                        "src": "22497:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78415,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "22488:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "22488:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22488:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78420,
                  "nodeType": "ExpressionStatement",
                  "src": "22488:18:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78424,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78325,
                        "src": "22541:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 78421,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "22516:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45798,
                      "src": "22516:24:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 78425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22516:32:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78426,
                  "nodeType": "ExpressionStatement",
                  "src": "22516:32:166"
                },
                {
                  "documentation": "Expect the other balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78432,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "22672:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22664:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78430,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22664:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22664:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78428,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76417,
                            "src": "22648:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "22648:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22648:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22684:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78427,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "22639:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22639:47:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78437,
                  "nodeType": "ExpressionStatement",
                  "src": "22639:47:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78443,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76429,
                                "src": "22729:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22721:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78441,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22721:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22721:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78439,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76417,
                            "src": "22705:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "22705:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22705:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78446,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78228,
                            "src": "22741:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78448,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 78447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22755:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22741:16:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 78449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22760:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "22741:21:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78438,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "22696:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22696:67:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78452,
                  "nodeType": "ExpressionStatement",
                  "src": "22696:67:166"
                },
                {
                  "documentation": "Store updated treasury balances",
                  "expression": {
                    "id": 78469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78453,
                      "name": "startBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78228,
                      "src": "22864:13:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78458,
                                  "name": "treasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76429,
                                  "src": "22907:8:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                ],
                                "id": 78457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22899:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78456,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22899:7:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22899:17:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 78454,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76414,
                              "src": "22881:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 78455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25382,
                            "src": "22881:17:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 78460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22881:36:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78465,
                                  "name": "treasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76429,
                                  "src": "22943:8:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                    "typeString": "contract GoerliDaoTreasury"
                                  }
                                ],
                                "id": 78464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22935:7:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78463,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22935:7:166",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22935:17:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 78461,
                              "name": "other",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76417,
                              "src": "22919:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 78462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25382,
                            "src": "22919:15:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 78467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22919:34:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 78468,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "22880:74:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "22864:90:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "id": 78470,
                  "nodeType": "ExpressionStatement",
                  "src": "22864:90:166"
                },
                {
                  "documentation": "Send other tokens and reserve tokens to callback to mimic bond purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78476,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "23070:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23062:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78474,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23062:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23062:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23081:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 78471,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "23049:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "23049:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23049:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78480,
                  "nodeType": "ExpressionStatement",
                  "src": "23049:35:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78486,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "23113:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23105:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78484,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23105:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23105:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23124:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78481,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76417,
                        "src": "23094:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "23094:10:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23094:33:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78490,
                  "nodeType": "ExpressionStatement",
                  "src": "23094:33:166"
                },
                {
                  "documentation": "Call the callback function from the teller to payout the purchases",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78496,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "23234:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23226:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78494,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23226:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23226:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78491,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "23217:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "23217:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23217:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78499,
                  "nodeType": "ExpressionStatement",
                  "src": "23217:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78503,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "23270:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23279:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "hexValue": "31",
                        "id": 78505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23283:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 78500,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "23252:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "23252:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23252:33:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78507,
                  "nodeType": "ExpressionStatement",
                  "src": "23252:33:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78513,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "23313:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23305:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78511,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23305:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23305:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78508,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "23296:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "23296:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23296:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78516,
                  "nodeType": "ExpressionStatement",
                  "src": "23296:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78520,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78198,
                        "src": "23349:9:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23360:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "323030",
                        "id": 78522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23364:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 78517,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "23331:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "23331:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23331:37:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78524,
                  "nodeType": "ExpressionStatement",
                  "src": "23331:37:166"
                },
                {
                  "documentation": "Check that the callback balances are updated again",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78530,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "23477:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23469:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78528,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23469:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23469:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78526,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "23451:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "23451:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23451:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 78533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23489:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 78525,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "23442:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23442:50:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78535,
                  "nodeType": "ExpressionStatement",
                  "src": "23442:50:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78541,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "23535:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23527:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78539,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23527:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23527:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78537,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76417,
                            "src": "23511:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "23511:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23511:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23547:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78536,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "23502:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23502:48:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78546,
                  "nodeType": "ExpressionStatement",
                  "src": "23502:48:166"
                },
                {
                  "documentation": "Call batch to treasury with both tokens",
                  "expression": {
                    "id": 78554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78547,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78325,
                      "src": "23613:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 78552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23634:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 78551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "23622:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 78549,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 78548,
                              "name": "ERC20",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 25731,
                              "src": "23626:5:166"
                            },
                            "referencedDeclaration": 25731,
                            "src": "23626:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25731",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 78550,
                          "nodeType": "ArrayTypeName",
                          "src": "23626:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        }
                      },
                      "id": 78553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23622:14:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "src": "23613:23:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "id": 78555,
                  "nodeType": "ExpressionStatement",
                  "src": "23613:23:166"
                },
                {
                  "expression": {
                    "id": 78560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78556,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78325,
                        "src": "23646:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78558,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 78557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23653:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23646:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78559,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76414,
                      "src": "23658:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "23646:19:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78561,
                  "nodeType": "ExpressionStatement",
                  "src": "23646:19:166"
                },
                {
                  "expression": {
                    "id": 78566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78562,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78325,
                        "src": "23675:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 78564,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 78563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23682:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23675:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25731",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78565,
                      "name": "other",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76417,
                      "src": "23687:5:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "23675:17:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78567,
                  "nodeType": "ExpressionStatement",
                  "src": "23675:17:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78571,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76394,
                        "src": "23712:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78568,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "23703:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "23703:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23703:18:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78573,
                  "nodeType": "ExpressionStatement",
                  "src": "23703:18:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78577,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78325,
                        "src": "23756:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 78574,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "23731:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45798,
                      "src": "23731:24:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$25731_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 78578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23731:32:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78579,
                  "nodeType": "ExpressionStatement",
                  "src": "23731:32:166"
                },
                {
                  "documentation": "Expect the reserve balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78585,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "23891:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23883:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78583,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23883:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23883:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78581,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "23865:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "23865:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23865:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23903:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78580,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "23856:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23856:49:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78590,
                  "nodeType": "ExpressionStatement",
                  "src": "23856:49:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78596,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76429,
                                "src": "23950:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23942:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78594,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23942:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23942:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78592,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76414,
                            "src": "23924:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "23924:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23924:36:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78599,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78228,
                            "src": "23962:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78601,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 78600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23976:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23962:16:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 78602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23981:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "23962:21:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78591,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "23915:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23915:69:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78605,
                  "nodeType": "ExpressionStatement",
                  "src": "23915:69:166"
                },
                {
                  "documentation": "Expect the other balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78611,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76441,
                                "src": "24108:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$45857",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 78610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24100:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78609,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24100:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24100:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78607,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76417,
                            "src": "24084:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "24084:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24084:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24120:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78606,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "24075:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24075:47:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78616,
                  "nodeType": "ExpressionStatement",
                  "src": "24075:47:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78622,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76429,
                                "src": "24165:8:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24157:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78620,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24157:7:166",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24157:17:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78618,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76417,
                            "src": "24141:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 78619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "24141:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 78624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24141:34:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78625,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78228,
                            "src": "24177:13:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 78627,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 78626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24191:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24177:16:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 78628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24196:2:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "24177:21:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78617,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "24132:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24132:67:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78631,
                  "nodeType": "ExpressionStatement",
                  "src": "24132:67:166"
                }
              ]
            },
            "functionSelector": "4b59caab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_batchToTreasury",
            "nameLocation": "20379:31:166",
            "parameters": {
              "id": 78194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20410:2:166"
            },
            "returnParameters": {
              "id": 78195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20420:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78703,
            "nodeType": "FunctionDefinition",
            "src": "24298:813:166",
            "nodes": [],
            "body": {
              "id": 78702,
              "nodeType": "Block",
              "src": "24349:762:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78642,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76441,
                            "src": "24447:8:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$45857",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 78641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24439:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24439:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24439:17:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24458:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78637,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76414,
                        "src": "24426:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "24426:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 78645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24426:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78646,
                  "nodeType": "ExpressionStatement",
                  "src": "24426:35:166"
                },
                {
                  "assignments": [
                    78648,
                    78650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78648,
                      "mutability": "mutable",
                      "name": "oldQuoteAmount",
                      "nameLocation": "24571:14:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78702,
                      "src": "24563:22:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24563:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78650,
                      "mutability": "mutable",
                      "name": "oldPayoutAmount",
                      "nameLocation": "24595:15:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78702,
                      "src": "24587:23:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78649,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24587:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78655,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78653,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "24640:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78651,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "24614:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45856,
                      "src": "24614:25:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 78654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24614:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24562:86:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78657,
                        "name": "oldQuoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78648,
                        "src": "24667:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24683:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78656,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "24658:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24658:27:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78660,
                  "nodeType": "ExpressionStatement",
                  "src": "24658:27:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78662,
                        "name": "oldPayoutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78650,
                        "src": "24704:15:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24721:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78661,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "24695:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24695:28:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78665,
                  "nodeType": "ExpressionStatement",
                  "src": "24695:28:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78671,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76405,
                            "src": "24826:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 78670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24818:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24818:7:166",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24818:15:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78666,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "24809:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "24809:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 78673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24809:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78674,
                  "nodeType": "ExpressionStatement",
                  "src": "24809:25:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78678,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "24862:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24871:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 78680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24875:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 78675,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "24844:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45724,
                      "src": "24844:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 78681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24844:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78682,
                  "nodeType": "ExpressionStatement",
                  "src": "24844:34:166"
                },
                {
                  "assignments": [
                    78684,
                    78686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78684,
                      "mutability": "mutable",
                      "name": "newQuoteAmount",
                      "nameLocation": "24950:14:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78702,
                      "src": "24942:22:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24942:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78686,
                      "mutability": "mutable",
                      "name": "newPayoutAmount",
                      "nameLocation": "24974:15:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 78702,
                      "src": "24966:23:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78685,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24966:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78691,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78689,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76446,
                        "src": "25019:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78687,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76441,
                        "src": "24993:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$45857",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 78688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45856,
                      "src": "24993:25:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 78690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24993:34:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24941:86:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78693,
                        "name": "newQuoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78684,
                        "src": "25046:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25062:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78692,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "25037:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25037:28:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78696,
                  "nodeType": "ExpressionStatement",
                  "src": "25037:28:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78698,
                        "name": "newPayoutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78686,
                        "src": "25084:15:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 78699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25101:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 78697,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "25075:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 78700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25075:29:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78701,
                  "nodeType": "ExpressionStatement",
                  "src": "25075:29:166"
                }
              ]
            },
            "documentation": {
              "id": 78634,
              "nodeType": "StructuredDocumentation",
              "src": "24255:38:166",
              "text": "DONE\n [X] amountsForMarket"
            },
            "functionSelector": "3be22132",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_amountsForMarket",
            "nameLocation": "24307:32:166",
            "parameters": {
              "id": 78635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24339:2:166"
            },
            "returnParameters": {
              "id": 78636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24349:0:166"
            },
            "scope": 78704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76381,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "1851:4:166"
            },
            "id": 76382,
            "nodeType": "InheritanceSpecifier",
            "src": "1851:4:166"
          }
        ],
        "canonicalName": "BondCallbackTest",
        "contractDependencies": [
          24110,
          24679,
          29497,
          38611,
          40362,
          40791,
          41409,
          45857,
          49950,
          51234,
          54005,
          54995,
          55071,
          55686,
          66805,
          76380
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78704,
          5484,
          2554,
          2291
        ],
        "name": "BondCallbackTest",
        "nameLocation": "1831:16:166",
        "scope": 78705,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 166
}