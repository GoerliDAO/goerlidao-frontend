{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyPermissionedAddressCanRestart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyPermissionedAddressCanRestartMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyPermissionedAddressCanRestartWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyPermissionedAddressCanShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyPermissionedAddressCanShutdownMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyPermissionedAddressCanShutdownWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_Restart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_RestartMINTR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_RestartTRSRY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_Shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_ShutdownMINTR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_ShutdownTRSRY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506201356180620000336000396000f3fe60806040523480156200001157600080fd5b50600436106200014f5760003560e01c80637126037d11620000c0578063bc7b2b71116200008b578063f6d04033116200006e578063f6d040331462000236578063f8ccbf471462000240578063fa7626d4146200025457600080fd5b8063bc7b2b711462000218578063c7d81eff146200022257600080fd5b80637126037d14620001df5780637fa1aaf914620001e957806385a3bdf314620001f3578063ba414fa614620001fd57600080fd5b806337d35213116200011e5780634233f1cd11620001015780634233f1cd14620001c15780635661fc8414620001cb5780636e40699f14620001d557600080fd5b806337d35213146200017e5780633a768463146200018857600080fd5b80630a9254e41462000154578063238a174f1462000160578063319cb870146200016a57806333038d191462000174575b600080fd5b6200015e62000262565b005b6200015e6200141a565b6200015e62001984565b6200015e62001e2f565b6200015e62002a6d565b620001a4737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6200015e6200304a565b6200015e62003426565b6200015e62003e3a565b6200015e62004216565b6200015e620052c7565b6200015e62006331565b6200020762006c24565b6040519015158152602001620001b8565b6200015e62006d8e565b600854620001a4906001600160a01b031681565b6200015e620072aa565b600054620002079062010000900460ff1681565b600054620002079060ff1681565b6040517fe5d6bf02000000000000000000000000000000000000000000000000000000008152635fdd42806004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e5d6bf0290602401600060405180830381600087803b158015620002cc57600080fd5b505af1158015620002e1573d6000803e3d6000fd5b50505050604051620002f39062007bc7565b604051809103906000f08015801562000310573d6000803e3d6000fd5b50600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040517f780900dc000000000000000000000000000000000000000000000000000000008152600360048201526000919063780900dc906024016000604051808303816000875af1158015620003a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052620003ea919081019062007c9a565b90508060008151811062000402576200040262007d8b565b6020026020010151600960006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060018151811062000446576200044662007d8b565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806002815181106200048a576200048a62007d8b565b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550506000604051620004c99062007bd5565b6001600160a01b039091168152602001604051809103906000f080158015620004f6573d6000803e3d6000fd5b50600f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040516200053c9062007be3565b6001600160a01b039091168152602001604051809103906000f08015801562000569573d6000803e3d6000fd5b50600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055604051601290620005b39062007bf1565b60608082526007908201527f5265736572766500000000000000000000000000000000000000000000000000608082015260a0602082018190526003908201527f525356000000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000643573d6000803e3d6000fd5b50600d80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790556040516200068a9062007bff565b604051809103906000f080158015620006a7573d6000803e3d6000fd5b50600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169182179055604051620006ed9062007c0d565b6001600160a01b039091168152602001604051809103906000f0801580156200071a573d6000803e3d6000fd5b50601080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e54600c54604051918316921690620007699062007c1b565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200079d573d6000803e3d6000fd5b50601180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e54604051911690620007e69062007c29565b6001600160a01b039091168152602001604051809103906000f08015801562000813573d6000803e3d6000fd5b50601280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e546040519116906200085c9062007c37565b6001600160a01b039091168152602001604051809103906000f08015801562000889573d6000803e3d6000fd5b50601380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e54604051911690620008d29062007c45565b6001600160a01b039091168152602001604051809103906000f080158015620008ff573d6000803e3d6000fd5b50601480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601054604080518082018252601181527f476f65726c6944616f5472656173757279000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$__93639049957993620009bc9391169160040162007e35565b602060405180830381865af4158015620009da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a00919062007e61565b601580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601154604080518082018252600c81527f476f65726c694d696e7465720000000000000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$__9363904995799362000abc9391169160040162007e35565b602060405180830381865af415801562000ada573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b00919062007e61565b601680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e546010546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081529183169263c4d1f8f19262000b7d92600092169060040162007e86565b600060405180830381600087803b15801562000b9857600080fd5b505af115801562000bad573d6000803e3d6000fd5b5050600e546011546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000c0292600092169060040162007e86565b600060405180830381600087803b15801562000c1d57600080fd5b505af115801562000c32573d6000803e3d6000fd5b5050600e546012546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000c8792600092169060040162007e86565b600060405180830381600087803b15801562000ca257600080fd5b505af115801562000cb7573d6000803e3d6000fd5b5050600e546013546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000d0c92600292169060040162007e86565b600060405180830381600087803b15801562000d2757600080fd5b505af115801562000d3c573d6000803e3d6000fd5b5050600e546014546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000d9192600292169060040162007e86565b600060405180830381600087803b15801562000dac57600080fd5b505af115801562000dc1573d6000803e3d6000fd5b5050600e546015546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000e1692600292169060040162007e86565b600060405180830381600087803b15801562000e3157600080fd5b505af115801562000e46573d6000803e3d6000fd5b5050600e546016546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000e9b92600292169060040162007e86565b600060405180830381600087803b15801562000eb657600080fd5b505af115801562000ecb573d6000803e3d6000fd5b5050601454600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562000f5857600080fd5b505af115801562000f6d573d6000803e3d6000fd5b5050601454600a546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f7265737461727400000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562000ffa57600080fd5b505af11580156200100f573d6000803e3d6000fd5b5050601154600f546200103793506001600160a01b03908116925063fbfa77cf911662007755565b600d546010546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015269d3c21bcecceda100000060248201529116906340c10f1990604401600060405180830381600087803b158015620010aa57600080fd5b505af1158015620010bf573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200111d57600080fd5b505af115801562001132573d6000803e3d6000fd5b50506011546016546040517f359fe7800000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529116925063359fe7809150604401600060405180830381600087803b158015620011bf57600080fd5b505af1158015620011d4573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200123257600080fd5b505af115801562001247573d6000803e3d6000fd5b5050601054601554600d546040517fe6eb207a0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60448201529116925063e6eb207a9150606401600060405180830381600087803b158015620012df57600080fd5b505af1158015620012f4573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200135257600080fd5b505af115801562001367573d6000803e3d6000fd5b5050601054601554600d546040517f01a91e5c0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6044820152911692506301a91e5c9150606401600060405180830381600087803b158015620013ff57600080fd5b505af115801562001414573d6000803e3d6000fd5b50505050565b601154604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620014ac926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014a6919062007eda565b6200785c565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162001512926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b604080517f656d657267656e63795f73687574646f776e000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390620015ea90849060040162007efe565b600060405180830381600087803b1580156200160557600080fd5b505af11580156200161a573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200167857600080fd5b505af11580156200168d573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620016e257600080fd5b505af1158015620016f7573d6000803e3d6000fd5b5050505062001753601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620017b9926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200181357600080fd5b505af115801562001828573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200187d57600080fd5b505af115801562001892573d6000803e3d6000fd5b505050506200191b601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001914919062007eda565b156200785c565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162001981926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b50565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620019de57600080fd5b505af1158015620019f3573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a4857600080fd5b505af115801562001a5d573d6000803e3d6000fd5b5050505062001ab9601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b604080517f656d657267656e63795f7265737461727400000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062001b9190849060040162007efe565b600060405180830381600087803b15801562001bac57600080fd5b505af115801562001bc1573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001c1f57600080fd5b505af115801562001c34573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663c12954fa6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001c8957600080fd5b505af115801562001c9e573d6000803e3d6000fd5b5050505062001cfa601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562001d5457600080fd5b505af115801562001d69573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663c12954fa6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001dbe57600080fd5b505af115801562001dd3573d6000803e3d6000fd5b5050505062001981601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562001e8957600080fd5b505af115801562001e9e573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b15801562001f0f57600080fd5b505af115801562001f24573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001f8257600080fd5b505af115801562001f97573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001fec57600080fd5b505af115801562002001573d6000803e3d6000fd5b505050506200205d601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620021059185910162007efe565b600060405180830381600087803b1580156200212057600080fd5b505af115801562002135573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200219357600080fd5b505af1158015620021a8573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200221957600080fd5b505af11580156200222e573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620022b69450911691506370a08231906024015b602060405180830381865afa15801562002285573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022ab919062007f13565b633b9aca00620078d4565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200231057600080fd5b505af115801562002325573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af11580156200239b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c1919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906200241490849060040162007efe565b600060405180830381600087803b1580156200242f57600080fd5b505af115801562002444573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620024a257600080fd5b505af1158015620024b7573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b1580156200252857600080fd5b505af11580156200253d573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200257b9450911691506370a082319060240162002267565b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620025d557600080fd5b505af1158015620025ea573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663c12954fa6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200263f57600080fd5b505af115801562002654573d6000803e3d6000fd5b50505050620026b0601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200270a57600080fd5b505af11580156200271f573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200279057600080fd5b505af1158015620027a5573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200282d9450911691506370a08231906024015b602060405180830381865afa158015620027fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002822919062007f13565b6377359400620078d4565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200288757600080fd5b505af11580156200289c573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af115801562002912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002938919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa7906024015b600060405180830381600087803b1580156200299457600080fd5b505af1158015620029a9573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b15801562002a1a57600080fd5b505af115801562002a2f573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620019819450911691506370a082319060240162002267565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002ac757600080fd5b505af115801562002adc573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002b3157600080fd5b505af115801562002b46573d6000803e3d6000fd5b5050505062002ba2601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162002c08926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b604080517f656d657267656e63795f7265737461727400000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062002ce090849060040162007efe565b600060405180830381600087803b15801562002cfb57600080fd5b505af115801562002d10573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562002d6e57600080fd5b505af115801562002d83573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002dd857600080fd5b505af115801562002ded573d6000803e3d6000fd5b5050505062002e49601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162002eaf926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002f0957600080fd5b505af115801562002f1e573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002f7357600080fd5b505af115801562002f88573d6000803e3d6000fd5b5050505062002fe4601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162001981926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b601154604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620030b0926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b604080517f656d657267656e63795f73687574646f776e000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906200318890849060040162007efe565b600060405180830381600087803b158015620031a357600080fd5b505af1158015620031b8573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200321657600080fd5b505af11580156200322b573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200328057600080fd5b505af115801562003295573d6000803e3d6000fd5b50505050620032f1601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200334b57600080fd5b505af115801562003360573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620033b557600080fd5b505af1158015620033ca573d6000803e3d6000fd5b5050505062001981601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200348057600080fd5b505af115801562003495573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620034ea57600080fd5b505af1158015620034ff573d6000803e3d6000fd5b505050506200355b601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620036039185910162007efe565b600060405180830381600087803b1580156200361e57600080fd5b505af115801562003633573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200369157600080fd5b505af1158015620036a6573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b1580156200372657600080fd5b505af11580156200373b573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b039182166004820152620037c09450911691506370a08231906024015b602060405180830381865afa15801562003792573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037b8919062007f13565b6000620078d4565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200381a57600080fd5b505af11580156200382f573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506200388590849060040162007efe565b600060405180830381600087803b158015620038a057600080fd5b505af1158015620038b5573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b1580156200392a57600080fd5b505af11580156200393f573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b0391821660048201526200397d9450911691506370a082319060240162003774565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620039dd9291909116906328a4ace59060440162003774565b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562003a3757600080fd5b505af115801562003a4c573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166301ffa0596040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003aa157600080fd5b505af115801562003ab6573d6000803e3d6000fd5b5050505062003b12601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562003b6c57600080fd5b505af115801562003b81573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b15801562003c0157600080fd5b505af115801562003c16573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b03918216600482015262003ca29450911691506370a08231906024015b602060405180830381865afa15801562003c6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c93919062007f13565b670de0b6b3a7640000620078d4565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa7906024015b600060405180830381600087803b15801562003cfd57600080fd5b505af115801562003d12573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b15801562003d8757600080fd5b505af115801562003d9c573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b03918216600482015262003dda9450911691506370a082319060240162003c4f565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620019819291909116906328a4ace59060440162003c4f565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162003ea0926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b604080517f656d657267656e63795f73687574646f776e000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062003f7890849060040162007efe565b600060405180830381600087803b15801562003f9357600080fd5b505af115801562003fa8573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200400657600080fd5b505af11580156200401b573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200407057600080fd5b505af115801562004085573d6000803e3d6000fd5b50505050620040e1601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200413b57600080fd5b505af115801562004150573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620041a557600080fd5b505af1158015620041ba573d6000803e3d6000fd5b5050505062001981601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200427057600080fd5b505af115801562004285573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b158015620042f657600080fd5b505af11580156200430b573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200436957600080fd5b505af11580156200437e573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620043d357600080fd5b505af1158015620043e8573d6000803e3d6000fd5b5050505062004444601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620044aa926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620045529185910162007efe565b600060405180830381600087803b1580156200456d57600080fd5b505af115801562004582573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620045e057600080fd5b505af1158015620045f5573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200466657600080fd5b505af11580156200467b573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620046b99450911691506370a082319060240162002267565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200471357600080fd5b505af115801562004728573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af11580156200479e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047c4919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906200481790849060040162007efe565b600060405180830381600087803b1580156200483257600080fd5b505af115801562004847573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620048a557600080fd5b505af1158015620048ba573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b1580156200492b57600080fd5b505af115801562004940573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200497e9450911691506370a082319060240162002267565b506040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39162004a279185910162007efe565b600060405180830381600087803b15801562004a4257600080fd5b505af115801562004a57573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562004ab557600080fd5b505af115801562004aca573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b15801562004b4a57600080fd5b505af115801562004b5f573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b03918216600482015262004b9d9450911691506370a082319060240162003774565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562004bf757600080fd5b505af115801562004c0c573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062004c6290849060040162007efe565b600060405180830381600087803b15801562004c7d57600080fd5b505af115801562004c92573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b15801562004d0757600080fd5b505af115801562004d1c573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b03918216600482015262004d5a9450911691506370a082319060240162003774565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015262004dba9291909116906328a4ace59060440162003774565b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562004e1457600080fd5b505af115801562004e29573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562004e7e57600080fd5b505af115801562004e93573d6000803e3d6000fd5b5050505062004eef601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162004f55926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562004faf57600080fd5b505af115801562004fc4573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200503557600080fd5b505af11580156200504a573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620050889450911691506370a0823190602401620027de565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620050e257600080fd5b505af1158015620050f7573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af11580156200516d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005193919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620051ee57600080fd5b505af115801562005203573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b1580156200527457600080fd5b505af115801562005289573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b03918216600482015262003b129450911691506370a082319060240162002267565b601154604080517f02fb0c5e00000000000000000000000000000000000000000000000000000000815290516200532d926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162005393926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620053ed57600080fd5b505af115801562005402573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152637735940060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200547357600080fd5b505af115801562005488573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620054c69450911691506370a0823190602401620027de565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200552057600080fd5b505af115801562005535573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af1158015620055ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620055d1919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200562c57600080fd5b505af115801562005641573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b158015620056b257600080fd5b505af1158015620056c7573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620057059450911691506370a082319060240162002267565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200575f57600080fd5b505af115801562005774573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b158015620057f457600080fd5b505af115801562005809573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b039182166004820152620058479450911691506370a082319060240162003c4f565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620058a157600080fd5b505af1158015620058b6573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b1580156200592b57600080fd5b505af115801562005940573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b0391821660048201526200597e9450911691506370a082319060240162003c4f565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620059de9291909116906328a4ace59060440162003c4f565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005a3857600080fd5b505af115801562005a4d573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562005aa257600080fd5b505af115801562005ab7573d6000803e3d6000fd5b5050505062005b13601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162005b79926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39162005c219185910162007efe565b600060405180830381600087803b15801562005c3c57600080fd5b505af115801562005c51573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562005caf57600080fd5b505af115801562005cc4573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b15801562005d3557600080fd5b505af115801562005d4a573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b03918216600482015262005d889450911691506370a082319060240162002267565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005de257600080fd5b505af115801562005df7573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af115801562005e6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e93919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062005ee690849060040162007efe565b600060405180830381600087803b15801562005f0157600080fd5b505af115801562005f16573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562005f7457600080fd5b505af115801562005f89573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b15801562005ffa57600080fd5b505af11580156200600f573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200604d9450911691506370a082319060240162002267565b506040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620060f69185910162007efe565b600060405180830381600087803b1580156200611157600080fd5b505af115801562006126573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200618457600080fd5b505af115801562006199573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b1580156200621957600080fd5b505af11580156200622e573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b0391821660048201526200626c9450911691506370a082319060240162003c4f565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620062c657600080fd5b505af1158015620062db573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062003ce290849060040162007efe565b601154604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162006397926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620063f157600080fd5b505af115801562006406573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152637735940060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200647757600080fd5b505af11580156200648c573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620064ca9450911691506370a0823190602401620027de565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200652457600080fd5b505af115801562006539573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af1158015620065af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620065d5919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200663057600080fd5b505af115801562006645573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b158015620066b657600080fd5b505af1158015620066cb573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620067099450911691506370a082319060240162002267565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200676357600080fd5b505af115801562006778573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620067cd57600080fd5b505af1158015620067e2573d6000803e3d6000fd5b505050506200683e601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620068e69185910162007efe565b600060405180830381600087803b1580156200690157600080fd5b505af115801562006916573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200697457600080fd5b505af115801562006989573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b158015620069fa57600080fd5b505af115801562006a0f573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b03918216600482015262006a4d9450911691506370a082319060240162002267565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562006aa757600080fd5b505af115801562006abc573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af115801562006b32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006b58919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062006bab90849060040162007efe565b600060405180830381600087803b15801562006bc657600080fd5b505af115801562006bdb573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa7915060240162002979565b60008054610100900460ff161562006c455750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562006d895760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162006ced917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162007f2d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262006d279162007f77565b6000604051808303816000865af19150503d806000811462006d66576040519150601f19603f3d011682016040523d82523d6000602084013e62006d6b565b606091505b509150508080602001905181019062006d85919062007eda565b9150505b919050565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162006df4926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562006e4e57600080fd5b505af115801562006e63573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b15801562006ee357600080fd5b505af115801562006ef8573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b03918216600482015262006f369450911691506370a082319060240162003c4f565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562006f9057600080fd5b505af115801562006fa5573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b1580156200701a57600080fd5b505af11580156200702f573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b0391821660048201526200706d9450911691506370a082319060240162003c4f565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620070cd9291909116906328a4ace59060440162003c4f565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200712757600080fd5b505af11580156200713c573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200719157600080fd5b505af1158015620071a6573d6000803e3d6000fd5b5050505062007202601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620060f69185910162007efe565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200730457600080fd5b505af115801562007319573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200736e57600080fd5b505af115801562007383573d6000803e3d6000fd5b50505050620073df601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b604080517f656d657267656e63795f7265737461727400000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390620074b790849060040162007efe565b600060405180830381600087803b158015620074d257600080fd5b505af1158015620074e7573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200754557600080fd5b505af11580156200755a573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166301ffa0596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620075af57600080fd5b505af1158015620075c4573d6000803e3d6000fd5b5050505062007620601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200767a57600080fd5b505af11580156200768f573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166301ffa0596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620076e457600080fd5b505af1158015620076f9573d6000803e3d6000fd5b5050505062001981601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b6040805160048152602481018252602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000060e088901b1617905282516001600160a01b0385168183015283518082039092018252808401938490527fb96213e400000000000000000000000000000000000000000000000000000000909352737109709ecfa91a80626ff3989d68f67f5b1dd12d9263b96213e4926200782392889260440162007f95565b600060405180830381600087803b1580156200783e57600080fd5b505af115801562007853573d6000803e3d6000fd5b50505050505050565b8062001981577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620078c29060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200198162007a44565b80821462007a40577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620079629060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a160408051818152600a818301527f2020202020204c6566740000000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a818301527f202020202052696768740000000000000000000000000000000000000000000060608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162007a4062007a44565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562007b995760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262007b16929160200162007f2d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262007b509162007f77565b6000604051808303816000865af19150503d806000811462007b8f576040519150601f19603f3d011682016040523d82523d6000602084013e62007b94565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b61040a8062007fd883390190565b61013f80620083e283390190565b611fc7806200852183390190565b611222806200a4e883390190565b611edc806200b70a83390190565b612111806200d5e683390190565b61116c806200f6f783390190565b610b11806201086383390190565b61150e806201137483390190565b610caa806201288283390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80516001600160a01b038116811462006d8957600080fd5b6000602080838503121562007cae57600080fd5b825167ffffffffffffffff8082111562007cc757600080fd5b818501915085601f83011262007cdc57600080fd5b81518181111562007cf15762007cf162007c53565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171562007d375762007d3762007c53565b60405291825284820192508381018501918883111562007d5657600080fd5b938501935b8285101562007d7f5762007d6f8562007c82565b8452938501939285019262007d5b565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b8381101562007dd757818101518382015260200162007dbd565b83811115620014145750506000910152565b6000815180845262007e0381602086016020860162007dba565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6001600160a01b038316815260406020820152600062007e59604083018462007de9565b949350505050565b60006020828403121562007e7457600080fd5b62007e7f8262007c82565b9392505050565b604081016006841062007ec2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9281526001600160a01b039190911660209091015290565b60006020828403121562007eed57600080fd5b8151801515811462007e7f57600080fd5b60208152600062007e7f602083018462007de9565b60006020828403121562007f2657600080fd5b5051919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825162007f6981600485016020870162007dba565b919091016004019392505050565b6000825162007f8b81846020870162007dba565b9190910192915050565b6001600160a01b038416815260606020820152600062007fb9606083018562007de9565b828103604084015262007fcd818562007de9565b969550505050505056fe737109709ecfa91a80626ff3989d68f67f5b1dd12d60805264757365727360d81b60c052600560a05260c56040527f39b41f4ff9d03853a3e5e26ffad8712de4330b640064cfa05d0a29978dea11c660005534801561005d57600080fd5b50608051610391610079600039600061017b01526103916000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c8fe5261461003b578063780900dc1461008a575b600080fd5b6000805460408051602080820184905282518083038201815282840193849052805191012090935573ffffffffffffffffffffffffffffffffffffffff90911690526060015b60405180910390f35b61009d61009836600461022b565b6100aa565b6040516100819190610244565b606060008267ffffffffffffffff8111156100c7576100c761029e565b6040519080825280602002602001820160405280156100f0578160200160208202803683370190505b50905060005b838110156102245760008054604080516020808201849052825180830382018152918301909252805191012082556040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b1580156101c157600080fd5b505af11580156101d5573d6000803e3d6000fd5b50505050808383815181106101ec576101ec6102cd565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152508061021c816102fc565b9150506100f6565b5092915050565b60006020828403121561023d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561029257835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610260565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220deda93e03e4b234ba90d8fbed2cf2ce390afbc8778d16cf98dd284e98ba0270264736f6c634300080f0033608060405234801561001057600080fd5b5060405161013f38038061013f83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b60ad806100926000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80630505c8c914604b5780630c340a2414604b578063452a932014604b578063fbfa77cf14604b575b600080fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f3fea2646970667358221220576051929d376d1e9fb4b8653c8c36bbf8a25b328529243af4396b71e98fc36264736f6c634300080f00337f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140526101a0604052600c6101609081526b15539055551213d49256915160a21b61018052600690620000559082620002b1565b503480156200006357600080fd5b5060405162001fc738038062001fc783398101604081905262000086916200037d565b806040518060400160405280600a815260200169476f65726c692044616f60b01b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600a815260200169476f65726c692044616f60b01b815250604051806040016040528060048152602001634744414f60e01b81525060098260039081620001189190620002b1565b506004620001278382620002b1565b5060ff166080908152845160209586012084519486019490942060e08590526101008190524660c0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818b01819052818301999099526060810194909452938301919091523060a080840191909152835180840382018152929091019283905281519190960120909452505061012052600780546001600160a01b0319166001600160a01b03851690811790915591507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a25050620003af565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023757607f821691505b6020821081036200025857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ac57600081815260208120601f850160051c81016020861015620002875750805b601f850160051c820191505b81811015620002a85782815560010162000293565b5050505b505050565b81516001600160401b03811115620002cd57620002cd6200020c565b620002e581620002de845462000222565b846200025e565b602080601f8311600181146200031d5760008415620003045750858301515b600019600386901b1c1916600185901b178555620002a8565b600085815260208120601f198616915b828110156200034e578886015182559484019460019091019084016200032d565b50858210156200036d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200039057600080fd5b81516001600160a01b0381168114620003a857600080fd5b9392505050565b60805160a05160c05160e051610100516101205161014051611bbd6200040a600039600061087f01526000610e5b01526000610eaa01526000610e8501526000610e0701526000610e2e015260006101c30152611bbd6000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063a457c2d711610081578063bf7e214f11610066578063bf7e214f146102cd578063d505accf14610312578063dd62ed3e1461032557600080fd5b8063a457c2d7146102a7578063a9059cbb146102ba57600080fd5b80637a9e5e4b116100b25780637a9e5e4b146102795780637ecebe001461028c57806395d89b411461029f57600080fd5b806370a082311461023057806379cc67901461026657600080fd5b8063313ce56711610124578063395093511161010957806339509351146101f557806340c10f191461020857806342966c681461021d57600080fd5b8063313ce567146101bc5780633644e515146101ed57600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd1461019757806323b872dd146101a9575b600080fd5b61015e61036b565b60405161016b919061170c565b60405180910390f35b6101876101823660046117a1565b6103fd565b604051901515815260200161016b565b6002545b60405190815260200161016b565b6101876101b73660046117cd565b610413565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161016b565b61019b610489565b6101876102033660046117a1565b610498565b61021b6102163660046117a1565b6104db565b005b61021b61022b36600461180e565b6105ec565b61019b61023e366004611827565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61021b6102743660046117a1565b6105f9565b61021b610287366004611827565b610603565b61019b61029a366004611827565b61076c565b61015e610799565b6101876102b53660046117a1565b6107a8565b6101876102c83660046117a1565b610804565b6007546102ed9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016b565b61021b610320366004611844565b610811565b61019b6103333660046118bb565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461037a906118f4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a6906118f4565b80156103f35780601f106103c8576101008083540402835291602001916103f3565b820191906000526020600020905b8154815290600101906020018083116103d657829003601f168201915b5050505050905090565b600061040a3384846109d0565b50600192915050565b6000610420848484610b84565b61047f843361047a85604051806060016040528060288152602001611b176028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602090815260408083203384529091529020549190610dae565b6109d0565b5060019392505050565b6000610493610e02565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161040a91859061047a9086610ef8565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190611941565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146006906105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d4919061195e565b60405180910390fd5b506105e88282610f78565b5050565b6105f63382611098565b50565b6105e88282611206565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106949190611941565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146006906106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d4919061195e565b50600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600560205260408120545b92915050565b60606004805461037a906118f4565b600061040a338461047a85604051806060016040528060258152602001611b636025913933600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8d1684529091529020549190610dae565b600061040a338484610b84565b8342111561087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105d4565b60007f00000000000000000000000000000000000000000000000000000000000000008888886108aa8c611279565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610912826112b0565b9050600061092282878787611319565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105d4565b6109c48a8a8a6109d0565b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105d4565b73ffffffffffffffffffffffffffffffffffffffff8216610b15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105d4565b73ffffffffffffffffffffffffffffffffffffffff8216610cca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b610d1481604051806060016040528060268152602001611af16026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610dae565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610d509082610ef8565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610b77565b60008184841115610dec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d4919061170c565b506000610df98486611a70565b95945050505050565b6000467f00000000000000000000000000000000000000000000000000000000000000008103610e53577f000000000000000000000000000000000000000000000000000000000000000091505090565b5050604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080610f058385611a87565b905083811015610f71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105d4565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ff5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d4565b6002546110029082610ef8565b60025573ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546110359082610ef8565b73ffffffffffffffffffffffffffffffffffffffff8316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821661113b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b61118581604051806060016040528060228152602001611acf6022913973ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020549190610dae565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546111b89082611341565b60025560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161108c565b600061125d82604051806060016040528060248152602001611b3f6024913973ffffffffffffffffffffffffffffffffffffffff861660009081526001602090815260408083203384529091529020549190610dae565b905061126a8333836109d0565b6112748383611098565b505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090208054906112aa81611383565b50919050565b60006107936112bd610e02565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061132a878787876113a0565b91509150611337816114b8565b5095945050505050565b6000610f7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610dae565b60018160000160008282546113989190611a87565b909155505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113d757506000905060036114af565b8460ff16601b141580156113ef57508460ff16601c14155b1561140057506000905060046114af565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611454573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166114a8576000600192509250506114af565b9150600090505b94509492505050565b60008160048111156114cc576114cc611a9f565b036114d45750565b60018160048111156114e8576114e8611a9f565b0361154f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105d4565b600281600481111561156357611563611a9f565b036115ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105d4565b60038160048111156115de576115de611a9f565b0361166b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b600481600481111561167f5761167f611a9f565b036105f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b600060208083528351808285015260005b818110156117395785810183015185820160400152820161171d565b8181111561174b576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146105f657600080fd5b600080604083850312156117b457600080fd5b82356117bf8161177f565b946020939093013593505050565b6000806000606084860312156117e257600080fd5b83356117ed8161177f565b925060208401356117fd8161177f565b929592945050506040919091013590565b60006020828403121561182057600080fd5b5035919050565b60006020828403121561183957600080fd5b8135610f718161177f565b600080600080600080600060e0888a03121561185f57600080fd5b873561186a8161177f565b9650602088013561187a8161177f565b95506040880135945060608801359350608088013560ff8116811461189e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156118ce57600080fd5b82356118d98161177f565b915060208301356118e98161177f565b809150509250929050565b600181811c9082168061190857607f821691505b6020821081036112aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561195357600080fd5b8151610f718161177f565b600060208083526000845481600182811c91508083168061198057607f831692505b85831081036119b6577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b8786018381526020018180156119d35760018114611a0757611a32565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616825284151560051b82019650611a32565b60008b81526020902060005b86811015611a2c57815484820152908501908901611a13565b83019750505b50949998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611a8257611a82611a41565b500390565b60008219821115611a9a57611a9a611a41565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122041b6315d21938121a9851cf76e913f005607b84974ddfbcf3b3bf759ce5a8dfb64736f6c634300080f003360e06040523480156200001157600080fd5b5060405162001222380380620012228339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610db16200047160003960006104b501526000610480015260006101540152610db16000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101cd578063a9059cbb146101e0578063d505accf146101f3578063dd62ed3e1461020657600080fd5b806340c10f191461019057806370a08231146101a557806395d89b41146101c557600080fd5b806323b872dd116100bd57806323b872dd1461013c578063313ce5671461014f5780633644e5151461018857600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610231565b6040516100f99190610a2a565b60405180910390f35b610115610110366004610ac6565b6102bf565b60405190151581526020016100f9565b61012e60025481565b6040519081526020016100f9565b61011561014a366004610af0565b610338565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61012e61047c565b6101a361019e366004610ac6565b6104d7565b005b61012e6101b3366004610b2c565b60036020526000908152604090205481565b6100ec6104e5565b6101a36101db366004610ac6565b6104f2565b6101156101ee366004610ac6565b6104fc565b6101a3610201366004610b4e565b610581565b61012e610214366004610bc1565b600460209081526000928352604080842090915290825290205481565b6000805461023e90610bf4565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610bf4565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103279086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103cc5761039a8382610c76565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610401908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104699087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104b2576104ad610889565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104e18282610923565b5050565b6001805461023e90610bf4565b6104e1828261099c565b3360009081526003602052604081208054839190839061051d908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103279086815260200190565b428410156105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016105fc61047c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9602082015273ffffffffffffffffffffffffffffffffffffffff808d1692820192909252908a1660608201526080810189905260a0810188905260c001604051602081830303815290604052805190602001206040516020016106b69291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610732573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107ad57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016105e7565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516108bb9190610c8d565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109359190610d63565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906109d1908490610c76565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610990565b600060208083528351808285015260005b81811015610a5757858101830151858201604001528201610a3b565b81811115610a69576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ac157600080fd5b919050565b60008060408385031215610ad957600080fd5b610ae283610a9d565b946020939093013593505050565b600080600060608486031215610b0557600080fd5b610b0e84610a9d565b9250610b1c60208501610a9d565b9150604084013590509250925092565b600060208284031215610b3e57600080fd5b610b4782610a9d565b9392505050565b600080600080600080600060e0888a031215610b6957600080fd5b610b7288610a9d565b9650610b8060208901610a9d565b95506040880135945060608801359350608088013560ff81168114610ba457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bd457600080fd5b610bdd83610a9d565b9150610beb60208401610a9d565b90509250929050565b600181811c90821680610c0857607f821691505b602082108103610c41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610c8857610c88610c47565b500390565b600080835481600182811c915080831680610ca957607f831692505b60208084108203610ce1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610cf55760018114610d2857610d55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d55565b60008a81526020902060005b86811015610d4d5781548b820152908501908301610d34565b505084890196505b509498975050505050505050565b60008219821115610d7657610d76610c47565b50019056fea2646970667358221220a211ff0c0cc0b55b4779ce1a573a8bb826b46e808e5015092bacc3b27af7352664736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611eaa806100326000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c8063b4dc00b411610081578063dbb61ee71161005b578063dbb61ee714610235578063e52223bb14610248578063f166d9eb1461026b57600080fd5b8063b4dc00b4146101ca578063c34c08e514610200578063c4d1f8f11461022057600080fd5b80635af099c9116100b25780635af099c91461014357806363a6e3b514610156578063ae5f76fa1461017657600080fd5b80620dd95d146100cd57806303c02f421461010a575b600080fd5b6100e06100db3660046119e8565b61029f565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610135610118366004611a36565b600560209081526000928352604080842090915290825290205481565b604051908152602001610101565b6100e0610151366004611a6f565b6102e4565b610135610164366004611a88565b60086020526000908152604090205481565b610199610184366004611a88565b60036020526000908152604090205460d81b81565b6040517fffffffffff0000000000000000000000000000000000000000000000000000009091168152602001610101565b6100e06101d8366004611aac565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000546100e09073ffffffffffffffffffffffffffffffffffffffff1681565b61023361022e366004611ac9565b61031b565b005b610199610243366004611a6f565b6105c7565b61025b610256366004611a88565b6105fe565b6040519015158152602001610101565b61025b610279366004611b19565b600660209081526000938452604080852082529284528284209052825290205460ff1681565b600460205281600052604060002081815481106102bb57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b600781815481106102f457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610372576040517e37c7b30000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600082600581111561038657610386611b64565b036104195761039481610672565b61040b8173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104069190611b93565b6106de565b610414816107ff565b610571565b600182600581111561042d5761042d611b64565b036104925761043b81610672565b6104898173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b61041481610a83565b60028260058111156104a6576104a6611b64565b036104bd576104b481610672565b61041481610cfc565b60038260058111156104d1576104d1611b64565b036104e8576104df81610672565b61041481611058565b60048260058111156104fc576104fc611b64565b0361054657600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055610571565b600582600581111561055a5761055a611b64565b036105715761056881610672565b610571816112c2565b8073ffffffffffffffffffffffffffffffffffffffff1682600581111561059a5761059a611b64565b6040517f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c9090600090a35050565b600181815481106105d757600080fd5b9060005260206000209060069182820401919006600502915054906101000a900460d81b81565b6007546000901580159061066c575073ffffffffffffffffffffffffffffffffffffffff821660008181526008602052604090205460078054909190811061064857610648611bb0565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b92915050565b8073ffffffffffffffffffffffffffffffffffffffff163b6000036106db576040517f6f46ea7400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b50565b8060005b60058110156107fa5760008282600581106106ff576106ff611bb0565b1a60f81b90507f41000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216108061079657507f5a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b156107f1576040517f3afbb8280000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000085166004820152602401610369565b506001016106e2565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615610916576040517f8806c6660000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000082166004820152602401610369565b7fffffffffff0000000000000000000000000000000000000000000000000000008116600090815260026020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155808452600390925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001660d886901c9081179091556001805480820182559085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600680830491909101805464ffffffffff929093066005026101000a91820219909216920291909117905580517fea6439140000000000000000000000000000000000000000000000000000000081529051919263ea6439149260048084019382900301818387803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16801580610b7757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610bd2576040517f073e07310000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000083166004820152602401610369565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000908116909155938716808452818420805490951660d888901c179094557fffffffffff00000000000000000000000000000000000000000000000000000086168352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905580517fea643914000000000000000000000000000000000000000000000000000000008152905163ea6439149260048084019391929182900301818387803b158015610cdb57600080fd5b505af1158015610cef573d6000803e3d6000fd5b505050506107fa8261148f565b610d05816105fe565b15610d54576040517f224b187700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b600780546001808201835560008390527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790559054610dd29190611bdf565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600860205260408082209390935582517f9459b87500000000000000000000000000000000000000000000000000000000815292519092639459b8759160048083019286929190829003018183875af1158015610e4f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e959190810190611ce8565b805190915060005b81811015610fb0576000838281518110610eb957610eb9611bb0565b6020908102919091018101517fffffffffff0000000000000000000000000000000000000000000000000000008116600081815260048452604081208054600180820183558284529583200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8c1617905591905254909250610f549190611bdf565b7fffffffffff000000000000000000000000000000000000000000000000000000909116600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168452909152902055600101610e9d565b5060008373ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110449190810190611d87565b9050611052848260016115ea565b50505050565b611061816105fe565b6110af576040517f22cd55c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b60008173ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111429190810190611d87565b9050611150828260006115ea565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600860205260408120546007805491929161118990600190611bdf565b8154811061119957611199611bb0565b6000918252602090912001546007805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106111d5576111d5611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600780548061122e5761122e611e45565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff83811683526008909152604080832085905590861682528120556110528461171e565b60015460005b818110156113ce57600060026000600184815481106112e9576112e9611bb0565b6000918252602080832060068084049091015492066005026101000a90910460d81b7fffffffffff00000000000000000000000000000000000000000000000000000016835282019290925260409081019091205490517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911691508190634657b36c90602401600060405180830381600087803b1580156113aa57600080fd5b505af11580156113be573d6000803e3d6000fd5b50505050816001019150506112c8565b5060075460005b81811015611052576000600782815481106113f2576113f2611bb0565b6000918252602090912001546040517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015290911691508190634657b36c90602401600060405180830381600087803b15801561146b57600080fd5b505af115801561147f573d6000803e3d6000fd5b50505050816001019150506113d5565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004602090815260408083208054825181850281018501909352808352919290919083018282801561151f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116114f4575b505083519394506000925050505b818110156110525782818151811061154757611547611bb0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561159b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115e19190810190611ce8565b5060010161152d565b815160005b8181101561171757600084828151811061160b5761160b611bb0565b60209081029190910181015180517fffffffffff000000000000000000000000000000000000000000000000000000908116600090815260068452604080822073ffffffffffffffffffffffffffffffffffffffff8c1680845290865281832085870180517fffffffff0000000000000000000000000000000000000000000000000000000090811686529188529383902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168c1515908117909155865194518451921682529681019690965293955092939116917ff3cdd20c5574ce87c347ea71e37b8fa7a095894be4b7f2bb1533e8d2342965f1910160405180910390a3506001016115ef565b5050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117b39190810190611ce8565b805190915060005b818110156110525760008382815181106117d7576117d7611bb0565b6020908102919091018101517fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004835260408082206005855281832073ffffffffffffffffffffffffffffffffffffffff8b168452909452812054835492945091839061184e90600190611bdf565b8154811061185e5761185e611bb0565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061189e5761189e611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806118f6576118f6611e45565b600082815260208082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908401810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092557fffffffffff00000000000000000000000000000000000000000000000000000095909516815260058552604080822073ffffffffffffffffffffffffffffffffffffffff9384168352909552848120929092558716815291822091909155506001016117bb565b7fffffffffff000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080604083850312156119fb57600080fd5b8235611a06816119ba565b946020939093013593505050565b73ffffffffffffffffffffffffffffffffffffffff811681146106db57600080fd5b60008060408385031215611a4957600080fd5b8235611a54816119ba565b91506020830135611a6481611a14565b809150509250929050565b600060208284031215611a8157600080fd5b5035919050565b600060208284031215611a9a57600080fd5b8135611aa581611a14565b9392505050565b600060208284031215611abe57600080fd5b8135611aa5816119ba565b60008060408385031215611adc57600080fd5b823560068110611a5457600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080600060608486031215611b2e57600080fd5b8335611b39816119ba565b92506020840135611b4981611a14565b91506040840135611b5981611aeb565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215611ba557600080fd5b8151611aa5816119ba565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082821015611c18577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611c6f57611c6f611c1d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611cbc57611cbc611c1d565b604052919050565b600067ffffffffffffffff821115611cde57611cde611c1d565b5060051b60200190565b60006020808385031215611cfb57600080fd5b825167ffffffffffffffff811115611d1257600080fd5b8301601f81018513611d2357600080fd5b8051611d36611d3182611cc4565b611c75565b81815260059190911b82018301908381019087831115611d5557600080fd5b928401925b82841015611d7c578351611d6d816119ba565b82529284019290840190611d5a565b979650505050505050565b60006020808385031215611d9a57600080fd5b825167ffffffffffffffff811115611db157600080fd5b8301601f81018513611dc257600080fd5b8051611dd0611d3182611cc4565b81815260069190911b82018301908381019087831115611def57600080fd5b928401925b82841015611d7c5760408489031215611e0d5760008081fd5b611e15611c4c565b8451611e20816119ba565b815284860151611e2f81611aeb565b8187015282526040939093019290840190611df4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220da155c75aff1987347cd8c8703a6eef45da0f991c20678951a039e404be7c5a064736f6c634300080f00336080604052600160055534801561001557600080fd5b50604051620021113803806200211183398101604081905261003691610060565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b179055610090565b60006020828403121561007257600080fd5b81516001600160a01b038116811461008957600080fd5b9392505050565b61207180620000a06000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80634aae164b116100d8578063d4aae0c41161008c578063f5b92c7311610066578063f5b92c731461038a578063fb393f241461039d578063ffa1ad74146103b057600080fd5b8063d4aae0c41461032a578063e6eb207a1461036f578063ea6439141461038257600080fd5b80635f0736a1116100bd5780635f0736a1146102d9578063724000c1146103045780638b7f3fb91461031757600080fd5b80634aae164b146102be57806351b42b00146102d157600080fd5b80631ff517ff1161012f5780632f42aef5116101145780632f42aef51461026d57806332b43ad2146102805780634657b36c146102ab57600080fd5b80631ff517ff1461022257806328a4ace51461024257600080fd5b80630f15f4c0116101605780630f15f4c0146101cb57806315226b54146101d35780631ae7ec2e146101f457600080fd5b806301a91e5c1461017c57806302fb0c5e14610191575b600080fd5b61018f61018a366004611e9d565b6103c5565b005b6000546101b69074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61018f6105a4565b6101e66101e1366004611ede565b610708565b6040519081526020016101c2565b6040517f545253525900000000000000000000000000000000000000000000000000000081526020016101c2565b6101e6610230366004611ede565b60036020526000908152604090205481565b6101e6610250366004611f02565b600460209081526000928352604080842090915290825290205481565b61018f61027b366004611e9d565b6107b8565b6101e661028e366004611f02565b600260209081526000928352604080842090915290825290205481565b61018f6102b9366004611ede565b610a19565b61018f6102cc366004611e9d565b610ab3565b61018f610d04565b6101e66102e7366004611f02565b600160209081526000928352604080842090915290825290205481565b61018f610312366004611f3b565b610e51565b61018f610325366004611e9d565b6110ff565b60005461034a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c2565b61018f61037d366004611e9d565b6112ea565b61018f611512565b61018f610398366004611e9d565b611567565b61018f6103ab366004611e9d565b6119bf565b604080516001815260006020820152016101c2565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190611f67565b6104ed576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600090815260026020908152604080832093861683529290529081205461052d908390611fb8565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917f9afc1acde4b7ec0d84d924e5b530aecfb57d117a7122b80904cb9912badbff5991015b60405180910390a350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611f67565b6106c7576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b73ffffffffffffffffffffffffffffffffffffffff81166000818152600360205260408082205490517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152919290916370a0823190602401602060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611fd0565b6107b29190611fb8565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190611f67565b6108db576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff1661092f576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091528120805483929061096f908490611fe9565b90915550610996905073ffffffffffffffffffffffffffffffffffffffff83168483611b8f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e84604051610a0c91815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a6c576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190611f67565b610bd6576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260046020908152604080832093871683529290522080549082905581811015610c6057610c208183611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c55908490611fb8565b90915550610ca59050565b610c6a8282611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c9f908490611fe9565b90915550505b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4417d205f6349e66a581332b36195e74d10f878e80db907b4fd3a814aad4049d8460405161059691815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def9190611f67565b610e27576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c9190611f67565b610f74576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff16610fc8576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281208054839290611008908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526004602090815260408083203384529091528120805483929061104d908490611fb8565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290611087908490611fb8565b909155506110ae905073ffffffffffffffffffffffffffffffffffffffff83163383611b8f565b604051818152339073ffffffffffffffffffffffffffffffffffffffff8416907f7f04a714958851e1d87b504651ba77ab02f62bae8879f577bf3e07cf8567aba29060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190611f67565b611222576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908282111561126f5761126a8383611fe9565b611272565b60005b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f40730d80659c76c95521f0340872d27fdc8b3c47befe2ca569d2c2eedc8a049e91015b60405180910390a35050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190611f67565b61140d576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908261146e837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fe9565b11156114835761147e8383611fb8565b6114a5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f8bbc2784c9e4073e20f60d8c7218cbd211c43ca2ee041bc037f977693a0c8c1b91016112db565b60005473ffffffffffffffffffffffffffffffffffffffff163314611565576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561162e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116529190611f67565b61168a576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b6005546001146116f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104e4565b600260055573ffffffffffffffffffffffffffffffffffffffff80831660009081526004602090815260408083209387168352929052908120549003611768576040517fa4255dc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f99190611fd0565b905061181d73ffffffffffffffffffffffffffffffffffffffff8416333085611cff565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090829073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa15801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b09190611fd0565b6118ba9190611fe9565b9050828111156118c75750815b73ffffffffffffffffffffffffffffffffffffffff80851660009081526004602090815260408083209389168352929052908120805483929061190b908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054839290611945908490611fe9565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf836040516119ab91815260200190565b60405180910390a350506001600555505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015611a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaa9190611f67565b611ae2576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260209081526040808320938616835292905290812054611b22908390611fe9565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917fbb8caa1e59333c99899b67ccacb2b942c5a5ebf1a2bff4932b50274da81fe8d59101610596565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611c269190612000565b6000604051808303816000865af19150503d8060008114611c63576040519150601f19603f3d011682016040523d82523d6000602084013e611c68565b606091505b5091509150818015611c92575080511580611c92575080806020019051810190611c929190611f67565b611cf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104e4565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611d9e9190612000565b6000604051808303816000865af19150503d8060008114611ddb576040519150601f19603f3d011682016040523d82523d6000602084013e611de0565b606091505b5091509150818015611e0a575080511580611e0a575080806020019051810190611e0a9190611f67565b611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104e4565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611e9a57600080fd5b50565b600080600060608486031215611eb257600080fd5b8335611ebd81611e78565b92506020840135611ecd81611e78565b929592945050506040919091013590565b600060208284031215611ef057600080fd5b8135611efb81611e78565b9392505050565b60008060408385031215611f1557600080fd5b8235611f2081611e78565b91506020830135611f3081611e78565b809150509250929050565b60008060408385031215611f4e57600080fd5b8235611f5981611e78565b946020939093013593505050565b600060208284031215611f7957600080fd5b81518015158114611efb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611fcb57611fcb611f89565b500190565b600060208284031215611fe257600080fd5b5051919050565b600082821015611ffb57611ffb611f89565b500390565b6000825160005b818110156120215760208186018101518583015201612007565b81811115612030576000828501525b50919091019291505056fea26469706673582212206634c68cd62b3d0f45d7635a2fd1aa8019825f1f21deea0c546dc1f7677635a164736f6c634300080f0033608060405234801561001057600080fd5b5060405161116c38038061116c83398101604081905261002f91610085565b600080546001600160a01b039384166001600160a01b0319909116179055600180546001600160a81b0319169190921617600160a01b1790556100bf565b6001600160a01b038116811461008257600080fd5b50565b6000806040838503121561009857600080fd5b82516100a38161006d565b60208401519092506100b48161006d565b809150509250929050565b61109e806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806351b42b001161008c578063bbaed5cb11610066578063bbaed5cb14610228578063d4aae0c41461023b578063ea6439141461025b578063ffa1ad741461026357600080fd5b806351b42b00146101ad578063664aecb0146101b5578063a29a0d90146101e357600080fd5b80631ae7ec2e116100c85780631ae7ec2e146101465780631b0a68f214610174578063359fe780146101875780634657b36c1461019a57600080fd5b80630152a5ea146100ef57806302fb0c5e146101045780630f15f4c01461013e575b600080fd5b6101026100fd366004610f98565b610278565b005b6001546101299074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61010261050b565b6040517f4d494e54520000000000000000000000000000000000000000000000000000008152602001610135565b610102610182366004610f98565b61066f565b610102610195366004610f98565b61083f565b6101026101a8366004610fc4565b610a49565b610102610ae3565b6101d56101c3366004610fc4565b60026020526000908152604090205481565b604051908152602001610135565b6001546102039073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610135565b610102610236366004610f98565b610c30565b6000546102039073ffffffffffffffffffffffffffffffffffffffff1681565b610102610f1e565b60408051600181526000602082015201610135565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190610fe8565b6103a0576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b60015474010000000000000000000000000000000000000000900460ff166103f4576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361042e576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f79cc679000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906379cc679090604401600060405180830381600087803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b505060405183815273ffffffffffffffffffffffffffffffffffffffff851692503391507fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b94539060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f69190610fe8565b61062e576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610fe8565b610792576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490828211156107d0576107cb8383611039565b6107d3565b60005b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f08c666f5d7ad747c595b189947464cfac5e56befa6bd12ced49a49adb3f8166d906108319084815260200190565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190610fe8565b610962576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490826109b4837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611039565b11156109c9576109c48383611050565b6109eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f2f612f30164b43d77b321f13922cb2190f7f7956b9483d817271d30679a1aa7b906108319084815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a9c576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610fe8565b610c06576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190610fe8565b610d53576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b60015474010000000000000000000000000000000000000000900460ff16610da7576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610de1576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090205481811015610e2b576040517fd20075ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090819020838303905560015490517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610eb457600080fd5b505af1158015610ec8573d6000803e3d6000fd5b505060405184815273ffffffffffffffffffffffffffffffffffffffff861692503391507fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89060200160405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f71576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b565b73ffffffffffffffffffffffffffffffffffffffff81168114610f9557600080fd5b50565b60008060408385031215610fab57600080fd5b8235610fb681610f73565b946020939093013593505050565b600060208284031215610fd657600080fd5b8135610fe181610f73565b9392505050565b600060208284031215610ffa57600080fd5b81518015158114610fe157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561104b5761104b61100a565b500390565b600082198211156110635761106361100a565b50019056fea26469706673582212201993dbcafb4ea2c30aab7698fb16e989fa8c88b736ca2bc4e2d2383cdf01a68064736f6c634300080f0033608060405234801561001057600080fd5b50604051610b11380380610b1183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610a7e806100936000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063d09a20c511610076578063ea6439141161005b578063ea643914146101c7578063f6ba0007146101cf578063ffa1ad74146101e257600080fd5b8063d09a20c51461016f578063d4aae0c41461018257600080fd5b80634657b36c116100a75780634657b36c1461010b578063656361ff1461011e578063ac4ab3fb1461013157600080fd5b80631ae7ec2e146100c357806340e312f8146100f6575b600080fd5b6040517f524f4c455300000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b610109610104366004610939565b6101f7565b005b610109610119366004610977565b610375565b61010961012c36600461099b565b61040f565b61015f61013f3660046109cb565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ed565b61010961017d36600461099b565b61064a565b6000546101a29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b6101096106b7565b6101096101dd36600461099b565b61070c565b604080516001815260006020820152016100ed565b60005b6020811015610371576000828260208110610217576102176109f7565b1a60f81b90507f61000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610806102ae57507f7a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b80156102fc57507f5f000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821614155b801561032957507fff00000000000000000000000000000000000000000000000000000000000000811615155b15610368576040517f0eebce88000000000000000000000000000000000000000000000000000000008152600481018490526024015b60405180910390fd5b506001016101fa565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103c8576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610a26565b610532576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16156105bc576040517fbfa0c12400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b6105c5826101f7565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020818152604080842087855290915280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169092179091555184917f2ae6a113c0ed5b78a53413ffbb7679881f11145ccfba4fb92e863dfcd5a1d2f391a35050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16610371576040517f7de30f410000000000000000000000000000000000000000000000000000000081526004810183905260240161035f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461070a576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190610a26565b61082f576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff166108b8576040517fb2a720cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020908152604080832086845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555184917f155aaafb6329a2098580462df33ec4b7441b19729b9601c5fc17ae1cf99a8a5291a35050565b60006020828403121561094b57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461097457600080fd5b50565b60006020828403121561098957600080fd5b813561099481610952565b9392505050565b600080604083850312156109ae57600080fd5b8235915060208301356109c081610952565b809150509250929050565b600080604083850312156109de57600080fd5b82356109e981610952565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a3857600080fd5b8151801515811461099457600080fdfea26469706673582212204a2123866fc4f0206298105956e8d49e6e18ef63350ef4ff4f3ce47b11f9527764736f6c634300080f0033608060405234801561001057600080fd5b5060405161150e38038061150e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61147b806100936000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806380cee4ab1161008c578063c12954fa11610066578063c12954fa146101e8578063d4aae0c4146101f0578063ec3984f614610210578063fc0e74d11461021857600080fd5b806380cee4ab14610193578063923cb952146101b35780639459b875146101d357600080fd5b80634657b36c116100c85780634657b36c1461011e5780634674546814610131578063577de7d0146101395780635924be701461017e57600080fd5b806301ffa059146100ef5780631ef3755d146100f957806322f3e2d414610101575b600080fd5b6100f7610220565b005b6100f7610357565b6101096104ed565b60405190151581526020015b60405180910390f35b6100f761012c366004611278565b610585565b6100f7610624565b6003546101599073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610115565b610186610738565b604051610115919061129c565b6002546101599073ffffffffffffffffffffffffffffffffffffffff1681565b6001546101599073ffffffffffffffffffffffffffffffffffffffff1681565b6101db610a81565b604051610115919061132f565b6100f7610d0e565b6000546101599073ffffffffffffffffffffffffffffffffffffffff1681565b6100f7610da0565b6100f7610eb4565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f72657374617274000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156102b257600080fd5b505af11580156102c6573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b505af1158015610348573d6000803e3d6000fd5b50505050610354610fc8565b50565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f72657374617274000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156103e957600080fd5b505af11580156103fd573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561046b57600080fd5b505af115801561047f573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190611395565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105dd576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e0000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b60606000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd91906113b7565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086291906113b7565b60408051600480825260a08201909252919250816020015b604080518082019091526000808252602082015281526020019060019003908161087a575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000841681527f51b42b00000000000000000000000000000000000000000000000000000000006020820152815191945090849060009061090c5761090c6113f9565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630f15f4c060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525083600181518110610983576109836113f9565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016351b42b0060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836002815181106109fa576109fa6113f9565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630f15f4c060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525083600381518110610a7157610a716113f9565b6020026020010181905250505090565b604080516003808252608082019092526060916020820183803683370190505090507f545253525900000000000000000000000000000000000000000000000000000081600081518110610ad757610ad76113f9565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610b2f7f4d494e545200000000000000000000000000000000000000000000000000000090565b81600181518110610b4257610b426113f9565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610b9a7f524f4c455300000000000000000000000000000000000000000000000000000090565b81600281518110610bad57610bad6113f9565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610c1a81600081518110610c0d57610c0d6113f9565b6020026020010151611128565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c7081600181518110610c0d57610c0d6113f9565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cc681600281518110610c0d57610c0d6113f9565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f72657374617274000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561046b57600080fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e0000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610e3257600080fd5b505af1158015610e46573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e0000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610f4657600080fd5b505af1158015610f5a573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106b657600080fd5b600254604080517f02fb0c5e00000000000000000000000000000000000000000000000000000000815290517f4e3bf9f8dfd7253fb755f99807f80c9c14d9ed0a71f36ede9c8e11606996c4799273ffffffffffffffffffffffffffffffffffffffff16916302fb0c5e9160048083019260209291908290030181865afa158015611057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107b9190611395565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110c9190611395565b60408051921515835290151560208301520160405180910390a1565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190611428565b905073ffffffffffffffffffffffffffffffffffffffff8116611250576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016105d4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461035457600080fd5b60006020828403121561128a57600080fd5b813561129581611256565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561132257815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff00000000000000000000000000000000000000000000000000000000168685015292840192908501906001016112b9565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156113895783517fffffffffff000000000000000000000000000000000000000000000000000000168352928401929184019160010161134b565b50909695505050505050565b6000602082840312156113a757600080fd5b8151801515811461129557600080fd5b6000602082840312156113c957600080fd5b81517fffffffffff0000000000000000000000000000000000000000000000000000008116811461129557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561143a57600080fd5b81516112958161125656fea2646970667358221220ad0382473fd6854aee42693a53434a3e790ca7526629994a6fc4dbefa02e978864736f6c634300080f0033608060405234801561001057600080fd5b50604051610caa380380610caa83398101604081905261002f9161005d565b600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b610c0e8061009c6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806372b0bb4911610081578063d4aae0c41161005b578063d4aae0c4146101c8578063d547741f146101e8578063f851a440146101fb57600080fd5b806372b0bb491461018b578063923cb952146101935780639459b875146101b357600080fd5b80633ea26384116100b25780633ea263841461011e5780634657b36c146101635780635924be701461017657600080fd5b806303346696146100d957806322f3e2d4146100ee5780632f2ff15d1461010b575b600080fd5b6100ec6100e7366004610a1d565b61021b565b005b6100f66102db565b60405190151581526020015b60405180910390f35b6100ec610119366004610a41565b610373565b60025461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610102565b6100ec610171366004610a1d565b610455565b61017e6104f4565b6040516101029190610a71565b6100ec610645565b60035461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb61070f565b6040516101029190610b04565b60005461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ec6101f6366004610a41565b61081a565b60015461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff16331461026c576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa2c5878324891aaeaaa631341c00e3c30a2b70c1b6a1e9411b903402d40df5c990600090a250565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610b6a565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103c4576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517f656361ff0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063656361ff906044015b600060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104ad576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051600280825260608281019093527f524f4c45530000000000000000000000000000000000000000000000000000009190602082015b604080518082019091526000808252602082015281526020019060019003908161052d575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000831681527f656361ff00000000000000000000000000000000000000000000000000000000602082015281519193509083906000906105bf576105bf610b8c565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163f6ba000760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260018151811061063657610636610b8c565b60200260200101819052505090565b60025473ffffffffffffffffffffffffffffffffffffffff163314610696576040517fc5c898b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280546001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040517fecf24556cb4f08854c12350ad47cc1bf4bfe9ada0935ffb3d3de5f2f3f5a0ad690600090a2565b604080516001808252818301909252606091602080830190803683370190505090507f524f4c45530000000000000000000000000000000000000000000000000000008160008151811061076557610765610b8c565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506107d2816000815181106107c5576107c5610b8c565b60200260200101516108ca565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b60015473ffffffffffffffffffffffffffffffffffffffff16331461086b576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517ff6ba00070000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063f6ba00079060440161041f565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190610bbb565b905073ffffffffffffffffffffffffffffffffffffffff81166109f2576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016104a4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a1a57600080fd5b50565b600060208284031215610a2f57600080fd5b8135610a3a816109f8565b9392505050565b60008060408385031215610a5457600080fd5b823591506020830135610a66816109f8565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610af757815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101610a8e565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610b5e5783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101610b20565b50909695505050505050565b600060208284031215610b7c57600080fd5b81518015158114610a3a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610bcd57600080fd5b8151610a3a816109f856fea264697066735822122001208111947b361206645450d449a9dd0789147dbff53a2ceda894ae5da69b6664736f6c634300080f0033a2646970667358221220c535ec1440b87e44c2db67aad0429d96d43d1c6ba833c7009c87b5ce81d5ac8564736f6c634300080f0033",
    "sourceMap": "1055:20965:168:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;1055:20965:168;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "ModuleTestFixtureGenerator": [
          {
            "start": 2500,
            "length": 20
          },
          {
            "start": 2756,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200014f5760003560e01c80637126037d11620000c0578063bc7b2b71116200008b578063f6d04033116200006e578063f6d040331462000236578063f8ccbf471462000240578063fa7626d4146200025457600080fd5b8063bc7b2b711462000218578063c7d81eff146200022257600080fd5b80637126037d14620001df5780637fa1aaf914620001e957806385a3bdf314620001f3578063ba414fa614620001fd57600080fd5b806337d35213116200011e5780634233f1cd11620001015780634233f1cd14620001c15780635661fc8414620001cb5780636e40699f14620001d557600080fd5b806337d35213146200017e5780633a768463146200018857600080fd5b80630a9254e41462000154578063238a174f1462000160578063319cb870146200016a57806333038d191462000174575b600080fd5b6200015e62000262565b005b6200015e6200141a565b6200015e62001984565b6200015e62001e2f565b6200015e62002a6d565b620001a4737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6200015e6200304a565b6200015e62003426565b6200015e62003e3a565b6200015e62004216565b6200015e620052c7565b6200015e62006331565b6200020762006c24565b6040519015158152602001620001b8565b6200015e62006d8e565b600854620001a4906001600160a01b031681565b6200015e620072aa565b600054620002079062010000900460ff1681565b600054620002079060ff1681565b6040517fe5d6bf02000000000000000000000000000000000000000000000000000000008152635fdd42806004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e5d6bf0290602401600060405180830381600087803b158015620002cc57600080fd5b505af1158015620002e1573d6000803e3d6000fd5b50505050604051620002f39062007bc7565b604051809103906000f08015801562000310573d6000803e3d6000fd5b50600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040517f780900dc000000000000000000000000000000000000000000000000000000008152600360048201526000919063780900dc906024016000604051808303816000875af1158015620003a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052620003ea919081019062007c9a565b90508060008151811062000402576200040262007d8b565b6020026020010151600960006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060018151811062000446576200044662007d8b565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806002815181106200048a576200048a62007d8b565b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550506000604051620004c99062007bd5565b6001600160a01b039091168152602001604051809103906000f080158015620004f6573d6000803e3d6000fd5b50600f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691821790556040516200053c9062007be3565b6001600160a01b039091168152602001604051809103906000f08015801562000569573d6000803e3d6000fd5b50600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055604051601290620005b39062007bf1565b60608082526007908201527f5265736572766500000000000000000000000000000000000000000000000000608082015260a0602082018190526003908201527f525356000000000000000000000000000000000000000000000000000000000060c082015260ff909116604082015260e001604051809103906000f08015801562000643573d6000803e3d6000fd5b50600d80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790556040516200068a9062007bff565b604051809103906000f080158015620006a7573d6000803e3d6000fd5b50600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169182179055604051620006ed9062007c0d565b6001600160a01b039091168152602001604051809103906000f0801580156200071a573d6000803e3d6000fd5b50601080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e54600c54604051918316921690620007699062007c1b565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200079d573d6000803e3d6000fd5b50601180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e54604051911690620007e69062007c29565b6001600160a01b039091168152602001604051809103906000f08015801562000813573d6000803e3d6000fd5b50601280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e546040519116906200085c9062007c37565b6001600160a01b039091168152602001604051809103906000f08015801562000889573d6000803e3d6000fd5b50601380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e54604051911690620008d29062007c45565b6001600160a01b039091168152602001604051809103906000f080158015620008ff573d6000803e3d6000fd5b50601480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601054604080518082018252601181527f476f65726c6944616f5472656173757279000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$__93639049957993620009bc9391169160040162007e35565b602060405180830381865af4158015620009da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a00919062007e61565b601580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601154604080518082018252600c81527f476f65726c694d696e7465720000000000000000000000000000000000000000602082015290517f9049957900000000000000000000000000000000000000000000000000000000815273__$6a18d296e27eadcc0fe82d65240272eaa9$__9363904995799362000abc9391169160040162007e35565b602060405180830381865af415801562000ada573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b00919062007e61565b601680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600e546010546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081529183169263c4d1f8f19262000b7d92600092169060040162007e86565b600060405180830381600087803b15801562000b9857600080fd5b505af115801562000bad573d6000803e3d6000fd5b5050600e546011546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000c0292600092169060040162007e86565b600060405180830381600087803b15801562000c1d57600080fd5b505af115801562000c32573d6000803e3d6000fd5b5050600e546012546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000c8792600092169060040162007e86565b600060405180830381600087803b15801562000ca257600080fd5b505af115801562000cb7573d6000803e3d6000fd5b5050600e546013546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000d0c92600292169060040162007e86565b600060405180830381600087803b15801562000d2757600080fd5b505af115801562000d3c573d6000803e3d6000fd5b5050600e546014546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000d9192600292169060040162007e86565b600060405180830381600087803b15801562000dac57600080fd5b505af115801562000dc1573d6000803e3d6000fd5b5050600e546015546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000e1692600292169060040162007e86565b600060405180830381600087803b15801562000e3157600080fd5b505af115801562000e46573d6000803e3d6000fd5b5050600e546016546040517fc4d1f8f10000000000000000000000000000000000000000000000000000000081526001600160a01b03928316945063c4d1f8f1935062000e9b92600292169060040162007e86565b600060405180830381600087803b15801562000eb657600080fd5b505af115801562000ecb573d6000803e3d6000fd5b5050601454600b546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562000f5857600080fd5b505af115801562000f6d573d6000803e3d6000fd5b5050601454600a546040517f2f2ff15d0000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f7265737461727400000000000000000000000000000060048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562000ffa57600080fd5b505af11580156200100f573d6000803e3d6000fd5b5050601154600f546200103793506001600160a01b03908116925063fbfa77cf911662007755565b600d546010546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015269d3c21bcecceda100000060248201529116906340c10f1990604401600060405180830381600087803b158015620010aa57600080fd5b505af1158015620010bf573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200111d57600080fd5b505af115801562001132573d6000803e3d6000fd5b50506011546016546040517f359fe7800000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529116925063359fe7809150604401600060405180830381600087803b158015620011bf57600080fd5b505af1158015620011d4573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200123257600080fd5b505af115801562001247573d6000803e3d6000fd5b5050601054601554600d546040517fe6eb207a0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60448201529116925063e6eb207a9150606401600060405180830381600087803b158015620012df57600080fd5b505af1158015620012f4573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200135257600080fd5b505af115801562001367573d6000803e3d6000fd5b5050601054601554600d546040517f01a91e5c0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6044820152911692506301a91e5c9150606401600060405180830381600087803b158015620013ff57600080fd5b505af115801562001414573d6000803e3d6000fd5b50505050565b601154604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620014ac926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014a6919062007eda565b6200785c565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162001512926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b604080517f656d657267656e63795f73687574646f776e000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390620015ea90849060040162007efe565b600060405180830381600087803b1580156200160557600080fd5b505af11580156200161a573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200167857600080fd5b505af11580156200168d573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620016e257600080fd5b505af1158015620016f7573d6000803e3d6000fd5b5050505062001753601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620017b9926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200181357600080fd5b505af115801562001828573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200187d57600080fd5b505af115801562001892573d6000803e3d6000fd5b505050506200191b601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001914919062007eda565b156200785c565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162001981926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b50565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620019de57600080fd5b505af1158015620019f3573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a4857600080fd5b505af115801562001a5d573d6000803e3d6000fd5b5050505062001ab9601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b604080517f656d657267656e63795f7265737461727400000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062001b9190849060040162007efe565b600060405180830381600087803b15801562001bac57600080fd5b505af115801562001bc1573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001c1f57600080fd5b505af115801562001c34573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663c12954fa6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001c8957600080fd5b505af115801562001c9e573d6000803e3d6000fd5b5050505062001cfa601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562001d5457600080fd5b505af115801562001d69573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663c12954fa6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001dbe57600080fd5b505af115801562001dd3573d6000803e3d6000fd5b5050505062001981601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562001e8957600080fd5b505af115801562001e9e573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b15801562001f0f57600080fd5b505af115801562001f24573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562001f8257600080fd5b505af115801562001f97573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001fec57600080fd5b505af115801562002001573d6000803e3d6000fd5b505050506200205d601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620021059185910162007efe565b600060405180830381600087803b1580156200212057600080fd5b505af115801562002135573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200219357600080fd5b505af1158015620021a8573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200221957600080fd5b505af11580156200222e573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620022b69450911691506370a08231906024015b602060405180830381865afa15801562002285573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022ab919062007f13565b633b9aca00620078d4565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200231057600080fd5b505af115801562002325573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af11580156200239b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c1919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906200241490849060040162007efe565b600060405180830381600087803b1580156200242f57600080fd5b505af115801562002444573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620024a257600080fd5b505af1158015620024b7573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b1580156200252857600080fd5b505af11580156200253d573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200257b9450911691506370a082319060240162002267565b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620025d557600080fd5b505af1158015620025ea573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663c12954fa6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200263f57600080fd5b505af115801562002654573d6000803e3d6000fd5b50505050620026b0601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200270a57600080fd5b505af11580156200271f573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200279057600080fd5b505af1158015620027a5573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200282d9450911691506370a08231906024015b602060405180830381865afa158015620027fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002822919062007f13565b6377359400620078d4565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200288757600080fd5b505af11580156200289c573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af115801562002912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002938919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa7906024015b600060405180830381600087803b1580156200299457600080fd5b505af1158015620029a9573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b15801562002a1a57600080fd5b505af115801562002a2f573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620019819450911691506370a082319060240162002267565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002ac757600080fd5b505af115801562002adc573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002b3157600080fd5b505af115801562002b46573d6000803e3d6000fd5b5050505062002ba2601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162002c08926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b604080517f656d657267656e63795f7265737461727400000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062002ce090849060040162007efe565b600060405180830381600087803b15801562002cfb57600080fd5b505af115801562002d10573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562002d6e57600080fd5b505af115801562002d83573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002dd857600080fd5b505af115801562002ded573d6000803e3d6000fd5b5050505062002e49601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162002eaf926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002f0957600080fd5b505af115801562002f1e573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002f7357600080fd5b505af115801562002f88573d6000803e3d6000fd5b5050505062002fe4601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162001981926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b601154604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620030b0926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b604080517f656d657267656e63795f73687574646f776e000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906200318890849060040162007efe565b600060405180830381600087803b158015620031a357600080fd5b505af1158015620031b8573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200321657600080fd5b505af11580156200322b573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200328057600080fd5b505af115801562003295573d6000803e3d6000fd5b50505050620032f1601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200334b57600080fd5b505af115801562003360573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620033b557600080fd5b505af1158015620033ca573d6000803e3d6000fd5b5050505062001981601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200348057600080fd5b505af115801562003495573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620034ea57600080fd5b505af1158015620034ff573d6000803e3d6000fd5b505050506200355b601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620036039185910162007efe565b600060405180830381600087803b1580156200361e57600080fd5b505af115801562003633573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200369157600080fd5b505af1158015620036a6573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b1580156200372657600080fd5b505af11580156200373b573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b039182166004820152620037c09450911691506370a08231906024015b602060405180830381865afa15801562003792573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037b8919062007f13565b6000620078d4565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200381a57600080fd5b505af11580156200382f573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506200388590849060040162007efe565b600060405180830381600087803b158015620038a057600080fd5b505af1158015620038b5573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b1580156200392a57600080fd5b505af11580156200393f573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b0391821660048201526200397d9450911691506370a082319060240162003774565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620039dd9291909116906328a4ace59060440162003774565b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562003a3757600080fd5b505af115801562003a4c573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166301ffa0596040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003aa157600080fd5b505af115801562003ab6573d6000803e3d6000fd5b5050505062003b12601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562003b6c57600080fd5b505af115801562003b81573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b15801562003c0157600080fd5b505af115801562003c16573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b03918216600482015262003ca29450911691506370a08231906024015b602060405180830381865afa15801562003c6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c93919062007f13565b670de0b6b3a7640000620078d4565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa7906024015b600060405180830381600087803b15801562003cfd57600080fd5b505af115801562003d12573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b15801562003d8757600080fd5b505af115801562003d9c573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b03918216600482015262003dda9450911691506370a082319060240162003c4f565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620019819291909116906328a4ace59060440162003c4f565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162003ea0926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b604080517f656d657267656e63795f73687574646f776e000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062003f7890849060040162007efe565b600060405180830381600087803b15801562003f9357600080fd5b505af115801562003fa8573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200400657600080fd5b505af11580156200401b573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200407057600080fd5b505af115801562004085573d6000803e3d6000fd5b50505050620040e1601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200413b57600080fd5b505af115801562004150573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620041a557600080fd5b505af1158015620041ba573d6000803e3d6000fd5b5050505062001981601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200427057600080fd5b505af115801562004285573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b158015620042f657600080fd5b505af11580156200430b573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200436957600080fd5b505af11580156200437e573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620043d357600080fd5b505af1158015620043e8573d6000803e3d6000fd5b5050505062004444601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e0000000000000000000000000000000000000000000000000000000081529051620044aa926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620045529185910162007efe565b600060405180830381600087803b1580156200456d57600080fd5b505af115801562004582573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620045e057600080fd5b505af1158015620045f5573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200466657600080fd5b505af11580156200467b573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620046b99450911691506370a082319060240162002267565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200471357600080fd5b505af115801562004728573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af11580156200479e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047c4919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906200481790849060040162007efe565b600060405180830381600087803b1580156200483257600080fd5b505af115801562004847573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620048a557600080fd5b505af1158015620048ba573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b1580156200492b57600080fd5b505af115801562004940573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200497e9450911691506370a082319060240162002267565b506040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39162004a279185910162007efe565b600060405180830381600087803b15801562004a4257600080fd5b505af115801562004a57573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562004ab557600080fd5b505af115801562004aca573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b15801562004b4a57600080fd5b505af115801562004b5f573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b03918216600482015262004b9d9450911691506370a082319060240162003774565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562004bf757600080fd5b505af115801562004c0c573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062004c6290849060040162007efe565b600060405180830381600087803b15801562004c7d57600080fd5b505af115801562004c92573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b15801562004d0757600080fd5b505af115801562004d1c573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b03918216600482015262004d5a9450911691506370a082319060240162003774565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015262004dba9291909116906328a4ace59060440162003774565b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562004e1457600080fd5b505af115801562004e29573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562004e7e57600080fd5b505af115801562004e93573d6000803e3d6000fd5b5050505062004eef601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162004f55926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562004faf57600080fd5b505af115801562004fc4573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200503557600080fd5b505af11580156200504a573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620050889450911691506370a0823190602401620027de565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620050e257600080fd5b505af1158015620050f7573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af11580156200516d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005193919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620051ee57600080fd5b505af115801562005203573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b1580156200527457600080fd5b505af115801562005289573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b03918216600482015262003b129450911691506370a082319060240162002267565b601154604080517f02fb0c5e00000000000000000000000000000000000000000000000000000000815290516200532d926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162005393926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620053ed57600080fd5b505af115801562005402573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152637735940060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200547357600080fd5b505af115801562005488573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620054c69450911691506370a0823190602401620027de565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200552057600080fd5b505af115801562005535573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af1158015620055ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620055d1919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200562c57600080fd5b505af115801562005641573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b158015620056b257600080fd5b505af1158015620056c7573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620057059450911691506370a082319060240162002267565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200575f57600080fd5b505af115801562005774573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b158015620057f457600080fd5b505af115801562005809573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b039182166004820152620058479450911691506370a082319060240162003c4f565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620058a157600080fd5b505af1158015620058b6573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b1580156200592b57600080fd5b505af115801562005940573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b0391821660048201526200597e9450911691506370a082319060240162003c4f565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620059de9291909116906328a4ace59060440162003c4f565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005a3857600080fd5b505af115801562005a4d573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663fc0e74d16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562005aa257600080fd5b505af115801562005ab7573d6000803e3d6000fd5b5050505062005b13601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162005b79926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39162005c219185910162007efe565b600060405180830381600087803b15801562005c3c57600080fd5b505af115801562005c51573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562005caf57600080fd5b505af115801562005cc4573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b15801562005d3557600080fd5b505af115801562005d4a573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b03918216600482015262005d889450911691506370a082319060240162002267565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005de257600080fd5b505af115801562005df7573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af115801562005e6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e93919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062005ee690849060040162007efe565b600060405180830381600087803b15801562005f0157600080fd5b505af115801562005f16573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801562005f7457600080fd5b505af115801562005f89573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b15801562005ffa57600080fd5b505af11580156200600f573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b0391821660048201526200604d9450911691506370a082319060240162002267565b506040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620060f69185910162007efe565b600060405180830381600087803b1580156200611157600080fd5b505af115801562006126573d6000803e3d6000fd5b505060155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200618457600080fd5b505af115801562006199573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b1580156200621957600080fd5b505af11580156200622e573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b0391821660048201526200626c9450911691506370a082319060240162003c4f565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620062c657600080fd5b505af1158015620062db573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb3915062003ce290849060040162007efe565b601154604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162006397926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620063f157600080fd5b505af115801562006406573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152637735940060248201529116925063bbaed5cb9150604401600060405180830381600087803b1580156200647757600080fd5b505af11580156200648c573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620064ca9450911691506370a0823190602401620027de565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200652457600080fd5b505af115801562006539573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af1158015620065af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620065d5919062007eda565b5060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200663057600080fd5b505af115801562006645573d6000803e3d6000fd5b50506011546009546040517f0152a5ea0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca00602482015291169250630152a5ea9150604401600060405180830381600087803b158015620066b657600080fd5b505af1158015620066cb573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b039182166004820152620067099450911691506370a082319060240162002267565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200676357600080fd5b505af115801562006778573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663467454686040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620067cd57600080fd5b505af1158015620067e2573d6000803e3d6000fd5b505050506200683e601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa117e45e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620068e69185910162007efe565b600060405180830381600087803b1580156200690157600080fd5b505af115801562006916573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200697457600080fd5b505af115801562006989573d6000803e3d6000fd5b50506011546009546040517fbbaed5cb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063bbaed5cb9150604401600060405180830381600087803b158015620069fa57600080fd5b505af115801562006a0f573d6000803e3d6000fd5b5050600c546009546040516370a0823160e01b81526001600160a01b03918216600482015262006a4d9450911691506370a082319060240162002267565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562006aa757600080fd5b505af115801562006abc573d6000803e3d6000fd5b5050600c546011546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152633b9aca0060248201529116925063095ea7b391506044016020604051808303816000875af115801562006b32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006b58919062007eda565b506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39062006bab90849060040162007efe565b600060405180830381600087803b15801562006bc657600080fd5b505af115801562006bdb573d6000803e3d6000fd5b505060165460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa7915060240162002979565b60008054610100900460ff161562006c455750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562006d895760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162006ced917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162007f2d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262006d279162007f77565b6000604051808303816000865af19150503d806000811462006d66576040519150601f19603f3d011682016040523d82523d6000602084013e62006d6b565b606091505b509150508080602001905181019062006d85919062007eda565b9150505b919050565b601054604080517f02fb0c5e000000000000000000000000000000000000000000000000000000008152905162006df4926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001480573d6000803e3d6000fd5b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562006e4e57600080fd5b505af115801562006e63573d6000803e3d6000fd5b5050601054600954600d546040517f2f42aef50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152670de0b6b3a7640000604482015291169250632f42aef59150606401600060405180830381600087803b15801562006ee357600080fd5b505af115801562006ef8573d6000803e3d6000fd5b5050600d546009546040516370a0823160e01b81526001600160a01b03918216600482015262006f369450911691506370a082319060240162003c4f565b60155460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562006f9057600080fd5b505af115801562006fa5573d6000803e3d6000fd5b5050601054600d546040517f724000c10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063724000c19150604401600060405180830381600087803b1580156200701a57600080fd5b505af11580156200702f573d6000803e3d6000fd5b5050600d546015546040516370a0823160e01b81526001600160a01b0391821660048201526200706d9450911691506370a082319060240162003c4f565b601054600d546015546040517f28a4ace50000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152620070cd9291909116906328a4ace59060440162003c4f565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200712757600080fd5b505af11580156200713c573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200719157600080fd5b505af1158015620071a6573d6000803e3d6000fd5b5050505062007202601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8e76d05e0000000000000000000000000000000000000000000000000000000017905291517ff28dceb30000000000000000000000000000000000000000000000000000000081529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391620060f69185910162007efe565b600b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200730457600080fd5b505af115801562007319573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b031663ec3984f66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200736e57600080fd5b505af115801562007383573d6000803e3d6000fd5b50505050620073df601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b604080517f656d657267656e63795f7265737461727400000000000000000000000000000060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7de30f410000000000000000000000000000000000000000000000000000000017905290517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390620074b790849060040162007efe565b600060405180830381600087803b158015620074d257600080fd5b505af1158015620074e7573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200754557600080fd5b505af11580156200755a573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166301ffa0596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620075af57600080fd5b505af1158015620075c4573d6000803e3d6000fd5b5050505062007620601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ee573d6000803e3d6000fd5b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200767a57600080fd5b505af11580156200768f573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166301ffa0596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620076e457600080fd5b505af1158015620076f9573d6000803e3d6000fd5b5050505062001981601060009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001480573d6000803e3d6000fd5b6040805160048152602481018252602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000060e088901b1617905282516001600160a01b0385168183015283518082039092018252808401938490527fb96213e400000000000000000000000000000000000000000000000000000000909352737109709ecfa91a80626ff3989d68f67f5b1dd12d9263b96213e4926200782392889260440162007f95565b600060405180830381600087803b1580156200783e57600080fd5b505af115801562007853573d6000803e3d6000fd5b50505050505050565b8062001981577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620078c29060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200198162007a44565b80821462007a40577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620079629060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a160408051818152600a818301527f2020202020204c6566740000000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a818301527f202020202052696768740000000000000000000000000000000000000000000060608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162007a4062007a44565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562007b995760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262007b16929160200162007f2d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262007b509162007f77565b6000604051808303816000865af19150503d806000811462007b8f576040519150601f19603f3d011682016040523d82523d6000602084013e62007b94565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b61040a8062007fd883390190565b61013f80620083e283390190565b611fc7806200852183390190565b611222806200a4e883390190565b611edc806200b70a83390190565b612111806200d5e683390190565b61116c806200f6f783390190565b610b11806201086383390190565b61150e806201137483390190565b610caa806201288283390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80516001600160a01b038116811462006d8957600080fd5b6000602080838503121562007cae57600080fd5b825167ffffffffffffffff8082111562007cc757600080fd5b818501915085601f83011262007cdc57600080fd5b81518181111562007cf15762007cf162007c53565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171562007d375762007d3762007c53565b60405291825284820192508381018501918883111562007d5657600080fd5b938501935b8285101562007d7f5762007d6f8562007c82565b8452938501939285019262007d5b565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b8381101562007dd757818101518382015260200162007dbd565b83811115620014145750506000910152565b6000815180845262007e0381602086016020860162007dba565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6001600160a01b038316815260406020820152600062007e59604083018462007de9565b949350505050565b60006020828403121562007e7457600080fd5b62007e7f8262007c82565b9392505050565b604081016006841062007ec2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9281526001600160a01b039190911660209091015290565b60006020828403121562007eed57600080fd5b8151801515811462007e7f57600080fd5b60208152600062007e7f602083018462007de9565b60006020828403121562007f2657600080fd5b5051919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825162007f6981600485016020870162007dba565b919091016004019392505050565b6000825162007f8b81846020870162007dba565b9190910192915050565b6001600160a01b038416815260606020820152600062007fb9606083018562007de9565b828103604084015262007fcd818562007de9565b969550505050505056fe737109709ecfa91a80626ff3989d68f67f5b1dd12d60805264757365727360d81b60c052600560a05260c56040527f39b41f4ff9d03853a3e5e26ffad8712de4330b640064cfa05d0a29978dea11c660005534801561005d57600080fd5b50608051610391610079600039600061017b01526103916000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c8fe5261461003b578063780900dc1461008a575b600080fd5b6000805460408051602080820184905282518083038201815282840193849052805191012090935573ffffffffffffffffffffffffffffffffffffffff90911690526060015b60405180910390f35b61009d61009836600461022b565b6100aa565b6040516100819190610244565b606060008267ffffffffffffffff8111156100c7576100c761029e565b6040519080825280602002602001820160405280156100f0578160200160208202803683370190505b50905060005b838110156102245760008054604080516020808201849052825180830382018152918301909252805191012082556040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b1580156101c157600080fd5b505af11580156101d5573d6000803e3d6000fd5b50505050808383815181106101ec576101ec6102cd565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152508061021c816102fc565b9150506100f6565b5092915050565b60006020828403121561023d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561029257835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610260565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220deda93e03e4b234ba90d8fbed2cf2ce390afbc8778d16cf98dd284e98ba0270264736f6c634300080f0033608060405234801561001057600080fd5b5060405161013f38038061013f83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b60ad806100926000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80630505c8c914604b5780630c340a2414604b578063452a932014604b578063fbfa77cf14604b575b600080fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f3fea2646970667358221220576051929d376d1e9fb4b8653c8c36bbf8a25b328529243af4396b71e98fc36264736f6c634300080f00337f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140526101a0604052600c6101609081526b15539055551213d49256915160a21b61018052600690620000559082620002b1565b503480156200006357600080fd5b5060405162001fc738038062001fc783398101604081905262000086916200037d565b806040518060400160405280600a815260200169476f65726c692044616f60b01b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600a815260200169476f65726c692044616f60b01b815250604051806040016040528060048152602001634744414f60e01b81525060098260039081620001189190620002b1565b506004620001278382620002b1565b5060ff166080908152845160209586012084519486019490942060e08590526101008190524660c0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818b01819052818301999099526060810194909452938301919091523060a080840191909152835180840382018152929091019283905281519190960120909452505061012052600780546001600160a01b0319166001600160a01b03851690811790915591507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a25050620003af565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023757607f821691505b6020821081036200025857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ac57600081815260208120601f850160051c81016020861015620002875750805b601f850160051c820191505b81811015620002a85782815560010162000293565b5050505b505050565b81516001600160401b03811115620002cd57620002cd6200020c565b620002e581620002de845462000222565b846200025e565b602080601f8311600181146200031d5760008415620003045750858301515b600019600386901b1c1916600185901b178555620002a8565b600085815260208120601f198616915b828110156200034e578886015182559484019460019091019084016200032d565b50858210156200036d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200039057600080fd5b81516001600160a01b0381168114620003a857600080fd5b9392505050565b60805160a05160c05160e051610100516101205161014051611bbd6200040a600039600061087f01526000610e5b01526000610eaa01526000610e8501526000610e0701526000610e2e015260006101c30152611bbd6000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063a457c2d711610081578063bf7e214f11610066578063bf7e214f146102cd578063d505accf14610312578063dd62ed3e1461032557600080fd5b8063a457c2d7146102a7578063a9059cbb146102ba57600080fd5b80637a9e5e4b116100b25780637a9e5e4b146102795780637ecebe001461028c57806395d89b411461029f57600080fd5b806370a082311461023057806379cc67901461026657600080fd5b8063313ce56711610124578063395093511161010957806339509351146101f557806340c10f191461020857806342966c681461021d57600080fd5b8063313ce567146101bc5780633644e515146101ed57600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd1461019757806323b872dd146101a9575b600080fd5b61015e61036b565b60405161016b919061170c565b60405180910390f35b6101876101823660046117a1565b6103fd565b604051901515815260200161016b565b6002545b60405190815260200161016b565b6101876101b73660046117cd565b610413565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161016b565b61019b610489565b6101876102033660046117a1565b610498565b61021b6102163660046117a1565b6104db565b005b61021b61022b36600461180e565b6105ec565b61019b61023e366004611827565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61021b6102743660046117a1565b6105f9565b61021b610287366004611827565b610603565b61019b61029a366004611827565b61076c565b61015e610799565b6101876102b53660046117a1565b6107a8565b6101876102c83660046117a1565b610804565b6007546102ed9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016b565b61021b610320366004611844565b610811565b61019b6103333660046118bb565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461037a906118f4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a6906118f4565b80156103f35780601f106103c8576101008083540402835291602001916103f3565b820191906000526020600020905b8154815290600101906020018083116103d657829003601f168201915b5050505050905090565b600061040a3384846109d0565b50600192915050565b6000610420848484610b84565b61047f843361047a85604051806060016040528060288152602001611b176028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602090815260408083203384529091529020549190610dae565b6109d0565b5060019392505050565b6000610493610e02565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161040a91859061047a9086610ef8565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190611941565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146006906105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d4919061195e565b60405180910390fd5b506105e88282610f78565b5050565b6105f63382611098565b50565b6105e88282611206565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106949190611941565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146006906106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d4919061195e565b50600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600560205260408120545b92915050565b60606004805461037a906118f4565b600061040a338461047a85604051806060016040528060258152602001611b636025913933600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8d1684529091529020549190610dae565b600061040a338484610b84565b8342111561087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105d4565b60007f00000000000000000000000000000000000000000000000000000000000000008888886108aa8c611279565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610912826112b0565b9050600061092282878787611319565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105d4565b6109c48a8a8a6109d0565b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105d4565b73ffffffffffffffffffffffffffffffffffffffff8216610b15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105d4565b73ffffffffffffffffffffffffffffffffffffffff8216610cca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b610d1481604051806060016040528060268152602001611af16026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610dae565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610d509082610ef8565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610b77565b60008184841115610dec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d4919061170c565b506000610df98486611a70565b95945050505050565b6000467f00000000000000000000000000000000000000000000000000000000000000008103610e53577f000000000000000000000000000000000000000000000000000000000000000091505090565b5050604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080610f058385611a87565b905083811015610f71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105d4565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ff5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d4565b6002546110029082610ef8565b60025573ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546110359082610ef8565b73ffffffffffffffffffffffffffffffffffffffff8316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821661113b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b61118581604051806060016040528060228152602001611acf6022913973ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020549190610dae565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546111b89082611341565b60025560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161108c565b600061125d82604051806060016040528060248152602001611b3f6024913973ffffffffffffffffffffffffffffffffffffffff861660009081526001602090815260408083203384529091529020549190610dae565b905061126a8333836109d0565b6112748383611098565b505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090208054906112aa81611383565b50919050565b60006107936112bd610e02565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061132a878787876113a0565b91509150611337816114b8565b5095945050505050565b6000610f7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610dae565b60018160000160008282546113989190611a87565b909155505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113d757506000905060036114af565b8460ff16601b141580156113ef57508460ff16601c14155b1561140057506000905060046114af565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611454573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166114a8576000600192509250506114af565b9150600090505b94509492505050565b60008160048111156114cc576114cc611a9f565b036114d45750565b60018160048111156114e8576114e8611a9f565b0361154f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105d4565b600281600481111561156357611563611a9f565b036115ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105d4565b60038160048111156115de576115de611a9f565b0361166b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b600481600481111561167f5761167f611a9f565b036105f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d4565b600060208083528351808285015260005b818110156117395785810183015185820160400152820161171d565b8181111561174b576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146105f657600080fd5b600080604083850312156117b457600080fd5b82356117bf8161177f565b946020939093013593505050565b6000806000606084860312156117e257600080fd5b83356117ed8161177f565b925060208401356117fd8161177f565b929592945050506040919091013590565b60006020828403121561182057600080fd5b5035919050565b60006020828403121561183957600080fd5b8135610f718161177f565b600080600080600080600060e0888a03121561185f57600080fd5b873561186a8161177f565b9650602088013561187a8161177f565b95506040880135945060608801359350608088013560ff8116811461189e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156118ce57600080fd5b82356118d98161177f565b915060208301356118e98161177f565b809150509250929050565b600181811c9082168061190857607f821691505b6020821081036112aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561195357600080fd5b8151610f718161177f565b600060208083526000845481600182811c91508083168061198057607f831692505b85831081036119b6577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b8786018381526020018180156119d35760018114611a0757611a32565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616825284151560051b82019650611a32565b60008b81526020902060005b86811015611a2c57815484820152908501908901611a13565b83019750505b50949998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611a8257611a82611a41565b500390565b60008219821115611a9a57611a9a611a41565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122041b6315d21938121a9851cf76e913f005607b84974ddfbcf3b3bf759ce5a8dfb64736f6c634300080f003360e06040523480156200001157600080fd5b5060405162001222380380620012228339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610db16200047160003960006104b501526000610480015260006101540152610db16000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101cd578063a9059cbb146101e0578063d505accf146101f3578063dd62ed3e1461020657600080fd5b806340c10f191461019057806370a08231146101a557806395d89b41146101c557600080fd5b806323b872dd116100bd57806323b872dd1461013c578063313ce5671461014f5780633644e5151461018857600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610231565b6040516100f99190610a2a565b60405180910390f35b610115610110366004610ac6565b6102bf565b60405190151581526020016100f9565b61012e60025481565b6040519081526020016100f9565b61011561014a366004610af0565b610338565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61012e61047c565b6101a361019e366004610ac6565b6104d7565b005b61012e6101b3366004610b2c565b60036020526000908152604090205481565b6100ec6104e5565b6101a36101db366004610ac6565b6104f2565b6101156101ee366004610ac6565b6104fc565b6101a3610201366004610b4e565b610581565b61012e610214366004610bc1565b600460209081526000928352604080842090915290825290205481565b6000805461023e90610bf4565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610bf4565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103279086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103cc5761039a8382610c76565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610401908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104699087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104b2576104ad610889565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104e18282610923565b5050565b6001805461023e90610bf4565b6104e1828261099c565b3360009081526003602052604081208054839190839061051d908490610c76565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103279086815260200190565b428410156105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016105fc61047c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9602082015273ffffffffffffffffffffffffffffffffffffffff808d1692820192909252908a1660608201526080810189905260a0810188905260c001604051602081830303815290604052805190602001206040516020016106b69291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610732573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107ad57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016105e7565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516108bb9190610c8d565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109359190610d63565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906109d1908490610c76565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610990565b600060208083528351808285015260005b81811015610a5757858101830151858201604001528201610a3b565b81811115610a69576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ac157600080fd5b919050565b60008060408385031215610ad957600080fd5b610ae283610a9d565b946020939093013593505050565b600080600060608486031215610b0557600080fd5b610b0e84610a9d565b9250610b1c60208501610a9d565b9150604084013590509250925092565b600060208284031215610b3e57600080fd5b610b4782610a9d565b9392505050565b600080600080600080600060e0888a031215610b6957600080fd5b610b7288610a9d565b9650610b8060208901610a9d565b95506040880135945060608801359350608088013560ff81168114610ba457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bd457600080fd5b610bdd83610a9d565b9150610beb60208401610a9d565b90509250929050565b600181811c90821680610c0857607f821691505b602082108103610c41577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610c8857610c88610c47565b500390565b600080835481600182811c915080831680610ca957607f831692505b60208084108203610ce1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610cf55760018114610d2857610d55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d55565b60008a81526020902060005b86811015610d4d5781548b820152908501908301610d34565b505084890196505b509498975050505050505050565b60008219821115610d7657610d76610c47565b50019056fea2646970667358221220a211ff0c0cc0b55b4779ce1a573a8bb826b46e808e5015092bacc3b27af7352664736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611eaa806100326000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c8063b4dc00b411610081578063dbb61ee71161005b578063dbb61ee714610235578063e52223bb14610248578063f166d9eb1461026b57600080fd5b8063b4dc00b4146101ca578063c34c08e514610200578063c4d1f8f11461022057600080fd5b80635af099c9116100b25780635af099c91461014357806363a6e3b514610156578063ae5f76fa1461017657600080fd5b80620dd95d146100cd57806303c02f421461010a575b600080fd5b6100e06100db3660046119e8565b61029f565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610135610118366004611a36565b600560209081526000928352604080842090915290825290205481565b604051908152602001610101565b6100e0610151366004611a6f565b6102e4565b610135610164366004611a88565b60086020526000908152604090205481565b610199610184366004611a88565b60036020526000908152604090205460d81b81565b6040517fffffffffff0000000000000000000000000000000000000000000000000000009091168152602001610101565b6100e06101d8366004611aac565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000546100e09073ffffffffffffffffffffffffffffffffffffffff1681565b61023361022e366004611ac9565b61031b565b005b610199610243366004611a6f565b6105c7565b61025b610256366004611a88565b6105fe565b6040519015158152602001610101565b61025b610279366004611b19565b600660209081526000938452604080852082529284528284209052825290205460ff1681565b600460205281600052604060002081815481106102bb57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b600781815481106102f457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610372576040517e37c7b30000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600082600581111561038657610386611b64565b036104195761039481610672565b61040b8173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104069190611b93565b6106de565b610414816107ff565b610571565b600182600581111561042d5761042d611b64565b036104925761043b81610672565b6104898173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e2573d6000803e3d6000fd5b61041481610a83565b60028260058111156104a6576104a6611b64565b036104bd576104b481610672565b61041481610cfc565b60038260058111156104d1576104d1611b64565b036104e8576104df81610672565b61041481611058565b60048260058111156104fc576104fc611b64565b0361054657600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055610571565b600582600581111561055a5761055a611b64565b036105715761056881610672565b610571816112c2565b8073ffffffffffffffffffffffffffffffffffffffff1682600581111561059a5761059a611b64565b6040517f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c9090600090a35050565b600181815481106105d757600080fd5b9060005260206000209060069182820401919006600502915054906101000a900460d81b81565b6007546000901580159061066c575073ffffffffffffffffffffffffffffffffffffffff821660008181526008602052604090205460078054909190811061064857610648611bb0565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b92915050565b8073ffffffffffffffffffffffffffffffffffffffff163b6000036106db576040517f6f46ea7400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b50565b8060005b60058110156107fa5760008282600581106106ff576106ff611bb0565b1a60f81b90507f41000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216108061079657507f5a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b156107f1576040517f3afbb8280000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000085166004820152602401610369565b506001016106e2565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1615610916576040517f8806c6660000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000082166004820152602401610369565b7fffffffffff0000000000000000000000000000000000000000000000000000008116600090815260026020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155808452600390925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001660d886901c9081179091556001805480820182559085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600680830491909101805464ffffffffff929093066005026101000a91820219909216920291909117905580517fea6439140000000000000000000000000000000000000000000000000000000081529051919263ea6439149260048084019382900301818387803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190611b93565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16801580610b7757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610bd2576040517f073e07310000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000083166004820152602401610369565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000908116909155938716808452818420805490951660d888901c179094557fffffffffff00000000000000000000000000000000000000000000000000000086168352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905580517fea643914000000000000000000000000000000000000000000000000000000008152905163ea6439149260048084019391929182900301818387803b158015610cdb57600080fd5b505af1158015610cef573d6000803e3d6000fd5b505050506107fa8261148f565b610d05816105fe565b15610d54576040517f224b187700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b600780546001808201835560008390527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790559054610dd29190611bdf565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600860205260408082209390935582517f9459b87500000000000000000000000000000000000000000000000000000000815292519092639459b8759160048083019286929190829003018183875af1158015610e4f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e959190810190611ce8565b805190915060005b81811015610fb0576000838281518110610eb957610eb9611bb0565b6020908102919091018101517fffffffffff0000000000000000000000000000000000000000000000000000008116600081815260048452604081208054600180820183558284529583200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8c1617905591905254909250610f549190611bdf565b7fffffffffff000000000000000000000000000000000000000000000000000000909116600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168452909152902055600101610e9d565b5060008373ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110449190810190611d87565b9050611052848260016115ea565b50505050565b611061816105fe565b6110af576040517f22cd55c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610369565b60008173ffffffffffffffffffffffffffffffffffffffff16635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111429190810190611d87565b9050611150828260006115ea565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600860205260408120546007805491929161118990600190611bdf565b8154811061119957611199611bb0565b6000918252602090912001546007805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106111d5576111d5611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600780548061122e5761122e611e45565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff83811683526008909152604080832085905590861682528120556110528461171e565b60015460005b818110156113ce57600060026000600184815481106112e9576112e9611bb0565b6000918252602080832060068084049091015492066005026101000a90910460d81b7fffffffffff00000000000000000000000000000000000000000000000000000016835282019290925260409081019091205490517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911691508190634657b36c90602401600060405180830381600087803b1580156113aa57600080fd5b505af11580156113be573d6000803e3d6000fd5b50505050816001019150506112c8565b5060075460005b81811015611052576000600782815481106113f2576113f2611bb0565b6000918252602090912001546040517f4657b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015290911691508190634657b36c90602401600060405180830381600087803b15801561146b57600080fd5b505af115801561147f573d6000803e3d6000fd5b50505050816001019150506113d5565b7fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004602090815260408083208054825181850281018501909352808352919290919083018282801561151f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116114f4575b505083519394506000925050505b818110156110525782818151811061154757611547611bb0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561159b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115e19190810190611ce8565b5060010161152d565b815160005b8181101561171757600084828151811061160b5761160b611bb0565b60209081029190910181015180517fffffffffff000000000000000000000000000000000000000000000000000000908116600090815260068452604080822073ffffffffffffffffffffffffffffffffffffffff8c1680845290865281832085870180517fffffffff0000000000000000000000000000000000000000000000000000000090811686529188529383902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168c1515908117909155865194518451921682529681019690965293955092939116917ff3cdd20c5574ce87c347ea71e37b8fa7a095894be4b7f2bb1533e8d2342965f1910160405180910390a3506001016115ef565b5050505050565b60008173ffffffffffffffffffffffffffffffffffffffff16639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117b39190810190611ce8565b805190915060005b818110156110525760008382815181106117d7576117d7611bb0565b6020908102919091018101517fffffffffff000000000000000000000000000000000000000000000000000000811660009081526004835260408082206005855281832073ffffffffffffffffffffffffffffffffffffffff8b168452909452812054835492945091839061184e90600190611bdf565b8154811061185e5761185e611bb0565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061189e5761189e611bb0565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806118f6576118f6611e45565b600082815260208082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908401810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092557fffffffffff00000000000000000000000000000000000000000000000000000095909516815260058552604080822073ffffffffffffffffffffffffffffffffffffffff9384168352909552848120929092558716815291822091909155506001016117bb565b7fffffffffff000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080604083850312156119fb57600080fd5b8235611a06816119ba565b946020939093013593505050565b73ffffffffffffffffffffffffffffffffffffffff811681146106db57600080fd5b60008060408385031215611a4957600080fd5b8235611a54816119ba565b91506020830135611a6481611a14565b809150509250929050565b600060208284031215611a8157600080fd5b5035919050565b600060208284031215611a9a57600080fd5b8135611aa581611a14565b9392505050565b600060208284031215611abe57600080fd5b8135611aa5816119ba565b60008060408385031215611adc57600080fd5b823560068110611a5457600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106db57600080fd5b600080600060608486031215611b2e57600080fd5b8335611b39816119ba565b92506020840135611b4981611a14565b91506040840135611b5981611aeb565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215611ba557600080fd5b8151611aa5816119ba565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082821015611c18577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611c6f57611c6f611c1d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611cbc57611cbc611c1d565b604052919050565b600067ffffffffffffffff821115611cde57611cde611c1d565b5060051b60200190565b60006020808385031215611cfb57600080fd5b825167ffffffffffffffff811115611d1257600080fd5b8301601f81018513611d2357600080fd5b8051611d36611d3182611cc4565b611c75565b81815260059190911b82018301908381019087831115611d5557600080fd5b928401925b82841015611d7c578351611d6d816119ba565b82529284019290840190611d5a565b979650505050505050565b60006020808385031215611d9a57600080fd5b825167ffffffffffffffff811115611db157600080fd5b8301601f81018513611dc257600080fd5b8051611dd0611d3182611cc4565b81815260069190911b82018301908381019087831115611def57600080fd5b928401925b82841015611d7c5760408489031215611e0d5760008081fd5b611e15611c4c565b8451611e20816119ba565b815284860151611e2f81611aeb565b8187015282526040939093019290840190611df4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220da155c75aff1987347cd8c8703a6eef45da0f991c20678951a039e404be7c5a064736f6c634300080f00336080604052600160055534801561001557600080fd5b50604051620021113803806200211183398101604081905261003691610060565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b179055610090565b60006020828403121561007257600080fd5b81516001600160a01b038116811461008957600080fd5b9392505050565b61207180620000a06000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80634aae164b116100d8578063d4aae0c41161008c578063f5b92c7311610066578063f5b92c731461038a578063fb393f241461039d578063ffa1ad74146103b057600080fd5b8063d4aae0c41461032a578063e6eb207a1461036f578063ea6439141461038257600080fd5b80635f0736a1116100bd5780635f0736a1146102d9578063724000c1146103045780638b7f3fb91461031757600080fd5b80634aae164b146102be57806351b42b00146102d157600080fd5b80631ff517ff1161012f5780632f42aef5116101145780632f42aef51461026d57806332b43ad2146102805780634657b36c146102ab57600080fd5b80631ff517ff1461022257806328a4ace51461024257600080fd5b80630f15f4c0116101605780630f15f4c0146101cb57806315226b54146101d35780631ae7ec2e146101f457600080fd5b806301a91e5c1461017c57806302fb0c5e14610191575b600080fd5b61018f61018a366004611e9d565b6103c5565b005b6000546101b69074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61018f6105a4565b6101e66101e1366004611ede565b610708565b6040519081526020016101c2565b6040517f545253525900000000000000000000000000000000000000000000000000000081526020016101c2565b6101e6610230366004611ede565b60036020526000908152604090205481565b6101e6610250366004611f02565b600460209081526000928352604080842090915290825290205481565b61018f61027b366004611e9d565b6107b8565b6101e661028e366004611f02565b600260209081526000928352604080842090915290825290205481565b61018f6102b9366004611ede565b610a19565b61018f6102cc366004611e9d565b610ab3565b61018f610d04565b6101e66102e7366004611f02565b600160209081526000928352604080842090915290825290205481565b61018f610312366004611f3b565b610e51565b61018f610325366004611e9d565b6110ff565b60005461034a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c2565b61018f61037d366004611e9d565b6112ea565b61018f611512565b61018f610398366004611e9d565b611567565b61018f6103ab366004611e9d565b6119bf565b604080516001815260006020820152016101c2565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190611f67565b6104ed576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600090815260026020908152604080832093861683529290529081205461052d908390611fb8565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917f9afc1acde4b7ec0d84d924e5b530aecfb57d117a7122b80904cb9912badbff5991015b60405180910390a350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611f67565b6106c7576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b73ffffffffffffffffffffffffffffffffffffffff81166000818152600360205260408082205490517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152919290916370a0823190602401602060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611fd0565b6107b29190611fb8565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190611f67565b6108db576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff1661092f576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091528120805483929061096f908490611fe9565b90915550610996905073ffffffffffffffffffffffffffffffffffffffff83168483611b8f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e84604051610a0c91815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a6c576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190611f67565b610bd6576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260046020908152604080832093871683529290522080549082905581811015610c6057610c208183611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c55908490611fb8565b90915550610ca59050565b610c6a8282611fe9565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054909190610c9f908490611fe9565b90915550505b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4417d205f6349e66a581332b36195e74d10f878e80db907b4fd3a814aad4049d8460405161059691815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def9190611f67565b610e27576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c9190611f67565b610f74576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b60005474010000000000000000000000000000000000000000900460ff16610fc8576040517f8e76d05e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281208054839290611008908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526004602090815260408083203384529091528120805483929061104d908490611fb8565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290611087908490611fb8565b909155506110ae905073ffffffffffffffffffffffffffffffffffffffff83163383611b8f565b604051818152339073ffffffffffffffffffffffffffffffffffffffff8416907f7f04a714958851e1d87b504651ba77ab02f62bae8879f577bf3e07cf8567aba29060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190611f67565b611222576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908282111561126f5761126a8383611fe9565b611272565b60005b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f40730d80659c76c95521f0340872d27fdc8b3c47befe2ca569d2c2eedc8a049e91015b60405180910390a35050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190611f67565b61140d576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160209081526040808320938616835292905290812054908261146e837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fe9565b11156114835761147e8383611fb8565b6114a5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff8681166000818152600160209081526040808320948a16808452948252918290208590559051848152939450919290917f8bbc2784c9e4073e20f60d8c7218cbd211c43ca2ee041bc037f977693a0c8c1b91016112db565b60005473ffffffffffffffffffffffffffffffffffffffff163314611565576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561162e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116529190611f67565b61168a576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b6005546001146116f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104e4565b600260055573ffffffffffffffffffffffffffffffffffffffff80831660009081526004602090815260408083209387168352929052908120549003611768576040517fa4255dc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f99190611fd0565b905061181d73ffffffffffffffffffffffffffffffffffffffff8416333085611cff565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090829073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa15801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b09190611fd0565b6118ba9190611fe9565b9050828111156118c75750815b73ffffffffffffffffffffffffffffffffffffffff80851660009081526004602090815260408083209389168352929052908120805483929061190b908490611fe9565b909155505073ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054839290611945908490611fe9565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf836040516119ab91815260200190565b60405180910390a350506001600555505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f54525352590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015611a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaa9190611f67565b611ae2576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024016104e4565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260209081526040808320938616835292905290812054611b22908390611fe9565b73ffffffffffffffffffffffffffffffffffffffff8581166000818152600260209081526040808320948916808452948252918290208590559051848152939450919290917fbb8caa1e59333c99899b67ccacb2b942c5a5ebf1a2bff4932b50274da81fe8d59101610596565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611c269190612000565b6000604051808303816000865af19150503d8060008114611c63576040519150601f19603f3d011682016040523d82523d6000602084013e611c68565b606091505b5091509150818015611c92575080511580611c92575080806020019051810190611c929190611f67565b611cf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104e4565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611d9e9190612000565b6000604051808303816000865af19150503d8060008114611ddb576040519150601f19603f3d011682016040523d82523d6000602084013e611de0565b606091505b5091509150818015611e0a575080511580611e0a575080806020019051810190611e0a9190611f67565b611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104e4565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611e9a57600080fd5b50565b600080600060608486031215611eb257600080fd5b8335611ebd81611e78565b92506020840135611ecd81611e78565b929592945050506040919091013590565b600060208284031215611ef057600080fd5b8135611efb81611e78565b9392505050565b60008060408385031215611f1557600080fd5b8235611f2081611e78565b91506020830135611f3081611e78565b809150509250929050565b60008060408385031215611f4e57600080fd5b8235611f5981611e78565b946020939093013593505050565b600060208284031215611f7957600080fd5b81518015158114611efb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611fcb57611fcb611f89565b500190565b600060208284031215611fe257600080fd5b5051919050565b600082821015611ffb57611ffb611f89565b500390565b6000825160005b818110156120215760208186018101518583015201612007565b81811115612030576000828501525b50919091019291505056fea26469706673582212206634c68cd62b3d0f45d7635a2fd1aa8019825f1f21deea0c546dc1f7677635a164736f6c634300080f0033608060405234801561001057600080fd5b5060405161116c38038061116c83398101604081905261002f91610085565b600080546001600160a01b039384166001600160a01b0319909116179055600180546001600160a81b0319169190921617600160a01b1790556100bf565b6001600160a01b038116811461008257600080fd5b50565b6000806040838503121561009857600080fd5b82516100a38161006d565b60208401519092506100b48161006d565b809150509250929050565b61109e806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806351b42b001161008c578063bbaed5cb11610066578063bbaed5cb14610228578063d4aae0c41461023b578063ea6439141461025b578063ffa1ad741461026357600080fd5b806351b42b00146101ad578063664aecb0146101b5578063a29a0d90146101e357600080fd5b80631ae7ec2e116100c85780631ae7ec2e146101465780631b0a68f214610174578063359fe780146101875780634657b36c1461019a57600080fd5b80630152a5ea146100ef57806302fb0c5e146101045780630f15f4c01461013e575b600080fd5b6101026100fd366004610f98565b610278565b005b6001546101299074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61010261050b565b6040517f4d494e54520000000000000000000000000000000000000000000000000000008152602001610135565b610102610182366004610f98565b61066f565b610102610195366004610f98565b61083f565b6101026101a8366004610fc4565b610a49565b610102610ae3565b6101d56101c3366004610fc4565b60026020526000908152604090205481565b604051908152602001610135565b6001546102039073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610135565b610102610236366004610f98565b610c30565b6000546102039073ffffffffffffffffffffffffffffffffffffffff1681565b610102610f1e565b60408051600181526000602082015201610135565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190610fe8565b6103a0576040517f11bf00c90000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b60015474010000000000000000000000000000000000000000900460ff166103f4576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361042e576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f79cc679000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906379cc679090604401600060405180830381600087803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b505060405183815273ffffffffffffffffffffffffffffffffffffffff851692503391507fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b94539060200160405180910390a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f69190610fe8565b61062e576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610fe8565b610792576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490828211156107d0576107cb8383611039565b6107d3565b60005b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f08c666f5d7ad747c595b189947464cfac5e56befa6bd12ced49a49adb3f8166d906108319084815260200190565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190610fe8565b610962576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490826109b4837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611039565b11156109c9576109c48383611050565b6109eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b73ffffffffffffffffffffffffffffffffffffffff85166000818152600260205260409081902083905551919250907f2f612f30164b43d77b321f13922cb2190f7f7956b9483d817271d30679a1aa7b906108319084815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a9c576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610fe8565b610c06576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d494e54520000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190610fe8565b610d53576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b60015474010000000000000000000000000000000000000000900460ff16610da7576040517fa117e45e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610de1576040517f4cd4a41600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090205481811015610e2b576040517fd20075ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602052604090819020838303905560015490517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610eb457600080fd5b505af1158015610ec8573d6000803e3d6000fd5b505060405184815273ffffffffffffffffffffffffffffffffffffffff861692503391507fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89060200160405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f71576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610397565b565b73ffffffffffffffffffffffffffffffffffffffff81168114610f9557600080fd5b50565b60008060408385031215610fab57600080fd5b8235610fb681610f73565b946020939093013593505050565b600060208284031215610fd657600080fd5b8135610fe181610f73565b9392505050565b600060208284031215610ffa57600080fd5b81518015158114610fe157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561104b5761104b61100a565b500390565b600082198211156110635761106361100a565b50019056fea26469706673582212201993dbcafb4ea2c30aab7698fb16e989fa8c88b736ca2bc4e2d2383cdf01a68064736f6c634300080f0033608060405234801561001057600080fd5b50604051610b11380380610b1183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610a7e806100936000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063d09a20c511610076578063ea6439141161005b578063ea643914146101c7578063f6ba0007146101cf578063ffa1ad74146101e257600080fd5b8063d09a20c51461016f578063d4aae0c41461018257600080fd5b80634657b36c116100a75780634657b36c1461010b578063656361ff1461011e578063ac4ab3fb1461013157600080fd5b80631ae7ec2e146100c357806340e312f8146100f6575b600080fd5b6040517f524f4c455300000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b610109610104366004610939565b6101f7565b005b610109610119366004610977565b610375565b61010961012c36600461099b565b61040f565b61015f61013f3660046109cb565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ed565b61010961017d36600461099b565b61064a565b6000546101a29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b6101096106b7565b6101096101dd36600461099b565b61070c565b604080516001815260006020820152016100ed565b60005b6020811015610371576000828260208110610217576102176109f7565b1a60f81b90507f61000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610806102ae57507f7a000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216115b80156102fc57507f5f000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821614155b801561032957507fff00000000000000000000000000000000000000000000000000000000000000811615155b15610368576040517f0eebce88000000000000000000000000000000000000000000000000000000008152600481018490526024015b60405180910390fd5b506001016101fa565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103c8576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610a26565b610532576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16156105bc576040517fbfa0c12400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b6105c5826101f7565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020818152604080842087855290915280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169092179091555184917f2ae6a113c0ed5b78a53413ffbb7679881f11145ccfba4fb92e863dfcd5a1d2f391a35050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff16610371576040517f7de30f410000000000000000000000000000000000000000000000000000000081526004810183905260240161035f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461070a576040517f14fa403c00000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f524f4c45530000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190610a26565b61082f576040517f11bf00c900000000000000000000000000000000000000000000000000000000815233600482015260240161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604080832085845290915290205460ff166108b8576040517fb2a720cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440161035f565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020908152604080832086845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555184917f155aaafb6329a2098580462df33ec4b7441b19729b9601c5fc17ae1cf99a8a5291a35050565b60006020828403121561094b57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461097457600080fd5b50565b60006020828403121561098957600080fd5b813561099481610952565b9392505050565b600080604083850312156109ae57600080fd5b8235915060208301356109c081610952565b809150509250929050565b600080604083850312156109de57600080fd5b82356109e981610952565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a3857600080fd5b8151801515811461099457600080fdfea26469706673582212204a2123866fc4f0206298105956e8d49e6e18ef63350ef4ff4f3ce47b11f9527764736f6c634300080f0033608060405234801561001057600080fd5b5060405161150e38038061150e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61147b806100936000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806380cee4ab1161008c578063c12954fa11610066578063c12954fa146101e8578063d4aae0c4146101f0578063ec3984f614610210578063fc0e74d11461021857600080fd5b806380cee4ab14610193578063923cb952146101b35780639459b875146101d357600080fd5b80634657b36c116100c85780634657b36c1461011e5780634674546814610131578063577de7d0146101395780635924be701461017e57600080fd5b806301ffa059146100ef5780631ef3755d146100f957806322f3e2d414610101575b600080fd5b6100f7610220565b005b6100f7610357565b6101096104ed565b60405190151581526020015b60405180910390f35b6100f761012c366004611278565b610585565b6100f7610624565b6003546101599073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610115565b610186610738565b604051610115919061129c565b6002546101599073ffffffffffffffffffffffffffffffffffffffff1681565b6001546101599073ffffffffffffffffffffffffffffffffffffffff1681565b6101db610a81565b604051610115919061132f565b6100f7610d0e565b6000546101599073ffffffffffffffffffffffffffffffffffffffff1681565b6100f7610da0565b6100f7610eb4565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f72657374617274000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156102b257600080fd5b505af11580156102c6573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b505af1158015610348573d6000803e3d6000fd5b50505050610354610fc8565b50565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f72657374617274000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156103e957600080fd5b505af11580156103fd573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561046b57600080fd5b505af115801561047f573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190611395565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105dd576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e0000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b60606000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd91906113b7565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086291906113b7565b60408051600480825260a08201909252919250816020015b604080518082019091526000808252602082015281526020019060019003908161087a575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000841681527f51b42b00000000000000000000000000000000000000000000000000000000006020820152815191945090849060009061090c5761090c6113f9565b60200260200101819052506040518060400160405280837affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630f15f4c060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525083600181518110610983576109836113f9565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016351b42b0060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250836002815181106109fa576109fa6113f9565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630f15f4c060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525083600381518110610a7157610a716113f9565b6020026020010181905250505090565b604080516003808252608082019092526060916020820183803683370190505090507f545253525900000000000000000000000000000000000000000000000000000081600081518110610ad757610ad76113f9565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610b2f7f4d494e545200000000000000000000000000000000000000000000000000000090565b81600181518110610b4257610b426113f9565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610b9a7f524f4c455300000000000000000000000000000000000000000000000000000090565b81600281518110610bad57610bad6113f9565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610c1a81600081518110610c0d57610c0d6113f9565b6020026020010151611128565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c7081600181518110610c0d57610c0d6113f9565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cc681600281518110610c0d57610c0d6113f9565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f72657374617274000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561046b57600080fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e0000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610e3257600080fd5b505af1158015610e46573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561033457600080fd5b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f656d657267656e63795f73687574646f776e0000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610f4657600080fd5b505af1158015610f5a573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106b657600080fd5b600254604080517f02fb0c5e00000000000000000000000000000000000000000000000000000000815290517f4e3bf9f8dfd7253fb755f99807f80c9c14d9ed0a71f36ede9c8e11606996c4799273ffffffffffffffffffffffffffffffffffffffff16916302fb0c5e9160048083019260209291908290030181865afa158015611057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107b9190611395565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110c9190611395565b60408051921515835290151560208301520160405180910390a1565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190611428565b905073ffffffffffffffffffffffffffffffffffffffff8116611250576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016105d4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461035457600080fd5b60006020828403121561128a57600080fd5b813561129581611256565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561132257815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff00000000000000000000000000000000000000000000000000000000168685015292840192908501906001016112b9565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156113895783517fffffffffff000000000000000000000000000000000000000000000000000000168352928401929184019160010161134b565b50909695505050505050565b6000602082840312156113a757600080fd5b8151801515811461129557600080fd5b6000602082840312156113c957600080fd5b81517fffffffffff0000000000000000000000000000000000000000000000000000008116811461129557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561143a57600080fd5b81516112958161125656fea2646970667358221220ad0382473fd6854aee42693a53434a3e790ca7526629994a6fc4dbefa02e978864736f6c634300080f0033608060405234801561001057600080fd5b50604051610caa380380610caa83398101604081905261002f9161005d565b600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b610c0e8061009c6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806372b0bb4911610081578063d4aae0c41161005b578063d4aae0c4146101c8578063d547741f146101e8578063f851a440146101fb57600080fd5b806372b0bb491461018b578063923cb952146101935780639459b875146101b357600080fd5b80633ea26384116100b25780633ea263841461011e5780634657b36c146101635780635924be701461017657600080fd5b806303346696146100d957806322f3e2d4146100ee5780632f2ff15d1461010b575b600080fd5b6100ec6100e7366004610a1d565b61021b565b005b6100f66102db565b60405190151581526020015b60405180910390f35b6100ec610119366004610a41565b610373565b60025461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610102565b6100ec610171366004610a1d565b610455565b61017e6104f4565b6040516101029190610a71565b6100ec610645565b60035461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb61070f565b6040516101029190610b04565b60005461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ec6101f6366004610a41565b61081a565b60015461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff16331461026c576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa2c5878324891aaeaaa631341c00e3c30a2b70c1b6a1e9411b903402d40df5c990600090a250565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610b6a565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103c4576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517f656361ff0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063656361ff906044015b600060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104ad576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051600280825260608281019093527f524f4c45530000000000000000000000000000000000000000000000000000009190602082015b604080518082019091526000808252602082015281526020019060019003908161052d575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000831681527f656361ff00000000000000000000000000000000000000000000000000000000602082015281519193509083906000906105bf576105bf610b8c565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200163f6ba000760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260018151811061063657610636610b8c565b60200260200101819052505090565b60025473ffffffffffffffffffffffffffffffffffffffff163314610696576040517fc5c898b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280546001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040517fecf24556cb4f08854c12350ad47cc1bf4bfe9ada0935ffb3d3de5f2f3f5a0ad690600090a2565b604080516001808252818301909252606091602080830190803683370190505090507f524f4c45530000000000000000000000000000000000000000000000000000008160008151811061076557610765610b8c565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506107d2816000815181106107c5576107c5610b8c565b60200260200101516108ca565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b60015473ffffffffffffffffffffffffffffffffffffffff16331461086b576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517ff6ba00070000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83811660248301529091169063f6ba00079060440161041f565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190610bbb565b905073ffffffffffffffffffffffffffffffffffffffff81166109f2576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff000000000000000000000000000000000000000000000000000000841660048201526024016104a4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a1a57600080fd5b50565b600060208284031215610a2f57600080fd5b8135610a3a816109f8565b9392505050565b60008060408385031215610a5457600080fd5b823591506020830135610a66816109f8565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610af757815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101610a8e565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610b5e5783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101610b20565b50909695505050505050565b600060208284031215610b7c57600080fd5b81518015158114610a3a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610bcd57600080fd5b8151610a3a816109f856fea264697066735822122001208111947b361206645450d449a9dd0789147dbff53a2ceda894ae5da69b6664736f6c634300080f0033a2646970667358221220c535ec1440b87e44c2db67aad0429d96d43d1c6ba833c7009c87b5ce81d5ac8564736f6c634300080f0033",
    "sourceMap": "1055:20965:168:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:3027;;;:::i;:::-;;10592:895;;;:::i;20236:875::-;;;:::i;13053:1611::-;;;:::i;19215:1015::-;;;:::i;321:38:1:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;321:38:1;;;;;;;;11493:765:168;;;:::i;14670:1615::-;;;:::i;12264:783::-;;;:::i;16291:2918::-;;;:::i;8029:2557::-;;;:::i;5165:1318::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;421:14:183;;414:22;396:41;;384:2;369:18;1819:584:0;256:187:183;6489:1534:168;;;:::i;1265:30::-;;;;;-1:-1:-1;;;;;1265:30:168;;;21117:901;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;1775:3027:168;1809:32;;;;;1817:23;1809:32;;;863:25:183;250:64:1;;1809:7:168;;836:18:183;;1809:32:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1919:11:168;:31;;;;-1:-1:-1;;;;;1919:31:168;;;;;;;;;2035:21;;;;;2054:1;2035:21;;;863:25:183;-1:-1:-1;;1919:31:168;2035:18;;836::183;;2035:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2010:46;;2078:5;2084:1;2078:8;;;;;;;;:::i;:::-;;;;;;;2070:5;;:16;;;;;-1:-1:-1;;;;;2070:16:168;;;;;-1:-1:-1;;;;;2070:16:168;;;;;;2111:5;2117:1;2111:8;;;;;;;;:::i;:::-;;;;;;;2100;;:19;;;;;-1:-1:-1;;;;;2100:19:168;;;;;-1:-1:-1;;;;;2100:19:168;;;;;;2147:5;2153:1;2147:8;;;;;;;;:::i;:::-;;;;;;;2133:11;;:22;;;;;-1:-1:-1;;;;;2133:22:168;;;;;-1:-1:-1;;;;;2133:22:168;;;;;;1960:206;2278:3;2246:37;;;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2246:37:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2234:9:168;:49;;;;-1:-1:-1;;;;;2234:49:168;;;;;;;;;2339:28;;;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2339:28:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2332:4:168;:35;;;;-1:-1:-1;;;;;2332:35:168;;;;;;;;;;2391;;2423:2;;2391:35;;;:::i;:::-;3434:2:183;3416:21;;;3473:1;3453:18;;;3446:29;3512:9;3506:3;3491:19;;3484:38;3560:3;3553:4;3538:20;;3531:33;;;3601:1;3580:19;;;3573:30;3640:5;3634:3;3619:19;;3612:34;3730:4;3718:17;;;-1:-1:-1;3698:18:183;;3691:45;3678:3;3663:19;2391:35:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2381:7:168;:45;;;;-1:-1:-1;;;;;2381:45:168;;;;;;;;;;2499:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2490:6:168;:21;;;;-1:-1:-1;;;;;2490:21:168;;;;;;;;;2618:29;;;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2618:29:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2607:8:168;:40;;;;-1:-1:-1;;;;;2607:40:168;;;;;;2687:6;;2703:4;;2670:39;;2687:6;;;;2703:4;;2670:39;;;:::i;:::-;-1:-1:-1;;;;;4263:15:183;;;4245:34;;4315:15;;4310:2;4295:18;;4288:43;4172:2;4157:18;2670:39:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2661:6:168;:48;;;;-1:-1:-1;;;;;2661:48:168;;;;;;2750:6;;2731:26;;2750:6;;;2731:26;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2731:26:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2723:5:168;:34;;;;-1:-1:-1;;;;;2723:34:168;;;;;;2857:6;;2843:21;;2857:6;;;2843:21;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2843:21:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2831:9:168;:33;;;;-1:-1:-1;;;;;2831:33:168;;;;;;2949:6;;2934:22;;2949:6;;;2934:22;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2934:22:168;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2921:10:168;:35;;;;-1:-1:-1;;;;;2921:35:168;;;;;;3065:8;;3097:28;;;;;;;;;;;;;;;;3065:61;;;;;:31;;;;:61;;:8;;;:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3049:13;:77;;;;-1:-1:-1;;;;;3049:77:168;;;;;;3154:6;;3184:23;;;;;;;;;;;;;;;;3154:54;;;;;:29;;;;:54;;:6;;;:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3140:11;:68;;;;-1:-1:-1;;;;;3140:68:168;;;;;;3319:6;;3371:8;;3319:62;;;;;:6;;;;:20;;:62;;-1:-1:-1;;3371:8:168;;3319:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3395:6:168;;3447;;3395:60;;;;;-1:-1:-1;;;;;3395:6:168;;;;-1:-1:-1;3395:20:168;;-1:-1:-1;3395:60:168;;:6;;3447;;3395:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3469:6:168;;3521:5;;3469:59;;;;;-1:-1:-1;;;;;3469:6:168;;;;-1:-1:-1;3469:20:168;;-1:-1:-1;3469:59:168;;:6;;3521:5;;3469:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3575:6:168;;3628:9;;3575:64;;;;;-1:-1:-1;;;;;3575:6:168;;;;-1:-1:-1;3575:20:168;;-1:-1:-1;3575:64:168;;3596:22;;3628:9;;3575:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3653:6:168;;3706:10;;3653:65;;;;;-1:-1:-1;;;;;3653:6:168;;;;-1:-1:-1;3653:20:168;;-1:-1:-1;3653:65:168;;3674:22;;3706:10;;3653:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3732:6:168;;3777:13;;3732:59;;;;;-1:-1:-1;;;;;3732:6:168;;;;-1:-1:-1;3732:20:168;;-1:-1:-1;3732:59:168;;3753:22;;3777:13;;3732:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3805:6:168;;3850:11;;3805:57;;;;;-1:-1:-1;;;;;3805:6:168;;;;-1:-1:-1;3805:20:168;;-1:-1:-1;3805:57:168;;3826:22;;3850:11;;3805:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3968:10:168;;4011:11;;3968:55;;;;;6287:20:183;3968:55:168;;;6269:39:183;-1:-1:-1;;;;;4011:11:168;;;6324:18:183;;;6317:83;3968:10:168;;;-1:-1:-1;3968:20:168;;-1:-1:-1;6242:18:183;;3968:55:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4037:10:168;;4079:8;;4037:51;;;;;6666:19:183;4037:51:168;;;6648:38:183;-1:-1:-1;;;;;4079:8:168;;;6702:18:183;;;6695:83;4037:10:168;;;-1:-1:-1;4037:20:168;;-1:-1:-1;6621:18:183;;4037:51:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4176:6:168;;4147:9;;:37;;-1:-1:-1;;;;;;4147:9:168;;;;-1:-1:-1;4147:15:168;;4176:6;4147:20;:37::i;:::-;4242:7;;4263:8;;4242:49;;;;;-1:-1:-1;;;;;4263:8:168;;;4242:49;;;6995:74:183;4274:16:168;7085:18:183;;;7078:34;4242:7:168;;;:12;;6968:18:183;;4242:49:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4364:11:168;;4355:21;;-1:-1:-1;;;4355:21:168;;-1:-1:-1;;;;;4364:11:168;;;4355:21;;;171:74:183;250:64:1;;-1:-1:-1;4355:8:168;;-1:-1:-1;144:18:183;;4355:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4386:6:168;;4422:11;;4386:68;;;;;-1:-1:-1;;;;;4422:11:168;;;4386:68;;;6995:74:183;4436:17:168;7085:18:183;;;7078:34;4386:6:168;;;-1:-1:-1;4386:27:168;;-1:-1:-1;6968:18:183;;4386:68:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4559:13:168;;4550:23;;-1:-1:-1;;;4550:23:168;;-1:-1:-1;;;;;4559:13:168;;;4550:23;;;171:74:183;250:64:1;;-1:-1:-1;4550:8:168;;-1:-1:-1;144:18:183;;4550:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4583:8:168;;4625:13;;4641:7;;4583:85;;;;;-1:-1:-1;;;;;4625:13:168;;;4583:85;;;7707:34:183;4641:7:168;;;7757:18:183;;;7750:43;4650:17:168;7809:18:183;;;7802:34;4583:8:168;;;-1:-1:-1;4583:33:168;;-1:-1:-1;7619:18:183;;4583:85:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4688:13:168;;4679:23;;-1:-1:-1;;;4679:23:168;;-1:-1:-1;;;;;4688:13:168;;;4679:23;;;171:74:183;250:64:1;;-1:-1:-1;4679:8:168;;-1:-1:-1;144:18:183;;4679:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4712:8:168;;4752:13;;4768:7;;4712:83;;;;;-1:-1:-1;;;;;4752:13:168;;;4712:83;;;7707:34:183;4768:7:168;;;7757:18:183;;;7750:43;4777:17:168;7809:18:183;;;7802:34;4712:8:168;;;-1:-1:-1;4712:31:168;;-1:-1:-1;7619:18:183;;4712:83:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:3027::o;10592:895::-;10741:6;;:15;;;;;;;;10730:27;;-1:-1:-1;;;;;10741:6:168;;:13;;:15;;;;;;;;;;;;;;:6;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10730:10;:27::i;:::-;10778:8;;:17;;;;;;;;10767:29;;-1:-1:-1;;;;;10778:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;10767:29;10902:123;;;10986:29;10902:123;;;;863:25:183;;;;10902:123:168;;;;;;;;;;836:18:183;;;;10902:123:168;;;;;;;;;10938:34;10902:123;;;11035:20;;;;;250:64:1;;11035:15:168;;:20;;10902:123;;11035:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11074:5:168;;11065:15;;-1:-1:-1;;;11065:15:168;;-1:-1:-1;;;;;11074:5:168;;;11065:15;;;171:74:183;250:64:1;;-1:-1:-1;11065:8:168;;-1:-1:-1;144:18:183;;11065:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11090:9;;;;;;;;;-1:-1:-1;;;;;11090:9:168;-1:-1:-1;;;;;11090:18:168;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11176:27;11187:6;;;;;;;;;-1:-1:-1;;;;;11187:6:168;-1:-1:-1;;;;;11187:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11176:27;11224:8;;:17;;;;;;;;11213:29;;-1:-1:-1;;;;;11224:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;11213:29;11308:11;;11299:21;;-1:-1:-1;;;11299:21:168;;-1:-1:-1;;;;;11308:11:168;;;11299:21;;;171:74:183;250:64:1;;11299:8:168;;144:18:183;;11299:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11330:9;;;;;;;;;-1:-1:-1;;;;;11330:9:168;-1:-1:-1;;;;;11330:18:168;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11412:28;11424:6;;;;;;;;;-1:-1:-1;;;;;11424:6:168;-1:-1:-1;;;;;11424:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11423:16;11412:10;:28::i;:::-;11462:8;;:17;;;;;;;;11450:30;;-1:-1:-1;;;;;11462:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;11450:30;10661:826;10592:895::o;20236:875::-;20358:11;;20349:21;;-1:-1:-1;;;20349:21:168;;-1:-1:-1;;;;;20358:11:168;;;20349:21;;;171:74:183;250:64:1;;20349:8:168;;144:18:183;;20349:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20380:9;;;;;;;;;-1:-1:-1;;;;;20380:9:168;-1:-1:-1;;;;;20380:25:168;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20458:28;20470:6;;;;;;;;;-1:-1:-1;;;;;20470:6:168;-1:-1:-1;;;;;20470:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20458:28;20591:122;;;20675:28;20591:122;;;;863:25:183;;;;20591:122:168;;;;;;;;;;836:18:183;;;;20591:122:168;;;;;;;;;20627:34;20591:122;;;20723:20;;;;;250:64:1;;20723:15:168;;:20;;20591:122;;20723:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20762:5:168;;20753:15;;-1:-1:-1;;;20753:15:168;;-1:-1:-1;;;;;20762:5:168;;;20753:15;;;171:74:183;250:64:1;;-1:-1:-1;20753:8:168;;-1:-1:-1;144:18:183;;20753:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20778:9;;;;;;;;;-1:-1:-1;;;;;20778:9:168;-1:-1:-1;;;;;20778:24:168;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20861:28;20873:6;;;;;;;;;-1:-1:-1;;;;;20873:6:168;-1:-1:-1;;;;;20873:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20861:28;20983:8;;20974:18;;-1:-1:-1;;;20974:18:168;;-1:-1:-1;;;;;20983:8:168;;;20974:18;;;171:74:183;250:64:1;;20974:8:168;;144:18:183;;20974::168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21002:9;;;;;;;;;-1:-1:-1;;;;;21002:9:168;-1:-1:-1;;;;;21002:24:168;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21077:27;21088:6;;;;;;;;;-1:-1:-1;;;;;21088:6:168;-1:-1:-1;;;;;21088:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13053:1611;13177:11;;13168:21;;-1:-1:-1;;;13168:21:168;;-1:-1:-1;;;;;13177:11:168;;;13168:21;;;171:74:183;250:64:1;;13168:8:168;;144:18:183;;13168:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13199:6:168;;13215:5;;13199:27;;;;;-1:-1:-1;;;;;13215:5:168;;;13199:27;;;6995:74:183;13222:3:168;7085:18:183;;;7078:34;13199:6:168;;;-1:-1:-1;13199:15:168;;-1:-1:-1;6968:18:183;;13199:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13274:11:168;;13265:21;;-1:-1:-1;;;13265:21:168;;-1:-1:-1;;;;;13274:11:168;;;13265:21;;;171:74:183;250:64:1;;-1:-1:-1;13265:8:168;;-1:-1:-1;144:18:183;;13265:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13296:9;;;;;;;;;-1:-1:-1;;;;;13296:9:168;-1:-1:-1;;;;;13296:25:168;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13374:28;13386:6;;;;;;;;;-1:-1:-1;;;;;13386:6:168;-1:-1:-1;;;;;13386:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13374:28;13479:44;;;;;;;;;;;;;;;;;;;;;;;13533:20;;;;;13479:44;;250:64:1;;13533:15:168;;:20;;13479:44;;13533:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13572:11:168;;13563:21;;-1:-1:-1;;;13563:21:168;;-1:-1:-1;;;;;13572:11:168;;;13563:21;;;171:74:183;250:64:1;;-1:-1:-1;13563:8:168;;-1:-1:-1;144:18:183;;13563:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13594:6:168;;13610:5;;13594:27;;;;;-1:-1:-1;;;;;13610:5:168;;;13594:27;;;6995:74:183;13617:3:168;7085:18:183;;;7078:34;13594:6:168;;;-1:-1:-1;13594:15:168;;-1:-1:-1;6968:18:183;;13594:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13682:4:168;;13697:5;;13682:21;;-1:-1:-1;;;13682:21:168;;-1:-1:-1;;;;;13697:5:168;;;13682:21;;;171:74:183;13673:36:168;;-1:-1:-1;13682:4:168;;;-1:-1:-1;13682:14:168;;144:18:183;;13682:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13705:3;13673:8;:36::i;:::-;13776:5;;13767:15;;-1:-1:-1;;;13767:15:168;;-1:-1:-1;;;;;13776:5:168;;;13767:15;;;171:74:183;250:64:1;;13767:8:168;;144:18:183;;13767:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13792:4:168;;13813:6;;13792:34;;;;;-1:-1:-1;;;;;13813:6:168;;;13792:34;;;6995:74:183;13822:3:168;7085:18:183;;;7078:34;13792:4:168;;;-1:-1:-1;13792:12:168;;-1:-1:-1;6968:18:183;;13792:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13837:20:168;;;;;250:64:1;;13837:15:168;;:20;;13853:3;;13837:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13876:11:168;;13867:21;;-1:-1:-1;;;13867:21:168;;-1:-1:-1;;;;;13876:11:168;;;13867:21;;;171:74:183;250:64:1;;-1:-1:-1;13867:8:168;;-1:-1:-1;144:18:183;;13867:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13898:6:168;;13914:5;;13898:27;;;;;-1:-1:-1;;;;;13914:5:168;;;13898:27;;;6995:74:183;13921:3:168;7085:18:183;;;7078:34;13898:6:168;;;-1:-1:-1;13898:15:168;;-1:-1:-1;6968:18:183;;13898:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13986:4:168;;14001:5;;13986:21;;-1:-1:-1;;;13986:21:168;;-1:-1:-1;;;;;14001:5:168;;;13986:21;;;171:74:183;13977:36:168;;-1:-1:-1;13986:4:168;;;-1:-1:-1;13986:14:168;;144:18:183;;13986:21:168;14:237:183;13977:36:168;14058:8;;14049:18;;-1:-1:-1;;;14049:18:168;;-1:-1:-1;;;;;14058:8:168;;;14049:18;;;171:74:183;250:64:1;;14049:8:168;;144:18:183;;14049::168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14077:9;;;;;;;;;-1:-1:-1;;;;;14077:9:168;-1:-1:-1;;;;;14077:24:168;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14152:27;14163:6;;;;;;;;;-1:-1:-1;;;;;14163:6:168;-1:-1:-1;;;;;14163:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14152:27;14249:11;;14240:21;;-1:-1:-1;;;14240:21:168;;-1:-1:-1;;;;;14249:11:168;;;14240:21;;;171:74:183;250:64:1;;14240:8:168;;144:18:183;;14240:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14271:6:168;;14287:5;;14271:27;;;;;-1:-1:-1;;;;;14287:5:168;;;14271:27;;;6995:74:183;14294:3:168;7085:18:183;;;7078:34;14271:6:168;;;-1:-1:-1;14271:15:168;;-1:-1:-1;6968:18:183;;14271:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14356:4:168;;14371:5;;14356:21;;-1:-1:-1;;;14356:21:168;;-1:-1:-1;;;;;14371:5:168;;;14356:21;;;171:74:183;14347:36:168;;-1:-1:-1;14356:4:168;;;-1:-1:-1;14356:14:168;;144:18:183;;14356:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14379:3;14347:8;:36::i;:::-;14453:5;;14444:15;;-1:-1:-1;;;14444:15:168;;-1:-1:-1;;;;;14453:5:168;;;14444:15;;;171:74:183;250:64:1;;14444:8:168;;144:18:183;;14444:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14469:4:168;;14490:6;;14469:34;;;;;-1:-1:-1;;;;;14490:6:168;;;14469:34;;;6995:74:183;14499:3:168;7085:18:183;;;7078:34;14469:4:168;;;-1:-1:-1;14469:12:168;;-1:-1:-1;6968:18:183;;14469:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14523:11:168;;14514:21;;-1:-1:-1;;;14514:21:168;;-1:-1:-1;;;;;14523:11:168;;;14514:21;;;171:74:183;250:64:1;;14514:8:168;;144:18:183;;14514:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14545:6:168;;14561:5;;14545:27;;;;;-1:-1:-1;;;;;14561:5:168;;;14545:27;;;6995:74:183;14568:3:168;7085:18:183;;;7078:34;14545:6:168;;;-1:-1:-1;14545:15:168;;-1:-1:-1;6968:18:183;;14545:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14630:4:168;;14645:5;;14630:21;;-1:-1:-1;;;14630:21:168;;-1:-1:-1;;;;;14645:5:168;;;14630:21;;;171:74:183;14621:36:168;;-1:-1:-1;14630:4:168;;;-1:-1:-1;14630:14:168;;144:18:183;;14630:21:168;14:237:183;19215:1015:168;19346:11;;19337:21;;-1:-1:-1;;;19337:21:168;;-1:-1:-1;;;;;19346:11:168;;;19337:21;;;171:74:183;250:64:1;;19337:8:168;;144:18:183;;19337:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19368:9;;;;;;;;;-1:-1:-1;;;;;19368:9:168;-1:-1:-1;;;;;19368:18:168;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19450:28;19462:6;;;;;;;;;-1:-1:-1;;;;;19462:6:168;-1:-1:-1;;;;;19462:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19450:28;19500:8;;:17;;;;;;;;19488:30;;-1:-1:-1;;;;;19500:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;19488:30;19623:122;;;19707:28;19623:122;;;;863:25:183;;;;19623:122:168;;;;;;;;;;836:18:183;;;;19623:122:168;;;;;;;;;19659:34;19623:122;;;19755:20;;;;;250:64:1;;19755:15:168;;:20;;19623:122;;19755:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19794:5:168;;19785:15;;-1:-1:-1;;;19785:15:168;;-1:-1:-1;;;;;19794:5:168;;;19785:15;;;171:74:183;250:64:1;;-1:-1:-1;19785:8:168;;-1:-1:-1;144:18:183;;19785:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19810:9;;;;;;;;;-1:-1:-1;;;;;19810:9:168;-1:-1:-1;;;;;19810:17:168;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19897:28;19909:6;;;;;;;;;-1:-1:-1;;;;;19909:6:168;-1:-1:-1;;;;;19909:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19897:28;19947:8;;:17;;;;;;;;19935:30;;-1:-1:-1;;;;;19947:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;19935:30;20059:8;;20050:18;;-1:-1:-1;;;20050:18:168;;-1:-1:-1;;;;;20059:8:168;;;20050:18;;;171:74:183;250:64:1;;20050:8:168;;144:18:183;;20050::168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20078:9;;;;;;;;;-1:-1:-1;;;;;20078:9:168;-1:-1:-1;;;;;20078:17:168;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20157:27;20168:6;;;;;;;;;-1:-1:-1;;;;;20168:6:168;-1:-1:-1;;;;;20168:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20157:27;20205:8;;:17;;;;;;;;20194:29;;-1:-1:-1;;;;;20205:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;11493:765;11638:6;;:15;;;;;;;;11627:27;;-1:-1:-1;;;;;11638:6:168;;:13;;:15;;;;;;;;;;;;;;:6;:15;;;;;;;;;;;;;;11627:27;11760:123;;;11844:29;11760:123;;;;863:25:183;;;;11760:123:168;;;;;;;;;;836:18:183;;;;11760:123:168;;;;;;;;;11796:34;11760:123;;;11893:20;;;;;250:64:1;;11893:15:168;;:20;;11760:123;;11893:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11932:5:168;;11923:15;;-1:-1:-1;;;11923:15:168;;-1:-1:-1;;;;;11932:5:168;;;11923:15;;;171:74:183;250:64:1;;-1:-1:-1;11923:8:168;;-1:-1:-1;144:18:183;;11923:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11948:9;;;;;;;;;-1:-1:-1;;;;;11948:9:168;-1:-1:-1;;;;;11948:25:168;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12030;12041:6;;;;;;;;;-1:-1:-1;;;;;12041:6:168;-1:-1:-1;;;;;12041:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12030:27;12123:11;;12114:21;;-1:-1:-1;;;12114:21:168;;-1:-1:-1;;;;;12123:11:168;;;12114:21;;;171:74:183;250:64:1;;12114:8:168;;144:18:183;;12114:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12145:9;;;;;;;;;-1:-1:-1;;;;;12145:9:168;-1:-1:-1;;;;;12145:25:168;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12223:28;12235:6;;;;;;;;;-1:-1:-1;;;;;12235:6:168;-1:-1:-1;;;;;12235:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14670:1615;14768:11;;14759:21;;-1:-1:-1;;;14759:21:168;;-1:-1:-1;;;;;14768:11:168;;;14759:21;;;171:74:183;250:64:1;;14759:8:168;;144:18:183;;14759:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14790:9;;;;;;;;;-1:-1:-1;;;;;14790:9:168;-1:-1:-1;;;;;14790:29:168;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14872:30;14884:8;;;;;;;;;-1:-1:-1;;;;;14884:8:168;-1:-1:-1;;;;;14884:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14872:30;14986:44;;;;;;;;;;;;;;;;;;;;;;;15040:20;;;;;14986:44;;250:64:1;;15040:15:168;;:20;;14986:44;;15040:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15079:13:168;;15070:23;;-1:-1:-1;;;15070:23:168;;-1:-1:-1;;;;;15079:13:168;;;15070:23;;;171:74:183;250:64:1;;-1:-1:-1;15070:8:168;;-1:-1:-1;144:18:183;;15070:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15103:8:168;;15129:5;;15136:7;;15103:47;;;;;-1:-1:-1;;;;;15129:5:168;;;15103:47;;;7707:34:183;15136:7:168;;;7757:18:183;;;7750:43;15145:4:168;7809:18:183;;;7802:34;15103:8:168;;;-1:-1:-1;15103:25:168;;-1:-1:-1;7619:18:183;;15103:47:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15217:7:168;;15235:5;;15217:24;;-1:-1:-1;;;15217:24:168;;-1:-1:-1;;;;;15235:5:168;;;15217:24;;;171:74:183;15208:37:168;;-1:-1:-1;15217:7:168;;;-1:-1:-1;15217:17:168;;144:18:183;;15217:24:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15243:1;15208:8;:37::i;:::-;15313:13;;15304:23;;-1:-1:-1;;;15304:23:168;;-1:-1:-1;;;;;15313:13:168;;;15304:23;;;171:74:183;250:64:1;;15304:8:168;;144:18:183;;15304:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15337:20:168;;;;;250:64:1;;-1:-1:-1;15337:15:168;;-1:-1:-1;15337:20:168;;15353:3;;15337:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15367:8:168;;15386:7;;15367:33;;;;;-1:-1:-1;;;;;15386:7:168;;;15367:33;;;6995:74:183;15395:4:168;7085:18:183;;;7078:34;15367:8:168;;;-1:-1:-1;15367:18:168;;-1:-1:-1;6968:18:183;;15367:33:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15463:7:168;;15481:13;;15463:32;;-1:-1:-1;;;15463:32:168;;-1:-1:-1;;;;;15481:13:168;;;15463:32;;;171:74:183;15454:45:168;;-1:-1:-1;15463:7:168;;;-1:-1:-1;15463:17:168;;144:18:183;;15463:32:168;14:237:183;15454:45:168;15518:8;;15539:7;;15548:13;;15518:44;;;;;-1:-1:-1;;;;;15539:7:168;;;15518:44;;;4245:34:183;15548:13:168;;;4295:18:183;;;4288:43;15509:57:168;;15518:8;;;;;:20;;4157:18:183;;15518:44:168;3994:343:183;15509:57:168;15611:8;;15602:18;;-1:-1:-1;;;15602:18:168;;-1:-1:-1;;;;;15611:8:168;;;15602:18;;;171:74:183;250:64:1;;15602:8:168;;144:18:183;;15602::168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15630:9;;;;;;;;;-1:-1:-1;;;;;15630:9:168;-1:-1:-1;;;;;15630:28:168;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15709:29;15720:8;;;;;;;;;-1:-1:-1;;;;;15720:8:168;-1:-1:-1;;;;;15720:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15709:29;15815:13;;15806:23;;-1:-1:-1;;;15806:23:168;;-1:-1:-1;;;;;15815:13:168;;;15806:23;;;171:74:183;250:64:1;;15806:8:168;;144:18:183;;15806:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15839:8:168;;15865:5;;15872:7;;15839:47;;;;;-1:-1:-1;;;;;15865:5:168;;;15839:47;;;7707:34:183;15872:7:168;;;7757:18:183;;;7750:43;15881:4:168;7809:18:183;;;7802:34;15839:8:168;;;-1:-1:-1;15839:25:168;;-1:-1:-1;7619:18:183;;15839:47:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15950:7:168;;15968:5;;15950:24;;-1:-1:-1;;;15950:24:168;;-1:-1:-1;;;;;15968:5:168;;;15950:24;;;171:74:183;15941:40:168;;-1:-1:-1;15950:7:168;;;-1:-1:-1;15950:17:168;;144:18:183;;15950:24:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15976:4;15941:8;:40::i;:::-;16052:13;;16043:23;;-1:-1:-1;;;16043:23:168;;-1:-1:-1;;;;;16052:13:168;;;16043:23;;;171:74:183;250:64:1;;16043:8:168;;144:18:183;;16043:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16076:8:168;;16095:7;;16076:33;;;;;-1:-1:-1;;;;;16095:7:168;;;16076:33;;;6995:74:183;16104:4:168;7085:18:183;;;7078:34;16076:8:168;;;-1:-1:-1;16076:18:168;;-1:-1:-1;6968:18:183;;16076:33:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16169:7:168;;16187:13;;16169:32;;-1:-1:-1;;;16169:32:168;;-1:-1:-1;;;;;16187:13:168;;;16169:32;;;171:74:183;16160:48:168;;-1:-1:-1;16169:7:168;;;-1:-1:-1;16169:17:168;;144:18:183;;16169:32:168;14:237:183;16160:48:168;16227:8;;16248:7;;16257:13;;16227:44;;;;;-1:-1:-1;;;;;16248:7:168;;;16227:44;;;4245:34:183;16257:13:168;;;4295:18:183;;;4288:43;16218:60:168;;16227:8;;;;;:20;;4157:18:183;;16227:44:168;3994:343:183;12264:783:168;12413:8;;:17;;;;;;;;12402:29;;-1:-1:-1;;;;;12413:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;12402:29;12537:123;;;12621:29;12537:123;;;;863:25:183;;;;12537:123:168;;;;;;;;;;836:18:183;;;;12537:123:168;;;;;;;;;12573:34;12537:123;;;12670:20;;;;;250:64:1;;12670:15:168;;:20;;12537:123;;12670:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12709:5:168;;12700:15;;-1:-1:-1;;;12700:15:168;;-1:-1:-1;;;;;12709:5:168;;;12700:15;;;171:74:183;250:64:1;;-1:-1:-1;12700:8:168;;-1:-1:-1;144:18:183;;12700:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12725:9;;;;;;;;;-1:-1:-1;;;;;12725:9:168;-1:-1:-1;;;;;12725:29:168;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12811:29;12822:8;;;;;;;;;-1:-1:-1;;;;;12822:8:168;-1:-1:-1;;;;;12822:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12811:29;12906:11;;12897:21;;-1:-1:-1;;;12897:21:168;;-1:-1:-1;;;;;12906:11:168;;;12897:21;;;171:74:183;250:64:1;;12897:8:168;;144:18:183;;12897:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12928:9;;;;;;;;;-1:-1:-1;;;;;12928:9:168;-1:-1:-1;;;;;12928:29:168;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13010:30;13022:8;;;;;;;;;-1:-1:-1;;;;;13022:8:168;-1:-1:-1;;;;;13022:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16291:2918;16410:11;;16401:21;;-1:-1:-1;;;16401:21:168;;-1:-1:-1;;;;;16410:11:168;;;16401:21;;;171:74:183;250:64:1;;16401:8:168;;144:18:183;;16401:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16432:6:168;;16448:5;;16432:27;;;;;-1:-1:-1;;;;;16448:5:168;;;16432:27;;;6995:74:183;16455:3:168;7085:18:183;;;7078:34;16432:6:168;;;-1:-1:-1;16432:15:168;;-1:-1:-1;6968:18:183;;16432:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16523:11:168;;16514:21;;-1:-1:-1;;;16514:21:168;;-1:-1:-1;;;;;16523:11:168;;;16514:21;;;171:74:183;250:64:1;;-1:-1:-1;16514:8:168;;-1:-1:-1;144:18:183;;16514:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16545:9;;;;;;;;;-1:-1:-1;;;;;16545:9:168;-1:-1:-1;;;;;16545:18:168;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16627:28;16639:6;;;;;;;;;-1:-1:-1;;;;;16639:6:168;-1:-1:-1;;;;;16639:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16627:28;16677:8;;:17;;;;;;;;16665:30;;-1:-1:-1;;;;;16677:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;16665:30;16772:44;;;;;;;;;;;;;;;;;;;;;;;16826:20;;;;;16772:44;;250:64:1;;16826:15:168;;:20;;16772:44;;16826:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16865:11:168;;16856:21;;-1:-1:-1;;;16856:21:168;;-1:-1:-1;;;;;16865:11:168;;;16856:21;;;171:74:183;250:64:1;;-1:-1:-1;16856:8:168;;-1:-1:-1;144:18:183;;16856:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16887:6:168;;16903:5;;16887:27;;;;;-1:-1:-1;;;;;16903:5:168;;;16887:27;;;6995:74:183;16910:3:168;7085:18:183;;;7078:34;16887:6:168;;;-1:-1:-1;16887:15:168;;-1:-1:-1;6968:18:183;;16887:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16975:4:168;;16990:5;;16975:21;;-1:-1:-1;;;16975:21:168;;-1:-1:-1;;;;;16990:5:168;;;16975:21;;;171:74:183;16966:36:168;;-1:-1:-1;16975:4:168;;;-1:-1:-1;16975:14:168;;144:18:183;;16975:21:168;14:237:183;16966:36:168;17069:5;;17060:15;;-1:-1:-1;;;17060:15:168;;-1:-1:-1;;;;;17069:5:168;;;17060:15;;;171:74:183;250:64:1;;17060:8:168;;144:18:183;;17060:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17085:4:168;;17106:6;;17085:34;;;;;-1:-1:-1;;;;;17106:6:168;;;17085:34;;;6995:74:183;17115:3:168;7085:18:183;;;7078:34;17085:4:168;;;-1:-1:-1;17085:12:168;;-1:-1:-1;6968:18:183;;17085:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17130:20:168;;;;;250:64:1;;17130:15:168;;:20;;17146:3;;17130:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17169:11:168;;17160:21;;-1:-1:-1;;;17160:21:168;;-1:-1:-1;;;;;17169:11:168;;;17160:21;;;171:74:183;250:64:1;;-1:-1:-1;17160:8:168;;-1:-1:-1;144:18:183;;17160:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17191:6:168;;17207:5;;17191:27;;;;;-1:-1:-1;;;;;17207:5:168;;;17191:27;;;6995:74:183;17214:3:168;7085:18:183;;;7078:34;17191:6:168;;;-1:-1:-1;17191:15:168;;-1:-1:-1;6968:18:183;;17191:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17279:4:168;;17294:5;;17279:21;;-1:-1:-1;;;17279:21:168;;-1:-1:-1;;;;;17294:5:168;;;17279:21;;;171:74:183;17270:36:168;;-1:-1:-1;17279:4:168;;;-1:-1:-1;17279:14:168;;144:18:183;;17279:21:168;14:237:183;17270:36:168;-1:-1:-1;17377:44:168;;;;;;;;;;;;;;;;;;;;;;;17431:20;;;;;17377:44;;250:64:1;;17431:15:168;;:20;;17377:44;;17431:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17470:13:168;;17461:23;;-1:-1:-1;;;17461:23:168;;-1:-1:-1;;;;;17470:13:168;;;17461:23;;;171:74:183;250:64:1;;-1:-1:-1;17461:8:168;;-1:-1:-1;144:18:183;;17461:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17494:8:168;;17520:5;;17527:7;;17494:47;;;;;-1:-1:-1;;;;;17520:5:168;;;17494:47;;;7707:34:183;17527:7:168;;;7757:18:183;;;7750:43;17536:4:168;7809:18:183;;;7802:34;17494:8:168;;;-1:-1:-1;17494:25:168;;-1:-1:-1;7619:18:183;;17494:47:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17608:7:168;;17626:5;;17608:24;;-1:-1:-1;;;17608:24:168;;-1:-1:-1;;;;;17626:5:168;;;17608:24;;;171:74:183;17599:37:168;;-1:-1:-1;17608:7:168;;;-1:-1:-1;17608:17:168;;144:18:183;;17608:24:168;14:237:183;17599:37:168;17704:13;;17695:23;;-1:-1:-1;;;17695:23:168;;-1:-1:-1;;;;;17704:13:168;;;17695:23;;;171:74:183;250:64:1;;17695:8:168;;144:18:183;;17695:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17728:20:168;;;;;250:64:1;;-1:-1:-1;17728:15:168;;-1:-1:-1;17728:20:168;;17744:3;;17728:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17758:8:168;;17777:7;;17758:33;;;;;-1:-1:-1;;;;;17777:7:168;;;17758:33;;;6995:74:183;17786:4:168;7085:18:183;;;7078:34;17758:8:168;;;-1:-1:-1;17758:18:168;;-1:-1:-1;6968:18:183;;17758:33:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17854:7:168;;17872:13;;17854:32;;-1:-1:-1;;;17854:32:168;;-1:-1:-1;;;;;17872:13:168;;;17854:32;;;171:74:183;17845:45:168;;-1:-1:-1;17854:7:168;;;-1:-1:-1;17854:17:168;;144:18:183;;17854:32:168;14:237:183;17845:45:168;17909:8;;17930:7;;17939:13;;17909:44;;;;;-1:-1:-1;;;;;17930:7:168;;;17909:44;;;4245:34:183;17939:13:168;;;4295:18:183;;;4288:43;17900:57:168;;17909:8;;;;;:20;;4157:18:183;;17909:44:168;3994:343:183;17900:57:168;18020:8;;18011:18;;-1:-1:-1;;;18011:18:168;;-1:-1:-1;;;;;18020:8:168;;;18011:18;;;171:74:183;250:64:1;;18011:8:168;;144:18:183;;18011::168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18039:9;;;;;;;;;-1:-1:-1;;;;;18039:9:168;-1:-1:-1;;;;;18039:17:168;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18118:27;18129:6;;;;;;;;;-1:-1:-1;;;;;18129:6:168;-1:-1:-1;;;;;18129:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18118:27;18166:8;;:17;;;;;;;;18155:29;;-1:-1:-1;;;;;18166:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;18155:29;18254:11;;18245:21;;-1:-1:-1;;;18245:21:168;;-1:-1:-1;;;;;18254:11:168;;;18245:21;;;171:74:183;250:64:1;;18245:8:168;;144:18:183;;18245:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18276:6:168;;18292:5;;18276:27;;;;;-1:-1:-1;;;;;18292:5:168;;;18276:27;;;6995:74:183;18299:3:168;7085:18:183;;;7078:34;18276:6:168;;;-1:-1:-1;18276:15:168;;-1:-1:-1;6968:18:183;;18276:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18361:4:168;;18376:5;;18361:21;;-1:-1:-1;;;18361:21:168;;-1:-1:-1;;;;;18376:5:168;;;18361:21;;;171:74:183;18352:36:168;;-1:-1:-1;18361:4:168;;;-1:-1:-1;18361:14:168;;144:18:183;;18361:21:168;14:237:183;18352:36:168;18458:5;;18449:15;;-1:-1:-1;;;18449:15:168;;-1:-1:-1;;;;;18458:5:168;;;18449:15;;;171:74:183;250:64:1;;18449:8:168;;144:18:183;;18449:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18474:4:168;;18495:6;;18474:34;;;;;-1:-1:-1;;;;;18495:6:168;;;18474:34;;;6995:74:183;18504:3:168;7085:18:183;;;7078:34;18474:4:168;;;-1:-1:-1;18474:12:168;;-1:-1:-1;6968:18:183;;18474:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18528:11:168;;18519:21;;-1:-1:-1;;;18519:21:168;;-1:-1:-1;;;;;18528:11:168;;;18519:21;;;171:74:183;250:64:1;;18519:8:168;;144:18:183;;18519:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18550:6:168;;18566:5;;18550:27;;;;;-1:-1:-1;;;;;18566:5:168;;;18550:27;;;6995:74:183;18573:3:168;7085:18:183;;;7078:34;18550:6:168;;;-1:-1:-1;18550:15:168;;-1:-1:-1;6968:18:183;;18550:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18635:4:168;;18650:5;;18635:21;;-1:-1:-1;;;18635:21:168;;-1:-1:-1;;;;;18650:5:168;;;18635:21;;;171:74:183;18626:36:168;;-1:-1:-1;18635:4:168;;;-1:-1:-1;18635:14:168;;144:18:183;;18635:21:168;14:237:183;8029:2557:168;8152:6;;:15;;;;;;;;8141:27;;-1:-1:-1;;;;;8152:6:168;;:13;;:15;;;;;;;;;;;;;;:6;:15;;;;;;;;;;;;;;8141:27;8189:8;;:17;;;;;;;;8178:29;;-1:-1:-1;;;;;8189:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;8178:29;8270:11;;8261:21;;-1:-1:-1;;;8261:21:168;;-1:-1:-1;;;;;8270:11:168;;;8261:21;;;171:74:183;250:64:1;;8261:8:168;;144:18:183;;8261:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8292:6:168;;8308:5;;8292:27;;;;;-1:-1:-1;;;;;8308:5:168;;;8292:27;;;6995:74:183;8315:3:168;7085:18:183;;;7078:34;8292:6:168;;;-1:-1:-1;8292:15:168;;-1:-1:-1;6968:18:183;;8292:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8338:4:168;;8353:5;;8338:21;;-1:-1:-1;;;8338:21:168;;-1:-1:-1;;;;;8353:5:168;;;8338:21;;;171:74:183;8329:36:168;;-1:-1:-1;8338:4:168;;;-1:-1:-1;8338:14:168;;144:18:183;;8338:21:168;14:237:183;8329:36:168;8432:5;;8423:15;;-1:-1:-1;;;8423:15:168;;-1:-1:-1;;;;;8432:5:168;;;8423:15;;;171:74:183;250:64:1;;8423:8:168;;144:18:183;;8423:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8448:4:168;;8469:6;;8448:34;;;;;-1:-1:-1;;;;;8469:6:168;;;8448:34;;;6995:74:183;8478:3:168;7085:18:183;;;7078:34;8448:4:168;;;-1:-1:-1;8448:12:168;;-1:-1:-1;6968:18:183;;8448:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8502:11:168;;8493:21;;-1:-1:-1;;;8493:21:168;;-1:-1:-1;;;;;8502:11:168;;;8493:21;;;171:74:183;250:64:1;;8493:8:168;;144:18:183;;8493:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8524:6:168;;8540:5;;8524:27;;;;;-1:-1:-1;;;;;8540:5:168;;;8524:27;;;6995:74:183;8547:3:168;7085:18:183;;;7078:34;8524:6:168;;;-1:-1:-1;8524:15:168;;-1:-1:-1;6968:18:183;;8524:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8570:4:168;;8585:5;;8570:21;;-1:-1:-1;;;8570:21:168;;-1:-1:-1;;;;;8585:5:168;;;8570:21;;;171:74:183;8561:36:168;;-1:-1:-1;8570:4:168;;;-1:-1:-1;8570:14:168;;144:18:183;;8570:21:168;14:237:183;8561:36:168;8671:13;;8662:23;;-1:-1:-1;;;8662:23:168;;-1:-1:-1;;;;;8671:13:168;;;8662:23;;;171:74:183;250:64:1;;8662:8:168;;144:18:183;;8662:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8695:8:168;;8721:5;;8728:7;;8695:47;;;;;-1:-1:-1;;;;;8721:5:168;;;8695:47;;;7707:34:183;8728:7:168;;;7757:18:183;;;7750:43;8737:4:168;7809:18:183;;;7802:34;8695:8:168;;;-1:-1:-1;8695:25:168;;-1:-1:-1;7619:18:183;;8695:47:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8761:7:168;;8779:5;;8761:24;;-1:-1:-1;;;8761:24:168;;-1:-1:-1;;;;;8779:5:168;;;8761:24;;;171:74:183;8752:40:168;;-1:-1:-1;8761:7:168;;;-1:-1:-1;8761:17:168;;144:18:183;;8761:24:168;14:237:183;8752:40:168;8861:13;;8852:23;;-1:-1:-1;;;8852:23:168;;-1:-1:-1;;;;;8861:13:168;;;8852:23;;;171:74:183;250:64:1;;8852:8:168;;144:18:183;;8852:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8885:8:168;;8904:7;;8885:33;;;;;-1:-1:-1;;;;;8904:7:168;;;8885:33;;;6995:74:183;8913:4:168;7085:18:183;;;7078:34;8885:8:168;;;-1:-1:-1;8885:18:168;;-1:-1:-1;6968:18:183;;8885:33:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8982:7:168;;9000:13;;8982:32;;-1:-1:-1;;;8982:32:168;;-1:-1:-1;;;;;9000:13:168;;;8982:32;;;171:74:183;8973:48:168;;-1:-1:-1;8982:7:168;;;-1:-1:-1;8982:17:168;;144:18:183;;8982:32:168;14:237:183;8973:48:168;9040:8;;9061:7;;9070:13;;9040:44;;;;;-1:-1:-1;;;;;9061:7:168;;;9040:44;;;4245:34:183;9070:13:168;;;4295:18:183;;;4288:43;9031:60:168;;9040:8;;;;;:20;;4157:18:183;;9040:44:168;3994:343:183;9031:60:168;9136:11;;9127:21;;-1:-1:-1;;;9127:21:168;;-1:-1:-1;;;;;9136:11:168;;;9127:21;;;171:74:183;250:64:1;;9127:8:168;;144:18:183;;9127:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9158:9;;;;;;;;;-1:-1:-1;;;;;9158:9:168;-1:-1:-1;;;;;9158:18:168;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9240:28;9252:6;;;;;;;;;-1:-1:-1;;;;;9252:6:168;-1:-1:-1;;;;;9252:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9240:28;9290:8;;:17;;;;;;;;9278:30;;-1:-1:-1;;;;;9290:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;9278:30;9385:44;;;;;;;;;;;;;;;;;;;;;;;9439:20;;;;;9385:44;;250:64:1;;9439:15:168;;:20;;9385:44;;9439:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9478:11:168;;9469:21;;-1:-1:-1;;;9469:21:168;;-1:-1:-1;;;;;9478:11:168;;;9469:21;;;171:74:183;250:64:1;;-1:-1:-1;9469:8:168;;-1:-1:-1;144:18:183;;9469:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9500:6:168;;9516:5;;9500:27;;;;;-1:-1:-1;;;;;9516:5:168;;;9500:27;;;6995:74:183;9523:3:168;7085:18:183;;;7078:34;9500:6:168;;;-1:-1:-1;9500:15:168;;-1:-1:-1;6968:18:183;;9500:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9588:4:168;;9603:5;;9588:21;;-1:-1:-1;;;9588:21:168;;-1:-1:-1;;;;;9603:5:168;;;9588:21;;;171:74:183;9579:36:168;;-1:-1:-1;9588:4:168;;;-1:-1:-1;9588:14:168;;144:18:183;;9588:21:168;14:237:183;9579:36:168;9682:5;;9673:15;;-1:-1:-1;;;9673:15:168;;-1:-1:-1;;;;;9682:5:168;;;9673:15;;;171:74:183;250:64:1;;9673:8:168;;144:18:183;;9673:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9698:4:168;;9719:6;;9698:34;;;;;-1:-1:-1;;;;;9719:6:168;;;9698:34;;;6995:74:183;9728:3:168;7085:18:183;;;7078:34;9698:4:168;;;-1:-1:-1;9698:12:168;;-1:-1:-1;6968:18:183;;9698:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9743:20:168;;;;;250:64:1;;9743:15:168;;:20;;9759:3;;9743:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9782:11:168;;9773:21;;-1:-1:-1;;;9773:21:168;;-1:-1:-1;;;;;9782:11:168;;;9773:21;;;171:74:183;250:64:1;;-1:-1:-1;9773:8:168;;-1:-1:-1;144:18:183;;9773:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9804:6:168;;9820:5;;9804:27;;;;;-1:-1:-1;;;;;9820:5:168;;;9804:27;;;6995:74:183;9827:3:168;7085:18:183;;;7078:34;9804:6:168;;;-1:-1:-1;9804:15:168;;-1:-1:-1;6968:18:183;;9804:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9892:4:168;;9907:5;;9892:21;;-1:-1:-1;;;9892:21:168;;-1:-1:-1;;;;;9907:5:168;;;9892:21;;;171:74:183;9883:36:168;;-1:-1:-1;9892:4:168;;;-1:-1:-1;9892:14:168;;144:18:183;;9892:21:168;14:237:183;9883:36:168;-1:-1:-1;9990:44:168;;;;;;;;;;;;;;;;;;;;;;;10044:20;;;;;9990:44;;250:64:1;;10044:15:168;;:20;;9990:44;;10044:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10083:13:168;;10074:23;;-1:-1:-1;;;10074:23:168;;-1:-1:-1;;;;;10083:13:168;;;10074:23;;;171:74:183;250:64:1;;-1:-1:-1;10074:8:168;;-1:-1:-1;144:18:183;;10074:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10107:8:168;;10133:5;;10140:7;;10107:47;;;;;-1:-1:-1;;;;;10133:5:168;;;10107:47;;;7707:34:183;10140:7:168;;;7757:18:183;;;7750:43;10149:4:168;7809:18:183;;;7802:34;10107:8:168;;;-1:-1:-1;10107:25:168;;-1:-1:-1;7619:18:183;;10107:47:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10221:7:168;;10239:5;;10221:24;;-1:-1:-1;;;10221:24:168;;-1:-1:-1;;;;;10239:5:168;;;10221:24;;;171:74:183;10212:40:168;;-1:-1:-1;10221:7:168;;;-1:-1:-1;10221:17:168;;144:18:183;;10221:24:168;14:237:183;10212:40:168;10320:13;;10311:23;;-1:-1:-1;;;10311:23:168;;-1:-1:-1;;;;;10320:13:168;;;10311:23;;;171:74:183;250:64:1;;10311:8:168;;144:18:183;;10311:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10344:20:168;;;;;250:64:1;;-1:-1:-1;10344:15:168;;-1:-1:-1;10344:20:168;;10360:3;;10344:20;;;:::i;5165:1318::-;5282:6;;:15;;;;;;;;5271:27;;-1:-1:-1;;;;;5282:6:168;;:13;;:15;;;;;;;;;;;;;;:6;:15;;;;;;;;;;;;;;5271:27;5365:11;;5356:21;;-1:-1:-1;;;5356:21:168;;-1:-1:-1;;;;;5365:11:168;;;5356:21;;;171:74:183;250:64:1;;5356:8:168;;144:18:183;;5356:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5387:6:168;;5403:5;;5387:27;;;;;-1:-1:-1;;;;;5403:5:168;;;5387:27;;;6995:74:183;5410:3:168;7085:18:183;;;7078:34;5387:6:168;;;-1:-1:-1;5387:15:168;;-1:-1:-1;6968:18:183;;5387:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5433:4:168;;5448:5;;5433:21;;-1:-1:-1;;;5433:21:168;;-1:-1:-1;;;;;5448:5:168;;;5433:21;;;171:74:183;5424:36:168;;-1:-1:-1;5433:4:168;;;-1:-1:-1;5433:14:168;;144:18:183;;5433:21:168;14:237:183;5424:36:168;5527:5;;5518:15;;-1:-1:-1;;;5518:15:168;;-1:-1:-1;;;;;5527:5:168;;;5518:15;;;171:74:183;250:64:1;;5518:8:168;;144:18:183;;5518:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5543:4:168;;5564:6;;5543:34;;;;;-1:-1:-1;;;;;5564:6:168;;;5543:34;;;6995:74:183;5573:3:168;7085:18:183;;;7078:34;5543:4:168;;;-1:-1:-1;5543:12:168;;-1:-1:-1;6968:18:183;;5543:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5596:11:168;;5587:21;;-1:-1:-1;;;5587:21:168;;-1:-1:-1;;;;;5596:11:168;;;5587:21;;;171:74:183;250:64:1;;5587:8:168;;144:18:183;;5587:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5618:6:168;;5634:5;;5618:27;;;;;-1:-1:-1;;;;;5634:5:168;;;5618:27;;;6995:74:183;5641:3:168;7085:18:183;;;7078:34;5618:6:168;;;-1:-1:-1;5618:15:168;;-1:-1:-1;6968:18:183;;5618:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5664:4:168;;5679:5;;5664:21;;-1:-1:-1;;;5664:21:168;;-1:-1:-1;;;;;5679:5:168;;;5664:21;;;171:74:183;5655:36:168;;-1:-1:-1;5664:4:168;;;-1:-1:-1;5664:14:168;;144:18:183;;5664:21:168;14:237:183;5655:36:168;5737:11;;5728:21;;-1:-1:-1;;;5728:21:168;;-1:-1:-1;;;;;5737:11:168;;;5728:21;;;171:74:183;250:64:1;;5728:8:168;;144:18:183;;5728:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5759:9;;;;;;;;;-1:-1:-1;;;;;5759:9:168;-1:-1:-1;;;;;5759:25:168;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5837:28;5849:6;;;;;;;;;-1:-1:-1;;;;;5849:6:168;-1:-1:-1;;;;;5849:13:168;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5837:28;5942:44;;;;;;;;;;;;;;;;;;;;;;;5996:20;;;;;5942:44;;250:64:1;;5996:15:168;;:20;;5942:44;;5996:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6035:11:168;;6026:21;;-1:-1:-1;;;6026:21:168;;-1:-1:-1;;;;;6035:11:168;;;6026:21;;;171:74:183;250:64:1;;-1:-1:-1;6026:8:168;;-1:-1:-1;144:18:183;;6026:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6057:6:168;;6073:5;;6057:27;;;;;-1:-1:-1;;;;;6073:5:168;;;6057:27;;;6995:74:183;6080:3:168;7085:18:183;;;7078:34;6057:6:168;;;-1:-1:-1;6057:15:168;;-1:-1:-1;6968:18:183;;6057:27:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6145:4:168;;6160:5;;6145:21;;-1:-1:-1;;;6145:21:168;;-1:-1:-1;;;;;6160:5:168;;;6145:21;;;171:74:183;6136:36:168;;-1:-1:-1;6145:4:168;;;-1:-1:-1;6145:14:168;;144:18:183;;6145:21:168;14:237:183;6136:36:168;6239:5;;6230:15;;-1:-1:-1;;;6230:15:168;;-1:-1:-1;;;;;6239:5:168;;;6230:15;;;171:74:183;250:64:1;;6230:8:168;;144:18:183;;6230:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6255:4:168;;6276:6;;6255:34;;;;;-1:-1:-1;;;;;6276:6:168;;;6255:34;;;6995:74:183;6285:3:168;7085:18:183;;;7078:34;6255:4:168;;;-1:-1:-1;6255:12:168;;-1:-1:-1;6968:18:183;;6255:34:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6300:20:168;;;;;250:64:1;;6300:15:168;;:20;;6316:3;;6300:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6339:11:168;;6330:21;;-1:-1:-1;;;6330:21:168;;-1:-1:-1;;;;;6339:11:168;;;6330:21;;;171:74:183;250:64:1;;-1:-1:-1;6330:8:168;;-1:-1:-1;144:18:183;;6330:21:168;14:237:183;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6995:74:183;;;2221:17:0;7085:18:183;;;7078:34;2196:43:0;;;;;;;;;6968:18:183;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;6489:1534:168:-;6606:8;;:17;;;;;;;;6595:29;;-1:-1:-1;;;;;6606:8:168;;:15;;:17;;;;;;;;;;;;;;:8;:17;;;;;;;;;;;;;;6595:29;6698:13;;6689:23;;-1:-1:-1;;;6689:23:168;;-1:-1:-1;;;;;6698:13:168;;;6689:23;;;171:74:183;250:64:1;;6689:8:168;;144:18:183;;6689:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6722:8:168;;6748:5;;6755:7;;6722:47;;;;;-1:-1:-1;;;;;6748:5:168;;;6722:47;;;7707:34:183;6755:7:168;;;7757:18:183;;;7750:43;6764:4:168;7809:18:183;;;7802:34;6722:8:168;;;-1:-1:-1;6722:25:168;;-1:-1:-1;7619:18:183;;6722:47:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6833:7:168;;6851:5;;6833:24;;-1:-1:-1;;;6833:24:168;;-1:-1:-1;;;;;6851:5:168;;;6833:24;;;171:74:183;6824:40:168;;-1:-1:-1;6833:7:168;;;-1:-1:-1;6833:17:168;;144:18:183;;6833:24:168;14:237:183;6824:40:168;6933:13;;6924:23;;-1:-1:-1;;;6924:23:168;;-1:-1:-1;;;;;6933:13:168;;;6924:23;;;171:74:183;250:64:1;;6924:8:168;;144:18:183;;6924:23:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6957:8:168;;6976:7;;6957:33;;;;;-1:-1:-1;;;;;6976:7:168;;;6957:33;;;6995:74:183;6985:4:168;7085:18:183;;;7078:34;6957:8:168;;;-1:-1:-1;6957:18:168;;-1:-1:-1;6968:18:183;;6957:33:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7054:7:168;;7072:13;;7054:32;;-1:-1:-1;;;7054:32:168;;-1:-1:-1;;;;;7072:13:168;;;7054:32;;;171:74:183;7045:48:168;;-1:-1:-1;7054:7:168;;;-1:-1:-1;7054:17:168;;144:18:183;;7054:32:168;14:237:183;7045:48:168;7112:8;;7133:7;;7142:13;;7112:44;;;;;-1:-1:-1;;;;;7133:7:168;;;7112:44;;;4245:34:183;7142:13:168;;;4295:18:183;;;4288:43;7103:60:168;;7112:8;;;;;:20;;4157:18:183;;7112:44:168;3994:343:183;7103:60:168;7209:11;;7200:21;;-1:-1:-1;;;7200:21:168;;-1:-1:-1;;;;;7209:11:168;;;7200:21;;;171:74:183;250:64:1;;7200:8:168;;144:18:183;;7200:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7231:9;;;;;;;;;-1:-1:-1;;;;;7231:9:168;-1:-1:-1;;;;;7231:29:168;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7313:30;7325:8;;;;;;;;;-1:-1:-1;;;;;7325:8:168;-1:-1:-1;;;;;7325:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7313:30;7427:44;;;;;;;;;;;;;;;;;;;;;;;7481:20;;;;;7427:44;;250:64:1;;7481:15:168;;:20;;7427:44;;7481:20;;:::i;21117:901::-;21247:11;;21238:21;;-1:-1:-1;;;21238:21:168;;-1:-1:-1;;;;;21247:11:168;;;21238:21;;;171:74:183;250:64:1;;21238:8:168;;144:18:183;;21238:21:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21269:9;;;;;;;;;-1:-1:-1;;;;;21269:9:168;-1:-1:-1;;;;;21269:29:168;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21351:30;21363:8;;;;;;;;;-1:-1:-1;;;;;21363:8:168;-1:-1:-1;;;;;21363:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21351:30;21486:122;;;21570:28;21486:122;;;;863:25:183;;;;21486:122:168;;;;;;;;;;836:18:183;;;;21486:122:168;;;;;;;;;21522:34;21486:122;;;21618:20;;;;;250:64:1;;21618:15:168;;:20;;21486:122;;21618:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21657:5:168;;21648:15;;-1:-1:-1;;;21648:15:168;;-1:-1:-1;;;;;21657:5:168;;;21648:15;;;171:74:183;250:64:1;;-1:-1:-1;21648:8:168;;-1:-1:-1;144:18:183;;21648:15:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21673:9;;;;;;;;;-1:-1:-1;;;;;21673:9:168;-1:-1:-1;;;;;21673:28:168;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21760;21772:8;;;;;;;;;-1:-1:-1;;;;;21772:8:168;-1:-1:-1;;;;;21772:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21760:30;21884:8;;21875:18;;-1:-1:-1;;;21875:18:168;;-1:-1:-1;;;;;21884:8:168;;;21875:18;;;171:74:183;250:64:1;;21875:8:168;;144:18:183;;21875::168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21903:9;;;;;;;;;-1:-1:-1;;;;;21903:9:168;-1:-1:-1;;;;;21903:28:168;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21982:29;21993:8;;;;;;;;;-1:-1:-1;;;;;21993:8:168;-1:-1:-1;;;;;21993:15:168;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:227:134;439:34;;;;;;;;;;;;;;;;;;;;462:10;;;;439:34;;;;487:21;;-1:-1:-1;;;;;189:55:183;;487:21:134;;;171:74:183;487:21:134;;;;;;;;;;144:18:183;;;487:21:134;;;;391:127;;;;162:64;;391:11;;:127;;416:1;;391:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:227;;;:::o;3262:157:0:-;3322:9;3317:96;;3352:30;;;;;12216:2:183;12198:21;;;12255:2;12235:18;;;12228:30;12294:25;12289:2;12274:18;;12267:53;12352:2;12337:18;;12014:347;3352:30:0;;;;;;;;3396:6;:4;:6::i;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;12568:2:183;12550:21;;;12607:2;12587:18;;;12580:30;12646:34;12641:2;12626:18;;12619:62;12717:4;12712:2;12697:18;;12690:32;12754:3;12739:19;;12366:398;5293:41:0;;;;;;;;5353:31;;;12981:21:183;;;13038:2;13018:18;;;13011:30;13077:12;13072:2;13057:18;;13050:40;13157:4;13142:20;;13135:36;;;5353:31:0;;;;;;;13122:3:183;5353:31:0;;;5403;;;13394:21:183;;;13451:2;13431:18;;;13424:30;13490:12;13485:2;13470:18;;13463:40;13570:4;13555:20;;13548:36;;;5403:31:0;;;;;;;13535:3:183;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;13797:74:183;;;2677:17:0;13887:18:183;;;13880:34;;;;2712:4:0;13930:18:183;;;13923:34;2489:11:0;;1671:64;2586:43;;13770:18:183;;2652:67:0;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;;;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1089:184:183:-;1141:77;1138:1;1131:88;1238:4;1235:1;1228:15;1262:4;1259:1;1252:15;1278:200;1357:13;;-1:-1:-1;;;;;1399:54:183;;1389:65;;1379:93;;1468:1;1465;1458:12;1483:1188;1578:6;1609:2;1652;1640:9;1631:7;1627:23;1623:32;1620:52;;;1668:1;1665;1658:12;1620:52;1701:9;1695:16;1730:18;1771:2;1763:6;1760:14;1757:34;;;1787:1;1784;1777:12;1757:34;1825:6;1814:9;1810:22;1800:32;;1870:7;1863:4;1859:2;1855:13;1851:27;1841:55;;1892:1;1889;1882:12;1841:55;1921:2;1915:9;1943:2;1939;1936:10;1933:36;;;1949:18;;:::i;:::-;1995:2;1992:1;1988:10;2027:2;2021:9;2086:66;2081:2;2077;2073:11;2069:84;2061:6;2057:97;2204:6;2192:10;2189:22;2184:2;2172:10;2169:18;2166:46;2163:72;;;2215:18;;:::i;:::-;2251:2;2244:22;2301:18;;;2335:15;;;;-1:-1:-1;2377:11:183;;;2373:20;;;2405:19;;;2402:39;;;2437:1;2434;2427:12;2402:39;2461:11;;;;2481:159;2497:6;2492:3;2489:15;2481:159;;;2563:34;2593:3;2563:34;:::i;:::-;2551:47;;2514:12;;;;2618;;;;2481:159;;;2659:6;1483:1188;-1:-1:-1;;;;;;;;1483:1188:183:o;2676:184::-;2728:77;2725:1;2718:88;2825:4;2822:1;2815:15;2849:4;2846:1;2839:15;4342:258;4414:1;4424:113;4438:6;4435:1;4432:13;4424:113;;;4514:11;;;4508:18;4495:11;;;4488:39;4460:2;4453:10;4424:113;;;4555:6;4552:1;4549:13;4546:48;;;-1:-1:-1;;4590:1:183;4572:16;;4565:27;4342:258::o;4605:317::-;4647:3;4685:5;4679:12;4712:6;4707:3;4700:19;4728:63;4784:6;4777:4;4772:3;4768:14;4761:4;4754:5;4750:16;4728:63;:::i;:::-;4836:2;4824:15;4841:66;4820:88;4811:98;;;;4911:4;4807:109;;4605:317;-1:-1:-1;;4605:317:183:o;4927:364::-;-1:-1:-1;;;;;5132:6:183;5128:55;5117:9;5110:74;5220:2;5215;5204:9;5200:18;5193:30;5091:4;5240:45;5281:2;5270:9;5266:18;5258:6;5240:45;:::i;:::-;5232:53;4927:364;-1:-1:-1;;;;4927:364:183:o;5296:208::-;5366:6;5419:2;5407:9;5398:7;5394:23;5390:32;5387:52;;;5435:1;5432;5425:12;5387:52;5458:40;5488:9;5458:40;:::i;:::-;5448:50;5296:208;-1:-1:-1;;;5296:208:183:o;5509:518::-;5682:2;5667:18;;5715:1;5704:13;;5694:201;;5751:77;5748:1;5741:88;5852:4;5849:1;5842:15;5880:4;5877:1;5870:15;5694:201;5904:25;;;-1:-1:-1;;;;;5965:55:183;;;;5960:2;5945:18;;;5938:83;5509:518;:::o;7847:277::-;7914:6;7967:2;7955:9;7946:7;7942:23;7938:32;7935:52;;;7983:1;7980;7973:12;7935:52;8015:9;8009:16;8068:5;8061:13;8054:21;8047:5;8044:32;8034:60;;8090:1;8087;8080:12;8311:218;8458:2;8447:9;8440:21;8421:4;8478:45;8519:2;8508:9;8504:18;8496:6;8478:45;:::i;8853:184::-;8923:6;8976:2;8964:9;8955:7;8951:23;8947:32;8944:52;;;8992:1;8989;8982:12;8944:52;-1:-1:-1;9015:16:183;;8853:184;-1:-1:-1;8853:184:183:o;10809:417::-;11006:66;10998:6;10994:79;10989:3;10982:92;10964:3;11103:6;11097:13;11119:61;11173:6;11169:1;11164:3;11160:11;11153:4;11145:6;11141:17;11119:61;:::i;:::-;11200:16;;;;11218:1;11196:24;;10809:417;-1:-1:-1;;;10809:417:183:o;11231:274::-;11360:3;11398:6;11392:13;11414:53;11460:6;11455:3;11448:4;11440:6;11436:17;11414:53;:::i;:::-;11483:16;;;;;11231:274;-1:-1:-1;;11231:274:183:o;11510:499::-;-1:-1:-1;;;;;11735:6:183;11731:55;11720:9;11713:74;11823:2;11818;11807:9;11803:18;11796:30;11694:4;11849:45;11890:2;11879:9;11875:18;11867:6;11849:45;:::i;:::-;11942:9;11934:6;11930:22;11925:2;11914:9;11910:18;11903:50;11970:33;11996:6;11988;11970:33;:::i;:::-;11962:41;11510:499;-1:-1:-1;;;;;;11510:499:183:o",
    "linkReferences": {
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "ModuleTestFixtureGenerator": [
          {
            "start": 2449,
            "length": 20
          },
          {
            "start": 2705,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectness_OnlyPermissionedAddressCanRestart()": "37d35213",
    "testCorrectness_OnlyPermissionedAddressCanRestartMinting()": "319cb870",
    "testCorrectness_OnlyPermissionedAddressCanRestartWithdrawals()": "f6d04033",
    "testCorrectness_OnlyPermissionedAddressCanShutdown()": "238a174f",
    "testCorrectness_OnlyPermissionedAddressCanShutdownMinting()": "4233f1cd",
    "testCorrectness_OnlyPermissionedAddressCanShutdownWithdrawals()": "6e40699f",
    "testCorrectness_Restart()": "7126037d",
    "testCorrectness_RestartMINTR()": "33038d19",
    "testCorrectness_RestartTRSRY()": "5661fc84",
    "testCorrectness_Shutdown()": "7fa1aaf9",
    "testCorrectness_ShutdownMINTR()": "85a3bdf3",
    "testCorrectness_ShutdownTRSRY()": "bc7b2b71",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyPermissionedAddressCanRestart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyPermissionedAddressCanRestartMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyPermissionedAddressCanRestartWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyPermissionedAddressCanShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyPermissionedAddressCanShutdownMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_OnlyPermissionedAddressCanShutdownWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_Restart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_RestartMINTR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_RestartTRSRY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_Shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_ShutdownMINTR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_ShutdownTRSRY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCreator\",\"outputs\":[{\"internalType\":\"contract UserFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/Emergency.t.sol\":\"EmergencyTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/external/GDAO.sol\":{\"keccak256\":\"0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230\",\"dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18\",\"dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU\"]},\"src/interfaces/IGDAO.sol\":{\"keccak256\":\"0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58\",\"dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj\"]},\"src/interfaces/IOlympusAuthority.sol\":{\"keccak256\":\"0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737\",\"dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ\"]},\"src/libraries/Counters.sol\":{\"keccak256\":\"0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0\",\"dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05\",\"dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/MINTR/GoerliMinter.sol\":{\"keccak256\":\"0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b\",\"dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN\"]},\"src/modules/MINTR/MINTR.v1.sol\":{\"keccak256\":\"0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71\",\"dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/modules/TRSRY/GoerliDaoTreasury.sol\":{\"keccak256\":\"0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471\",\"dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c\"]},\"src/modules/TRSRY/TRSRY.v1.sol\":{\"keccak256\":\"0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2\",\"dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC\"]},\"src/policies/Emergency.sol\":{\"keccak256\":\"0xd2794c2b3ce13ee5ffaf824f3555675a6a937e724a03694756784cd85341f3ac\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a67fc217f6deaf8b09323a025183389fc2f71ba340bacbeb3920eaf8e37c651a\",\"dweb:/ipfs/QmXQqibvN3eNHHLDwRPamMAQhPdADbXZy9MpBQTwCsSTH1\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/test/lib/ModuleTestFixtureGenerator.sol\":{\"keccak256\":\"0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619\",\"dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/lib/larping.sol\":{\"keccak256\":\"0x16659a58493fa24ef4c3c7b3a3850c3e92c8bcf01e1918582b5c08a9768389ac\",\"urls\":[\"bzz-raw://75a1df7e07f95c1c53ec9e1ef3aff8b89e98ecfe28cf05f65f176e4a1002d330\",\"dweb:/ipfs/QmVptVAuhZzrXTqU3jJmYcTzBJxqJgV375impE11mHCnbU\"]},\"src/test/lib/quabi/Quabi.sol\":{\"keccak256\":\"0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751\",\"dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm\"]},\"src/test/mocks/MockLegacyAuthority.sol\":{\"keccak256\":\"0x21b64304f32f864c47a36daeaa2817a3902d7e64ac5173ec3393509e01ac5bcd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0668594feef94133fc6830d2dcf0c43ca87b3d61b1b6d51b920a1ccd91239efa\",\"dweb:/ipfs/QmT7U8KHAiriv3YQZqBpifb4755r1kUUBAfLLp2q3Bmdyt\"]},\"src/test/policies/Emergency.t.sol\":{\"keccak256\":\"0x2e4bca4be7edc5a0376bd0ecf2629e82c453d528338687c7d29484bc047d4b24\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://857303c6ca2e10b5d9c12a57f5914a14ae8bfff615d10a8c5ebe5abb690b603a\",\"dweb:/ipfs/QmVPvuab9iHa7GZRArSHnSqGawbsf4VB9qTmzVu2nAGt9F\"]},\"src/types/OlympusAccessControlled.sol\":{\"keccak256\":\"0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1\",\"dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyPermissionedAddressCanRestart"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyPermissionedAddressCanRestartMinting"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyPermissionedAddressCanRestartWithdrawals"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyPermissionedAddressCanShutdown"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyPermissionedAddressCanShutdownMinting"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_OnlyPermissionedAddressCanShutdownWithdrawals"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_Restart"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_RestartMINTR"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_RestartTRSRY"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_Shutdown"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_ShutdownMINTR"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_ShutdownTRSRY"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userCreator",
          "outputs": [
            {
              "internalType": "contract UserFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/Emergency.t.sol": "EmergencyTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/GDAO.sol": {
        "keccak256": "0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd",
        "urls": [
          "bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230",
          "dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c",
        "urls": [
          "bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18",
          "dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IGDAO.sol": {
        "keccak256": "0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2",
        "urls": [
          "bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58",
          "dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOlympusAuthority.sol": {
        "keccak256": "0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25",
        "urls": [
          "bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737",
          "dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/Counters.sol": {
        "keccak256": "0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c",
        "urls": [
          "bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0",
          "dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeMath.sol": {
        "keccak256": "0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed",
        "urls": [
          "bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05",
          "dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/GoerliMinter.sol": {
        "keccak256": "0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1",
        "urls": [
          "bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b",
          "dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/MINTR.v1.sol": {
        "keccak256": "0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c",
        "urls": [
          "bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71",
          "dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/GoerliDaoTreasury.sol": {
        "keccak256": "0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc",
        "urls": [
          "bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471",
          "dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/TRSRY.v1.sol": {
        "keccak256": "0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1",
        "urls": [
          "bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2",
          "dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Emergency.sol": {
        "keccak256": "0xd2794c2b3ce13ee5ffaf824f3555675a6a937e724a03694756784cd85341f3ac",
        "urls": [
          "bzz-raw://a67fc217f6deaf8b09323a025183389fc2f71ba340bacbeb3920eaf8e37c651a",
          "dweb:/ipfs/QmXQqibvN3eNHHLDwRPamMAQhPdADbXZy9MpBQTwCsSTH1"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "keccak256": "0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a",
        "urls": [
          "bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619",
          "dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/lib/larping.sol": {
        "keccak256": "0x16659a58493fa24ef4c3c7b3a3850c3e92c8bcf01e1918582b5c08a9768389ac",
        "urls": [
          "bzz-raw://75a1df7e07f95c1c53ec9e1ef3aff8b89e98ecfe28cf05f65f176e4a1002d330",
          "dweb:/ipfs/QmVptVAuhZzrXTqU3jJmYcTzBJxqJgV375impE11mHCnbU"
        ],
        "license": null
      },
      "src/test/lib/quabi/Quabi.sol": {
        "keccak256": "0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9",
        "urls": [
          "bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751",
          "dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/mocks/MockLegacyAuthority.sol": {
        "keccak256": "0x21b64304f32f864c47a36daeaa2817a3902d7e64ac5173ec3393509e01ac5bcd",
        "urls": [
          "bzz-raw://0668594feef94133fc6830d2dcf0c43ca87b3d61b1b6d51b920a1ccd91239efa",
          "dweb:/ipfs/QmT7U8KHAiriv3YQZqBpifb4755r1kUUBAfLLp2q3Bmdyt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/policies/Emergency.t.sol": {
        "keccak256": "0x2e4bca4be7edc5a0376bd0ecf2629e82c453d528338687c7d29484bc047d4b24",
        "urls": [
          "bzz-raw://857303c6ca2e10b5d9c12a57f5914a14ae8bfff615d10a8c5ebe5abb690b603a",
          "dweb:/ipfs/QmVPvuab9iHa7GZRArSHnSqGawbsf4VB9qTmzVu2nAGt9F"
        ],
        "license": "Unlicense"
      },
      "src/types/OlympusAccessControlled.sol": {
        "keccak256": "0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf",
        "urls": [
          "bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1",
          "dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/Emergency.t.sol",
    "id": 82758,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "ERC20": [
        25731
      ],
      "Emergency": [
        46806
      ],
      "EmergencyTest": [
        82757
      ],
      "FullMath": [
        37546
      ],
      "GDAO": [
        31138
      ],
      "GoerliDaoRoles": [
        40791
      ],
      "GoerliDaoTreasury": [
        41409
      ],
      "GoerliMinter": [
        38611
      ],
      "IOlympusAuthority": [
        36567
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "MockERC20": [
        24679
      ],
      "MockLegacyAuthority": [
        66449
      ],
      "Module": [
        28577
      ],
      "ModuleTestFixtureGenerator": [
        53884
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "ROLESv1": [
        40870
      ],
      "RolesAdmin": [
        51234
      ],
      "TargetNotAContract": [
        28366
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        54005
      ],
      "console2": [
        23663
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "larping": [
        61486
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:21983:168",
    "nodes": [
      {
        "id": 80591,
        "nodeType": "PragmaDirective",
        "src": "38:24:168",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 80593,
        "nodeType": "ImportDirective",
        "src": "64:40:168",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80592,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "72:4:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80595,
        "nodeType": "ImportDirective",
        "src": "105:48:168",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80594,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "113:8:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80597,
        "nodeType": "ImportDirective",
        "src": "154:53:168",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 54006,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80596,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54005,
              "src": "162:11:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80599,
        "nodeType": "ImportDirective",
        "src": "208:45:168",
        "nodes": [],
        "absolutePath": "src/test/lib/larping.sol",
        "file": "test/lib/larping.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 61487,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80598,
              "name": "larping",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61486,
              "src": "216:7:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80602,
        "nodeType": "ImportDirective",
        "src": "255:72:168",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 24680,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80600,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24679,
              "src": "263:9:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80601,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "274:5:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80604,
        "nodeType": "ImportDirective",
        "src": "328:83:168",
        "nodes": [],
        "absolutePath": "src/test/lib/ModuleTestFixtureGenerator.sol",
        "file": "test/lib/ModuleTestFixtureGenerator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 53885,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80603,
              "name": "ModuleTestFixtureGenerator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53884,
              "src": "336:26:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80606,
        "nodeType": "ImportDirective",
        "src": "412:71:168",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockLegacyAuthority.sol",
        "file": "test/mocks/MockLegacyAuthority.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 66450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80605,
              "name": "MockLegacyAuthority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66449,
              "src": "420:19:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80608,
        "nodeType": "ImportDirective",
        "src": "485:48:168",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 37547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80607,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37546,
              "src": "493:8:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80609,
        "nodeType": "ImportDirective",
        "src": "535:24:168",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 80611,
        "nodeType": "ImportDirective",
        "src": "560:70:168",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "file": "modules/TRSRY/GoerliDaoTreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 41410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80610,
              "name": "GoerliDaoTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41409,
              "src": "568:17:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80614,
        "nodeType": "ImportDirective",
        "src": "631:66:168",
        "nodes": [],
        "absolutePath": "src/modules/MINTR/GoerliMinter.sol",
        "file": "modules/MINTR/GoerliMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 38612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80612,
              "name": "GoerliMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38611,
              "src": "639:12:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80613,
              "name": "GDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31138,
              "src": "653:4:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80616,
        "nodeType": "ImportDirective",
        "src": "698:64:168",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 40792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80615,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40791,
              "src": "706:14:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80618,
        "nodeType": "ImportDirective",
        "src": "763:43:168",
        "nodes": [],
        "absolutePath": "src/external/GDAO.sol",
        "file": "src/external/GDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 31139,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80617,
              "name": "GDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31138,
              "src": "771:4:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80619,
        "nodeType": "ImportDirective",
        "src": "807:46:168",
        "nodes": [],
        "absolutePath": "src/interfaces/IOlympusAuthority.sol",
        "file": "src/interfaces/IOlympusAuthority.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 36568,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 80621,
        "nodeType": "ImportDirective",
        "src": "854:51:168",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 40871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80620,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40870,
              "src": "862:7:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80623,
        "nodeType": "ImportDirective",
        "src": "906:51:168",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 51235,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80622,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51234,
              "src": "914:10:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80625,
        "nodeType": "ImportDirective",
        "src": "958:49:168",
        "nodes": [],
        "absolutePath": "src/policies/Emergency.sol",
        "file": "policies/Emergency.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82758,
        "sourceUnit": 46807,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80624,
              "name": "Emergency",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46806,
              "src": "966:9:168",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82757,
        "nodeType": "ContractDefinition",
        "src": "1055:20965:168",
        "nodes": [
          {
            "id": 80630,
            "nodeType": "UsingForDirective",
            "src": "1092:27:168",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 80628,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37546,
              "src": "1098:8:168"
            },
            "typeName": {
              "id": 80629,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1111:7:168",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 80634,
            "nodeType": "UsingForDirective",
            "src": "1124:50:168",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 80631,
              "name": "ModuleTestFixtureGenerator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53884,
              "src": "1130:26:168"
            },
            "typeName": {
              "id": 80633,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80632,
                "name": "GoerliMinter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38611,
                "src": "1161:12:168"
              },
              "referencedDeclaration": 38611,
              "src": "1161:12:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                "typeString": "contract GoerliMinter"
              }
            }
          },
          {
            "id": 80638,
            "nodeType": "UsingForDirective",
            "src": "1179:55:168",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 80635,
              "name": "ModuleTestFixtureGenerator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53884,
              "src": "1185:26:168"
            },
            "typeName": {
              "id": 80637,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80636,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41409,
                "src": "1216:17:168"
              },
              "referencedDeclaration": 41409,
              "src": "1216:17:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                "typeString": "contract GoerliDaoTreasury"
              }
            }
          },
          {
            "id": 80640,
            "nodeType": "UsingForDirective",
            "src": "1239:20:168",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 80639,
              "name": "larping",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61486,
              "src": "1245:7:168"
            }
          },
          {
            "id": 80643,
            "nodeType": "VariableDeclaration",
            "src": "1265:30:168",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1284:11:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$54005",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 80642,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80641,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54005,
                "src": "1265:11:168"
              },
              "referencedDeclaration": 54005,
              "src": "1265:11:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$54005",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80645,
            "nodeType": "VariableDeclaration",
            "src": "1301:22:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1318:5:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 80644,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1301:7:168",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80647,
            "nodeType": "VariableDeclaration",
            "src": "1329:25:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "guardian",
            "nameLocation": "1346:8:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 80646,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1329:7:168",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80649,
            "nodeType": "VariableDeclaration",
            "src": "1360:28:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "emergencyMS",
            "nameLocation": "1377:11:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 80648,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:168",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80652,
            "nodeType": "VariableDeclaration",
            "src": "1395:18:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "gdao",
            "nameLocation": "1409:4:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GDAO_$31138",
              "typeString": "contract GDAO"
            },
            "typeName": {
              "id": 80651,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80650,
                "name": "GDAO",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31138,
                "src": "1395:4:168"
              },
              "referencedDeclaration": 31138,
              "src": "1395:4:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GDAO_$31138",
                "typeString": "contract GDAO"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80655,
            "nodeType": "VariableDeclaration",
            "src": "1419:26:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "1438:7:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 80654,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80653,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "1419:9:168"
              },
              "referencedDeclaration": 24679,
              "src": "1419:9:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80658,
            "nodeType": "VariableDeclaration",
            "src": "1452:22:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "1468:6:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$29497",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 80657,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80656,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29497,
                "src": "1452:6:168"
              },
              "referencedDeclaration": 29497,
              "src": "1452:6:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$29497",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80661,
            "nodeType": "VariableDeclaration",
            "src": "1480:36:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "authority",
            "nameLocation": "1507:9:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOlympusAuthority_$36567",
              "typeString": "contract IOlympusAuthority"
            },
            "typeName": {
              "id": 80660,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80659,
                "name": "IOlympusAuthority",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36567,
                "src": "1480:17:168"
              },
              "referencedDeclaration": 36567,
              "src": "1480:17:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOlympusAuthority_$36567",
                "typeString": "contract IOlympusAuthority"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80664,
            "nodeType": "VariableDeclaration",
            "src": "1522:35:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "1549:8:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
              "typeString": "contract GoerliDaoTreasury"
            },
            "typeName": {
              "id": 80663,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80662,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41409,
                "src": "1522:17:168"
              },
              "referencedDeclaration": 41409,
              "src": "1522:17:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                "typeString": "contract GoerliDaoTreasury"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80667,
            "nodeType": "VariableDeclaration",
            "src": "1563:28:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "1585:6:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
              "typeString": "contract GoerliMinter"
            },
            "typeName": {
              "id": 80666,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80665,
                "name": "GoerliMinter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38611,
                "src": "1563:12:168"
              },
              "referencedDeclaration": 38611,
              "src": "1563:12:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                "typeString": "contract GoerliMinter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80670,
            "nodeType": "VariableDeclaration",
            "src": "1597:29:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "1621:5:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 80669,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80668,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40791,
                "src": "1597:14:168"
              },
              "referencedDeclaration": 40791,
              "src": "1597:14:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80673,
            "nodeType": "VariableDeclaration",
            "src": "1633:28:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "emergency",
            "nameLocation": "1652:9:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Emergency_$46806",
              "typeString": "contract Emergency"
            },
            "typeName": {
              "id": 80672,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80671,
                "name": "Emergency",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46806,
                "src": "1633:9:168"
              },
              "referencedDeclaration": 46806,
              "src": "1633:9:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Emergency_$46806",
                "typeString": "contract Emergency"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80676,
            "nodeType": "VariableDeclaration",
            "src": "1667:30:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "1687:10:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 80675,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80674,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51234,
                "src": "1667:10:168"
              },
              "referencedDeclaration": 51234,
              "src": "1667:10:168",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80678,
            "nodeType": "VariableDeclaration",
            "src": "1704:30:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "treasuryAdmin",
            "nameLocation": "1721:13:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 80677,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1704:7:168",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80680,
            "nodeType": "VariableDeclaration",
            "src": "1740:28:168",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minterAdmin",
            "nameLocation": "1757:11:168",
            "scope": 82757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 80679,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1740:7:168",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 81012,
            "nodeType": "FunctionDefinition",
            "src": "1775:3027:168",
            "nodes": [],
            "body": {
              "id": 81011,
              "nodeType": "Block",
              "src": "1799:3003:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 80694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 80692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 80690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 80688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 80686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1817:2:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 80687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1822:3:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "1817:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 80689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1828:2:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "1817:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 80691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1833:2:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "1817:18:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 80693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1838:2:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "1817:23:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 80683,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "1809:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "1809:7:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:32:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80696,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:32:168"
                },
                {
                  "expression": {
                    "id": 80702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80697,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80643,
                      "src": "1919:11:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$54005",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1933:15:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$54005_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 80699,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80698,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54005,
                            "src": "1937:11:168"
                          },
                          "referencedDeclaration": 54005,
                          "src": "1937:11:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$54005",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 80701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1933:17:168",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$54005",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "1919:31:168",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$54005",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 80703,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:31:168"
                },
                {
                  "id": 80732,
                  "nodeType": "Block",
                  "src": "1960:206:168",
                  "statements": [
                    {
                      "assignments": [
                        80708
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 80708,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "2027:5:168",
                          "nodeType": "VariableDeclaration",
                          "scope": 80732,
                          "src": "2010:22:168",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 80706,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2010:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 80707,
                            "nodeType": "ArrayTypeName",
                            "src": "2010:9:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 80713,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 80711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2054:1:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 80709,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80643,
                            "src": "2035:11:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$54005",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 80710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54004,
                          "src": "2035:18:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 80712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2035:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2010:46:168"
                    },
                    {
                      "expression": {
                        "id": 80718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80714,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80645,
                          "src": "2070:5:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 80715,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80708,
                            "src": "2078:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 80717,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 80716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2084:1:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2078:8:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2070:16:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 80719,
                      "nodeType": "ExpressionStatement",
                      "src": "2070:16:168"
                    },
                    {
                      "expression": {
                        "id": 80724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80720,
                          "name": "guardian",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80647,
                          "src": "2100:8:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 80721,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80708,
                            "src": "2111:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 80723,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 80722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2117:1:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2111:8:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2100:19:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 80725,
                      "nodeType": "ExpressionStatement",
                      "src": "2100:19:168"
                    },
                    {
                      "expression": {
                        "id": 80730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80726,
                          "name": "emergencyMS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80649,
                          "src": "2133:11:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 80727,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80708,
                            "src": "2147:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 80729,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 80728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2153:1:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2147:8:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2133:22:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 80731,
                      "nodeType": "ExpressionStatement",
                      "src": "2133:22:168"
                    }
                  ]
                },
                {
                  "id": 80765,
                  "nodeType": "Block",
                  "src": "2176:261:168",
                  "statements": [
                    {
                      "expression": {
                        "id": 80742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80733,
                          "name": "authority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80661,
                          "src": "2234:9:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOlympusAuthority_$36567",
                            "typeString": "contract IOlympusAuthority"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "307830",
                                  "id": 80739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2278:3:168",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 80738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2270:7:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80737,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2270:7:168",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2270:12:168",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2246:23:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MockLegacyAuthority_$66449_$",
                              "typeString": "function (address) returns (contract MockLegacyAuthority)"
                            },
                            "typeName": {
                              "id": 80735,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80734,
                                "name": "MockLegacyAuthority",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66449,
                                "src": "2250:19:168"
                              },
                              "referencedDeclaration": 66449,
                              "src": "2250:19:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockLegacyAuthority_$66449",
                                "typeString": "contract MockLegacyAuthority"
                              }
                            }
                          },
                          "id": 80741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2246:37:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLegacyAuthority_$66449",
                            "typeString": "contract MockLegacyAuthority"
                          }
                        },
                        "src": "2234:49:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOlympusAuthority_$36567",
                          "typeString": "contract IOlympusAuthority"
                        }
                      },
                      "id": 80743,
                      "nodeType": "ExpressionStatement",
                      "src": "2234:49:168"
                    },
                    {
                      "expression": {
                        "id": 80753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80744,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80652,
                          "src": "2332:4:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GDAO_$31138",
                            "typeString": "contract GDAO"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 80750,
                                  "name": "authority",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80661,
                                  "src": "2356:9:168",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IOlympusAuthority_$36567",
                                    "typeString": "contract IOlympusAuthority"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IOlympusAuthority_$36567",
                                    "typeString": "contract IOlympusAuthority"
                                  }
                                ],
                                "id": 80749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2348:7:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80748,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2348:7:168",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2348:18:168",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2339:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GDAO_$31138_$",
                              "typeString": "function (address) returns (contract GDAO)"
                            },
                            "typeName": {
                              "id": 80746,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80745,
                                "name": "GDAO",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 31138,
                                "src": "2343:4:168"
                              },
                              "referencedDeclaration": 31138,
                              "src": "2343:4:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GDAO_$31138",
                                "typeString": "contract GDAO"
                              }
                            }
                          },
                          "id": 80752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2339:28:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GDAO_$31138",
                            "typeString": "contract GDAO"
                          }
                        },
                        "src": "2332:35:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 80754,
                      "nodeType": "ExpressionStatement",
                      "src": "2332:35:168"
                    },
                    {
                      "expression": {
                        "id": 80763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80755,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80655,
                          "src": "2381:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657365727665",
                              "id": 80759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2405:9:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              "value": "Reserve"
                            },
                            {
                              "hexValue": "525356",
                              "id": 80760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2416:5:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              "value": "RSV"
                            },
                            {
                              "hexValue": "3138",
                              "id": 80761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2423:2:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 80758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2391:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 80757,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80756,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "2395:9:168"
                              },
                              "referencedDeclaration": 24679,
                              "src": "2395:9:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 80762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2391:35:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "2381:45:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80764,
                      "nodeType": "ExpressionStatement",
                      "src": "2381:45:168"
                    }
                  ]
                },
                {
                  "id": 80801,
                  "nodeType": "Block",
                  "src": "2447:321:168",
                  "statements": [
                    {
                      "expression": {
                        "id": 80771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80766,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80658,
                          "src": "2490:6:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 80769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2499:10:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$29497_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 80768,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80767,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29497,
                                "src": "2503:6:168"
                              },
                              "referencedDeclaration": 29497,
                              "src": "2503:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 80770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2499:12:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "2490:21:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 80772,
                      "nodeType": "ExpressionStatement",
                      "src": "2490:21:168"
                    },
                    {
                      "expression": {
                        "id": 80779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80773,
                          "name": "treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80664,
                          "src": "2607:8:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 80777,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80658,
                              "src": "2640:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 80776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2618:21:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoTreasury_$41409_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoTreasury)"
                            },
                            "typeName": {
                              "id": 80775,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80774,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 41409,
                                "src": "2622:17:168"
                              },
                              "referencedDeclaration": 41409,
                              "src": "2622:17:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            }
                          },
                          "id": 80778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2618:29:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "src": "2607:40:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80780,
                      "nodeType": "ExpressionStatement",
                      "src": "2607:40:168"
                    },
                    {
                      "expression": {
                        "id": 80791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80781,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80667,
                          "src": "2661:6:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 80785,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80658,
                              "src": "2687:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 80788,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80652,
                                  "src": "2703:4:168",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GDAO_$31138",
                                    "typeString": "contract GDAO"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GDAO_$31138",
                                    "typeString": "contract GDAO"
                                  }
                                ],
                                "id": 80787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2695:7:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80786,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2695:7:168",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2695:13:168",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2670:16:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_address_$returns$_t_contract$_GoerliMinter_$38611_$",
                              "typeString": "function (contract Kernel,address) returns (contract GoerliMinter)"
                            },
                            "typeName": {
                              "id": 80783,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80782,
                                "name": "GoerliMinter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38611,
                                "src": "2674:12:168"
                              },
                              "referencedDeclaration": 38611,
                              "src": "2674:12:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            }
                          },
                          "id": 80790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2670:39:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "src": "2661:48:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 80792,
                      "nodeType": "ExpressionStatement",
                      "src": "2661:48:168"
                    },
                    {
                      "expression": {
                        "id": 80799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80793,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80670,
                          "src": "2723:5:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 80797,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80658,
                              "src": "2750:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 80796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2731:18:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoRoles_$40791_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 80795,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80794,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40791,
                                "src": "2735:14:168"
                              },
                              "referencedDeclaration": 40791,
                              "src": "2735:14:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 80798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2731:26:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "2723:34:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 80800,
                      "nodeType": "ExpressionStatement",
                      "src": "2723:34:168"
                    }
                  ]
                },
                {
                  "id": 80838,
                  "nodeType": "Block",
                  "src": "2778:441:168",
                  "statements": [
                    {
                      "expression": {
                        "id": 80808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80802,
                          "name": "emergency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80673,
                          "src": "2831:9:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Emergency_$46806",
                            "typeString": "contract Emergency"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 80806,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80658,
                              "src": "2857:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 80805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2843:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_Emergency_$46806_$",
                              "typeString": "function (contract Kernel) returns (contract Emergency)"
                            },
                            "typeName": {
                              "id": 80804,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80803,
                                "name": "Emergency",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 46806,
                                "src": "2847:9:168"
                              },
                              "referencedDeclaration": 46806,
                              "src": "2847:9:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Emergency_$46806",
                                "typeString": "contract Emergency"
                              }
                            }
                          },
                          "id": 80807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2843:21:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Emergency_$46806",
                            "typeString": "contract Emergency"
                          }
                        },
                        "src": "2831:33:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 80809,
                      "nodeType": "ExpressionStatement",
                      "src": "2831:33:168"
                    },
                    {
                      "expression": {
                        "id": 80816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80810,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80676,
                          "src": "2921:10:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 80814,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80658,
                              "src": "2949:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 80813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2934:14:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_RolesAdmin_$51234_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 80812,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80811,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51234,
                                "src": "2938:10:168"
                              },
                              "referencedDeclaration": 51234,
                              "src": "2938:10:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 80815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2934:22:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "2921:35:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 80817,
                      "nodeType": "ExpressionStatement",
                      "src": "2921:35:168"
                    },
                    {
                      "expression": {
                        "id": 80826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80818,
                          "name": "treasuryAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80678,
                          "src": "3049:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 80822,
                                    "name": "GoerliDaoTreasury",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41409,
                                    "src": "3102:17:168",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$41409_$",
                                      "typeString": "type(contract GoerliDaoTreasury)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_GoerliDaoTreasury_$41409_$",
                                      "typeString": "type(contract GoerliDaoTreasury)"
                                    }
                                  ],
                                  "id": 80821,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3097:4:168",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 80823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3097:23:168",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "type(contract GoerliDaoTreasury)"
                                }
                              },
                              "id": 80824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "src": "3097:28:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 80819,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "3065:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 80820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "generateGodmodeFixture",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53755,
                            "src": "3065:31:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$28577_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_contract$_Module_$28577_$",
                              "typeString": "function (contract Module,string memory) returns (address)"
                            }
                          },
                          "id": 80825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3065:61:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3049:77:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 80827,
                      "nodeType": "ExpressionStatement",
                      "src": "3049:77:168"
                    },
                    {
                      "expression": {
                        "id": 80836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 80828,
                          "name": "minterAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80680,
                          "src": "3140:11:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 80832,
                                    "name": "GoerliMinter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38611,
                                    "src": "3189:12:168",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_GoerliMinter_$38611_$",
                                      "typeString": "type(contract GoerliMinter)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_GoerliMinter_$38611_$",
                                      "typeString": "type(contract GoerliMinter)"
                                    }
                                  ],
                                  "id": 80831,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3184:4:168",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 80833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3184:18:168",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_GoerliMinter_$38611",
                                  "typeString": "type(contract GoerliMinter)"
                                }
                              },
                              "id": 80834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "src": "3184:23:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 80829,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "3154:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 80830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "generateGodmodeFixture",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53755,
                            "src": "3154:29:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_Module_$28577_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_contract$_Module_$28577_$",
                              "typeString": "function (contract Module,string memory) returns (address)"
                            }
                          },
                          "id": 80835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3154:54:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3140:68:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 80837,
                      "nodeType": "ExpressionStatement",
                      "src": "3140:68:168"
                    }
                  ]
                },
                {
                  "id": 80910,
                  "nodeType": "Block",
                  "src": "3229:644:168",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80842,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3340:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 80843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "3340:21:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80846,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80664,
                                "src": "3371:8:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 80845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3363:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 80844,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3363:7:168",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3363:17:168",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80839,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80658,
                            "src": "3319:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 80841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3319:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 80848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3319:62:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80849,
                      "nodeType": "ExpressionStatement",
                      "src": "3319:62:168"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80853,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3416:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 80854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "3416:21:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80857,
                                "name": "minter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80667,
                                "src": "3447:6:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                  "typeString": "contract GoerliMinter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                  "typeString": "contract GoerliMinter"
                                }
                              ],
                              "id": 80856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3439:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 80855,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3439:7:168",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3439:15:168",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80850,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80658,
                            "src": "3395:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 80852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3395:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 80859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3395:60:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80860,
                      "nodeType": "ExpressionStatement",
                      "src": "3395:60:168"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80864,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3490:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 80865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "3490:21:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80868,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80670,
                                "src": "3521:5:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 80867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3513:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 80866,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3513:7:168",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3513:14:168",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80861,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80658,
                            "src": "3469:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 80863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3469:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 80870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3469:59:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80871,
                      "nodeType": "ExpressionStatement",
                      "src": "3469:59:168"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80875,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3596:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 80876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3596:22:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80879,
                                "name": "emergency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80673,
                                "src": "3628:9:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Emergency_$46806",
                                  "typeString": "contract Emergency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Emergency_$46806",
                                  "typeString": "contract Emergency"
                                }
                              ],
                              "id": 80878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3620:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 80877,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3620:7:168",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3620:18:168",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80872,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80658,
                            "src": "3575:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 80874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3575:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 80881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3575:64:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80882,
                      "nodeType": "ExpressionStatement",
                      "src": "3575:64:168"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80886,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3674:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 80887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3674:22:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80890,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80676,
                                "src": "3706:10:168",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 80889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3698:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 80888,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3698:7:168",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3698:19:168",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80883,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80658,
                            "src": "3653:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 80885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3653:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 80892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3653:65:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80893,
                      "nodeType": "ExpressionStatement",
                      "src": "3653:65:168"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80897,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3753:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 80898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3753:22:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "id": 80899,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "3777:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80894,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80658,
                            "src": "3732:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 80896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3732:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 80900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3732:59:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80901,
                      "nodeType": "ExpressionStatement",
                      "src": "3732:59:168"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80905,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3826:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 80906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3826:22:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "id": 80907,
                            "name": "minterAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80680,
                            "src": "3850:11:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80902,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80658,
                            "src": "3805:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 80904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3805:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 80908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3805:57:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80909,
                      "nodeType": "ExpressionStatement",
                      "src": "3805:57:168"
                    }
                  ]
                },
                {
                  "id": 80925,
                  "nodeType": "Block",
                  "src": "3882:217:168",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f73687574646f776e",
                            "id": 80914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3989:20:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            },
                            "value": "emergency_shutdown"
                          },
                          {
                            "id": 80915,
                            "name": "emergencyMS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80649,
                            "src": "4011:11:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80911,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80676,
                            "src": "3968:10:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 80913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "3968:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 80916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3968:55:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80917,
                      "nodeType": "ExpressionStatement",
                      "src": "3968:55:168"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f72657374617274",
                            "id": 80921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4058:19:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            },
                            "value": "emergency_restart"
                          },
                          {
                            "id": 80922,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80647,
                            "src": "4079:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80918,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80676,
                            "src": "4037:10:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 80920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "4037:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 80923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4037:51:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 80924,
                      "nodeType": "ExpressionStatement",
                      "src": "4037:51:168"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80933,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "4176:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 80932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4168:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80931,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4168:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4168:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 80926,
                          "name": "authority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80661,
                          "src": "4147:9:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOlympusAuthority_$36567",
                            "typeString": "contract IOlympusAuthority"
                          }
                        },
                        "id": 80929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36566,
                        "src": "4147:15:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 80930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "larp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60211,
                      "src": "4147:20:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_external_nonpayable$__$returns$_t_address_$_$_t_address_$returns$__$bound_to$_t_function_external_nonpayable$__$returns$_t_address_$_$",
                        "typeString": "function (function () external returns (address),address)"
                      }
                    },
                    "id": 80935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4147:37:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80936,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:37:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80942,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "4263:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 80941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4255:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80940,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4255:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4255:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "id": 80946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "315f3030305f303030",
                          "id": 80944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4274:9:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1_000_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 80945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4286:4:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4274:16:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 80937,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "4242:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "4242:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 80947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4242:49:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80948,
                  "nodeType": "ExpressionStatement",
                  "src": "4242:49:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80952,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "4364:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80949,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4355:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4355:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80954,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80960,
                            "name": "minterAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80680,
                            "src": "4422:11:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 80959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4414:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80958,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4414:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4414:20:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4441:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 80963,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4441:7:168",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 80962,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4436:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 80965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4436:13:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 80966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4436:17:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80955,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "4386:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 80957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseMintApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38546,
                      "src": "4386:27:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 80967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4386:68:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80968,
                  "nodeType": "ExpressionStatement",
                  "src": "4386:68:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80972,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "4559:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80969,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4550:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4550:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80974,
                  "nodeType": "ExpressionStatement",
                  "src": "4550:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80980,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "4625:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 80979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4617:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80978,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4617:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4617:22:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80982,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "4641:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4655:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 80984,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4655:7:168",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 80983,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4650:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 80986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4650:13:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 80987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4650:17:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80975,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "4583:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseWithdrawApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40993,
                      "src": "4583:33:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 80988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:85:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80989,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:85:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80993,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "4688:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80990,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4679:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "4679:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80995,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81001,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "4752:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 81000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4744:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4744:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4744:22:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81003,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "4768:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 81006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4782:7:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 81005,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4782:7:168",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 81004,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4777:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 81007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4777:13:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 81008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4777:17:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80996,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "4712:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 80998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDebtorApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41121,
                      "src": "4712:31:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 81009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4712:83:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81010,
                  "nodeType": "ExpressionStatement",
                  "src": "4712:83:168"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1784:5:168",
            "parameters": {
              "id": 80681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:168"
            },
            "returnParameters": {
              "id": 80682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1799:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81175,
            "nodeType": "FunctionDefinition",
            "src": "5165:1318:168",
            "nodes": [],
            "body": {
              "id": 81174,
              "nodeType": "Block",
              "src": "5213:1270:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81016,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "5282:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 81017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "5282:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5282:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81015,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "5271:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5271:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81020,
                  "nodeType": "ExpressionStatement",
                  "src": "5271:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81024,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "5365:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81021,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5356:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5356:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5356:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81026,
                  "nodeType": "ExpressionStatement",
                  "src": "5356:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81030,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "5403:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "326539",
                        "id": 81031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5410:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        },
                        "value": "2e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        }
                      ],
                      "expression": {
                        "id": 81027,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "5387:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "5387:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5387:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81033,
                  "nodeType": "ExpressionStatement",
                  "src": "5387:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81037,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "5448:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81035,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "5433:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "5433:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5433:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "326539",
                        "id": 81039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5456:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        },
                        "value": "2e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        }
                      ],
                      "id": 81034,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5424:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5424:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81041,
                  "nodeType": "ExpressionStatement",
                  "src": "5424:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81045,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "5527:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81042,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5518:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5518:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5518:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81047,
                  "nodeType": "ExpressionStatement",
                  "src": "5518:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81053,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "5564:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 81052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5556:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81051,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5556:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5556:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5573:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81048,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "5543:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 81050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "5543:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 81056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5543:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81057,
                  "nodeType": "ExpressionStatement",
                  "src": "5543:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81061,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "5596:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81058,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5587:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5587:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5587:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81063,
                  "nodeType": "ExpressionStatement",
                  "src": "5587:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81067,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "5634:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5641:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81064,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "5618:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "5618:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5618:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81070,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81074,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "5679:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81072,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "5664:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "5664:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5664:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5687:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81071,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5655:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5655:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81078,
                  "nodeType": "ExpressionStatement",
                  "src": "5655:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81082,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "5737:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81079,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5728:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5728:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5728:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81084,
                  "nodeType": "ExpressionStatement",
                  "src": "5728:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81085,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "5759:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46738,
                      "src": "5759:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5759:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81089,
                  "nodeType": "ExpressionStatement",
                  "src": "5759:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5848:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81091,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "5849:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 81092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "5849:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5849:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81090,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "5837:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5837:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81096,
                  "nodeType": "ExpressionStatement",
                  "src": "5837:28:168"
                },
                {
                  "assignments": [
                    81098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81098,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5936:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 81174,
                      "src": "5923:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81097,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5923:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81103,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e54525f4e6f744163746976652829",
                        "id": 81101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5966:19:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        },
                        "value": "MINTR_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 81099,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5942:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 81100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5942:23:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 81102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5942:44:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5923:63:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81107,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81098,
                        "src": "6012:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81104,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5996:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5996:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5996:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81109,
                  "nodeType": "ExpressionStatement",
                  "src": "5996:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81113,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "6035:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81110,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6026:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6026:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6026:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81115,
                  "nodeType": "ExpressionStatement",
                  "src": "6026:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81119,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "6073:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6080:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81116,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "6057:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "6057:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6057:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81122,
                  "nodeType": "ExpressionStatement",
                  "src": "6057:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81126,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "6160:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81124,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "6145:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "6145:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6145:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6168:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81123,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6136:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81130,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81134,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "6239:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81131,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6230:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6230:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6230:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81136,
                  "nodeType": "ExpressionStatement",
                  "src": "6230:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81142,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "6276:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 81141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6268:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81140,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6268:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6268:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6285:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81137,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "6255:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 81139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "6255:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 81145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6255:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81146,
                  "nodeType": "ExpressionStatement",
                  "src": "6255:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81150,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81098,
                        "src": "6316:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81147,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6300:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "6300:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6300:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81152,
                  "nodeType": "ExpressionStatement",
                  "src": "6300:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81156,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "6339:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81153,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6330:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6330:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81158,
                  "nodeType": "ExpressionStatement",
                  "src": "6330:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81162,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "6377:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6384:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81159,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "6361:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "6361:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6361:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81165,
                  "nodeType": "ExpressionStatement",
                  "src": "6361:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81169,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "6464:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81167,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "6449:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "6449:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6449:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6472:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81166,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6440:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6440:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81173,
                  "nodeType": "ExpressionStatement",
                  "src": "6440:36:168"
                }
              ]
            },
            "functionSelector": "85a3bdf3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_ShutdownMINTR",
            "nameLocation": "5174:29:168",
            "parameters": {
              "id": 81013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5203:2:168"
            },
            "returnParameters": {
              "id": 81014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5213:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81326,
            "nodeType": "FunctionDefinition",
            "src": "6489:1534:168",
            "nodes": [],
            "body": {
              "id": 81325,
              "nodeType": "Block",
              "src": "6537:1486:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81179,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "6606:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "6606:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6606:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81178,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "6595:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6595:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81183,
                  "nodeType": "ExpressionStatement",
                  "src": "6595:29:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81187,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "6698:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81184,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6689:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6689:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81189,
                  "nodeType": "ExpressionStatement",
                  "src": "6689:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81193,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "6748:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81194,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "6755:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6764:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81190,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "6722:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "6722:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 81196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6722:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81197,
                  "nodeType": "ExpressionStatement",
                  "src": "6722:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81201,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "6851:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81199,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "6833:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "6833:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6833:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6859:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81198,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6824:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6824:40:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81205,
                  "nodeType": "ExpressionStatement",
                  "src": "6824:40:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81209,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "6933:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81206,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6924:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6924:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6924:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81211,
                  "nodeType": "ExpressionStatement",
                  "src": "6924:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81215,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "6976:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6985:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81212,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "6957:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "6957:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 81217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6957:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81218,
                  "nodeType": "ExpressionStatement",
                  "src": "6957:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81222,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "7072:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81220,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "7054:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "7054:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7054:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7088:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81219,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7045:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7045:48:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81226,
                  "nodeType": "ExpressionStatement",
                  "src": "7045:48:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81230,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "7133:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 81231,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "7142:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81228,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "7112:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "7112:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 81232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7112:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7158:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81227,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7103:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7103:60:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81235,
                  "nodeType": "ExpressionStatement",
                  "src": "7103:60:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81239,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "7209:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81236,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7200:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7200:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7200:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81241,
                  "nodeType": "ExpressionStatement",
                  "src": "7200:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81242,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "7231:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46722,
                      "src": "7231:29:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7231:31:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81246,
                  "nodeType": "ExpressionStatement",
                  "src": "7231:31:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7324:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81248,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "7325:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 81249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "7325:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7325:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81247,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "7313:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7313:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81253,
                  "nodeType": "ExpressionStatement",
                  "src": "7313:30:168"
                },
                {
                  "assignments": [
                    81255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81255,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7421:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 81325,
                      "src": "7408:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81254,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7408:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81260,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "54525352595f4e6f744163746976652829",
                        "id": 81258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7451:19:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        },
                        "value": "TRSRY_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 81256,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7427:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 81257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7427:23:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 81259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7427:44:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7408:63:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81264,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81255,
                        "src": "7497:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7481:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7481:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7481:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81266,
                  "nodeType": "ExpressionStatement",
                  "src": "7481:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81270,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "7520:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81267,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7511:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7511:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7511:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81272,
                  "nodeType": "ExpressionStatement",
                  "src": "7511:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81276,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "7570:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81277,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "7577:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7586:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81273,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "7544:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "7544:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 81279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7544:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81280,
                  "nodeType": "ExpressionStatement",
                  "src": "7544:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81284,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "7676:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81282,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "7658:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "7658:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7658:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7684:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81281,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7649:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7649:40:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81288,
                  "nodeType": "ExpressionStatement",
                  "src": "7649:40:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81292,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "7757:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81289,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7748:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7748:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81294,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81298,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81255,
                        "src": "7797:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81295,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7781:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7781:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81300,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81304,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "7830:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7839:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81301,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "7811:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "7811:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 81306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7811:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81307,
                  "nodeType": "ExpressionStatement",
                  "src": "7811:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81311,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "7925:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81309,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "7907:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "7907:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7907:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7941:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81308,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7898:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7898:48:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81315,
                  "nodeType": "ExpressionStatement",
                  "src": "7898:48:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81319,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "7986:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 81320,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "7995:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81317,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "7965:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "7965:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 81321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7965:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8011:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81316,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7956:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7956:60:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81324,
                  "nodeType": "ExpressionStatement",
                  "src": "7956:60:168"
                }
              ]
            },
            "functionSelector": "bc7b2b71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_ShutdownTRSRY",
            "nameLocation": "6498:29:168",
            "parameters": {
              "id": 81176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6527:2:168"
            },
            "returnParameters": {
              "id": 81177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6537:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81625,
            "nodeType": "FunctionDefinition",
            "src": "8029:2557:168",
            "nodes": [],
            "body": {
              "id": 81624,
              "nodeType": "Block",
              "src": "8072:2514:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81330,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "8152:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 81331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "8152:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8152:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81329,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8141:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8141:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81334,
                  "nodeType": "ExpressionStatement",
                  "src": "8141:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81336,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "8189:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "8189:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8189:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81335,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8178:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8178:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81340,
                  "nodeType": "ExpressionStatement",
                  "src": "8178:29:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81344,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "8270:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81341,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8261:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8261:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8261:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81346,
                  "nodeType": "ExpressionStatement",
                  "src": "8261:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81350,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "8308:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "326539",
                        "id": 81351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8315:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        },
                        "value": "2e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        }
                      ],
                      "expression": {
                        "id": 81347,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "8292:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "8292:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8292:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81353,
                  "nodeType": "ExpressionStatement",
                  "src": "8292:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81357,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "8353:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81355,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "8338:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "8338:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8338:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "326539",
                        "id": 81359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8361:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        },
                        "value": "2e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        }
                      ],
                      "id": 81354,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8329:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8329:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81361,
                  "nodeType": "ExpressionStatement",
                  "src": "8329:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81365,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "8432:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81362,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8423:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8423:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8423:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81367,
                  "nodeType": "ExpressionStatement",
                  "src": "8423:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81373,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "8469:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 81372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8461:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81371,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8461:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8461:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8478:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81368,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "8448:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 81370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "8448:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 81376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8448:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81377,
                  "nodeType": "ExpressionStatement",
                  "src": "8448:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81381,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "8502:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81378,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8493:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8493:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8493:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81383,
                  "nodeType": "ExpressionStatement",
                  "src": "8493:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81387,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "8540:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8547:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81384,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "8524:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "8524:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8524:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81390,
                  "nodeType": "ExpressionStatement",
                  "src": "8524:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81394,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "8585:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81392,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "8570:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "8570:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8570:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8593:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81391,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8561:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8561:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81398,
                  "nodeType": "ExpressionStatement",
                  "src": "8561:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81402,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "8671:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81399,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8662:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8662:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8662:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81404,
                  "nodeType": "ExpressionStatement",
                  "src": "8662:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81408,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "8721:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81409,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "8728:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8737:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81405,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "8695:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "8695:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 81411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8695:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81412,
                  "nodeType": "ExpressionStatement",
                  "src": "8695:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81416,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "8779:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81414,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "8761:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "8761:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8761:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8787:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81413,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8752:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8752:40:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81420,
                  "nodeType": "ExpressionStatement",
                  "src": "8752:40:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81424,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "8861:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81421,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8852:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8852:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8852:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81426,
                  "nodeType": "ExpressionStatement",
                  "src": "8852:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81430,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "8904:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8913:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81427,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "8885:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "8885:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 81432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8885:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81433,
                  "nodeType": "ExpressionStatement",
                  "src": "8885:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81437,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "9000:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81435,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "8982:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "8982:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8982:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9016:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81434,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8973:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8973:48:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81441,
                  "nodeType": "ExpressionStatement",
                  "src": "8973:48:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81445,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "9061:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 81446,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "9070:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81443,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "9040:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "9040:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 81447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9040:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9086:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81442,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "9031:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9031:60:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81450,
                  "nodeType": "ExpressionStatement",
                  "src": "9031:60:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81454,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "9136:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81451,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9127:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9127:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9127:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81456,
                  "nodeType": "ExpressionStatement",
                  "src": "9127:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81457,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "9158:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46706,
                      "src": "9158:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9158:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81461,
                  "nodeType": "ExpressionStatement",
                  "src": "9158:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9251:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81463,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "9252:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 81464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "9252:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9252:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81462,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "9240:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9240:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81468,
                  "nodeType": "ExpressionStatement",
                  "src": "9240:28:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9289:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81470,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "9290:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 81471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "9290:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9290:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81469,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "9278:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9278:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81475,
                  "nodeType": "ExpressionStatement",
                  "src": "9278:30:168"
                },
                {
                  "assignments": [
                    81477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81477,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "9379:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 81624,
                      "src": "9366:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81476,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9366:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81482,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e54525f4e6f744163746976652829",
                        "id": 81480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9409:19:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        },
                        "value": "MINTR_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 81478,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9385:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 81479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "9385:23:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 81481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9385:44:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9366:63:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81486,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81477,
                        "src": "9455:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81483,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9439:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "9439:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9439:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81488,
                  "nodeType": "ExpressionStatement",
                  "src": "9439:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81492,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "9478:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81489,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9469:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9469:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9469:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81494,
                  "nodeType": "ExpressionStatement",
                  "src": "9469:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81498,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "9516:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9523:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81495,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "9500:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "9500:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9500:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81501,
                  "nodeType": "ExpressionStatement",
                  "src": "9500:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81505,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "9603:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81503,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "9588:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "9588:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9588:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9611:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81502,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "9579:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9579:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81509,
                  "nodeType": "ExpressionStatement",
                  "src": "9579:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81513,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "9682:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81510,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9673:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9673:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9673:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81515,
                  "nodeType": "ExpressionStatement",
                  "src": "9673:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81521,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "9719:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 81520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9711:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81519,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9711:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9711:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9728:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81516,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "9698:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 81518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "9698:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 81524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9698:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81525,
                  "nodeType": "ExpressionStatement",
                  "src": "9698:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81529,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81477,
                        "src": "9759:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81526,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9743:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "9743:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9743:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81531,
                  "nodeType": "ExpressionStatement",
                  "src": "9743:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81535,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "9782:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81532,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9773:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9773:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9773:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81537,
                  "nodeType": "ExpressionStatement",
                  "src": "9773:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81541,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "9820:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9827:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81538,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "9804:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "9804:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9804:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81544,
                  "nodeType": "ExpressionStatement",
                  "src": "9804:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81548,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "9907:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81546,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "9892:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "9892:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9892:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9915:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81545,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "9883:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9883:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81552,
                  "nodeType": "ExpressionStatement",
                  "src": "9883:36:168"
                },
                {
                  "expression": {
                    "id": 81558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81553,
                      "name": "err",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81477,
                      "src": "9984:3:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54525352595f4e6f744163746976652829",
                          "id": 81556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10014:19:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                            "typeString": "literal_string \"TRSRY_NotActive()\""
                          },
                          "value": "TRSRY_NotActive()"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                            "typeString": "literal_string \"TRSRY_NotActive()\""
                          }
                        ],
                        "expression": {
                          "id": 81554,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "9990:3:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 81555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeWithSignature",
                        "nodeType": "MemberAccess",
                        "src": "9990:23:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (string memory) pure returns (bytes memory)"
                        }
                      },
                      "id": 81557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9990:44:168",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "9984:50:168",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 81559,
                  "nodeType": "ExpressionStatement",
                  "src": "9984:50:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81563,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81477,
                        "src": "10060:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81560,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10044:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "10044:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10044:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81565,
                  "nodeType": "ExpressionStatement",
                  "src": "10044:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81569,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "10083:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81566,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10074:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10074:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10074:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81571,
                  "nodeType": "ExpressionStatement",
                  "src": "10074:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81575,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "10133:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81576,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "10140:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10149:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81572,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "10107:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "10107:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 81578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10107:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81579,
                  "nodeType": "ExpressionStatement",
                  "src": "10107:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81583,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "10239:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81581,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "10221:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "10221:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10221:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10247:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81580,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "10212:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10212:40:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81587,
                  "nodeType": "ExpressionStatement",
                  "src": "10212:40:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81591,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "10320:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81588,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10311:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10311:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10311:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81593,
                  "nodeType": "ExpressionStatement",
                  "src": "10311:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81597,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81477,
                        "src": "10360:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81594,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10344:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "10344:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10344:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81599,
                  "nodeType": "ExpressionStatement",
                  "src": "10344:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81603,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "10393:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10402:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 81600,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "10374:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 81602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "10374:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 81605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10374:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81606,
                  "nodeType": "ExpressionStatement",
                  "src": "10374:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81610,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "10488:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81608,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "10470:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 81609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "10470:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10470:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10504:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81607,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "10461:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10461:48:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81614,
                  "nodeType": "ExpressionStatement",
                  "src": "10461:48:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81618,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "10549:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 81619,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "10558:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81616,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "10528:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "10528:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 81620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10528:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 81621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10574:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 81615,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "10519:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10519:60:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81623,
                  "nodeType": "ExpressionStatement",
                  "src": "10519:60:168"
                }
              ]
            },
            "functionSelector": "7fa1aaf9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_Shutdown",
            "nameLocation": "8038:24:168",
            "parameters": {
              "id": 81327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8062:2:168"
            },
            "returnParameters": {
              "id": 81328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8072:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81708,
            "nodeType": "FunctionDefinition",
            "src": "10592:895:168",
            "nodes": [],
            "body": {
              "id": 81707,
              "nodeType": "Block",
              "src": "10661:826:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81629,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "10741:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 81630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "10741:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10741:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81628,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "10730:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10730:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81633,
                  "nodeType": "ExpressionStatement",
                  "src": "10730:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81635,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "10778:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "10778:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10778:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81634,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "10767:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81639,
                  "nodeType": "ExpressionStatement",
                  "src": "10767:29:168"
                },
                {
                  "assignments": [
                    81641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81641,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "10896:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 81707,
                      "src": "10883:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81640,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10883:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81652,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 81644,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "10938:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 81645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "10938:25:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 81646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "10938:34:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f73687574646f776e",
                            "id": 81649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10994:20:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            },
                            "value": "emergency_shutdown"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            }
                          ],
                          "id": 81648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10986:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 81647,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10986:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10986:29:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 81642,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10902:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 81643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "10902:22:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 81651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10902:123:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10883:142:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81656,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81641,
                        "src": "11051:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81653,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11035:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "11035:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11035:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81658,
                  "nodeType": "ExpressionStatement",
                  "src": "11035:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81662,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "11074:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81659,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11065:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "11065:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11065:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81664,
                  "nodeType": "ExpressionStatement",
                  "src": "11065:15:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81665,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "11090:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46706,
                      "src": "11090:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11090:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81669,
                  "nodeType": "ExpressionStatement",
                  "src": "11090:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81671,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "11187:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 81672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "11187:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11187:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81670,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "11176:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11176:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81675,
                  "nodeType": "ExpressionStatement",
                  "src": "11176:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81677,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "11224:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "11224:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11224:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81676,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "11213:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11213:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81681,
                  "nodeType": "ExpressionStatement",
                  "src": "11213:29:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81685,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "11308:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81682,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11299:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "11299:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11299:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81687,
                  "nodeType": "ExpressionStatement",
                  "src": "11299:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81688,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "11330:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46706,
                      "src": "11330:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11330:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81692,
                  "nodeType": "ExpressionStatement",
                  "src": "11330:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11423:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81694,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "11424:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 81695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "11424:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11424:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81693,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "11412:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11412:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81699,
                  "nodeType": "ExpressionStatement",
                  "src": "11412:28:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11461:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81701,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "11462:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 81702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "11462:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11462:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81700,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "11450:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11450:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81706,
                  "nodeType": "ExpressionStatement",
                  "src": "11450:30:168"
                }
              ]
            },
            "functionSelector": "238a174f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyPermissionedAddressCanShutdown",
            "nameLocation": "10601:50:168",
            "parameters": {
              "id": 81626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10651:2:168"
            },
            "returnParameters": {
              "id": 81627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10661:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81772,
            "nodeType": "FunctionDefinition",
            "src": "11493:765:168",
            "nodes": [],
            "body": {
              "id": 81771,
              "nodeType": "Block",
              "src": "11569:689:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81712,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "11638:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 81713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "11638:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11638:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81711,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "11627:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11627:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81716,
                  "nodeType": "ExpressionStatement",
                  "src": "11627:27:168"
                },
                {
                  "assignments": [
                    81718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81718,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "11754:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 81771,
                      "src": "11741:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81717,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11741:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81729,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 81721,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "11796:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 81722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "11796:25:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 81723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "11796:34:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f73687574646f776e",
                            "id": 81726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11852:20:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            },
                            "value": "emergency_shutdown"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            }
                          ],
                          "id": 81725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11844:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 81724,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11844:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11844:29:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 81719,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11760:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 81720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "11760:22:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 81728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11760:123:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11741:142:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81733,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81718,
                        "src": "11909:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81730,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11893:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "11893:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11893:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81735,
                  "nodeType": "ExpressionStatement",
                  "src": "11893:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81739,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "11932:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81736,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11923:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "11923:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11923:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81741,
                  "nodeType": "ExpressionStatement",
                  "src": "11923:15:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81742,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "11948:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46738,
                      "src": "11948:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11948:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81746,
                  "nodeType": "ExpressionStatement",
                  "src": "11948:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81748,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "12041:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 81749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "12041:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12041:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81747,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "12030:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12030:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81752,
                  "nodeType": "ExpressionStatement",
                  "src": "12030:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81756,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "12123:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81753,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12114:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12114:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12114:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81758,
                  "nodeType": "ExpressionStatement",
                  "src": "12114:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81759,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "12145:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46738,
                      "src": "12145:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12145:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81763,
                  "nodeType": "ExpressionStatement",
                  "src": "12145:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12234:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81765,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "12235:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 81766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "12235:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12235:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81764,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "12223:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12223:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81770,
                  "nodeType": "ExpressionStatement",
                  "src": "12223:28:168"
                }
              ]
            },
            "functionSelector": "4233f1cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyPermissionedAddressCanShutdownMinting",
            "nameLocation": "11502:57:168",
            "parameters": {
              "id": 81709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11559:2:168"
            },
            "returnParameters": {
              "id": 81710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11569:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81836,
            "nodeType": "FunctionDefinition",
            "src": "12264:783:168",
            "nodes": [],
            "body": {
              "id": 81835,
              "nodeType": "Block",
              "src": "12344:703:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81776,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "12413:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "12413:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12413:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81775,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "12402:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12402:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81780,
                  "nodeType": "ExpressionStatement",
                  "src": "12402:29:168"
                },
                {
                  "assignments": [
                    81782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81782,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "12531:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 81835,
                      "src": "12518:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81781,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12518:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81793,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 81785,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "12573:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 81786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "12573:25:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 81787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "12573:34:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f73687574646f776e",
                            "id": 81790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12629:20:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            },
                            "value": "emergency_shutdown"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b0b8bc80d949a7d56ba383a29c8ab0aef0c1bb6539f9f7e1c09244344bcb1af7",
                              "typeString": "literal_string \"emergency_shutdown\""
                            }
                          ],
                          "id": 81789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12621:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 81788,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12621:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12621:29:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 81783,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12537:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 81784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "12537:22:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 81792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12537:123:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12518:142:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81797,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81782,
                        "src": "12686:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81794,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12670:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12670:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12670:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81799,
                  "nodeType": "ExpressionStatement",
                  "src": "12670:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81803,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "12709:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81800,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12700:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12700:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12700:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81805,
                  "nodeType": "ExpressionStatement",
                  "src": "12700:15:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81806,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "12725:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46722,
                      "src": "12725:29:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12725:31:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81810,
                  "nodeType": "ExpressionStatement",
                  "src": "12725:31:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81812,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "12822:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 81813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "12822:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12822:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81811,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "12811:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12811:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81816,
                  "nodeType": "ExpressionStatement",
                  "src": "12811:29:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81820,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "12906:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81817,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12897:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12897:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12897:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81822,
                  "nodeType": "ExpressionStatement",
                  "src": "12897:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81823,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "12928:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46722,
                      "src": "12928:29:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12928:31:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81827,
                  "nodeType": "ExpressionStatement",
                  "src": "12928:31:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13021:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81829,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "13022:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 81830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "13022:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13022:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81828,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "13010:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13010:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81834,
                  "nodeType": "ExpressionStatement",
                  "src": "13010:30:168"
                }
              ]
            },
            "functionSelector": "6e40699f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyPermissionedAddressCanShutdownWithdrawals",
            "nameLocation": "12273:61:168",
            "parameters": {
              "id": 81773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12334:2:168"
            },
            "returnParameters": {
              "id": 81774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12344:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82023,
            "nodeType": "FunctionDefinition",
            "src": "13053:1611:168",
            "nodes": [],
            "body": {
              "id": 82022,
              "nodeType": "Block",
              "src": "13100:1564:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81842,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "13177:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81839,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13168:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "13168:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13168:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81844,
                  "nodeType": "ExpressionStatement",
                  "src": "13168:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81848,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "13215:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13222:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81845,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "13199:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "13199:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13199:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81851,
                  "nodeType": "ExpressionStatement",
                  "src": "13199:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81855,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "13274:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81852,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13265:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "13265:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13265:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81857,
                  "nodeType": "ExpressionStatement",
                  "src": "13265:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81858,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "13296:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46738,
                      "src": "13296:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13296:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81862,
                  "nodeType": "ExpressionStatement",
                  "src": "13296:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13385:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81864,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "13386:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 81865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "13386:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 81866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13386:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81863,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "13374:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13374:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81869,
                  "nodeType": "ExpressionStatement",
                  "src": "13374:28:168"
                },
                {
                  "assignments": [
                    81871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81871,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "13473:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 82022,
                      "src": "13460:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81870,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13460:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81876,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e54525f4e6f744163746976652829",
                        "id": 81874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13503:19:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        },
                        "value": "MINTR_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 81872,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13479:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 81873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "13479:23:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 81875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13479:44:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13460:63:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81880,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81871,
                        "src": "13549:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81877,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13533:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13533:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13533:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81882,
                  "nodeType": "ExpressionStatement",
                  "src": "13533:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81886,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "13572:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81883,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13563:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "13563:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13563:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81888,
                  "nodeType": "ExpressionStatement",
                  "src": "13563:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81892,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "13610:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13617:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81889,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "13594:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "13594:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13594:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81895,
                  "nodeType": "ExpressionStatement",
                  "src": "13594:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81899,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "13697:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81897,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "13682:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "13682:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13682:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13705:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81896,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "13673:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13673:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81903,
                  "nodeType": "ExpressionStatement",
                  "src": "13673:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81907,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "13776:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81904,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13767:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "13767:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13767:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81909,
                  "nodeType": "ExpressionStatement",
                  "src": "13767:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81915,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "13813:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 81914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13805:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81913,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13805:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13805:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13822:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81910,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "13792:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 81912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "13792:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 81918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13792:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81919,
                  "nodeType": "ExpressionStatement",
                  "src": "13792:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81923,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81871,
                        "src": "13853:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 81920,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13837:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13837:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 81924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13837:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81925,
                  "nodeType": "ExpressionStatement",
                  "src": "13837:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81929,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "13876:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81926,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13867:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "13867:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13867:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81931,
                  "nodeType": "ExpressionStatement",
                  "src": "13867:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81935,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "13914:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13921:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81932,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "13898:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "13898:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13898:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81938,
                  "nodeType": "ExpressionStatement",
                  "src": "13898:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81942,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "14001:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81940,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "13986:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "13986:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13986:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14009:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 81939,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "13977:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13977:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81946,
                  "nodeType": "ExpressionStatement",
                  "src": "13977:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81950,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80647,
                        "src": "14058:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81947,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14049:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "14049:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14049:18:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81952,
                  "nodeType": "ExpressionStatement",
                  "src": "14049:18:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81953,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "14077:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 81955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restartMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46791,
                      "src": "14077:24:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14077:26:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81957,
                  "nodeType": "ExpressionStatement",
                  "src": "14077:26:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81959,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "14163:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 81960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "14163:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 81961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14163:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81958,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "14152:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 81962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14152:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81963,
                  "nodeType": "ExpressionStatement",
                  "src": "14152:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81967,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "14249:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81964,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14240:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "14240:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14240:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81969,
                  "nodeType": "ExpressionStatement",
                  "src": "14240:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81973,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "14287:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14294:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81970,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "14271:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 81972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "14271:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 81975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14271:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81976,
                  "nodeType": "ExpressionStatement",
                  "src": "14271:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81980,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "14371:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81978,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "14356:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 81979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "14356:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14356:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "326539",
                        "id": 81982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14379:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        },
                        "value": "2e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        }
                      ],
                      "id": 81977,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "14347:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14347:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81984,
                  "nodeType": "ExpressionStatement",
                  "src": "14347:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81988,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "14453:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81985,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14444:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "14444:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14444:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81990,
                  "nodeType": "ExpressionStatement",
                  "src": "14444:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81996,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "14490:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 81995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14482:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14482:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14482:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 81998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14499:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 81991,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "14469:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 81993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "14469:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 81999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14469:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82000,
                  "nodeType": "ExpressionStatement",
                  "src": "14469:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82004,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "14523:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82001,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14514:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "14514:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14514:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82006,
                  "nodeType": "ExpressionStatement",
                  "src": "14514:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82010,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "14561:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14568:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82007,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "14545:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 82009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "14545:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14545:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82013,
                  "nodeType": "ExpressionStatement",
                  "src": "14545:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82017,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "14645:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82015,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "14630:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 82016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "14630:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14630:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14653:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 82014,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "14621:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14621:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82021,
                  "nodeType": "ExpressionStatement",
                  "src": "14621:36:168"
                }
              ]
            },
            "functionSelector": "33038d19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_RestartMINTR",
            "nameLocation": "13062:28:168",
            "parameters": {
              "id": 81837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13090:2:168"
            },
            "returnParameters": {
              "id": 81838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13100:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82185,
            "nodeType": "FunctionDefinition",
            "src": "14670:1615:168",
            "nodes": [],
            "body": {
              "id": 82184,
              "nodeType": "Block",
              "src": "14717:1568:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82029,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "14768:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82026,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14759:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "14759:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14759:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82031,
                  "nodeType": "ExpressionStatement",
                  "src": "14759:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82032,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "14790:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46722,
                      "src": "14790:29:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14790:31:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82036,
                  "nodeType": "ExpressionStatement",
                  "src": "14790:31:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14883:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82038,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "14884:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 82039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "14884:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14884:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82037,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "14872:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14872:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82043,
                  "nodeType": "ExpressionStatement",
                  "src": "14872:30:168"
                },
                {
                  "assignments": [
                    82045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82045,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "14980:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 82184,
                      "src": "14967:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 82044,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14967:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82050,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "54525352595f4e6f744163746976652829",
                        "id": 82048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15010:19:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        },
                        "value": "TRSRY_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                          "typeString": "literal_string \"TRSRY_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 82046,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14986:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 82047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "14986:23:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 82049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14986:44:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14967:63:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82054,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82045,
                        "src": "15056:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82051,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15040:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "15040:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15040:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82056,
                  "nodeType": "ExpressionStatement",
                  "src": "15040:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82060,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "15079:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82057,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15070:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "15070:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15070:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82062,
                  "nodeType": "ExpressionStatement",
                  "src": "15070:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82066,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "15129:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 82067,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "15136:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15145:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82063,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "15103:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "15103:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 82069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15103:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82070,
                  "nodeType": "ExpressionStatement",
                  "src": "15103:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82074,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "15235:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82072,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "15217:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "15217:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15217:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 82076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15243:1:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 82071,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "15208:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15208:37:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82078,
                  "nodeType": "ExpressionStatement",
                  "src": "15208:37:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82082,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "15313:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82079,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15304:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "15304:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15304:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82084,
                  "nodeType": "ExpressionStatement",
                  "src": "15304:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82088,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82045,
                        "src": "15353:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82085,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15337:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "15337:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15337:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82090,
                  "nodeType": "ExpressionStatement",
                  "src": "15337:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82094,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "15386:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15395:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82091,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "15367:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "15367:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 82096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15367:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82097,
                  "nodeType": "ExpressionStatement",
                  "src": "15367:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82101,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "15481:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82099,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "15463:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "15463:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15463:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 82103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15497:1:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 82098,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "15454:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15454:45:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82105,
                  "nodeType": "ExpressionStatement",
                  "src": "15454:45:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82109,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "15539:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 82110,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "15548:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82107,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "15518:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "15518:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 82111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15518:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 82112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15564:1:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 82106,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "15509:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15509:57:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82114,
                  "nodeType": "ExpressionStatement",
                  "src": "15509:57:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82118,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80647,
                        "src": "15611:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82115,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15602:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "15602:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15602:18:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82120,
                  "nodeType": "ExpressionStatement",
                  "src": "15602:18:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82121,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "15630:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restartWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46775,
                      "src": "15630:28:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15630:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82125,
                  "nodeType": "ExpressionStatement",
                  "src": "15630:30:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82127,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "15720:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "15720:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 82129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15720:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82126,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "15709:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15709:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82131,
                  "nodeType": "ExpressionStatement",
                  "src": "15709:29:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82135,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "15815:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82132,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15806:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "15806:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15806:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82137,
                  "nodeType": "ExpressionStatement",
                  "src": "15806:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82141,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "15865:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 82142,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "15872:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15881:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82138,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "15839:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "15839:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 82144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15839:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82145,
                  "nodeType": "ExpressionStatement",
                  "src": "15839:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82149,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "15968:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82147,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "15950:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "15950:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15950:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15976:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 82146,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "15941:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15941:40:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82153,
                  "nodeType": "ExpressionStatement",
                  "src": "15941:40:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82157,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "16052:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82154,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16043:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "16043:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16043:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82159,
                  "nodeType": "ExpressionStatement",
                  "src": "16043:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82163,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "16095:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16104:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82160,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "16076:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "16076:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 82165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16076:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82166,
                  "nodeType": "ExpressionStatement",
                  "src": "16076:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82170,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "16187:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82168,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "16169:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "16169:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16169:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16203:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 82167,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "16160:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16160:48:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82174,
                  "nodeType": "ExpressionStatement",
                  "src": "16160:48:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82178,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "16248:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 82179,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "16257:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82176,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "16227:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "16227:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 82180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16227:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16273:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 82175,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "16218:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16218:60:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82183,
                  "nodeType": "ExpressionStatement",
                  "src": "16218:60:168"
                }
              ]
            },
            "functionSelector": "5661fc84",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_RestartTRSRY",
            "nameLocation": "14679:28:168",
            "parameters": {
              "id": 82024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14707:2:168"
            },
            "returnParameters": {
              "id": 82025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14717:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82508,
            "nodeType": "FunctionDefinition",
            "src": "16291:2918:168",
            "nodes": [],
            "body": {
              "id": 82507,
              "nodeType": "Block",
              "src": "16333:2876:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82191,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "16410:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82188,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16401:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "16401:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16401:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82193,
                  "nodeType": "ExpressionStatement",
                  "src": "16401:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82197,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "16448:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16455:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82194,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "16432:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 82196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "16432:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16432:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82200,
                  "nodeType": "ExpressionStatement",
                  "src": "16432:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82204,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "16523:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82201,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16514:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "16514:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16514:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82206,
                  "nodeType": "ExpressionStatement",
                  "src": "16514:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82207,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "16545:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46706,
                      "src": "16545:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16545:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82211,
                  "nodeType": "ExpressionStatement",
                  "src": "16545:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16638:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82213,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "16639:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 82214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "16639:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16639:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82212,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "16627:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16627:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82218,
                  "nodeType": "ExpressionStatement",
                  "src": "16627:28:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16676:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82220,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "16677:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 82221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "16677:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16677:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82219,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "16665:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16665:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82225,
                  "nodeType": "ExpressionStatement",
                  "src": "16665:30:168"
                },
                {
                  "assignments": [
                    82227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82227,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "16766:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 82507,
                      "src": "16753:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 82226,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16753:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82232,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e54525f4e6f744163746976652829",
                        "id": 82230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16796:19:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        },
                        "value": "MINTR_NotActive()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a117e45e77f35db35560a2f261c11ac68aa0174c318b9fc4dcc4a77052682052",
                          "typeString": "literal_string \"MINTR_NotActive()\""
                        }
                      ],
                      "expression": {
                        "id": 82228,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16772:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 82229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "16772:23:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 82231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16772:44:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16753:63:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82236,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82227,
                        "src": "16842:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82233,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16826:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "16826:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16826:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82238,
                  "nodeType": "ExpressionStatement",
                  "src": "16826:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82242,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "16865:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82239,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "16856:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "16856:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16856:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82244,
                  "nodeType": "ExpressionStatement",
                  "src": "16856:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82248,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "16903:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16910:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82245,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "16887:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 82247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "16887:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16887:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82251,
                  "nodeType": "ExpressionStatement",
                  "src": "16887:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82255,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "16990:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82253,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "16975:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 82254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "16975:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16975:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16998:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 82252,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "16966:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16966:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82259,
                  "nodeType": "ExpressionStatement",
                  "src": "16966:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82263,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "17069:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82260,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17060:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "17060:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17060:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82265,
                  "nodeType": "ExpressionStatement",
                  "src": "17060:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82271,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "17106:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 82270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17098:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17098:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17098:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17115:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82266,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "17085:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 82268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "17085:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 82274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17085:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82275,
                  "nodeType": "ExpressionStatement",
                  "src": "17085:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82279,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82227,
                        "src": "17146:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82276,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17130:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "17130:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17130:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82281,
                  "nodeType": "ExpressionStatement",
                  "src": "17130:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82285,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "17169:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82282,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17160:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "17160:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17160:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82287,
                  "nodeType": "ExpressionStatement",
                  "src": "17160:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82291,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "17207:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17214:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82288,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "17191:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 82290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "17191:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17191:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82294,
                  "nodeType": "ExpressionStatement",
                  "src": "17191:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82298,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "17294:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82296,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "17279:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 82297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "17279:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17279:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17302:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 82295,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "17270:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17270:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82302,
                  "nodeType": "ExpressionStatement",
                  "src": "17270:36:168"
                },
                {
                  "expression": {
                    "id": 82308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82303,
                      "name": "err",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82227,
                      "src": "17371:3:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54525352595f4e6f744163746976652829",
                          "id": 82306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17401:19:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                            "typeString": "literal_string \"TRSRY_NotActive()\""
                          },
                          "value": "TRSRY_NotActive()"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8e76d05e22459db7d31127798e14e6e77a9299936a934bebec166f8aa26c4931",
                            "typeString": "literal_string \"TRSRY_NotActive()\""
                          }
                        ],
                        "expression": {
                          "id": 82304,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "17377:3:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 82305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeWithSignature",
                        "nodeType": "MemberAccess",
                        "src": "17377:23:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (string memory) pure returns (bytes memory)"
                        }
                      },
                      "id": 82307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17377:44:168",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17371:50:168",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 82309,
                  "nodeType": "ExpressionStatement",
                  "src": "17371:50:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82313,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82227,
                        "src": "17447:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82310,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17431:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "17431:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17431:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82315,
                  "nodeType": "ExpressionStatement",
                  "src": "17431:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82319,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "17470:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82316,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17461:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "17461:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17461:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82321,
                  "nodeType": "ExpressionStatement",
                  "src": "17461:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82325,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "17520:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 82326,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "17527:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17536:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82322,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "17494:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "17494:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 82328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17494:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82329,
                  "nodeType": "ExpressionStatement",
                  "src": "17494:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82333,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "17626:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82331,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "17608:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "17608:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17608:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 82335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17634:1:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 82330,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "17599:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17599:37:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82337,
                  "nodeType": "ExpressionStatement",
                  "src": "17599:37:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82341,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "17704:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82338,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17695:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "17695:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17695:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82343,
                  "nodeType": "ExpressionStatement",
                  "src": "17695:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82347,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82227,
                        "src": "17744:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82344,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "17728:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "17728:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17728:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82349,
                  "nodeType": "ExpressionStatement",
                  "src": "17728:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82353,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "17777:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17786:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82350,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "17758:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "17758:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 82355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17758:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82356,
                  "nodeType": "ExpressionStatement",
                  "src": "17758:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82360,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "17872:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82358,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "17854:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "17854:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17854:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 82362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17888:1:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 82357,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "17845:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17845:45:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82364,
                  "nodeType": "ExpressionStatement",
                  "src": "17845:45:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82368,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "17930:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 82369,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "17939:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82366,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "17909:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "17909:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 82370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17909:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 82371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17955:1:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 82365,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "17900:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17900:57:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82373,
                  "nodeType": "ExpressionStatement",
                  "src": "17900:57:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82377,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80647,
                        "src": "18020:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82374,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18011:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18011:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18011:18:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82379,
                  "nodeType": "ExpressionStatement",
                  "src": "18011:18:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82380,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "18039:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46759,
                      "src": "18039:17:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18039:19:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82384,
                  "nodeType": "ExpressionStatement",
                  "src": "18039:19:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82386,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "18129:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 82387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "18129:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 82388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18129:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82385,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "18118:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18118:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82390,
                  "nodeType": "ExpressionStatement",
                  "src": "18118:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82392,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "18166:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "18166:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 82394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18166:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82391,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "18155:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18155:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82396,
                  "nodeType": "ExpressionStatement",
                  "src": "18155:29:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82400,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "18254:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82397,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18245:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18245:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18245:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82402,
                  "nodeType": "ExpressionStatement",
                  "src": "18245:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82406,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "18292:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18299:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82403,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "18276:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 82405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38461,
                      "src": "18276:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18276:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82409,
                  "nodeType": "ExpressionStatement",
                  "src": "18276:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82413,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "18376:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82411,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "18361:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 82412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "18361:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18361:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "326539",
                        "id": 82415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18384:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        },
                        "value": "2e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000_by_1",
                          "typeString": "int_const 2000000000"
                        }
                      ],
                      "id": 82410,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "18352:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18352:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82417,
                  "nodeType": "ExpressionStatement",
                  "src": "18352:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82421,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "18458:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82418,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18449:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18449:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18449:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82423,
                  "nodeType": "ExpressionStatement",
                  "src": "18449:15:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82429,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "18495:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 82428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18487:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82427,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18487:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18487:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18504:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82424,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80652,
                        "src": "18474:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GDAO_$31138",
                          "typeString": "contract GDAO"
                        }
                      },
                      "id": 82426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30551,
                      "src": "18474:12:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 82432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18474:34:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82433,
                  "nodeType": "ExpressionStatement",
                  "src": "18474:34:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82437,
                        "name": "minterAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80680,
                        "src": "18528:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82434,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18519:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18519:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18519:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82439,
                  "nodeType": "ExpressionStatement",
                  "src": "18519:21:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82443,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "18566:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18573:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "expression": {
                        "id": 82440,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80667,
                        "src": "18550:6:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 82442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnGdao",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38496,
                      "src": "18550:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18550:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82446,
                  "nodeType": "ExpressionStatement",
                  "src": "18550:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82450,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "18650:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82448,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80652,
                            "src": "18635:4:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GDAO_$31138",
                              "typeString": "contract GDAO"
                            }
                          },
                          "id": 82449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30494,
                          "src": "18635:14:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18635:21:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "316539",
                        "id": 82452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18658:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 82447,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "18626:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18626:36:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82454,
                  "nodeType": "ExpressionStatement",
                  "src": "18626:36:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82458,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "18739:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82455,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18730:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18730:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18730:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82460,
                  "nodeType": "ExpressionStatement",
                  "src": "18730:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82464,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "18789:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 82465,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "18796:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18805:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82461,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "18763:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41082,
                      "src": "18763:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract ERC20,uint256) external"
                      }
                    },
                    "id": 82467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18763:47:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82468,
                  "nodeType": "ExpressionStatement",
                  "src": "18763:47:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82472,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80645,
                            "src": "18892:5:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82470,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "18874:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "18874:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18874:24:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18900:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 82469,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "18865:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18865:40:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82476,
                  "nodeType": "ExpressionStatement",
                  "src": "18865:40:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82480,
                        "name": "treasuryAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80678,
                        "src": "18976:13:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82477,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "18967:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "18967:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18967:23:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82482,
                  "nodeType": "ExpressionStatement",
                  "src": "18967:23:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82486,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80655,
                        "src": "19019:7:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19028:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 82483,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80664,
                        "src": "19000:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 82485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incurDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41214,
                      "src": "19000:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 82488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19000:33:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82489,
                  "nodeType": "ExpressionStatement",
                  "src": "19000:33:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82493,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "19111:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82491,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "19093:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "19093:17:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 82494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19093:32:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19127:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 82490,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "19084:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19084:48:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82497,
                  "nodeType": "ExpressionStatement",
                  "src": "19084:48:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82501,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80655,
                            "src": "19172:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 82502,
                            "name": "treasuryAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80678,
                            "src": "19181:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82499,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "19151:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41528,
                          "src": "19151:20:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$25731_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 82503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19151:44:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 82504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19197:4:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 82498,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "19142:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 82505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19142:60:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82506,
                  "nodeType": "ExpressionStatement",
                  "src": "19142:60:168"
                }
              ]
            },
            "functionSelector": "7126037d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_Restart",
            "nameLocation": "16300:23:168",
            "parameters": {
              "id": 82186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16323:2:168"
            },
            "returnParameters": {
              "id": 82187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16333:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82604,
            "nodeType": "FunctionDefinition",
            "src": "19215:1015:168",
            "nodes": [],
            "body": {
              "id": 82603,
              "nodeType": "Block",
              "src": "19283:947:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82514,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "19346:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82511,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "19337:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "19337:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19337:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82516,
                  "nodeType": "ExpressionStatement",
                  "src": "19337:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82517,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "19368:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46706,
                      "src": "19368:18:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19368:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82521,
                  "nodeType": "ExpressionStatement",
                  "src": "19368:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "19461:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82523,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "19462:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 82524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "19462:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19462:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82522,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "19450:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19450:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82528,
                  "nodeType": "ExpressionStatement",
                  "src": "19450:28:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "19499:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82530,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "19500:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 82531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "19500:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19500:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82529,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "19488:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19488:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82535,
                  "nodeType": "ExpressionStatement",
                  "src": "19488:30:168"
                },
                {
                  "assignments": [
                    82537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82537,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "19617:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 82603,
                      "src": "19604:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 82536,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19604:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82548,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 82540,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "19659:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 82541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "19659:25:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 82542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "19659:34:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f72657374617274",
                            "id": 82545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19715:19:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            },
                            "value": "emergency_restart"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            }
                          ],
                          "id": 82544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19707:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 82543,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "19707:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19707:28:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 82538,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "19623:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 82539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "19623:22:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 82547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19623:122:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19604:141:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82552,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82537,
                        "src": "19771:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82549,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "19755:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "19755:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19755:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82554,
                  "nodeType": "ExpressionStatement",
                  "src": "19755:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82558,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "19794:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82555,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "19785:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "19785:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19785:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82560,
                  "nodeType": "ExpressionStatement",
                  "src": "19785:15:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82561,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "19810:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46759,
                      "src": "19810:17:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19810:19:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82565,
                  "nodeType": "ExpressionStatement",
                  "src": "19810:19:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "19908:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82567,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "19909:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 82568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "19909:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19909:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82566,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "19897:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19897:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82572,
                  "nodeType": "ExpressionStatement",
                  "src": "19897:28:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "19946:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82574,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "19947:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 82575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "19947:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19947:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82573,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "19935:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19935:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82579,
                  "nodeType": "ExpressionStatement",
                  "src": "19935:30:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82583,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80647,
                        "src": "20059:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82580,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20050:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "20050:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20050:18:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82585,
                  "nodeType": "ExpressionStatement",
                  "src": "20050:18:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82586,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "20078:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46759,
                      "src": "20078:17:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20078:19:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82590,
                  "nodeType": "ExpressionStatement",
                  "src": "20078:19:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82592,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "20168:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 82593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "20168:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 82594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20168:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82591,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "20157:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20157:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82596,
                  "nodeType": "ExpressionStatement",
                  "src": "20157:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82598,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "20205:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "20205:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 82600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20205:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82597,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "20194:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20194:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82602,
                  "nodeType": "ExpressionStatement",
                  "src": "20194:29:168"
                }
              ]
            },
            "functionSelector": "37d35213",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyPermissionedAddressCanRestart",
            "nameLocation": "19224:49:168",
            "parameters": {
              "id": 82509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19273:2:168"
            },
            "returnParameters": {
              "id": 82510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19283:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82680,
            "nodeType": "FunctionDefinition",
            "src": "20236:875:168",
            "nodes": [],
            "body": {
              "id": 82679,
              "nodeType": "Block",
              "src": "20311:800:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82610,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "20358:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82607,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20349:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "20349:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20349:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82612,
                  "nodeType": "ExpressionStatement",
                  "src": "20349:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82613,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "20380:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46738,
                      "src": "20380:25:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20380:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82617,
                  "nodeType": "ExpressionStatement",
                  "src": "20380:27:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20469:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82619,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "20470:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 82620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "20470:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20470:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82618,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "20458:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20458:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82624,
                  "nodeType": "ExpressionStatement",
                  "src": "20458:28:168"
                },
                {
                  "assignments": [
                    82626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82626,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "20585:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 82679,
                      "src": "20572:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 82625,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20572:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82637,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 82629,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "20627:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 82630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "20627:25:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 82631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "20627:34:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f72657374617274",
                            "id": 82634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20683:19:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            },
                            "value": "emergency_restart"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            }
                          ],
                          "id": 82633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20675:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 82632,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "20675:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20675:28:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 82627,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "20591:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 82628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "20591:22:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 82636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20591:122:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20572:141:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82641,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82626,
                        "src": "20739:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82638,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20723:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "20723:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20723:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82643,
                  "nodeType": "ExpressionStatement",
                  "src": "20723:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82647,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "20762:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82644,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20753:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "20753:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20753:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82649,
                  "nodeType": "ExpressionStatement",
                  "src": "20753:15:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82650,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "20778:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restartMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46791,
                      "src": "20778:24:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20778:26:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82654,
                  "nodeType": "ExpressionStatement",
                  "src": "20778:26:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20872:16:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82656,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80667,
                              "src": "20873:6:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            },
                            "id": 82657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38658,
                            "src": "20873:13:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20873:15:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82655,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "20861:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20861:28:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82661,
                  "nodeType": "ExpressionStatement",
                  "src": "20861:28:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82665,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80647,
                        "src": "20983:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82662,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "20974:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "20974:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20974:18:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82667,
                  "nodeType": "ExpressionStatement",
                  "src": "20974:18:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82668,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "21002:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restartMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46791,
                      "src": "21002:24:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21002:26:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82672,
                  "nodeType": "ExpressionStatement",
                  "src": "21002:26:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82674,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80667,
                            "src": "21088:6:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 82675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38658,
                          "src": "21088:13:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 82676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21088:15:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82673,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "21077:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21077:27:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82678,
                  "nodeType": "ExpressionStatement",
                  "src": "21077:27:168"
                }
              ]
            },
            "functionSelector": "319cb870",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyPermissionedAddressCanRestartMinting",
            "nameLocation": "20245:56:168",
            "parameters": {
              "id": 82605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20301:2:168"
            },
            "returnParameters": {
              "id": 82606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20311:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82756,
            "nodeType": "FunctionDefinition",
            "src": "21117:901:168",
            "nodes": [],
            "body": {
              "id": 82755,
              "nodeType": "Block",
              "src": "21196:822:168",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82686,
                        "name": "emergencyMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80649,
                        "src": "21247:11:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82683,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "21238:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "21238:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21238:21:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82688,
                  "nodeType": "ExpressionStatement",
                  "src": "21238:21:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82689,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "21269:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shutdownWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46722,
                      "src": "21269:29:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21269:31:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82693,
                  "nodeType": "ExpressionStatement",
                  "src": "21269:31:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "21362:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82695,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "21363:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 82696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "21363:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21363:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82694,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "21351:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21351:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82700,
                  "nodeType": "ExpressionStatement",
                  "src": "21351:30:168"
                },
                {
                  "assignments": [
                    82702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82702,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "21480:3:168",
                      "nodeType": "VariableDeclaration",
                      "scope": 82755,
                      "src": "21467:16:168",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 82701,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "21467:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82713,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 82705,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "21522:7:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 82706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "21522:25:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 82707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "21522:34:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "656d657267656e63795f72657374617274",
                            "id": 82710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21578:19:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            },
                            "value": "emergency_restart"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_58cc5f64e1367e8d18c18c79ff3e63c565b00989a9b9824ae8ab35ef62828f37",
                              "typeString": "literal_string \"emergency_restart\""
                            }
                          ],
                          "id": 82709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21570:7:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 82708,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "21570:7:168",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21570:28:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 82703,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "21486:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 82704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "21486:22:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 82712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21486:122:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21467:141:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82717,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82702,
                        "src": "21634:3:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 82714,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "21618:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "21618:15:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 82718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21618:20:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82719,
                  "nodeType": "ExpressionStatement",
                  "src": "21618:20:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82723,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80645,
                        "src": "21657:5:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82720,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "21648:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "21648:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21648:15:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82725,
                  "nodeType": "ExpressionStatement",
                  "src": "21648:15:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82726,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "21673:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restartWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46775,
                      "src": "21673:28:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21673:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82730,
                  "nodeType": "ExpressionStatement",
                  "src": "21673:30:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "21771:18:168",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 82732,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80664,
                              "src": "21772:8:168",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            },
                            "id": 82733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41498,
                            "src": "21772:15:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 82734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21772:17:168",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82731,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "21760:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21760:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82737,
                  "nodeType": "ExpressionStatement",
                  "src": "21760:30:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82741,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80647,
                        "src": "21884:8:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 82738,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "21875:2:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "21875:8:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21875:18:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82743,
                  "nodeType": "ExpressionStatement",
                  "src": "21875:18:168"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82744,
                        "name": "emergency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "21903:9:168",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Emergency_$46806",
                          "typeString": "contract Emergency"
                        }
                      },
                      "id": 82746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restartWithdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46775,
                      "src": "21903:28:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 82747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21903:30:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82748,
                  "nodeType": "ExpressionStatement",
                  "src": "21903:30:168"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82750,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80664,
                            "src": "21993:8:168",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          },
                          "id": 82751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41498,
                          "src": "21993:15:168",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 82752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21993:17:168",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82749,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "21982:10:168",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 82753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21982:29:168",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82754,
                  "nodeType": "ExpressionStatement",
                  "src": "21982:29:168"
                }
              ]
            },
            "functionSelector": "f6d04033",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyPermissionedAddressCanRestartWithdrawals",
            "nameLocation": "21126:60:168",
            "parameters": {
              "id": 82681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21186:2:168"
            },
            "returnParameters": {
              "id": 82682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21196:0:168"
            },
            "scope": 82757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80626,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "1081:4:168"
            },
            "id": 80627,
            "nodeType": "InheritanceSpecifier",
            "src": "1081:4:168"
          }
        ],
        "canonicalName": "EmergencyTest",
        "contractDependencies": [
          24679,
          29497,
          31138,
          38611,
          40791,
          41409,
          46806,
          51234,
          54005,
          66449
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          82757,
          5484,
          2554,
          2291
        ],
        "name": "EmergencyTest",
        "nameLocation": "1064:13:168",
        "scope": 82758,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 168
}